<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Parser/SqlNodeExtensions.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_f0ea0b9ea9aae2e0e9b9dfca26eb78a8.htm">Deveel.Data.Sql.Parser</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">SqlNodeExtensions.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="SqlNodeExtensions_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Linq;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Runtime.InteropServices;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Sql.Parser {</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm">   27</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm">SqlNodeExtensions</a> {</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#affc52fdbe4ef1bd800e6c5b362aa4fd9">   28</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> TNode FindNode&lt;TNode&gt;(<span class="keyword">this</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) where TNode : <span class="keyword">class</span>, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> {</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            var foundNode = node.FindNode(typeof(TNode));</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            <span class="keywordflow">if</span> (foundNode == null)</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            <span class="keywordflow">return</span> (TNode)foundNode;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        }</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#aa25163a275a1b69e26615b1bad791a1b">   36</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#aa25163a275a1b69e26615b1bad791a1b">FindNode</a>(<span class="keyword">this</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node, Type nodeType) {</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                <span class="keywordflow">if</span> (nodeType.IsInstanceOfType(childNode))</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                    <span class="keywordflow">return</span> childNode;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                var foundNode = childNode.FindNode(nodeType);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                <span class="keywordflow">if</span> (foundNode != null)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                    <span class="keywordflow">return</span> foundNode;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            }</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#aa118055837b7328bc4bbcfc08d2520d9">   49</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> TNode FindNodeOf&lt;TNode&gt;(<span class="keyword">this</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node, <span class="keywordtype">string</span> nodeName) where TNode : <span class="keyword">class</span>, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            var parent = node.FindByName(nodeName);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keywordflow">if</span> (parent == null)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keywordflow">return</span> parent.FindNode&lt;TNode&gt;();</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#a87a3dc3f5b78e5227fb73f6ad169f4d7">   57</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#a87a3dc3f5b78e5227fb73f6ad169f4d7">FindByName</a>(<span class="keyword">this</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node, <span class="keywordtype">string</span> nodeName) {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                <span class="keywordflow">if</span> (childNode.NodeName.Equals(nodeName))</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                    <span class="keywordflow">return</span> childNode;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                var foundNode = childNode.FindByName(nodeName);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                <span class="keywordflow">if</span> (foundNode != null)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                    <span class="keywordflow">return</span> foundNode;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#a5d419fc87d1e9185ff0085497cecc0ce">   70</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#a5d419fc87d1e9185ff0085497cecc0ce">HasOptionalNode</a>(<span class="keyword">this</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node, <span class="keywordtype">string</span> nodeName) {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            var foundNode = node.FindByName(nodeName);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keywordflow">if</span> (foundNode == null)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">return</span> foundNode.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a156305a37aea852103bbae1642bfd8f8">ChildNodes</a>.Any();</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#ad68560963405525c728f6ed6f2de4f01">   78</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> IEnumerable&lt;TNode&gt; FindNodes&lt;TNode&gt;(<span class="keyword">this</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) where TNode : <span class="keyword">class</span>, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            var foundNodes = node.FindNodes(typeof(TNode));</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <span class="keywordflow">return</span> foundNodes.Cast&lt;TNode&gt;();</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#a79d725f73ff28cf9096897e5e91769b4">   83</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> IEnumerable <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#a79d725f73ff28cf9096897e5e91769b4">FindNodes</a>(<span class="keyword">this</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node, Type nodeType) {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            var nodes = <span class="keyword">new</span> List&lt;ISqlNode&gt;();</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                <span class="keywordflow">if</span> (nodeType.IsInstanceOfType(childNode)) {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                    nodes.Add(childNode);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                nodes.AddRange(childNode.FindNodes(nodeType).Cast&lt;<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&gt;());</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">return</span> nodes.ToArray();</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#af82b7dd5cf3fdb692fb36ec92c69cbc2">   97</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#af82b7dd5cf3fdb692fb36ec92c69cbc2">StartColumn</a>(<span class="keyword">this</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">if</span> (node == null || node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a5d50293a0d738577d4db74fa85767ede">Tokens</a> == null)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            var token = node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a5d50293a0d738577d4db74fa85767ede">Tokens</a>.FirstOrDefault();</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">return</span> token == null ? 0 : token.Column;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#ac7f40cabc6c0147380fab43c9eb8df8e">  105</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#ac7f40cabc6c0147380fab43c9eb8df8e">EndColumn</a>(<span class="keyword">this</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">if</span> (node == null || node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a5d50293a0d738577d4db74fa85767ede">Tokens</a> == null)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            var token = node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a5d50293a0d738577d4db74fa85767ede">Tokens</a>.LastOrDefault();</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordflow">return</span> token == null ? 0 : token.Column;            </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#ab1977b45e61bc23cf3d0da79c58101c0">  113</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#ab1977b45e61bc23cf3d0da79c58101c0">StartLine</a>(<span class="keyword">this</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <span class="keywordflow">if</span> (node == null || node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a5d50293a0d738577d4db74fa85767ede">Tokens</a> == null)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            var token = node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a5d50293a0d738577d4db74fa85767ede">Tokens</a>.FirstOrDefault();</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">return</span> token == null ? 0 : token.Line;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#a2997ad45de949c6bbe0d0621efb58907">  121</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#a2997ad45de949c6bbe0d0621efb58907">EndLine</a>(<span class="keyword">this</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keywordflow">if</span> (node == null || node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a5d50293a0d738577d4db74fa85767ede">Tokens</a> == null)</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            var token = node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a5d50293a0d738577d4db74fa85767ede">Tokens</a>.LastOrDefault();</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">return</span> token == null ? 0 : token.Line;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions_htm_af82b7dd5cf3fdb692fb36ec92c69cbc2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#af82b7dd5cf3fdb692fb36ec92c69cbc2">Deveel.Data.Sql.Parser.SqlNodeExtensions.StartColumn</a></div><div class="ttdeci">static int StartColumn(this ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNodeExtensions_8cs_source.htm#l00097">SqlNodeExtensions.cs:97</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">Deveel.Data.Sql.Parser.ISqlNode</a></div><div class="ttdoc">Defines the contract for nodes in an AST model for a SQL grammar analysis and parsing. </div><div class="ttdef"><b>Definition:</b> <a href="ISqlNode_8cs_source.htm#l00025">ISqlNode.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions_htm_a5d419fc87d1e9185ff0085497cecc0ce"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#a5d419fc87d1e9185ff0085497cecc0ce">Deveel.Data.Sql.Parser.SqlNodeExtensions.HasOptionalNode</a></div><div class="ttdeci">static bool HasOptionalNode(this ISqlNode node, string nodeName)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNodeExtensions_8cs_source.htm#l00070">SqlNodeExtensions.cs:70</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions_htm_ac7f40cabc6c0147380fab43c9eb8df8e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#ac7f40cabc6c0147380fab43c9eb8df8e">Deveel.Data.Sql.Parser.SqlNodeExtensions.EndColumn</a></div><div class="ttdeci">static int EndColumn(this ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNodeExtensions_8cs_source.htm#l00105">SqlNodeExtensions.cs:105</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions_htm_a87a3dc3f5b78e5227fb73f6ad169f4d7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#a87a3dc3f5b78e5227fb73f6ad169f4d7">Deveel.Data.Sql.Parser.SqlNodeExtensions.FindByName</a></div><div class="ttdeci">static ISqlNode FindByName(this ISqlNode node, string nodeName)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNodeExtensions_8cs_source.htm#l00057">SqlNodeExtensions.cs:57</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions_htm_ab1977b45e61bc23cf3d0da79c58101c0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#ab1977b45e61bc23cf3d0da79c58101c0">Deveel.Data.Sql.Parser.SqlNodeExtensions.StartLine</a></div><div class="ttdeci">static int StartLine(this ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNodeExtensions_8cs_source.htm#l00113">SqlNodeExtensions.cs:113</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm">Deveel.Data.Sql.Parser.SqlNodeExtensions</a></div><div class="ttdoc">Extension methods to ISqlNode for diagnostics and other purposes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlNodeExtensions_8cs_source.htm#l00027">SqlNodeExtensions.cs:27</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode_htm_a156305a37aea852103bbae1642bfd8f8"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a156305a37aea852103bbae1642bfd8f8">Deveel.Data.Sql.Parser.ISqlNode.ChildNodes</a></div><div class="ttdeci">IEnumerable&lt; ISqlNode &gt; ChildNodes</div><div class="ttdoc">Gets a read-only enumeration of the children nodes, if any. </div><div class="ttdef"><b>Definition:</b> <a href="ISqlNode_8cs_source.htm#l00039">ISqlNode.cs:39</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode_htm_a5d50293a0d738577d4db74fa85767ede"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a5d50293a0d738577d4db74fa85767ede">Deveel.Data.Sql.Parser.ISqlNode.Tokens</a></div><div class="ttdeci">IEnumerable&lt; Token &gt; Tokens</div><div class="ttdoc">Gets an enumeration of the tokens composing the this node. </div><div class="ttdef"><b>Definition:</b> <a href="ISqlNode_8cs_source.htm#l00045">ISqlNode.cs:45</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions_htm_a79d725f73ff28cf9096897e5e91769b4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#a79d725f73ff28cf9096897e5e91769b4">Deveel.Data.Sql.Parser.SqlNodeExtensions.FindNodes</a></div><div class="ttdeci">static IEnumerable FindNodes(this ISqlNode node, Type nodeType)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNodeExtensions_8cs_source.htm#l00083">SqlNodeExtensions.cs:83</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions_htm_aa25163a275a1b69e26615b1bad791a1b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#aa25163a275a1b69e26615b1bad791a1b">Deveel.Data.Sql.Parser.SqlNodeExtensions.FindNode</a></div><div class="ttdeci">static ISqlNode FindNode(this ISqlNode node, Type nodeType)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNodeExtensions_8cs_source.htm#l00036">SqlNodeExtensions.cs:36</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions_htm_a2997ad45de949c6bbe0d0621efb58907"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNodeExtensions.htm#a2997ad45de949c6bbe0d0621efb58907">Deveel.Data.Sql.Parser.SqlNodeExtensions.EndLine</a></div><div class="ttdeci">static int EndLine(this ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNodeExtensions_8cs_source.htm#l00121">SqlNodeExtensions.cs:121</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
