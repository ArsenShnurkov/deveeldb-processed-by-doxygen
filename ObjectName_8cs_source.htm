<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql/ObjectName.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_faa94ab11c0e9ee5b90f61525a42cab1.htm">Deveel.Data.Sql</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ObjectName.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ObjectName_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Diagnostics;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.IO;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Text;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Serialization.htm">Serialization</a>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Sql {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    [DebuggerDisplay(<span class="stringliteral">&quot;{FullName}&quot;</span>)]</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    [<a class="code" href="namespaceDeveel_1_1Data_1_1Transactions.htm#a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b">Serializable</a>]</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">   44</a></span>&#160;    <span class="keyword">public</span> sealed <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> : IEquatable&lt;ObjectName&gt;, IComparable&lt;ObjectName&gt;, <a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">ISerializable</a> {</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#aebc1ee3195de159cd42ee5786d065027">   49</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">const</span> <span class="keywordtype">string</span> GlobName = <span class="stringliteral">&quot;*&quot;</span>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a71231164546d36dd9e7444c9ba58891d">   54</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">const</span> <span class="keywordtype">char</span> Separator = <span class="charliteral">&#39;.&#39;</span>;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#af12be799499f1b1c098cb295db90f8cf">   71</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#af12be799499f1b1c098cb295db90f8cf">ObjectName</a>(<span class="keywordtype">string</span> name) </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            : this(null, name) {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a5ed5c1204bbee3ea2b28f8236bbaa6b3">   83</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a5ed5c1204bbee3ea2b28f8236bbaa6b3">ObjectName</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> parent, <span class="keywordtype">string</span> name) {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">if</span> (String.IsNullOrEmpty(name))</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;name&quot;</span>);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            Name = name;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            Parent = parent;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#ae6cf890584798a138a316c36deea492f">   91</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#ae6cf890584798a138a316c36deea492f">ObjectName</a>(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">ObjectData</a> graph) {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            Name = graph.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a828a888ad7250283e9f596f6da5fe97f">GetString</a>(<span class="stringliteral">&quot;Name&quot;</span>);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            Parent = graph.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a86f3d523b9ae1357b275ed330178ecb0">GetValue</a>&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>&gt;(<span class="stringliteral">&quot;Parent&quot;</span>);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a6173b4969b952472379e300c454ce664">   99</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> Parent { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#ac5f231824a471c460e7c35413b9dbc78">  101</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> ParentName {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> Parent == null ? null : Parent.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#adc350268eb3d99c8f8d9806eba1b2bf3">FullName</a>; }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a68683242303d4743d20210e3c2db8db1">  108</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> Name { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#adc350268eb3d99c8f8d9806eba1b2bf3">  114</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> FullName {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> ToString(); }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a9a75627c57bcca11c7074ecce6615ad3">  121</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> IsGlob {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> Name.Equals(GlobName); }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a94a5079bbbd800dffcc9010cfad8c5b1">  139</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a94a5079bbbd800dffcc9010cfad8c5b1">Parse</a>(<span class="keywordtype">string</span> s) {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="keywordflow">if</span> (String.IsNullOrEmpty(s))</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;s&quot;</span>);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            var sp = s.Split(<span class="keyword">new</span>[] {<span class="charliteral">&#39;.&#39;</span>}, StringSplitOptions.RemoveEmptyEntries);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordflow">if</span> (sp.Length == 0)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> FormatException(<span class="stringliteral">&quot;At least one part of the name must be provided&quot;</span>);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="keywordflow">if</span> (sp.Length == 1)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(sp[0]);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> finalName = null;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; sp.Length; i++) {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                <span class="keywordflow">if</span> (finalName == null) {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                    finalName = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(sp[i]);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                    finalName = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(finalName, sp[i]);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                }               </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">return</span> finalName;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a594bf9785d4f7020c160aa45ad3ec7f5">  172</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a594bf9785d4f7020c160aa45ad3ec7f5">ResolveSchema</a>(<span class="keywordtype">string</span> schemaName, <span class="keywordtype">string</span> name) {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            var sb = <span class="keyword">new</span> StringBuilder();</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="keywordflow">if</span> (!String.IsNullOrEmpty(schemaName))</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                sb.Append(schemaName).Append(<span class="charliteral">&#39;.&#39;</span>);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            sb.Append(name);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keywordflow">return</span> Parse(sb.ToString());</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a225fa87f57c484c3fa305086b0175683">  189</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a225fa87f57c484c3fa305086b0175683">Child</a>(<span class="keywordtype">string</span> name) {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(<span class="keyword">this</span>, name);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        }</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a5aa6afc8fc73d9581893179a1fbdc4fc">  193</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a5aa6afc8fc73d9581893179a1fbdc4fc">Child</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> childName) {</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            var baseName = <span class="keyword">this</span>;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> parent = childName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a6173b4969b952472379e300c454ce664">Parent</a>;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keywordflow">while</span> (parent != null) {</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                baseName = baseName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a225fa87f57c484c3fa305086b0175683">Child</a>(parent.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a68683242303d4743d20210e3c2db8db1">Name</a>);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                parent = parent.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a6173b4969b952472379e300c454ce664">Parent</a>;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            }</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            baseName = baseName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a225fa87f57c484c3fa305086b0175683">Child</a>(childName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a68683242303d4743d20210e3c2db8db1">Name</a>);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            <span class="keywordflow">return</span> baseName;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        }</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div>
<div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a4496925817c98d322983e3fe6c5dd9c1">  211</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a4496925817c98d322983e3fe6c5dd9c1">CompareTo</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> other) {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="keywordflow">if</span> (other == null)</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keywordtype">int</span> v = 0;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keywordflow">if</span> (Parent != null)</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                v = Parent.CompareTo(other.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a6173b4969b952472379e300c454ce664">Parent</a>);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keywordflow">if</span> (v == 0)</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                v = String.Compare(Name, other.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a68683242303d4743d20210e3c2db8db1">Name</a>, StringComparison.Ordinal);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            <span class="keywordflow">return</span> v;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        }</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#ae24dbae9dc2d95ddc4d5876c3818d7d3">  225</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">string</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#ae24dbae9dc2d95ddc4d5876c3818d7d3">ToString</a>() {</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            var sb = <span class="keyword">new</span> StringBuilder();</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <span class="keywordflow">if</span> (Parent != null) {</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                sb.Append(Parent);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                sb.Append(<span class="charliteral">&#39;.&#39;</span>);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            }</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            sb.Append(Name);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            <span class="keywordflow">return</span> sb.ToString();</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div>
<div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a8db1f5ce9ec5e571e42d8a7918265b8c">  236</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">ISerializable</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm#acd5831980e3c1969437ba5c9d838669e">GetData</a>(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a> graph) {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            graph.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;Name&quot;</span>, Name);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            graph.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;Parent&quot;</span>, Parent);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a7be2072b97ecf6864dde3f4392eefe34">  241</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a7be2072b97ecf6864dde3f4392eefe34">Equals</a>(<span class="keywordtype">object</span> obj) {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            var other = obj as <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            <span class="keywordflow">if</span> (other == null)</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            <span class="keywordflow">return</span> Equals(other);</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        }</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div>
<div class="line"><a name="l00249"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a8ef140b19850fdd8eedbc755ed732d3c">  249</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a8ef140b19850fdd8eedbc755ed732d3c">Equals</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> other) {</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            <span class="keywordflow">return</span> Equals(other, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        }</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a4a55acf7fc4030e31fdf7861e87a3b21">  263</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a4a55acf7fc4030e31fdf7861e87a3b21">Equals</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> other, <span class="keywordtype">bool</span> ignoreCase) {</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="keywordflow">if</span> (other == null)</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="keywordflow">if</span> (Parent != null &amp;&amp; other.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a6173b4969b952472379e300c454ce664">Parent</a> == null)</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="keywordflow">if</span> (Parent == null &amp;&amp; other.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a6173b4969b952472379e300c454ce664">Parent</a> != null)</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            <span class="keywordflow">if</span> (Parent != null &amp;&amp; !Parent.Equals(other.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a6173b4969b952472379e300c454ce664">Parent</a>, ignoreCase))</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            var comparison = ignoreCase ? StringComparison.OrdinalIgnoreCase : StringComparison.Ordinal;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            <span class="keywordflow">return</span> String.Equals(Name, other.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a68683242303d4743d20210e3c2db8db1">Name</a>, comparison);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        }</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div>
<div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a775093732246737d32e3b701d57f50cf">  279</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a775093732246737d32e3b701d57f50cf">GetHashCode</a>() {</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            var code = Name.GetHashCode() ^ 5623;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <span class="keywordflow">if</span> (Parent != null)</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                code ^= Parent.GetHashCode();</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            <span class="keywordflow">return</span> code;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        }</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div>
<div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a382ec57a3584a07856159f7eb5bcaa19">  287</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a382ec57a3584a07856159f7eb5bcaa19">Serialize</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> objectName, Stream stream) {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            <span class="keyword">using</span> (var writer = <span class="keyword">new</span> BinaryWriter(stream, Encoding.Unicode)) {</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                Serialize(objectName, writer);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            }</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        }</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a697be6e0b2c6c5235b4026bca33fe575">  293</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a697be6e0b2c6c5235b4026bca33fe575">Serialize</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> objectName, BinaryWriter writer) {</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            <span class="keywordflow">if</span> (objectName == null) {</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                writer.Write((byte) 0);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            }</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            writer.Write((byte)1);</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            <span class="keywordflow">if</span> (objectName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a6173b4969b952472379e300c454ce664">Parent</a> != null) {</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                writer.Write((byte) 1);</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                Serialize(objectName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a6173b4969b952472379e300c454ce664">Parent</a>, writer);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                writer.Write((byte)0);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            }</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            writer.Write(objectName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a68683242303d4743d20210e3c2db8db1">Name</a>);</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        }</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#ad2af03d401751b3cf6439f0505df56bf">  311</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#ad2af03d401751b3cf6439f0505df56bf">Deserialize</a>(Stream stream) {</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            <span class="keyword">using</span> (var reader = <span class="keyword">new</span> BinaryReader(stream, Encoding.Unicode)) {</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                <span class="keywordflow">return</span> Deserialize(reader);</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            }</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        }</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div>
<div class="line"><a name="l00317"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a393481ef103ad10d5073eea56d9dbd68">  317</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a393481ef103ad10d5073eea56d9dbd68">Deserialize</a>(BinaryReader reader) {</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            var status = reader.ReadByte();</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            <span class="keywordflow">if</span> (status == 0)</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> parent = null;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;            var parentStatus = reader.ReadByte();</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            <span class="keywordflow">if</span> (parentStatus == 1)</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                parent = Deserialize(reader);</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            var name = reader.ReadString();</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(parent, name);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        }</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    }</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;}</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Serialization_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Serialization.htm">Deveel.Data.Serialization</a></div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00024">BinarySerializer.cs:24</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable_htm_acd5831980e3c1969437ba5c9d838669e"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm#acd5831980e3c1969437ba5c9d838669e">Deveel.Data.Serialization.ISerializable.GetData</a></div><div class="ttdeci">void GetData(SerializeData data)</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a94a5079bbbd800dffcc9010cfad8c5b1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a94a5079bbbd800dffcc9010cfad8c5b1">Deveel.Data.Sql.ObjectName.Parse</a></div><div class="ttdeci">static ObjectName Parse(string s)</div><div class="ttdoc">Parses the given string into a ObjectName object. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00139">ObjectName.cs:139</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_ae24dbae9dc2d95ddc4d5876c3818d7d3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#ae24dbae9dc2d95ddc4d5876c3818d7d3">Deveel.Data.Sql.ObjectName.ToString</a></div><div class="ttdeci">override string ToString()</div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00225">ObjectName.cs:225</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_ae6cf890584798a138a316c36deea492f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#ae6cf890584798a138a316c36deea492f">Deveel.Data.Sql.ObjectName.ObjectName</a></div><div class="ttdeci">ObjectName(ObjectData graph)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00091">ObjectName.cs:91</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a697be6e0b2c6c5235b4026bca33fe575"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a697be6e0b2c6c5235b4026bca33fe575">Deveel.Data.Sql.ObjectName.Serialize</a></div><div class="ttdeci">static void Serialize(ObjectName objectName, BinaryWriter writer)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00293">ObjectName.cs:293</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a5aa6afc8fc73d9581893179a1fbdc4fc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a5aa6afc8fc73d9581893179a1fbdc4fc">Deveel.Data.Sql.ObjectName.Child</a></div><div class="ttdeci">ObjectName Child(ObjectName childName)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00193">ObjectName.cs:193</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a382ec57a3584a07856159f7eb5bcaa19"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a382ec57a3584a07856159f7eb5bcaa19">Deveel.Data.Sql.ObjectName.Serialize</a></div><div class="ttdeci">static void Serialize(ObjectName objectName, Stream stream)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00287">ObjectName.cs:287</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a4496925817c98d322983e3fe6c5dd9c1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a4496925817c98d322983e3fe6c5dd9c1">Deveel.Data.Sql.ObjectName.CompareTo</a></div><div class="ttdeci">int CompareTo(ObjectName other)</div><div class="ttdoc">Compares this instance of the object reference to a given one and returns a value indicating if the t...</div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00211">ObjectName.cs:211</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_af12be799499f1b1c098cb295db90f8cf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#af12be799499f1b1c098cb295db90f8cf">Deveel.Data.Sql.ObjectName.ObjectName</a></div><div class="ttdeci">ObjectName(string name)</div><div class="ttdoc">Constructs a name reference without a parent. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00071">ObjectName.cs:71</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm_a2a09ed1c661f92b60b0b38398fb7ced1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">Deveel.Data.Serialization.SerializeData.SetValue</a></div><div class="ttdeci">void SetValue(string key, Type type, object value)</div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00035">SerializeData.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">Deveel.Data.Sql.ObjectName</a></div><div class="ttdoc">Describes the name of an object within a database. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00044">ObjectName.cs:44</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">Deveel.Data.Serialization.ISerializable</a></div><div class="ttdef"><b>Definition:</b> <a href="ISerializable_8cs_source.htm#l00020">ISerializable.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_ad2af03d401751b3cf6439f0505df56bf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#ad2af03d401751b3cf6439f0505df56bf">Deveel.Data.Sql.ObjectName.Deserialize</a></div><div class="ttdeci">static ObjectName Deserialize(Stream stream)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00311">ObjectName.cs:311</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a225fa87f57c484c3fa305086b0175683"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a225fa87f57c484c3fa305086b0175683">Deveel.Data.Sql.ObjectName.Child</a></div><div class="ttdeci">ObjectName Child(string name)</div><div class="ttdoc">Creates a reference what is the child of the current one. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00189">ObjectName.cs:189</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a7be2072b97ecf6864dde3f4392eefe34"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a7be2072b97ecf6864dde3f4392eefe34">Deveel.Data.Sql.ObjectName.Equals</a></div><div class="ttdeci">override bool Equals(object obj)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00241">ObjectName.cs:241</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">Deveel.Data.Serialization.SerializeData</a></div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00021">SerializeData.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">Deveel.Data.Serialization.ObjectData</a></div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00022">ObjectData.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a775093732246737d32e3b701d57f50cf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a775093732246737d32e3b701d57f50cf">Deveel.Data.Sql.ObjectName.GetHashCode</a></div><div class="ttdeci">override int GetHashCode()</div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00279">ObjectName.cs:279</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_adc350268eb3d99c8f8d9806eba1b2bf3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#adc350268eb3d99c8f8d9806eba1b2bf3">Deveel.Data.Sql.ObjectName.FullName</a></div><div class="ttdeci">string FullName</div><div class="ttdoc">Gets the full reference name formatted. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00114">ObjectName.cs:114</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a594bf9785d4f7020c160aa45ad3ec7f5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a594bf9785d4f7020c160aa45ad3ec7f5">Deveel.Data.Sql.ObjectName.ResolveSchema</a></div><div class="ttdeci">static ObjectName ResolveSchema(string schemaName, string name)</div><div class="ttdoc">Creates a new reference to a table, given a schema and a table name. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00172">ObjectName.cs:172</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a6173b4969b952472379e300c454ce664"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a6173b4969b952472379e300c454ce664">Deveel.Data.Sql.ObjectName.Parent</a></div><div class="ttdeci">ObjectName Parent</div><div class="ttdoc">Gets the parent reference of the current one, if any or null if none. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00099">ObjectName.cs:99</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a68683242303d4743d20210e3c2db8db1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a68683242303d4743d20210e3c2db8db1">Deveel.Data.Sql.ObjectName.Name</a></div><div class="ttdeci">string Name</div><div class="ttdoc">Gets the name of the object being referenced. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00108">ObjectName.cs:108</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a393481ef103ad10d5073eea56d9dbd68"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a393481ef103ad10d5073eea56d9dbd68">Deveel.Data.Sql.ObjectName.Deserialize</a></div><div class="ttdeci">static ObjectName Deserialize(BinaryReader reader)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00317">ObjectName.cs:317</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a86f3d523b9ae1357b275ed330178ecb0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a86f3d523b9ae1357b275ed330178ecb0">Deveel.Data.Serialization.ObjectData.GetValue</a></div><div class="ttdeci">object GetValue(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00048">ObjectData.cs:48</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a5ed5c1204bbee3ea2b28f8236bbaa6b3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a5ed5c1204bbee3ea2b28f8236bbaa6b3">Deveel.Data.Sql.ObjectName.ObjectName</a></div><div class="ttdeci">ObjectName(ObjectName parent, string name)</div><div class="ttdoc">Constructs a name reference with a given parent. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00083">ObjectName.cs:83</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Transactions_htm_a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Transactions.htm#a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b">Deveel.Data.Transactions.IsolationLevel.Serializable</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a8ef140b19850fdd8eedbc755ed732d3c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a8ef140b19850fdd8eedbc755ed732d3c">Deveel.Data.Sql.ObjectName.Equals</a></div><div class="ttdeci">bool Equals(ObjectName other)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00249">ObjectName.cs:249</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a4a55acf7fc4030e31fdf7861e87a3b21"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a4a55acf7fc4030e31fdf7861e87a3b21">Deveel.Data.Sql.ObjectName.Equals</a></div><div class="ttdeci">bool Equals(ObjectName other, bool ignoreCase)</div><div class="ttdoc">Compares this object name with the other one given, according to the case sensitivity specified...</div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00263">ObjectName.cs:263</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a828a888ad7250283e9f596f6da5fe97f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a828a888ad7250283e9f596f6da5fe97f">Deveel.Data.Serialization.ObjectData.GetString</a></div><div class="ttdeci">string GetString(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00101">ObjectData.cs:101</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
