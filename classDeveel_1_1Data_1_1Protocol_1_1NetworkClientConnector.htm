<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Protocol.NetworkClientConnector Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Protocol.htm">Protocol</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm">NetworkClientConnector</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#properties">Properties</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Protocol.NetworkClientConnector Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for Deveel.Data.Protocol.NetworkClientConnector:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.png" usemap="#Deveel.Data.Protocol.NetworkClientConnector_map" alt=""/>
  <map id="Deveel.Data.Protocol.NetworkClientConnector_map" name="Deveel.Data.Protocol.NetworkClientConnector_map">
<area href="interfaceDeveel_1_1Data_1_1Protocol_1_1IClientConnector.htm" alt="Deveel.Data.Protocol.IClientConnector" shape="rect" coords="0,112,274,136"/>
<area href="interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector.htm" alt="Deveel.Data.Protocol.IConnector" shape="rect" coords="0,56,274,80"/>
<area href="classDeveel_1_1Data_1_1Protocol_1_1TcpClientConnector.htm" alt="Deveel.Data.Protocol.TcpClientConnector" shape="rect" coords="0,224,274,248"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm">ClientProcessor</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm">NetworkTriggerChannel</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab55df0f3d3a4a1b2ccc00362965fcbba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ab55df0f3d3a4a1b2ccc00362965fcbba">Dispose</a> ()</td></tr>
<tr class="separator:ab55df0f3d3a4a1b2ccc00362965fcbba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36db8ea6a2909473618bea95cf7f0c4a"><td class="memItemLeft" align="right" valign="top">abstract <a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a36db8ea6a2909473618bea95cf7f0c4a">MakeEndPoint</a> (IDictionary&lt; string, object &gt; properties)</td></tr>
<tr class="separator:a36db8ea6a2909473618bea95cf7f0c4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43530d3166af568d274a66474f855ab3"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageProcessor.htm">IMessageProcessor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a43530d3166af568d274a66474f855ab3">CreateProcessor</a> ()</td></tr>
<tr class="separator:a43530d3166af568d274a66474f855ab3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1b1726e317a70c000b0b1bbee016c64"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ad1b1726e317a70c000b0b1bbee016c64">CreateEnvelope</a> (IDictionary&lt; string, object &gt; metadata, <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> message)</td></tr>
<tr class="separator:ad1b1726e317a70c000b0b1bbee016c64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a413fe41fa5f950412397e85c2d447b6f"><td class="memItemLeft" align="right" valign="top">IStreamableObjectChannel&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a413fe41fa5f950412397e85c2d447b6f">CreateObjectChannel</a> (long objectId)</td></tr>
<tr class="separator:a413fe41fa5f950412397e85c2d447b6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a434ba8149d6b8743ab6ce1f00f4f55fa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1ITriggerChannel.htm">ITriggerChannel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a434ba8149d6b8743ab6ce1f00f4f55fa">CreateTriggerChannel</a> (string triggerName, string objectName, TriggerEventType eventType)</td></tr>
<tr class="separator:a434ba8149d6b8743ab6ce1f00f4f55fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ba8c0206e15de12e79a2b6d20244ace"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4ba8c0206e15de12e79a2b6d20244ace">SetEncrypton</a> (<a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionData.htm">EncryptionData</a> encryptionData)</td></tr>
<tr class="separator:a4ba8c0206e15de12e79a2b6d20244ace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector.htm">Deveel.Data.Protocol.IConnector</a></td></tr>
<tr class="memitem:a34ec909a6f32f1a12220a2f2bc588056 inherit pub_methods_interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1ITriggerChannel.htm">ITriggerChannel</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector.htm#a34ec909a6f32f1a12220a2f2bc588056">CreateTriggerChannel</a> (string triggerName, string objectName, <a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Triggers.htm#ab5adac9a94d949a486aea44bdce03253">TriggerEventType</a> eventType)</td></tr>
<tr class="separator:a34ec909a6f32f1a12220a2f2bc588056 inherit pub_methods_interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:adeb917fd8612fb27a5c54ea67d3009c2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#adeb917fd8612fb27a5c54ea67d3009c2">NetworkClientConnector</a> ()</td></tr>
<tr class="separator:adeb917fd8612fb27a5c54ea67d3009c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1b96ef75e1897c3aa54d30af4e61f98"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ab1b96ef75e1897c3aa54d30af4e61f98">Dispose</a> (bool disposing)</td></tr>
<tr class="separator:ab1b96ef75e1897c3aa54d30af4e61f98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e183253c502c8c08d6ae46789d3617f"><td class="memItemLeft" align="right" valign="top">abstract NetworkStream&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4e183253c502c8c08d6ae46789d3617f">CreateNetworkStream</a> (<a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a> remoteEndPoint, FileAccess access)</td></tr>
<tr class="separator:a4e183253c502c8c08d6ae46789d3617f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d57e380ab0fdfaf5e2fdd61288c6482"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d57e380ab0fdfaf5e2fdd61288c6482">ChangeState</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a> newState)</td></tr>
<tr class="separator:a4d57e380ab0fdfaf5e2fdd61288c6482"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ec0304594c2f3b4cd0eb9c770abdb0c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a9ec0304594c2f3b4cd0eb9c770abdb0c">OpenConnector</a> (<a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a> remoteEndPoint)</td></tr>
<tr class="separator:a9ec0304594c2f3b4cd0eb9c770abdb0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7eea80deb9e2aa99eb8ead84d1fd1046"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7eea80deb9e2aa99eb8ead84d1fd1046">Close</a> ()</td></tr>
<tr class="separator:a7eea80deb9e2aa99eb8ead84d1fd1046"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e0aa476c97329ffc6a1dfd69fe65442"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a9e0aa476c97329ffc6a1dfd69fe65442">OnAuthenticated</a> (string username, long timeStamp)</td></tr>
<tr class="separator:a9e0aa476c97329ffc6a1dfd69fe65442"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af82d67b7fc818f506adf7bd2fafc0d48"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#af82d67b7fc818f506adf7bd2fafc0d48">OnConnectorOpen</a> ()</td></tr>
<tr class="separator:af82d67b7fc818f506adf7bd2fafc0d48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bd21c5c4caa2199389c859fd903bbd7"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a9bd21c5c4caa2199389c859fd903bbd7">OnProcessServerResponse</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope)</td></tr>
<tr class="separator:a9bd21c5c4caa2199389c859fd903bbd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79bd8e145281a6fa8b663cdb283cdbcf"><td class="memItemLeft" align="right" valign="top">virtual byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79bd8e145281a6fa8b663cdb283cdbcf">SerializeEnvelope</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope)</td></tr>
<tr class="separator:a79bd8e145281a6fa8b663cdb283cdbcf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a676093070fd4b3bbcc49230cd131ec76"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a676093070fd4b3bbcc49230cd131ec76">SendEnvelope</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope)</td></tr>
<tr class="separator:a676093070fd4b3bbcc49230cd131ec76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8d92abc9b081c113781d0aaddd21924"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#aa8d92abc9b081c113781d0aaddd21924">DeserializeEnvelope</a> (byte[] bytes)</td></tr>
<tr class="separator:aa8d92abc9b081c113781d0aaddd21924"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac179eacbb4e3b96202a1301b51f5af98"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ac179eacbb4e3b96202a1301b51f5af98">ShouldReceive</a> (IDictionary&lt; string, object &gt; senderMetadata, <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope)</td></tr>
<tr class="separator:ac179eacbb4e3b96202a1301b51f5af98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85e3b709cdd2e133e5f68dfcb6d782e2"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a85e3b709cdd2e133e5f68dfcb6d782e2">OnTriggerNotification</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope)</td></tr>
<tr class="separator:a85e3b709cdd2e133e5f68dfcb6d782e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="properties"></a>
Properties</h2></td></tr>
<tr class="memitem:a4d50056759323133064f3ded071b0783"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d50056759323133064f3ded071b0783">Timeout</a><code> [get, set]</code></td></tr>
<tr class="separator:a4d50056759323133064f3ded071b0783"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79781c54de4e1d48ab86eaa8c3ecc625"><td class="memItemLeft" align="right" valign="top">Stream&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">InputStream</a><code> [get, set]</code></td></tr>
<tr class="separator:a79781c54de4e1d48ab86eaa8c3ecc625"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c89ea711238208ab2d31d04ff8566a5"><td class="memItemLeft" align="right" valign="top">Stream&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">OutputStream</a><code> [get, set]</code></td></tr>
<tr class="separator:a1c89ea711238208ab2d31d04ff8566a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abea409fdec279d9543cbf49a56a30390"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#abea409fdec279d9543cbf49a56a30390">CurrentState</a><code> [get, private set]</code></td></tr>
<tr class="separator:abea409fdec279d9543cbf49a56a30390"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36753f5ae05ed94bf981edd710e15eb0"><td class="memItemLeft" align="right" valign="top">abstract <a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a36753f5ae05ed94bf981edd710e15eb0">LocalEndPoint</a><code> [get]</code></td></tr>
<tr class="separator:a36753f5ae05ed94bf981edd710e15eb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a323a6b5ad63ed14bdfc26b259f77dc87"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a323a6b5ad63ed14bdfc26b259f77dc87">RemoteEndPoint</a><code> [get, private set]</code></td></tr>
<tr class="separator:a323a6b5ad63ed14bdfc26b259f77dc87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header properties_interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector"><td colspan="2" onclick="javascript:toggleInherit('properties_interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector')"><img src="closed.png" alt="-"/>&#160;Properties inherited from <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector.htm">Deveel.Data.Protocol.IConnector</a></td></tr>
<tr class="memitem:aa7fe34d9ec8c48170987fadddce26d22 inherit properties_interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector.htm#aa7fe34d9ec8c48170987fadddce26d22">CurrentState</a><code> [get]</code></td></tr>
<tr class="separator:aa7fe34d9ec8c48170987fadddce26d22 inherit properties_interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad43fda43dd0a9edb110282dc02a17851 inherit properties_interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector.htm#ad43fda43dd0a9edb110282dc02a17851">LocalEndPoint</a><code> [get]</code></td></tr>
<tr class="separator:ad43fda43dd0a9edb110282dc02a17851 inherit properties_interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:ae75ff0e7b1353702a602e2236591c579"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ae75ff0e7b1353702a602e2236591c579">~NetworkClientConnector</a> ()</td></tr>
<tr class="separator:ae75ff0e7b1353702a602e2236591c579"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7860f4ef3854220a24d0ba54edd2f31b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7860f4ef3854220a24d0ba54edd2f31b">AssertNotDisposed</a> ()</td></tr>
<tr class="separator:a7860f4ef3854220a24d0ba54edd2f31b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a472fcb56aede9a2898ea913a4113fbc1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a472fcb56aede9a2898ea913a4113fbc1">AssertOpen</a> ()</td></tr>
<tr class="separator:a472fcb56aede9a2898ea913a4113fbc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afaade34adc7b8325729958932682066b"><td class="memItemLeft" align="right" valign="top">ICryptoTransform&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#afaade34adc7b8325729958932682066b">SelectHashAlgorithm</a> (string name, byte[] key, byte[] iv, FileAccess access)</td></tr>
<tr class="separator:afaade34adc7b8325729958932682066b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aede3febc63f3914e61a6c20ef0e2aa6c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#aede3febc63f3914e61a6c20ef0e2aa6c">ReceiveEnvelope</a> (int timeout)</td></tr>
<tr class="separator:aede3febc63f3914e61a6c20ef0e2aa6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57302c7fe968f770d53380f8f979f4db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a57302c7fe968f770d53380f8f979f4db">ReceiveResponse</a> (int timeout, IDictionary&lt; string, object &gt; senderMetadata)</td></tr>
<tr class="separator:a57302c7fe968f770d53380f8f979f4db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a35100218ee2e8e2e817ae210057f6d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1a35100218ee2e8e2e817ae210057f6d">ReceiveEnvelopes</a> ()</td></tr>
<tr class="separator:a1a35100218ee2e8e2e817ae210057f6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b58c3952b62888b7d8076afe1bdc251"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1b58c3952b62888b7d8076afe1bdc251">DispatchTriggerCallbacks</a> ()</td></tr>
<tr class="separator:a1b58c3952b62888b7d8076afe1bdc251"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:a4d961d9411a0d0a1c7c363f55f0117cf"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d961d9411a0d0a1c7c363f55f0117cf">ExtractDispatchId</a> (IDictionary&lt; string, object &gt; metadata)</td></tr>
<tr class="separator:a4d961d9411a0d0a1c7c363f55f0117cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a80850c85ca1b63c1897e92abab59e019"><td class="memItemLeft" align="right" valign="top">readonly object&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a80850c85ca1b63c1897e92abab59e019">channelLock</a> = new object()</td></tr>
<tr class="separator:a80850c85ca1b63c1897e92abab59e019"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a68a80eab1fe15f3507f064fbef343a"><td class="memItemLeft" align="right" valign="top">Thread&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">envelopeReceiver</a></td></tr>
<tr class="separator:a7a68a80eab1fe15f3507f064fbef343a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f9a3e1611f3a8369be61ce13dd99d18"><td class="memItemLeft" align="right" valign="top">List&lt; <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a></td></tr>
<tr class="separator:a6f9a3e1611f3a8369be61ce13dd99d18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af01ff6bab219705774615245b6435ad7"><td class="memItemLeft" align="right" valign="top">List&lt; <a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm">NetworkTriggerChannel</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#af01ff6bab219705774615245b6435ad7">triggerChannels</a></td></tr>
<tr class="separator:af01ff6bab219705774615245b6435ad7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00030">30</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="adeb917fd8612fb27a5c54ea67d3009c2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Protocol.NetworkClientConnector.NetworkClientConnector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00036">36</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                                           {</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">envelopeReceiver</a> = <span class="keyword">new</span> Thread(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1a35100218ee2e8e2e817ae210057f6d">ReceiveEnvelopes</a>) {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                IsBackground = <span class="keyword">true</span>,</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                Name = <span class="stringliteral">&quot;DeveelDB Network Client Envelope Receiver&quot;</span>,</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                Priority = ThreadPriority.AboveNormal</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            };</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a> = <span class="keyword">new</span> List&lt;IMessageEnvelope&gt;();</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a7a68a80eab1fe15f3507f064fbef343a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">Deveel.Data.Protocol.NetworkClientConnector.envelopeReceiver</a></div><div class="ttdeci">Thread envelopeReceiver</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00033">NetworkClientConnector.cs:33</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a1a35100218ee2e8e2e817ae210057f6d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1a35100218ee2e8e2e817ae210057f6d">Deveel.Data.Protocol.NetworkClientConnector.ReceiveEnvelopes</a></div><div class="ttdeci">void ReceiveEnvelopes()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00328">NetworkClientConnector.cs:328</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a6f9a3e1611f3a8369be61ce13dd99d18"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">Deveel.Data.Protocol.NetworkClientConnector.envelopes</a></div><div class="ttdeci">List&lt; IMessageEnvelope &gt; envelopes</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00034">NetworkClientConnector.cs:34</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae75ff0e7b1353702a602e2236591c579"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Protocol.NetworkClientConnector.~NetworkClientConnector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00046">46</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                  {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ab55df0f3d3a4a1b2ccc00362965fcbba">Dispose</a>(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_ab55df0f3d3a4a1b2ccc00362965fcbba"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ab55df0f3d3a4a1b2ccc00362965fcbba">Deveel.Data.Protocol.NetworkClientConnector.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00052">NetworkClientConnector.cs:52</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a7860f4ef3854220a24d0ba54edd2f31b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Protocol.NetworkClientConnector.AssertNotDisposed </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00103">103</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                                         {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#abea409fdec279d9543cbf49a56a30390">CurrentState</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Disposed)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ObjectDisposedException(GetType().AssemblyQualifiedName);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Protocol_htm_ab83d7171dd72d60e27ed9e892e1bdafd"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">Deveel.Data.Protocol.ConnectorState</a></div><div class="ttdeci">ConnectorState</div><div class="ttdef"><b>Definition:</b> <a href="ConnectorState_8cs_source.htm#l00020">ConnectorState.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_abea409fdec279d9543cbf49a56a30390"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#abea409fdec279d9543cbf49a56a30390">Deveel.Data.Protocol.NetworkClientConnector.CurrentState</a></div><div class="ttdeci">ConnectorState CurrentState</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00097">NetworkClientConnector.cs:97</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a472fcb56aede9a2898ea913a4113fbc1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Protocol.NetworkClientConnector.AssertOpen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00108">108</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                                  {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#abea409fdec279d9543cbf49a56a30390">CurrentState</a> != <a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Open)</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Protocol_htm_ab83d7171dd72d60e27ed9e892e1bdafd"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">Deveel.Data.Protocol.ConnectorState</a></div><div class="ttdeci">ConnectorState</div><div class="ttdef"><b>Definition:</b> <a href="ConnectorState_8cs_source.htm#l00020">ConnectorState.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_abea409fdec279d9543cbf49a56a30390"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#abea409fdec279d9543cbf49a56a30390">Deveel.Data.Protocol.NetworkClientConnector.CurrentState</a></div><div class="ttdeci">ConnectorState CurrentState</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00097">NetworkClientConnector.cs:97</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4d57e380ab0fdfaf5e2fdd61288c6482"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Protocol.NetworkClientConnector.ChangeState </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>&#160;</td>
          <td class="paramname"><em>newState</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00115">115</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                                            {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7860f4ef3854220a24d0ba54edd2f31b">AssertNotDisposed</a>();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#abea409fdec279d9543cbf49a56a30390">CurrentState</a> = newState;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a7860f4ef3854220a24d0ba54edd2f31b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7860f4ef3854220a24d0ba54edd2f31b">Deveel.Data.Protocol.NetworkClientConnector.AssertNotDisposed</a></div><div class="ttdeci">void AssertNotDisposed()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00103">NetworkClientConnector.cs:103</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_abea409fdec279d9543cbf49a56a30390"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#abea409fdec279d9543cbf49a56a30390">Deveel.Data.Protocol.NetworkClientConnector.CurrentState</a></div><div class="ttdeci">ConnectorState CurrentState</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00097">NetworkClientConnector.cs:97</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a7eea80deb9e2aa99eb8ead84d1fd1046"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Protocol.NetworkClientConnector.Close </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00139">139</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                               {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d57e380ab0fdfaf5e2fdd61288c6482">ChangeState</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Closed);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">envelopeReceiver</a> != null &amp;&amp;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">envelopeReceiver</a>.ThreadState == ThreadState.Running) {</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">envelopeReceiver</a>.Join(1000);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">envelopeReceiver</a> = null;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">InputStream</a> != null)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">InputStream</a>.Close();</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">OutputStream</a> != null)</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">OutputStream</a>.Close();</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <span class="keywordflow">throw</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a1c89ea711238208ab2d31d04ff8566a5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">Deveel.Data.Protocol.NetworkClientConnector.OutputStream</a></div><div class="ttdeci">Stream OutputStream</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00095">NetworkClientConnector.cs:95</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Protocol_htm_ab83d7171dd72d60e27ed9e892e1bdafd"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">Deveel.Data.Protocol.ConnectorState</a></div><div class="ttdeci">ConnectorState</div><div class="ttdef"><b>Definition:</b> <a href="ConnectorState_8cs_source.htm#l00020">ConnectorState.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a4d57e380ab0fdfaf5e2fdd61288c6482"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d57e380ab0fdfaf5e2fdd61288c6482">Deveel.Data.Protocol.NetworkClientConnector.ChangeState</a></div><div class="ttdeci">void ChangeState(ConnectorState newState)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00115">NetworkClientConnector.cs:115</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a79781c54de4e1d48ab86eaa8c3ecc625"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">Deveel.Data.Protocol.NetworkClientConnector.InputStream</a></div><div class="ttdeci">Stream InputStream</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00093">NetworkClientConnector.cs:93</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a7a68a80eab1fe15f3507f064fbef343a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">Deveel.Data.Protocol.NetworkClientConnector.envelopeReceiver</a></div><div class="ttdeci">Thread envelopeReceiver</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00033">NetworkClientConnector.cs:33</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ad1b1726e317a70c000b0b1bbee016c64"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> Deveel.Data.Protocol.NetworkClientConnector.CreateEnvelope </td>
          <td>(</td>
          <td class="paramtype">IDictionary&lt; string, object &gt;&#160;</td>
          <td class="paramname"><em>metadata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a>&#160;</td>
          <td class="paramname"><em>message</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector.htm#a7580ccb79a0073ea5e29f4d36a7f569d">Deveel.Data.Protocol.IConnector</a>.</p>

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00174">174</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                                                                                               {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordtype">int</span> dispatchId = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d961d9411a0d0a1c7c363f55f0117cf">ExtractDispatchId</a>(metadata);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            var envelope = <span class="keyword">new</span> NetworkEnvelope(dispatchId, message);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            envelope.IssueDate = <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a8cf10d2341ed01492506085688270c1e">DateTime</a>.UtcNow;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keywordflow">return</span> envelope;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a4d961d9411a0d0a1c7c363f55f0117cf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d961d9411a0d0a1c7c363f55f0117cf">Deveel.Data.Protocol.NetworkClientConnector.ExtractDispatchId</a></div><div class="ttdeci">static int ExtractDispatchId(IDictionary&lt; string, object &gt; metadata)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00276">NetworkClientConnector.cs:276</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a8cf10d2341ed01492506085688270c1e"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a8cf10d2341ed01492506085688270c1e">Deveel.Data.Types.SqlTypeCode.DateTime</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4e183253c502c8c08d6ae46789d3617f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">abstract NetworkStream Deveel.Data.Protocol.NetworkClientConnector.CreateNetworkStream </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a>&#160;</td>
          <td class="paramname"><em>remoteEndPoint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FileAccess&#160;</td>
          <td class="paramname"><em>access</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1TcpClientConnector.htm#a6c4f1238594a8e0d6fcf620525578272">Deveel.Data.Protocol.TcpClientConnector</a>.</p>

</div>
</div>
<a class="anchor" id="a413fe41fa5f950412397e85c2d447b6f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">IStreamableObjectChannel Deveel.Data.Protocol.NetworkClientConnector.CreateObjectChannel </td>
          <td>(</td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>objectId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector.htm#a4d4216f03e9677811b7f07dd437be87f">Deveel.Data.Protocol.IConnector</a>.</p>

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00190">190</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                                                                           {</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a43530d3166af568d274a66474f855ab3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageProcessor.htm">IMessageProcessor</a> Deveel.Data.Protocol.NetworkClientConnector.CreateProcessor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IConnector.htm#a6694fd7fba39162552aac99b8294fb98">Deveel.Data.Protocol.IConnector</a>.</p>

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00170">170</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                                                           {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> ClientProcessor(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a434ba8149d6b8743ab6ce1f00f4f55fa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1ITriggerChannel.htm">ITriggerChannel</a> Deveel.Data.Protocol.NetworkClientConnector.CreateTriggerChannel </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>triggerName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>objectName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">TriggerEventType&#160;</td>
          <td class="paramname"><em>eventType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00194">194</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                                                                                                                       {</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa8d92abc9b081c113781d0aaddd21924"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> Deveel.Data.Protocol.NetworkClientConnector.DeserializeEnvelope </td>
          <td>(</td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>bytes</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00253">253</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                                                                             {</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            <span class="keyword">using</span> (var stream = <span class="keyword">new</span> MemoryStream(bytes, <span class="keyword">false</span>)) {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                var formatter = <span class="keyword">new</span> BinaryFormatter();</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                <span class="keywordflow">return</span> (IMessageEnvelope) formatter.Deserialize(stream);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            }</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1b58c3952b62888b7d8076afe1bdc251"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Protocol.NetworkClientConnector.DispatchTriggerCallbacks </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00396">396</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                                                {</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                <span class="keywordflow">while</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#abea409fdec279d9543cbf49a56a30390">CurrentState</a> != <a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Closed) {</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                    var notifications = <span class="keyword">new</span> List&lt;IMessageEnvelope&gt;();</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                    </div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                    lock (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a>) {</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                        <span class="keywordflow">foreach</span> (var envelope <span class="keywordflow">in</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a>) {</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                            <span class="keywordflow">if</span> (envelope.Message is TriggerEventNotification) {</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                                notifications.Add(envelope);</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                            }</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                        }</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                        Monitor.PulseAll(envelopes);</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                    }</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                    <span class="keywordflow">foreach</span> (var envelope <span class="keywordflow">in</span> notifications) {</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                        <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a85e3b709cdd2e133e5f68dfcb6d782e2">OnTriggerNotification</a>(envelope);</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                    }</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                }</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;            } <span class="keywordflow">catch</span> {</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                </div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;            }</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Protocol_htm_ab83d7171dd72d60e27ed9e892e1bdafd"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">Deveel.Data.Protocol.ConnectorState</a></div><div class="ttdeci">ConnectorState</div><div class="ttdef"><b>Definition:</b> <a href="ConnectorState_8cs_source.htm#l00020">ConnectorState.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_abea409fdec279d9543cbf49a56a30390"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#abea409fdec279d9543cbf49a56a30390">Deveel.Data.Protocol.NetworkClientConnector.CurrentState</a></div><div class="ttdeci">ConnectorState CurrentState</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00097">NetworkClientConnector.cs:97</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a6f9a3e1611f3a8369be61ce13dd99d18"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">Deveel.Data.Protocol.NetworkClientConnector.envelopes</a></div><div class="ttdeci">List&lt; IMessageEnvelope &gt; envelopes</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00034">NetworkClientConnector.cs:34</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a85e3b709cdd2e133e5f68dfcb6d782e2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a85e3b709cdd2e133e5f68dfcb6d782e2">Deveel.Data.Protocol.NetworkClientConnector.OnTriggerNotification</a></div><div class="ttdeci">virtual void OnTriggerNotification(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00386">NetworkClientConnector.cs:386</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab55df0f3d3a4a1b2ccc00362965fcbba"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Protocol.NetworkClientConnector.Dispose </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00052">52</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                              {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ab55df0f3d3a4a1b2ccc00362965fcbba">Dispose</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                <span class="comment">// we ignore any exception at this point</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            } <span class="keywordflow">finally</span> {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d57e380ab0fdfaf5e2fdd61288c6482">ChangeState</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Disposed);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            GC.SuppressFinalize(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Protocol_htm_ab83d7171dd72d60e27ed9e892e1bdafd"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">Deveel.Data.Protocol.ConnectorState</a></div><div class="ttdeci">ConnectorState</div><div class="ttdef"><b>Definition:</b> <a href="ConnectorState_8cs_source.htm#l00020">ConnectorState.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a4d57e380ab0fdfaf5e2fdd61288c6482"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d57e380ab0fdfaf5e2fdd61288c6482">Deveel.Data.Protocol.NetworkClientConnector.ChangeState</a></div><div class="ttdeci">void ChangeState(ConnectorState newState)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00115">NetworkClientConnector.cs:115</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_ab55df0f3d3a4a1b2ccc00362965fcbba"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ab55df0f3d3a4a1b2ccc00362965fcbba">Deveel.Data.Protocol.NetworkClientConnector.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00052">NetworkClientConnector.cs:52</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab1b96ef75e1897c3aa54d30af4e61f98"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Deveel.Data.Protocol.NetworkClientConnector.Dispose </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>disposing</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00064">64</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                                       {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keywordflow">if</span> (disposing) {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7eea80deb9e2aa99eb8ead84d1fd1046">Close</a>();</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                    <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">envelopeReceiver</a> != null) {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                        <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">envelopeReceiver</a>.Abort();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">envelopeReceiver</a> = null;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                        } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                            <span class="keywordflow">throw</span>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                        }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                    }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">InputStream</a> != null)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">InputStream</a>.Dispose();</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">OutputStream</a> != null)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">OutputStream</a>.Dispose();</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">OutputStream</a> = null;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">InputStream</a> = null;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d57e380ab0fdfaf5e2fdd61288c6482">ChangeState</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Disposed);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a1c89ea711238208ab2d31d04ff8566a5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">Deveel.Data.Protocol.NetworkClientConnector.OutputStream</a></div><div class="ttdeci">Stream OutputStream</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00095">NetworkClientConnector.cs:95</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Protocol_htm_ab83d7171dd72d60e27ed9e892e1bdafd"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">Deveel.Data.Protocol.ConnectorState</a></div><div class="ttdeci">ConnectorState</div><div class="ttdef"><b>Definition:</b> <a href="ConnectorState_8cs_source.htm#l00020">ConnectorState.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a4d57e380ab0fdfaf5e2fdd61288c6482"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d57e380ab0fdfaf5e2fdd61288c6482">Deveel.Data.Protocol.NetworkClientConnector.ChangeState</a></div><div class="ttdeci">void ChangeState(ConnectorState newState)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00115">NetworkClientConnector.cs:115</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a79781c54de4e1d48ab86eaa8c3ecc625"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">Deveel.Data.Protocol.NetworkClientConnector.InputStream</a></div><div class="ttdeci">Stream InputStream</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00093">NetworkClientConnector.cs:93</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a7a68a80eab1fe15f3507f064fbef343a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">Deveel.Data.Protocol.NetworkClientConnector.envelopeReceiver</a></div><div class="ttdeci">Thread envelopeReceiver</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00033">NetworkClientConnector.cs:33</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a7eea80deb9e2aa99eb8ead84d1fd1046"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7eea80deb9e2aa99eb8ead84d1fd1046">Deveel.Data.Protocol.NetworkClientConnector.Close</a></div><div class="ttdeci">void Close()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00139">NetworkClientConnector.cs:139</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4d961d9411a0d0a1c7c363f55f0117cf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int Deveel.Data.Protocol.NetworkClientConnector.ExtractDispatchId </td>
          <td>(</td>
          <td class="paramtype">IDictionary&lt; string, object &gt;&#160;</td>
          <td class="paramname"><em>metadata</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00276">276</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                                                                                   {</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            <span class="keywordflow">if</span> (metadata == null || metadata.Count == 0)</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            <span class="keywordtype">object</span> id;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <span class="keywordflow">if</span> (!metadata.TryGetValue(NetworkEnvelopeMetadataKeys.DispatchId, out <span class="keywordtype">id</span>))</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            <span class="keywordflow">return</span> (<span class="keywordtype">int</span>) id;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a36db8ea6a2909473618bea95cf7f0c4a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">abstract <a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a> Deveel.Data.Protocol.NetworkClientConnector.MakeEndPoint </td>
          <td>(</td>
          <td class="paramtype">IDictionary&lt; string, object &gt;&#160;</td>
          <td class="paramname"><em>properties</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IClientConnector.htm#ac998453c7da25b436db5257b2886c28e">Deveel.Data.Protocol.IClientConnector</a>.</p>

<p>Implemented in <a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1TcpClientConnector.htm#aa625d9514815b8030c9f0fa94d29541e">Deveel.Data.Protocol.TcpClientConnector</a>.</p>

</div>
</div>
<a class="anchor" id="a9e0aa476c97329ffc6a1dfd69fe65442"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Deveel.Data.Protocol.NetworkClientConnector.OnAuthenticated </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>username</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>timeStamp</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00159">159</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                                                                                {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="comment">// TODO: make something with username and timeStamp?</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d57e380ab0fdfaf5e2fdd61288c6482">ChangeState</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Authenticated);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Protocol_htm_ab83d7171dd72d60e27ed9e892e1bdafd"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">Deveel.Data.Protocol.ConnectorState</a></div><div class="ttdeci">ConnectorState</div><div class="ttdef"><b>Definition:</b> <a href="ConnectorState_8cs_source.htm#l00020">ConnectorState.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a4d57e380ab0fdfaf5e2fdd61288c6482"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d57e380ab0fdfaf5e2fdd61288c6482">Deveel.Data.Protocol.NetworkClientConnector.ChangeState</a></div><div class="ttdeci">void ChangeState(ConnectorState newState)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00115">NetworkClientConnector.cs:115</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af82d67b7fc818f506adf7bd2fafc0d48"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Deveel.Data.Protocol.NetworkClientConnector.OnConnectorOpen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00165">165</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                                                 {</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a9bd21c5c4caa2199389c859fd903bbd7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> Deveel.Data.Protocol.NetworkClientConnector.OnProcessServerResponse </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a>&#160;</td>
          <td class="paramname"><em>envelope</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00181">181</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                                                                                      {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="keywordflow">if</span> (envelope == null)</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="keywordflow">if</span> (envelope.Error != null)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbException.htm">DeveelDbException</a>(envelope.Error.ErrorMessage, envelope.Error.ErrorClass, envelope.Error.ErrorCode);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keywordflow">return</span> envelope.Message;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbException_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbException.htm">Deveel.Data.Client.DeveelDbException</a></div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbException_8cs_source.htm#l00022">DeveelDbException.cs:22</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a85e3b709cdd2e133e5f68dfcb6d782e2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Deveel.Data.Protocol.NetworkClientConnector.OnTriggerNotification </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a>&#160;</td>
          <td class="paramname"><em>envelope</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00386">386</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                                                                                {</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#af01ff6bab219705774615245b6435ad7">triggerChannels</a> == null)</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            lock (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#af01ff6bab219705774615245b6435ad7">triggerChannels</a>) {</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                <span class="keywordflow">foreach</span> (var channel <span class="keywordflow">in</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#af01ff6bab219705774615245b6435ad7">triggerChannels</a>) {</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                }</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            }</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_af01ff6bab219705774615245b6435ad7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#af01ff6bab219705774615245b6435ad7">Deveel.Data.Protocol.NetworkClientConnector.triggerChannels</a></div><div class="ttdeci">List&lt; NetworkTriggerChannel &gt; triggerChannels</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00349">NetworkClientConnector.cs:349</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a9ec0304594c2f3b4cd0eb9c770abdb0c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Protocol.NetworkClientConnector.OpenConnector </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a>&#160;</td>
          <td class="paramname"><em>remoteEndPoint</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00120">120</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                                                                        {</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a323a6b5ad63ed14bdfc26b259f77dc87">RemoteEndPoint</a> = remoteEndPoint;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                var readStream = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4e183253c502c8c08d6ae46789d3617f">CreateNetworkStream</a>(remoteEndPoint, FileAccess.Read);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                var writeStream = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4e183253c502c8c08d6ae46789d3617f">CreateNetworkStream</a>(remoteEndPoint, FileAccess.Write);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">InputStream</a> = <span class="keyword">new</span> BufferedStream(readStream, 1024*3);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">OutputStream</a> = <span class="keyword">new</span> BufferedStream(writeStream, 1024*3);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#af82d67b7fc818f506adf7bd2fafc0d48">OnConnectorOpen</a>();</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d57e380ab0fdfaf5e2fdd61288c6482">ChangeState</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Open);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">envelopeReceiver</a>.Start();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            } <span class="keywordflow">catch</span> (Exception ex) {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                <span class="comment">//TODO: log somehwere ...</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <span class="keywordflow">throw</span>;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_af82d67b7fc818f506adf7bd2fafc0d48"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#af82d67b7fc818f506adf7bd2fafc0d48">Deveel.Data.Protocol.NetworkClientConnector.OnConnectorOpen</a></div><div class="ttdeci">virtual void OnConnectorOpen()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00165">NetworkClientConnector.cs:165</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a1c89ea711238208ab2d31d04ff8566a5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">Deveel.Data.Protocol.NetworkClientConnector.OutputStream</a></div><div class="ttdeci">Stream OutputStream</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00095">NetworkClientConnector.cs:95</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Protocol_htm_ab83d7171dd72d60e27ed9e892e1bdafd"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">Deveel.Data.Protocol.ConnectorState</a></div><div class="ttdeci">ConnectorState</div><div class="ttdef"><b>Definition:</b> <a href="ConnectorState_8cs_source.htm#l00020">ConnectorState.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a4d57e380ab0fdfaf5e2fdd61288c6482"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d57e380ab0fdfaf5e2fdd61288c6482">Deveel.Data.Protocol.NetworkClientConnector.ChangeState</a></div><div class="ttdeci">void ChangeState(ConnectorState newState)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00115">NetworkClientConnector.cs:115</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a79781c54de4e1d48ab86eaa8c3ecc625"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">Deveel.Data.Protocol.NetworkClientConnector.InputStream</a></div><div class="ttdeci">Stream InputStream</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00093">NetworkClientConnector.cs:93</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a7a68a80eab1fe15f3507f064fbef343a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">Deveel.Data.Protocol.NetworkClientConnector.envelopeReceiver</a></div><div class="ttdeci">Thread envelopeReceiver</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00033">NetworkClientConnector.cs:33</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a323a6b5ad63ed14bdfc26b259f77dc87"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a323a6b5ad63ed14bdfc26b259f77dc87">Deveel.Data.Protocol.NetworkClientConnector.RemoteEndPoint</a></div><div class="ttdeci">ConnectionEndPoint RemoteEndPoint</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00101">NetworkClientConnector.cs:101</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a4e183253c502c8c08d6ae46789d3617f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4e183253c502c8c08d6ae46789d3617f">Deveel.Data.Protocol.NetworkClientConnector.CreateNetworkStream</a></div><div class="ttdeci">abstract NetworkStream CreateNetworkStream(ConnectionEndPoint remoteEndPoint, FileAccess access)</div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aede3febc63f3914e61a6c20ef0e2aa6c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> Deveel.Data.Protocol.NetworkClientConnector.ReceiveEnvelope </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>timeout</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00260">260</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                                                              {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            lock (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a80850c85ca1b63c1897e92abab59e019">channelLock</a>) {</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                <span class="keyword">using</span> (var input = <span class="keyword">new</span> BinaryReader(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">InputStream</a>)) {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                    <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                        <span class="keywordtype">int</span> commandLength = input.ReadInt32();</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                        var buf = <span class="keyword">new</span> byte[commandLength];</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                        input.Read(buf, 0, commandLength);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                        <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#aa8d92abc9b081c113781d0aaddd21924">DeserializeEnvelope</a>(buf);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                    } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                        <span class="comment">//TODO: log ...</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                        <span class="keywordflow">throw</span>;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                    }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                }</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            }</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_aa8d92abc9b081c113781d0aaddd21924"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#aa8d92abc9b081c113781d0aaddd21924">Deveel.Data.Protocol.NetworkClientConnector.DeserializeEnvelope</a></div><div class="ttdeci">virtual IMessageEnvelope DeserializeEnvelope(byte[] bytes)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00253">NetworkClientConnector.cs:253</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a79781c54de4e1d48ab86eaa8c3ecc625"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">Deveel.Data.Protocol.NetworkClientConnector.InputStream</a></div><div class="ttdeci">Stream InputStream</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00093">NetworkClientConnector.cs:93</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a80850c85ca1b63c1897e92abab59e019"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a80850c85ca1b63c1897e92abab59e019">Deveel.Data.Protocol.NetworkClientConnector.channelLock</a></div><div class="ttdeci">readonly object channelLock</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00031">NetworkClientConnector.cs:31</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1a35100218ee2e8e2e817ae210057f6d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Protocol.NetworkClientConnector.ReceiveEnvelopes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00328">328</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                                        {</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                <span class="keywordflow">while</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#abea409fdec279d9543cbf49a56a30390">CurrentState</a> != <a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Closed) {</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                    var envelope = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#aede3febc63f3914e61a6c20ef0e2aa6c">ReceiveEnvelope</a>(0);</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                    lock (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a>) {</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                        <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a>.Add(envelope);</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                        Monitor.PulseAll(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a>);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                    }</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                }</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            } <span class="keywordflow">finally</span> {</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                <span class="comment">// Invalidate this object when the thread finishes.</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                <span class="keywordtype">object</span> oldEnvelopes = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a>;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                lock (oldEnvelopes) {</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a> = null;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                    Monitor.PulseAll(oldEnvelopes);</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                }</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            }</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Protocol_htm_ab83d7171dd72d60e27ed9e892e1bdafd"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">Deveel.Data.Protocol.ConnectorState</a></div><div class="ttdeci">ConnectorState</div><div class="ttdef"><b>Definition:</b> <a href="ConnectorState_8cs_source.htm#l00020">ConnectorState.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_aede3febc63f3914e61a6c20ef0e2aa6c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#aede3febc63f3914e61a6c20ef0e2aa6c">Deveel.Data.Protocol.NetworkClientConnector.ReceiveEnvelope</a></div><div class="ttdeci">IMessageEnvelope ReceiveEnvelope(int timeout)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00260">NetworkClientConnector.cs:260</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_abea409fdec279d9543cbf49a56a30390"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#abea409fdec279d9543cbf49a56a30390">Deveel.Data.Protocol.NetworkClientConnector.CurrentState</a></div><div class="ttdeci">ConnectorState CurrentState</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00097">NetworkClientConnector.cs:97</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a6f9a3e1611f3a8369be61ce13dd99d18"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">Deveel.Data.Protocol.NetworkClientConnector.envelopes</a></div><div class="ttdeci">List&lt; IMessageEnvelope &gt; envelopes</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00034">NetworkClientConnector.cs:34</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a57302c7fe968f770d53380f8f979f4db"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> Deveel.Data.Protocol.NetworkClientConnector.ReceiveResponse </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>timeout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDictionary&lt; string, object &gt;&#160;</td>
          <td class="paramname"><em>senderMetadata</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00293">293</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                                                                                                          {</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a8cf10d2341ed01492506085688270c1e">DateTime</a> timeIn = <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a8cf10d2341ed01492506085688270c1e">DateTime</a>.Now;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a8cf10d2341ed01492506085688270c1e">DateTime</a> timeOutHigh = timeIn + <span class="keyword">new</span> TimeSpan(((<span class="keywordtype">long</span>) timeout*1000)*TimeSpan.TicksPerMillisecond);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            lock (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a>) {</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a> == null)</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> DataException(<span class="stringliteral">&quot;Connection to server closed&quot;</span>);</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                <span class="keywordflow">while</span> (<span class="keyword">true</span>) {</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a>.Count; ++i) {</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                        var envelope = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a>[i];</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                        <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ac179eacbb4e3b96202a1301b51f5af98">ShouldReceive</a>(senderMetadata, envelope)) {</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a>.RemoveAt(i);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                            <span class="keywordflow">return</span> envelope;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                        }</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                    }</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                    <span class="comment">// Return null if we haven&#39;t received a response input the timeout</span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                    <span class="comment">// period.</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                    <span class="keywordflow">if</span> (timeout != 0 &amp;&amp;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                        <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a8cf10d2341ed01492506085688270c1e">DateTime</a>.Now &gt; timeOutHigh) {</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                        <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                    }</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                    <span class="comment">// Wait a second.</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                    <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                        Monitor.Wait(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a>, 1000);</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                    } <span class="keywordflow">catch</span> (ThreadInterruptedException) {</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                        <span class="comment">/* ignore */</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                    }</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                } <span class="comment">// while (true)</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            }</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_ac179eacbb4e3b96202a1301b51f5af98"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ac179eacbb4e3b96202a1301b51f5af98">Deveel.Data.Protocol.NetworkClientConnector.ShouldReceive</a></div><div class="ttdeci">virtual bool ShouldReceive(IDictionary&lt; string, object &gt; senderMetadata, IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00287">NetworkClientConnector.cs:287</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a8cf10d2341ed01492506085688270c1e"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a8cf10d2341ed01492506085688270c1e">Deveel.Data.Types.SqlTypeCode.DateTime</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a6f9a3e1611f3a8369be61ce13dd99d18"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">Deveel.Data.Protocol.NetworkClientConnector.envelopes</a></div><div class="ttdeci">List&lt; IMessageEnvelope &gt; envelopes</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00034">NetworkClientConnector.cs:34</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="afaade34adc7b8325729958932682066b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ICryptoTransform Deveel.Data.Protocol.NetworkClientConnector.SelectHashAlgorithm </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>iv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">FileAccess&#160;</td>
          <td class="paramname"><em>access</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00198">198</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                                                                                            {</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(name, EncryptionAlgorithms.HmacMd5, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> HMACMD5(key);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(name, EncryptionAlgorithms.HmacSha256, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> HMACSHA256(key);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(name, EncryptionAlgorithms.HmacSha512, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> HMACSHA512(key);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(name, EncryptionAlgorithms.Des, StringComparison.OrdinalIgnoreCase)) {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                var des = <span class="keyword">new</span> DESCryptoServiceProvider();</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                <span class="keywordflow">if</span> (access == FileAccess.Read)</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                    <span class="keywordflow">return</span> des.CreateDecryptor(key, iv);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <span class="keywordflow">if</span> (access == FileAccess.Write)</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                    <span class="keywordflow">return</span> des.CreateEncryptor(key, iv);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(name, EncryptionAlgorithms.TripleDes, StringComparison.OrdinalIgnoreCase)) {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                var des = <span class="keyword">new</span> TripleDESCryptoServiceProvider();</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <span class="keywordflow">if</span> (access == FileAccess.Read)</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                    <span class="keywordflow">return</span> des.CreateDecryptor(key, iv);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                <span class="keywordflow">if</span> (access == FileAccess.Write)</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                    <span class="keywordflow">return</span> des.CreateEncryptor(key, iv);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a676093070fd4b3bbcc49230cd131ec76"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Protocol.NetworkClientConnector.SendEnvelope </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a>&#160;</td>
          <td class="paramname"><em>envelope</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00245">245</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                                                               {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            lock (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a80850c85ca1b63c1897e92abab59e019">channelLock</a>) {</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                var bytes = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79bd8e145281a6fa8b663cdb283cdbcf">SerializeEnvelope</a>(envelope);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">OutputStream</a>.Write(bytes, 0, bytes.Length);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">OutputStream</a>.Flush();</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            }</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a79bd8e145281a6fa8b663cdb283cdbcf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79bd8e145281a6fa8b663cdb283cdbcf">Deveel.Data.Protocol.NetworkClientConnector.SerializeEnvelope</a></div><div class="ttdeci">virtual byte[] SerializeEnvelope(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00236">NetworkClientConnector.cs:236</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a1c89ea711238208ab2d31d04ff8566a5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">Deveel.Data.Protocol.NetworkClientConnector.OutputStream</a></div><div class="ttdeci">Stream OutputStream</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00095">NetworkClientConnector.cs:95</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a80850c85ca1b63c1897e92abab59e019"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a80850c85ca1b63c1897e92abab59e019">Deveel.Data.Protocol.NetworkClientConnector.channelLock</a></div><div class="ttdeci">readonly object channelLock</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00031">NetworkClientConnector.cs:31</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a79bd8e145281a6fa8b663cdb283cdbcf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual byte [] Deveel.Data.Protocol.NetworkClientConnector.SerializeEnvelope </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a>&#160;</td>
          <td class="paramname"><em>envelope</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00236">236</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                                                                              {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            <span class="keyword">using</span> (var stream = <span class="keyword">new</span> MemoryStream()) {</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                var formatter = <span class="keyword">new</span> BinaryFormatter();</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                formatter.Serialize(stream, envelope);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                stream.Flush();</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                <span class="keywordflow">return</span> stream.ToArray();</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            }</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4ba8c0206e15de12e79a2b6d20244ace"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Protocol.NetworkClientConnector.SetEncrypton </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionData.htm">EncryptionData</a>&#160;</td>
          <td class="paramname"><em>encryptionData</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IClientConnector.htm#a77b80020256cd7ddc58143b7185d4416">Deveel.Data.Protocol.IClientConnector</a>.</p>

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00224">224</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                                                                {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            lock (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a80850c85ca1b63c1897e92abab59e019">channelLock</a>) {</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                var key = Encoding.Unicode.GetBytes(encryptionData.Key);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                var iv = Encoding.Unicode.GetBytes(encryptionData.IV);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                var readHash = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#afaade34adc7b8325729958932682066b">SelectHashAlgorithm</a>(encryptionData.HashAlgorithm, key, iv, FileAccess.Read);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                var writeHash = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#afaade34adc7b8325729958932682066b">SelectHashAlgorithm</a>(encryptionData.HashAlgorithm, key, iv, FileAccess.Write);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">InputStream</a> = <span class="keyword">new</span> CryptoStream(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">InputStream</a>, readHash, CryptoStreamMode.Read);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">OutputStream</a> = <span class="keyword">new</span> CryptoStream(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">OutputStream</a>, writeHash, CryptoStreamMode.Write);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a1c89ea711238208ab2d31d04ff8566a5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">Deveel.Data.Protocol.NetworkClientConnector.OutputStream</a></div><div class="ttdeci">Stream OutputStream</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00095">NetworkClientConnector.cs:95</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a79781c54de4e1d48ab86eaa8c3ecc625"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">Deveel.Data.Protocol.NetworkClientConnector.InputStream</a></div><div class="ttdeci">Stream InputStream</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00093">NetworkClientConnector.cs:93</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_afaade34adc7b8325729958932682066b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#afaade34adc7b8325729958932682066b">Deveel.Data.Protocol.NetworkClientConnector.SelectHashAlgorithm</a></div><div class="ttdeci">ICryptoTransform SelectHashAlgorithm(string name, byte[] key, byte[] iv, FileAccess access)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00198">NetworkClientConnector.cs:198</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a80850c85ca1b63c1897e92abab59e019"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a80850c85ca1b63c1897e92abab59e019">Deveel.Data.Protocol.NetworkClientConnector.channelLock</a></div><div class="ttdeci">readonly object channelLock</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00031">NetworkClientConnector.cs:31</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac179eacbb4e3b96202a1301b51f5af98"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Deveel.Data.Protocol.NetworkClientConnector.ShouldReceive </td>
          <td>(</td>
          <td class="paramtype">IDictionary&lt; string, object &gt;&#160;</td>
          <td class="paramname"><em>senderMetadata</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a>&#160;</td>
          <td class="paramname"><em>envelope</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00287">287</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                                                                                                                    {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            var senderId = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d961d9411a0d0a1c7c363f55f0117cf">ExtractDispatchId</a>(senderMetadata);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            var envelopeId = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d961d9411a0d0a1c7c363f55f0117cf">ExtractDispatchId</a>(envelope.Metadata);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <span class="keywordflow">return</span> senderId == envelopeId;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a4d961d9411a0d0a1c7c363f55f0117cf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d961d9411a0d0a1c7c363f55f0117cf">Deveel.Data.Protocol.NetworkClientConnector.ExtractDispatchId</a></div><div class="ttdeci">static int ExtractDispatchId(IDictionary&lt; string, object &gt; metadata)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00276">NetworkClientConnector.cs:276</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a80850c85ca1b63c1897e92abab59e019"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly object Deveel.Data.Protocol.NetworkClientConnector.channelLock = new object()</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00031">31</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a7a68a80eab1fe15f3507f064fbef343a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Thread Deveel.Data.Protocol.NetworkClientConnector.envelopeReceiver</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00033">33</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a6f9a3e1611f3a8369be61ce13dd99d18"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">List&lt;<a class="el" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a>&gt; Deveel.Data.Protocol.NetworkClientConnector.envelopes</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00034">34</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>

</div>
</div>
<a class="anchor" id="af01ff6bab219705774615245b6435ad7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">List&lt;<a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm">NetworkTriggerChannel</a>&gt; Deveel.Data.Protocol.NetworkClientConnector.triggerChannels</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00349">349</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>

</div>
</div>
<h2 class="groupheader">Property Documentation</h2>
<a class="anchor" id="abea409fdec279d9543cbf49a56a30390"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a> Deveel.Data.Protocol.NetworkClientConnector.CurrentState</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00097">97</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a79781c54de4e1d48ab86eaa8c3ecc625"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Stream Deveel.Data.Protocol.NetworkClientConnector.InputStream</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">set</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00093">93</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a36753f5ae05ed94bf981edd710e15eb0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">abstract <a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a> Deveel.Data.Protocol.NetworkClientConnector.LocalEndPoint</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00099">99</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a1c89ea711238208ab2d31d04ff8566a5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Stream Deveel.Data.Protocol.NetworkClientConnector.OutputStream</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">set</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00095">95</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a323a6b5ad63ed14bdfc26b259f77dc87"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a> Deveel.Data.Protocol.NetworkClientConnector.RemoteEndPoint</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00101">101</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a4d50056759323133064f3ded071b0783"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Deveel.Data.Protocol.NetworkClientConnector.Timeout</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">set</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="NetworkClientConnector_8cs_source.htm#l00050">50</a> of file <a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Protocol/<a class="el" href="NetworkClientConnector_8cs_source.htm">NetworkClientConnector.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
