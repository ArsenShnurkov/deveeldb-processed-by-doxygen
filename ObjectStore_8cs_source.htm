<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Store/ObjectStore.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_0766e9ed020ad325b7865972be4cac40.htm">Deveel.Data.Store</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ObjectStore.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ObjectStore_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.IO;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#if !PCL</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.IO.Compression;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Store {</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm">   24</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm">ObjectStore</a> : <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IObjectStore.htm">IObjectStore</a> {</div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#acca652dbf188a87527f1fdb5f6d6f643">   25</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">int</span> Magic = 0x012BC53A9;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a51298cda4e6d8de2b32105932eaba433">   27</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">int</span> DeletedFlag = 0x020000;</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a8d814f40881a5fd82ffc45fd82da5ced">   28</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">int</span> CompressedFlag = 0x010;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#ac4a7b1d4a4e5f5d573600ac9a576c94e">   30</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">int</span> PageSize = 64;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#acee55d0550295ed008306bccb54b7244">   32</a></span>&#160;        <span class="keyword">private</span> readonly <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm">IStore</a> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#acee55d0550295ed008306bccb54b7244">store</a>;</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a375c8fa3a446835a81abb2fb14924b47">   33</a></span>&#160;        <span class="keyword">private</span> readonly <a class="code" href="classDeveel_1_1Data_1_1Store_1_1FixedRecordList.htm">FixedRecordList</a> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a375c8fa3a446835a81abb2fb14924b47">fixedList</a>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#addd52da30b0fd229e64aba73a22e3b81">   35</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#addd52da30b0fd229e64aba73a22e3b81">firstDeleteChainRecord</a>;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#aa6f2c525c1f2c50a945668a7efd83b4f">   37</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#aa6f2c525c1f2c50a945668a7efd83b4f">ObjectStore</a>(<span class="keywordtype">int</span> <span class="keywordtype">id</span>, <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm">IStore</a> store) {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            <span class="keywordflow">if</span> (<span class="keywordtype">id</span> &lt; 0)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="stringliteral">&quot;id&quot;</span>);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <span class="keywordflow">if</span> (store == null)</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;store&quot;</span>);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            Id = id;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            this.store = store;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            fixedList = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1FixedRecordList.htm">FixedRecordList</a>(store, 30);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a5fa08894fe313e990f3d2885dfff13fb">   48</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a5fa08894fe313e990f3d2885dfff13fb">AddToRecordList</a>(<span class="keywordtype">long</span> recordOffset) {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            lock (fixedList) {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                <span class="comment">// If there is no free deleted records in the delete chain,</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                <span class="keywordflow">if</span> (firstDeleteChainRecord == -1) {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                    <span class="comment">// Increase the size of the list structure.</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                    fixedList.IncreaseSize();</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                    <span class="comment">// The start record of the new size</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                    <span class="keywordtype">int</span> newBlockNumber = fixedList.BlockCount - 1;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                    <span class="keywordtype">long</span> startIndex = fixedList.BlockFirstPosition(newBlockNumber);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                    <span class="keywordtype">long</span> sizeOfBlock = fixedList.BlockNodeCount(newBlockNumber);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                    <span class="comment">// The IArea object for the new position</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                    <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> a = fixedList.GetRecord(startIndex);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                    a.WriteInt4(0);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                    a.WriteInt4(0);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                    a.WriteInt8(-1);  <span class="comment">// Initially unknown size</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                    a.WriteInt8(0);   <span class="comment">// Initially unknown current size</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                    a.WriteInt8(recordOffset);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                    <span class="comment">// Set the rest of the block as deleted records</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">long</span> n = 1; n &lt; sizeOfBlock - 1; ++n) {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                        a.WriteInt4(DeletedFlag);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                        a.WriteInt4(0);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                        a.WriteInt8(-1);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                        a.WriteInt8(startIndex + n + 1);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                    }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                    <span class="comment">// The last block is end of delete chain.</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    a.WriteInt4(DeletedFlag);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                    a.WriteInt4(0);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                    a.WriteInt8(-1);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                    a.WriteInt8(-1);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                    <span class="comment">// Check out the changes.</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                    a.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#af6f36e4f1b30b4f9701785d079af0e96">Flush</a>();</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    <span class="comment">// And set the new delete chain</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                    firstDeleteChainRecord = startIndex + 1;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                    fixedList.WriteDeleteHead(firstDeleteChainRecord);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                    <span class="comment">// Return pointer to the record we just added.</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                    <span class="keywordflow">return</span> startIndex;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                <span class="comment">// Pull free block from the delete chain and recycle it.</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                <span class="keywordtype">long</span> recycledRecord = firstDeleteChainRecord;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> block = fixedList.GetRecord(recycledRecord);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                var recordPos = block.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                <span class="comment">// Status of the recycled block</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                <span class="keywordtype">int</span> status = block.ReadInt4();</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                <span class="keywordflow">if</span> ((status &amp; DeletedFlag) == 0)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Assertion failed: record is not deleted!&quot;</span>);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                <span class="comment">// Reference count (currently unused in delete chains).</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                block.ReadInt4();</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                <span class="comment">// The size (should be -1);</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                block.ReadInt8();</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <span class="comment">// The current size should be 0</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                block.ReadInt8();</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <span class="comment">// The pointer to the next in the chain.</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                <span class="keywordtype">long</span> nextChain = block.ReadInt8();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                firstDeleteChainRecord = nextChain;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                <span class="comment">// Update the first_delete_chain_record field in the header</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                fixedList.WriteDeleteHead(firstDeleteChainRecord);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                <span class="comment">// Update the block</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                block.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a> = recordPos;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                block.WriteInt4(0);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                block.WriteInt4(0);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                block.WriteInt8(-1);    <span class="comment">// Initially unknown size</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                block.WriteInt8(0);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                block.WriteInt8(recordOffset);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                <span class="comment">// Check out the changes</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                block.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#af6f36e4f1b30b4f9701785d079af0e96">Flush</a>();</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                <span class="keywordflow">return</span> recycledRecord;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a329c443dee6220f46a5fc1047a37941e">  128</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a329c443dee6220f46a5fc1047a37941e">Create</a>() {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="comment">// Init the fixed record list area.</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="comment">// The fixed list entries are formatted as follows;</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="comment">//  ( status (int), reference_count (int),</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="comment">//    blob_size (long), blob_pointer (long) )</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="keywordtype">long</span> fixedListOffset = fixedList.Create();</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="comment">// Delete chain is empty when we start</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            firstDeleteChainRecord = -1;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            fixedList.WriteDeleteHead(-1);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="comment">// Allocate a small header that contains the MAGIC, and the pointer to the</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="comment">// fixed list structure.</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> blobStoreHeader = store.CreateArea(32);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <span class="keywordtype">long</span> blobStoreId = blobStoreHeader.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a76ca6f78f4cdec5b070871c02cebdcc3">Id</a>;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            blobStoreHeader.WriteInt4(Magic);   <span class="comment">// Magic</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            blobStoreHeader.WriteInt4(1);       <span class="comment">// The data version</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            blobStoreHeader.WriteInt8(fixedListOffset);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            blobStoreHeader.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#af6f36e4f1b30b4f9701785d079af0e96">Flush</a>();</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="comment">// Return the pointer to the blob store header</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordflow">return</span> blobStoreId;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#aa8a4fab6f8c0ce1fc93ee0cc901b412a">  153</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#aa8a4fab6f8c0ce1fc93ee0cc901b412a">Open</a>(<span class="keywordtype">long</span> offset) {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <span class="comment">// Get the header area</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> headerArea = store.GetArea(offset);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            headerArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a> = 0;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="comment">// Read the magic</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordtype">int</span> magic = headerArea.ReadInt4();</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keywordtype">int</span> version = headerArea.ReadInt4();</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keywordflow">if</span> (magic != Magic)</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;The magic value for this Object Store is not correct.&quot;</span>);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">if</span> (version != 1)</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;The version number for this Object Store is not correct.&quot;</span>);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keywordtype">long</span> fixedListOffset = headerArea.ReadInt8();</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            fixedList.Open(fixedListOffset);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="comment">// Set the delete chain</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            firstDeleteChainRecord = fixedList.ReadDeleteHead();</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a48b540d0f37c2d19f281a2634a16459d">  173</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a48b540d0f37c2d19f281a2634a16459d">Dispose</a>() {</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a38f2fdf1f381037bbb08e0eecd57e54a">  176</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> Id { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#ae29713da77a82fad1269ecb0ff2b4a29">  178</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1ILargeObject.htm">ILargeObject</a> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#ae29713da77a82fad1269ecb0ff2b4a29">CreateNewObject</a>(<span class="keywordtype">long</span> maxSize, <span class="keywordtype">bool</span> compressed) {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="keywordflow">if</span> (maxSize &lt; 0)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;Negative object size not allowed.&quot;</span>);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                store.Lock();</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                <span class="comment">// Allocate the area (plus header area) for storing the blob pages</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                <span class="keywordtype">long</span> pageCount = ((maxSize - 1) / (PageSize * 1024)) + 1;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> objArea = store.CreateArea((pageCount * 8) + 32);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                <span class="keywordtype">long</span> objAreaId = objArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a76ca6f78f4cdec5b070871c02cebdcc3">Id</a>;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                var type = 2;           <span class="comment">// Binary Type</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                <span class="keywordflow">if</span> (compressed)</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                    type |= CompressedFlag;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                <span class="comment">// Set up the area header</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                objArea.WriteInt4(0);           <span class="comment">// Reserved for future</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                objArea.WriteInt4(type);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                objArea.WriteInt8(maxSize);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                objArea.WriteInt8(0);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                objArea.WriteInt8(pageCount);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                <span class="comment">// Initialize the empty blob area</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">long</span> i = 0; i &lt; pageCount; ++i) {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                    objArea.WriteInt8(-1);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                }</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                <span class="comment">// And finish</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                objArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#af6f36e4f1b30b4f9701785d079af0e96">Flush</a>();</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                <span class="comment">// Update the fixed_list and return the record number for this blob</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <span class="keywordtype">long</span> refId = AddToRecordList(objAreaId);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm">LargeObject</a>(<span class="keyword">this</span>, refId, maxSize, 0, compressed, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            } <span class="keywordflow">finally</span> {</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                store.Unlock();</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div>
<div class="line"><a name="l00217"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm">  217</a></span>&#160;        <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm">LargeObject</a> : <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1ILargeObject.htm">ILargeObject</a> {</div>
<div class="line"><a name="l00218"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#ad32fb4ebb152c894c9314e22af39f80b">  218</a></span>&#160;            <span class="keyword">private</span> readonly <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm">ObjectStore</a> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#ad32fb4ebb152c894c9314e22af39f80b">store</a>;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div>
<div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a4fd13930fccad159673d7ef7f6cc0f90">  220</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a4fd13930fccad159673d7ef7f6cc0f90">LargeObject</a>(<a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm">ObjectStore</a> store, <span class="keywordtype">long</span> refId, <span class="keywordtype">long</span> size, <span class="keywordtype">long</span> currentSize, <span class="keywordtype">bool</span> compressed, <span class="keywordtype">bool</span> isComplete) {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                this.store = store;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                RawSize = size;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                CurrentSize = currentSize;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                Id = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Store_1_1ObjectId.htm">ObjectId</a>(store.<a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a38f2fdf1f381037bbb08e0eecd57e54a">Id</a>, refId);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                IsCompressed = compressed;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                IsComplete = isComplete;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            }</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div>
<div class="line"><a name="l00229"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#af6b75d1048aaf6e78e263281b7888cb7">  229</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#af6b75d1048aaf6e78e263281b7888cb7">Dispose</a>() {</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            }</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a86b026e654301577a76df511ad0d5ddc">  232</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Store_1_1ObjectId.htm">ObjectId</a> Id { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div>
<div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a8259ad74818119f5548631683399d0b4">  234</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">long</span> RawSize { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div>
<div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a8f7d73149a9ec28dd8437718bb79eba1">  236</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">long</span> CurrentSize { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div>
<div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#adbe9f5717f70fa748bc539b710bc927a">  238</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">bool</span> IsCompressed { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a8a028d2a069a36e008db024d35671b0b">  240</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">bool</span> IsComplete { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#aa956da3f729b9acbb7e3e389c51e97a1">  242</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#aa956da3f729b9acbb7e3e389c51e97a1">Read</a>(<span class="keywordtype">long</span> offset, byte[] buffer, <span class="keywordtype">int</span> length) {</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                <span class="keywordflow">return</span> store.ReadObjectPart(Id.Id, offset, buffer, 0, length);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            }</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a0d9d28f4e9841b1c120ffafad5a6979a">  246</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a0d9d28f4e9841b1c120ffafad5a6979a">Write</a>(<span class="keywordtype">long</span> offset, byte[] buffer, <span class="keywordtype">int</span> length) {</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                <span class="keywordflow">if</span> (IsComplete)</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;The object is complete and cannot be written.&quot;</span>);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                CurrentSize += length;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                store.WriteObjectPart(Id.Id, offset, buffer, 0, length);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            }</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div>
<div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a48ded64b396c329501fd58cdff919732">  254</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a48ded64b396c329501fd58cdff919732">Complete</a>() {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                store.CompleteObject(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            }</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div>
<div class="line"><a name="l00258"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a2a79033b15296db13c2c821b0cd26bd4">  258</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a2a79033b15296db13c2c821b0cd26bd4">Establish</a>() {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                store.EstablishReference(Id.Id);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            }</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div>
<div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#ab41b53843cd1ed4f314c1456042902f3">  262</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#ab41b53843cd1ed4f314c1456042902f3">Release</a>() {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                <span class="keywordflow">return</span> store.ReleaseReference(Id.Id);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            }</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#ab4da90691574ea2896468f4a2df15eb8">  266</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#ab4da90691574ea2896468f4a2df15eb8">MarkComplete</a>() {</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                IsComplete = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            }</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        }</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div>
<div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a769a817268b7625791dc5d461843c862">  271</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a769a817268b7625791dc5d461843c862">CompleteObject</a>(<a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm">LargeObject</a> obj) {</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            <span class="comment">// Get the blob reference id (reference to the fixed record list).</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <span class="keywordtype">long</span> refId = obj.<a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a86b026e654301577a76df511ad0d5ddc">Id</a>.<a class="code" href="structDeveel_1_1Data_1_1Store_1_1ObjectId.htm#a03881174755a9b07f93a8494973f1e1c">Id</a>;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            lock (fixedList) {</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                <span class="comment">// Update the record in the fixed list.</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> block = fixedList.GetRecord(refId);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                <span class="comment">// Record the position</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                var recordPos = block.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a>;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                <span class="comment">// Read the information in the fixed record</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                <span class="keywordtype">int</span> status = block.ReadInt4();</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                <span class="comment">// Assert that the status is open</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                <span class="keywordflow">if</span> (status != 0)</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;Assertion failed: record is not open.&quot;</span>);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                <span class="keywordtype">int</span> refCount = block.ReadInt4();</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <span class="keywordtype">long</span> size = block.ReadInt8();</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                <span class="keywordtype">long</span> currentSize = block.ReadInt8();</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                <span class="keywordtype">long</span> pageCount = block.ReadInt8();</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                    store.Lock();</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                    block.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a> = recordPos;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                    block.WriteInt4(1);             <span class="comment">// Status</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                    block.WriteInt4(0);             <span class="comment">// Reference Count</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                    block.WriteInt8(obj.<a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a8f7d73149a9ec28dd8437718bb79eba1">CurrentSize</a>);   <span class="comment">// Final Size</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                    block.WriteInt8(obj.<a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a8f7d73149a9ec28dd8437718bb79eba1">CurrentSize</a>);</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                    block.WriteInt8(pageCount);     <span class="comment">// Page Count</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                    block.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#af6f36e4f1b30b4f9701785d079af0e96">Flush</a>();</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                } <span class="keywordflow">finally</span> {</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                    store.Unlock();</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                }</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            }</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            <span class="comment">// Now the object has been finalized so change the state of the object</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            obj.<a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#ab4da90691574ea2896468f4a2df15eb8">MarkComplete</a>();</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        }</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#af7ee9d9bd7ed015facfb66449a24e30d">  311</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#af7ee9d9bd7ed015facfb66449a24e30d">WriteObjectPart</a>(<span class="keywordtype">long</span> <span class="keywordtype">id</span>, <span class="keywordtype">long</span> objOffset, byte[] buffer, <span class="keywordtype">int</span> off, <span class="keywordtype">int</span> length) {</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            <span class="comment">// ASSERT: Read and Write position must be 64K aligned.</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            <span class="keywordflow">if</span> (objOffset%(PageSize*1024) != 0)</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Assert failed: offset is not 64k aligned.&quot;</span>);</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <span class="comment">// ASSERT: Length is less than or equal to 64K</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <span class="keywordflow">if</span> (length &gt; (PageSize * 1024)) {</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Assert failed: length is greater than 64K.&quot;</span>);</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            }</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            <span class="keywordtype">int</span> refCount;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            <span class="keywordtype">long</span> objPos;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            <span class="keywordtype">long</span> maxSize;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;            <span class="keywordtype">long</span> currentSize;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            lock (fixedList) {</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                <span class="keywordflow">if</span> (id &lt; 0 || id &gt;= fixedList.NodeCount)</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;Object id is out of range.&quot;</span>);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> block = fixedList.GetRecord(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                var status = block.ReadInt4();</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                <span class="keywordflow">if</span> ((status &amp; DeletedFlag) != 0)</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Assertion failed: record is deleted!&quot;</span>);</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                block.ReadInt4();       <span class="comment">// Ref count</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                maxSize = block.ReadInt8();     <span class="comment">// Total Size / Max Size</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                currentSize = block.ReadInt8();     <span class="comment">// Current Size</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                objPos = block.ReadInt8();  <span class="comment">// Last Page Position</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            }</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            <span class="comment">// Open an IArea into the blob</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> area = store.GetArea(objPos);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            area.ReadInt4();</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            var type = area.ReadInt4();</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            var size = area.ReadInt8();</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            <span class="comment">// Assert that the area being Read is within the bounds of the blob</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            <span class="keywordflow">if</span> (objOffset &lt; 0 || objOffset + length &gt; size) {</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;Object invalid write.  offset = &quot;</span> + objOffset + <span class="stringliteral">&quot;, length = &quot;</span> + length + <span class="stringliteral">&quot;, size = &quot;</span> + size);</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            }</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            <span class="comment">// Convert to the page number</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            <span class="keywordtype">long</span> pageNumber = (objOffset / (PageSize * 1024));</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            area.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a> = (int)((pageNumber * 8) + 32);</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;            <span class="keywordtype">long</span> pagePos = area.ReadInt8();</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="keywordflow">if</span> (pagePos != -1) {</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                <span class="comment">// This means we are trying to rewrite a page we&#39;ve already written</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                <span class="comment">// before.</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Assert failed: page position is not -1&quot;</span>);</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            }</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <span class="comment">// Is the compression bit set?</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            byte[] toWrite;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            <span class="keywordtype">int</span> writeLength;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <span class="keywordflow">if</span> ((type &amp; CompressedFlag) != 0) {</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                <span class="comment">// Yes, compression</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="preprocessor">#if !PCL</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                var deflateStream = <span class="keyword">new</span> DeflateStream(<span class="keyword">new</span> MemoryStream(buffer, off, length), CompressionMode.Compress, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                toWrite = <span class="keyword">new</span> byte[PageSize * 1024];</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                writeLength = deflateStream.Read(toWrite, 0, toWrite.Length);</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<span class="stringliteral">&quot;Compression not supported in PCL.&quot;</span>);</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                <span class="comment">// No compression</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                toWrite = buffer;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                writeLength = length;</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            }</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                store.Lock();</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                <span class="comment">// Allocate and Write the page.</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> pageArea = store.CreateArea(writeLength + 8);</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                pagePos = pageArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a76ca6f78f4cdec5b070871c02cebdcc3">Id</a>;</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                pageArea.WriteInt4(1);</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                pageArea.WriteInt4(writeLength);</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                pageArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a9591ccb271edb5ce2714e766d9979069">Write</a>(toWrite, 0, writeLength);</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                <span class="comment">// Finish this page</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                pageArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#af6f36e4f1b30b4f9701785d079af0e96">Flush</a>();</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                <span class="comment">// Update the page in the header.</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                area.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a> = (int)((pageNumber * 8) + 24);</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                area.WriteInt8(currentSize + writeLength);</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                area.WriteInt8(pagePos);</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                <span class="comment">// Check out this change.</span></div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                area.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#af6f36e4f1b30b4f9701785d079af0e96">Flush</a>();</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            } <span class="keywordflow">finally</span> {</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                store.Unlock();</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            }</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        }</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div>
<div class="line"><a name="l00404"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#ae7c5b915de75e4d867f80757a8d61a09">  404</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#ae7c5b915de75e4d867f80757a8d61a09">ReadObjectPart</a>(<span class="keywordtype">long</span> <span class="keywordtype">id</span>, <span class="keywordtype">long</span> objOffset, byte[] buffer, <span class="keywordtype">int</span> off, <span class="keywordtype">int</span> length) {</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            <span class="comment">// ASSERT: Read and Write position must be 64K aligned.</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            <span class="keywordflow">if</span> (off % (64 * 1024) != 0) {</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Assert failed: offset is not 64k aligned.&quot;</span>);</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            }</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            <span class="comment">// ASSERT: Length is less than or equal to 64K</span></div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            <span class="keywordflow">if</span> (length &gt; (64 * 1024)) {</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Assert failed: length is greater than 64K.&quot;</span>);</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            }</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;            <span class="keywordtype">int</span> status;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;            <span class="keywordtype">long</span> maxSize;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            <span class="keywordtype">long</span> currentSize;</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;            <span class="keywordtype">long</span> objPointer;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            lock (fixedList) {</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                <span class="comment">// Assert that the blob reference id given is a valid range</span></div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                <span class="keywordflow">if</span> (id &lt; 0 || id &gt;= fixedList.NodeCount) {</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;Object ID is out of range.&quot;</span>);</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                }</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                <span class="comment">// Position on this record</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> block = fixedList.GetRecord(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                <span class="comment">// Read the information in the fixed record</span></div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                status = block.ReadInt4();</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                <span class="comment">// Assert that the status is not deleted</span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                <span class="keywordflow">if</span> ((status &amp; DeletedFlag) != 0)</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Assertion failed: record is deleted!&quot;</span>);</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                <span class="comment">// Get the reference count</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                block.ReadInt4();</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                <span class="comment">// Get the total size of the object</span></div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                maxSize = block.ReadInt8();</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                <span class="comment">// Get the current running size of the block</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                currentSize = block.ReadInt8();</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                <span class="comment">// Get the blob pointer</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                objPointer = block.ReadInt8();</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            }</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            <span class="comment">// Assert that the area being Read is within the bounds of the object</span></div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            <span class="keywordflow">if</span> (off &lt; 0 || objOffset + length &gt; maxSize) {</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;Invalid Read.  offset = &quot;</span> + objOffset + <span class="stringliteral">&quot;, length = &quot;</span> + length + <span class="stringliteral">&quot; &gt; maxSize = &quot;</span> + maxSize);</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;            }</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            <span class="comment">// Open an IArea into the object</span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> area = store.GetArea(objPointer);</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            area.ReadInt4();</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            <span class="keywordtype">int</span> type = area.ReadInt4();</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            <span class="comment">// Convert to the page number</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;            <span class="keywordtype">long</span> pageNumber = (objOffset / (64 * 1024));</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;            area.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a> = (int)((pageNumber * 8) + 32);</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            <span class="keywordtype">long</span> pagePointer = area.ReadInt8();</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            <span class="comment">// Read the page</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;            <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> pageArea = store.GetArea(pagePointer);</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;            pageArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a> = 0;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            <span class="keywordtype">int</span> pageType = pageArea.ReadInt4();</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;            <span class="keywordtype">int</span> pageSize = pageArea.ReadInt4();</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;            <span class="keywordflow">if</span> ((type &amp; CompressedFlag) != 0) {</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="preprocessor">#if !PCL</span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                <span class="comment">// The page is compressed</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                byte[] pageBuf = <span class="keyword">new</span> byte[pageSize];</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                <span class="keywordtype">int</span> readCount = pageArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#ab653fb50fd4720a726cc4d83259048fd">Read</a>(pageBuf, 0, pageSize);</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                var deflateStream = <span class="keyword">new</span> DeflateStream(<span class="keyword">new</span> MemoryStream(pageBuf, 0, pageSize), CompressionMode.Decompress, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                    <span class="keywordtype">int</span> resultLength = deflateStream.Read(buffer, off, length);</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                    <span class="keywordflow">if</span> (resultLength != length)</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Assert failed: decompressed length is incorrect.&quot;</span>);</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                    <span class="keywordflow">return</span> readCount;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                } <span class="keywordflow">catch</span>(InvalidDataException e) {</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;ZIP Data Format Error: &quot;</span> + e.Message);</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                }</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<span class="stringliteral">&quot;Compression not supported in PCL.&quot;</span>);</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            }</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;            <span class="comment">// The page is not compressed</span></div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;            <span class="keywordflow">return</span> pageArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#ab653fb50fd4720a726cc4d83259048fd">Read</a>(buffer, off, length);</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        }</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div>
<div class="line"><a name="l00490"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#affa60fc1938ca12c0cd7fbf8ce81873e">  490</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1ILargeObject.htm">ILargeObject</a> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#affa60fc1938ca12c0cd7fbf8ce81873e">GetObject</a>(<a class="code" href="structDeveel_1_1Data_1_1Store_1_1ObjectId.htm">ObjectId</a> <span class="keywordtype">id</span>) {</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            <span class="keywordtype">long</span> objOffset;</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            <span class="keywordtype">long</span> maxSize;</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            <span class="keywordtype">long</span> currentSize;</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            lock (fixedList) {</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                <span class="keywordflow">if</span> (<span class="keywordtype">id</span>.StoreId != Id)</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InvalidObjectIdException.htm">InvalidObjectIdException</a>(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                var refId = <span class="keywordtype">id</span>.Id;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                <span class="comment">// Assert that the blob reference id given is a valid range</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                <span class="keywordflow">if</span> (refId &lt; 0 || refId &gt;= fixedList.NodeCount)</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InvalidObjectIdException.htm">InvalidObjectIdException</a>(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                <span class="comment">// Position on this record</span></div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> block = fixedList.GetRecord(refId);</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                <span class="comment">// Read the information in the fixed record</span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                <span class="keywordtype">int</span> status = block.ReadInt4();</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                <span class="comment">// Assert that the status is not deleted</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                <span class="keywordflow">if</span> ((status &amp; DeletedFlag) != 0)</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Assertion failed: record is deleted!&quot;</span>);</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                <span class="comment">// Get the reference count</span></div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                <span class="keywordtype">int</span> refCount = block.ReadInt4();</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                <span class="comment">// Get the total size of the blob</span></div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                maxSize = block.ReadInt8();</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                <span class="comment">// Get the current running size</span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                currentSize = block.ReadInt8();</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                <span class="comment">// Get the blob pointer</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                objOffset = block.ReadInt8();</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;            }</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> area = store.GetArea(objOffset);</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            area.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a> = 0;</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            area.ReadInt4();  <span class="comment">// (reserved)</span></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            <span class="comment">// Read the type</span></div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            <span class="keywordtype">int</span> type = area.ReadInt4();</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            <span class="comment">// The size of the block</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            <span class="keywordtype">long</span> blockSize = area.ReadInt8();</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;            <span class="comment">// The number of pages in the blob</span></div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;            <span class="keywordtype">long</span> pageCount = area.ReadInt8();</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;            <span class="keywordtype">bool</span> compressed = (type &amp; CompressedFlag) != 0;</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm">LargeObject</a>(<span class="keyword">this</span>, <span class="keywordtype">id</span>.Id, maxSize, currentSize, compressed, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        }</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div>
<div class="line"><a name="l00535"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a60594ae50175c5a69f69405f4ae810eb">  535</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a60594ae50175c5a69f69405f4ae810eb">EstablishReference</a>(<span class="keywordtype">long</span> <span class="keywordtype">id</span>) {</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                lock (fixedList) {</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                    <span class="comment">// Update the record in the fixed list.</span></div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                    <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> block = fixedList.GetRecord(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                    var recordPos = block.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a>;</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                    <span class="keywordtype">int</span> status = block.ReadInt4();</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                    <span class="keywordflow">if</span> (status != 1)</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Assertion failed: record is not static.&quot;</span>);</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                    <span class="keywordtype">int</span> refCount = block.ReadInt4();</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                    <span class="comment">// Set the fixed blob record as complete.</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                    block.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a> = recordPos + 4;</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                    block.WriteInt4(refCount + 1);</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                    block.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#af6f36e4f1b30b4f9701785d079af0e96">Flush</a>();</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                }</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;            } <span class="keywordflow">catch</span> (IOException e) {</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;IO Error: &quot;</span> + e.Message);</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;            }</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        }</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div>
<div class="line"><a name="l00557"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a1e1a2c13c2a8423411a3dc4f32566d23">  557</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a1e1a2c13c2a8423411a3dc4f32566d23">ReleaseReference</a>(<span class="keywordtype">long</span> <span class="keywordtype">id</span>) {</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                lock (fixedList) {</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                    <span class="comment">// Update the record in the fixed list.</span></div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                    <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> block = fixedList.GetRecord(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                    var recordPos = block.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a>;</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                    <span class="keywordtype">int</span> status = block.ReadInt4();</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                    <span class="keywordflow">if</span> (status != 1)</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Assertion failed: Record is not static (status = &quot;</span> + status + <span class="stringliteral">&quot;)&quot;</span>);</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                    <span class="keywordtype">int</span> refCount = block.ReadInt4();</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                    <span class="keywordflow">if</span> (refCount == 0)</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Releasing when IBlob reference counter is at 0.&quot;</span>);</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                    var objSize = block.ReadInt8();</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                    var objPos = block.ReadInt8();</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                    <span class="comment">// If reference count == 0 then we need to free all the resources</span></div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                    <span class="comment">// associated with this object in the store.</span></div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                    <span class="keywordflow">if</span> ((refCount - 1) == 0) {</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                        <span class="comment">// Free the resources associated with this object.</span></div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                        <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> area = store.GetArea(objPos);</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                        area.ReadInt4();</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                        var type = (byte)area.ReadInt4();</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                        var totalSize = area.ReadInt8();</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                        var pageCount = area.ReadInt8();</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                        <span class="comment">// Free all of the pages in this blob.</span></div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;                        <span class="keywordflow">for</span> (<span class="keywordtype">long</span> i = 0; i &lt; pageCount; ++i) {</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                            <span class="keywordtype">long</span> pageOffset = area.ReadInt8();</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                            <span class="keywordflow">if</span> (pageOffset &gt; 0)</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                                store.DeleteArea(pageOffset);</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                        }</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                        <span class="comment">// Free the blob area object itself.</span></div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                        store.DeleteArea(objPos);</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                        <span class="comment">// Write out the blank record.</span></div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                        block.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a> = recordPos;</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                        block.WriteInt4(DeletedFlag);</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                        block.WriteInt4(0);</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                        block.WriteInt8(-1);</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                        block.WriteInt8(firstDeleteChainRecord);</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                        <span class="comment">// CHeck out these changes</span></div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                        block.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#af6f36e4f1b30b4f9701785d079af0e96">Flush</a>();</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                        firstDeleteChainRecord = id;</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                        <span class="comment">// Update the first_delete_chain_record field in the header</span></div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                        fixedList.WriteDeleteHead(firstDeleteChainRecord);</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                    }</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                    <span class="comment">// Simply decrement the reference counter for this record.</span></div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;                    block.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a> = recordPos + 4;</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;                    <span class="comment">// Write the reference count - 1</span></div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;                    block.WriteInt4(refCount - 1);</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;                    <span class="comment">// Check out this change</span></div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;                    block.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#af6f36e4f1b30b4f9701785d079af0e96">Flush</a>();</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                }</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;            } <span class="keywordflow">catch</span> (IOException e) {</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;IO Error: &quot;</span> + e.Message);</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;            }</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;        }</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    }</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InvalidObjectIdException_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InvalidObjectIdException.htm">Deveel.Data.Store.InvalidObjectIdException</a></div><div class="ttdef"><b>Definition:</b> <a href="InvalidObjectIdException_8cs_source.htm#l00020">InvalidObjectIdException.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1FixedRecordList_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1FixedRecordList.htm">Deveel.Data.Store.FixedRecordList</a></div><div class="ttdef"><b>Definition:</b> <a href="FixedRecordList_8cs_source.htm#l00022">FixedRecordList.cs:22</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IArea_htm_af6f36e4f1b30b4f9701785d079af0e96"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#af6f36e4f1b30b4f9701785d079af0e96">Deveel.Data.Store.IArea.Flush</a></div><div class="ttdeci">void Flush()</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_a329c443dee6220f46a5fc1047a37941e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a329c443dee6220f46a5fc1047a37941e">Deveel.Data.Store.ObjectStore.Create</a></div><div class="ttdeci">long Create()</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00128">ObjectStore.cs:128</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_ae29713da77a82fad1269ecb0ff2b4a29"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#ae29713da77a82fad1269ecb0ff2b4a29">Deveel.Data.Store.ObjectStore.CreateNewObject</a></div><div class="ttdeci">ILargeObject CreateNewObject(long maxSize, bool compressed)</div><div class="ttdoc">Creates a new large object returning a reference to it. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00178">ObjectStore.cs:178</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_addd52da30b0fd229e64aba73a22e3b81"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#addd52da30b0fd229e64aba73a22e3b81">Deveel.Data.Store.ObjectStore.firstDeleteChainRecord</a></div><div class="ttdeci">long firstDeleteChainRecord</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00035">ObjectStore.cs:35</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1ILargeObject_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1ILargeObject.htm">Deveel.Data.Store.ILargeObject</a></div><div class="ttdoc">Defines a referenced object that can be accessed on a multi-phase level. </div><div class="ttdef"><b>Definition:</b> <a href="ILargeObject_8cs_source.htm#l00035">ILargeObject.cs:35</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IObjectStore_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IObjectStore.htm">Deveel.Data.Store.IObjectStore</a></div><div class="ttdoc">Defines the contract for stores that handle lrge objects within a database system. </div><div class="ttdef"><b>Definition:</b> <a href="IObjectStore_8cs_source.htm#l00035">IObjectStore.cs:35</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IArea_htm_ab653fb50fd4720a726cc4d83259048fd"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#ab653fb50fd4720a726cc4d83259048fd">Deveel.Data.Store.IArea.Read</a></div><div class="ttdeci">int Read(byte[] buffer, int offset, int length)</div><div class="ttdoc">Reads an array of bytes from the underlying IArea and advances the position by length ...</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm">Deveel.Data.Store.ObjectStore</a></div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00024">ObjectStore.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_affa60fc1938ca12c0cd7fbf8ce81873e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#affa60fc1938ca12c0cd7fbf8ce81873e">Deveel.Data.Store.ObjectStore.GetObject</a></div><div class="ttdeci">ILargeObject GetObject(ObjectId id)</div><div class="ttdoc">Gets an object that was previously created for the given unique identifier. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00490">ObjectStore.cs:490</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IArea_htm_a4ae01bbadd6d1072abb9c93be189e8ce"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Deveel.Data.Store.IArea.Position</a></div><div class="ttdeci">long Position</div><div class="ttdoc">Returns or sets the current position of the pointer within the area. </div><div class="ttdef"><b>Definition:</b> <a href="IArea_8cs_source.htm#l00048">IArea.cs:48</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject_htm_ab4da90691574ea2896468f4a2df15eb8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#ab4da90691574ea2896468f4a2df15eb8">Deveel.Data.Store.ObjectStore.LargeObject.MarkComplete</a></div><div class="ttdeci">void MarkComplete()</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00266">ObjectStore.cs:266</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_ae7c5b915de75e4d867f80757a8d61a09"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#ae7c5b915de75e4d867f80757a8d61a09">Deveel.Data.Store.ObjectStore.ReadObjectPart</a></div><div class="ttdeci">int ReadObjectPart(long id, long objOffset, byte[] buffer, int off, int length)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00404">ObjectStore.cs:404</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Store_1_1ObjectId_htm_a03881174755a9b07f93a8494973f1e1c"><div class="ttname"><a href="structDeveel_1_1Data_1_1Store_1_1ObjectId.htm#a03881174755a9b07f93a8494973f1e1c">Deveel.Data.Store.ObjectId.Id</a></div><div class="ttdeci">long Id</div><div class="ttdoc">Gets the unique identifier of the object within the containing store. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectId_8cs_source.htm#l00065">ObjectId.cs:65</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_acee55d0550295ed008306bccb54b7244"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#acee55d0550295ed008306bccb54b7244">Deveel.Data.Store.ObjectStore.store</a></div><div class="ttdeci">readonly IStore store</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00032">ObjectStore.cs:32</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject_htm_a86b026e654301577a76df511ad0d5ddc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a86b026e654301577a76df511ad0d5ddc">Deveel.Data.Store.ObjectStore.LargeObject.Id</a></div><div class="ttdeci">ObjectId Id</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00232">ObjectStore.cs:232</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IArea_htm_a9591ccb271edb5ce2714e766d9979069"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a9591ccb271edb5ce2714e766d9979069">Deveel.Data.Store.IArea.Write</a></div><div class="ttdeci">void Write(byte[] buffer, int offset, int length)</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject_htm_a8f7d73149a9ec28dd8437718bb79eba1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a8f7d73149a9ec28dd8437718bb79eba1">Deveel.Data.Store.ObjectStore.LargeObject.CurrentSize</a></div><div class="ttdeci">long CurrentSize</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00236">ObjectStore.cs:236</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject_htm_aa956da3f729b9acbb7e3e389c51e97a1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#aa956da3f729b9acbb7e3e389c51e97a1">Deveel.Data.Store.ObjectStore.LargeObject.Read</a></div><div class="ttdeci">int Read(long offset, byte[] buffer, int length)</div><div class="ttdoc">Reads the content of the object, starting at a given offset, into the buffer given, for the number of bytes specified. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00242">ObjectStore.cs:242</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_a1e1a2c13c2a8423411a3dc4f32566d23"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a1e1a2c13c2a8423411a3dc4f32566d23">Deveel.Data.Store.ObjectStore.ReleaseReference</a></div><div class="ttdeci">bool ReleaseReference(long id)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00557">ObjectStore.cs:557</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject_htm_ad32fb4ebb152c894c9314e22af39f80b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#ad32fb4ebb152c894c9314e22af39f80b">Deveel.Data.Store.ObjectStore.LargeObject.store</a></div><div class="ttdeci">readonly ObjectStore store</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00218">ObjectStore.cs:218</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IArea_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">Deveel.Data.Store.IArea</a></div><div class="ttdoc">An interface for access the contents of an area of a store. </div><div class="ttdef"><b>Definition:</b> <a href="IArea_8cs_source.htm#l00023">IArea.cs:23</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Store_1_1ObjectId_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Store_1_1ObjectId.htm">Deveel.Data.Store.ObjectId</a></div><div class="ttdoc">A unique identifier of an object within a database system, that is composed by a reference to the sto...</div><div class="ttdef"><b>Definition:</b> <a href="ObjectId_8cs_source.htm#l00031">ObjectId.cs:31</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_a375c8fa3a446835a81abb2fb14924b47"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a375c8fa3a446835a81abb2fb14924b47">Deveel.Data.Store.ObjectStore.fixedList</a></div><div class="ttdeci">readonly FixedRecordList fixedList</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00033">ObjectStore.cs:33</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm">Deveel.Data.Store.ObjectStore.LargeObject</a></div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00217">ObjectStore.cs:217</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_af7ee9d9bd7ed015facfb66449a24e30d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#af7ee9d9bd7ed015facfb66449a24e30d">Deveel.Data.Store.ObjectStore.WriteObjectPart</a></div><div class="ttdeci">void WriteObjectPart(long id, long objOffset, byte[] buffer, int off, int length)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00311">ObjectStore.cs:311</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_a60594ae50175c5a69f69405f4ae810eb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a60594ae50175c5a69f69405f4ae810eb">Deveel.Data.Store.ObjectStore.EstablishReference</a></div><div class="ttdeci">void EstablishReference(long id)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00535">ObjectStore.cs:535</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject_htm_a48ded64b396c329501fd58cdff919732"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a48ded64b396c329501fd58cdff919732">Deveel.Data.Store.ObjectStore.LargeObject.Complete</a></div><div class="ttdeci">void Complete()</div><div class="ttdoc">Marks the object as complete. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00254">ObjectStore.cs:254</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject_htm_a0d9d28f4e9841b1c120ffafad5a6979a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a0d9d28f4e9841b1c120ffafad5a6979a">Deveel.Data.Store.ObjectStore.LargeObject.Write</a></div><div class="ttdeci">void Write(long offset, byte[] buffer, int length)</div><div class="ttdoc">Write the given binary content into the object, starting at the given offset for the number of bytes ...</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00246">ObjectStore.cs:246</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject_htm_af6b75d1048aaf6e78e263281b7888cb7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#af6b75d1048aaf6e78e263281b7888cb7">Deveel.Data.Store.ObjectStore.LargeObject.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00229">ObjectStore.cs:229</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_a769a817268b7625791dc5d461843c862"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a769a817268b7625791dc5d461843c862">Deveel.Data.Store.ObjectStore.CompleteObject</a></div><div class="ttdeci">void CompleteObject(LargeObject obj)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00271">ObjectStore.cs:271</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject_htm_a4fd13930fccad159673d7ef7f6cc0f90"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a4fd13930fccad159673d7ef7f6cc0f90">Deveel.Data.Store.ObjectStore.LargeObject.LargeObject</a></div><div class="ttdeci">LargeObject(ObjectStore store, long refId, long size, long currentSize, bool compressed, bool isComplete)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00220">ObjectStore.cs:220</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_aa6f2c525c1f2c50a945668a7efd83b4f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#aa6f2c525c1f2c50a945668a7efd83b4f">Deveel.Data.Store.ObjectStore.ObjectStore</a></div><div class="ttdeci">ObjectStore(int id, IStore store)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00037">ObjectStore.cs:37</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_a5fa08894fe313e990f3d2885dfff13fb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a5fa08894fe313e990f3d2885dfff13fb">Deveel.Data.Store.ObjectStore.AddToRecordList</a></div><div class="ttdeci">long AddToRecordList(long recordOffset)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00048">ObjectStore.cs:48</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IArea_htm_a76ca6f78f4cdec5b070871c02cebdcc3"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a76ca6f78f4cdec5b070871c02cebdcc3">Deveel.Data.Store.IArea.Id</a></div><div class="ttdeci">long Id</div><div class="ttdoc">Returns the unique identifier that represents this area. </div><div class="ttdef"><b>Definition:</b> <a href="IArea_8cs_source.htm#l00031">IArea.cs:31</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_aa8a4fab6f8c0ce1fc93ee0cc901b412a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#aa8a4fab6f8c0ce1fc93ee0cc901b412a">Deveel.Data.Store.ObjectStore.Open</a></div><div class="ttdeci">void Open(long offset)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00153">ObjectStore.cs:153</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IStore_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm">Deveel.Data.Store.IStore</a></div><div class="ttdoc">A store is a resource where areas can be allocated and freed to store information (a memory allocator...</div><div class="ttdef"><b>Definition:</b> <a href="IStore_8cs_source.htm#l00056">IStore.cs:56</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_a48b540d0f37c2d19f281a2634a16459d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a48b540d0f37c2d19f281a2634a16459d">Deveel.Data.Store.ObjectStore.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00173">ObjectStore.cs:173</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_htm_a38f2fdf1f381037bbb08e0eecd57e54a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore.htm#a38f2fdf1f381037bbb08e0eecd57e54a">Deveel.Data.Store.ObjectStore.Id</a></div><div class="ttdeci">int Id</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00176">ObjectStore.cs:176</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject_htm_a2a79033b15296db13c2c821b0cd26bd4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#a2a79033b15296db13c2c821b0cd26bd4">Deveel.Data.Store.ObjectStore.LargeObject.Establish</a></div><div class="ttdeci">void Establish()</div><div class="ttdoc">Establishes a reference of the object to the underlying store which contains it. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00258">ObjectStore.cs:258</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject_htm_ab41b53843cd1ed4f314c1456042902f3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStore_1_1LargeObject.htm#ab41b53843cd1ed4f314c1456042902f3">Deveel.Data.Store.ObjectStore.LargeObject.Release</a></div><div class="ttdeci">bool Release()</div><div class="ttdoc">Removes a reference of the object from the underlying store which contains it. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectStore_8cs_source.htm#l00262">ObjectStore.cs:262</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
