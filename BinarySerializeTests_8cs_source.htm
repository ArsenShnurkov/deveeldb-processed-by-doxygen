<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb-nunit/Deveel.Data.Serialization/BinarySerializeTests.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_161fca7059b832f09270a2e8ed498e3a.htm">deveeldb-nunit</a></li><li class="navelem"><a class="el" href="dir_cf7cb71c1c3d473f4595aebe5c47350e.htm">Deveel.Data.Serialization</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">BinarySerializeTests.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="BinarySerializeTests_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2014 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.IO;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a>;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceNUnit.htm">NUnit</a>.Framework;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Serialization {</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    [TestFixture]</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests.htm">   24</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests.htm">BinarySerializeTests</a> {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        [Test]</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests.htm#ac619dc94f786c1bf2aecf3b70861551c">   26</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests.htm#ac619dc94f786c1bf2aecf3b70861551c">SerializeWithNoParent</a>() {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            var obj = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm">TestClass</a> {Value = <span class="stringliteral">&quot;test1&quot;</span>};</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            var serializer = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm">BinarySerializer</a>();</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            byte[] bytes;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <span class="keyword">using</span> (var memoryStream = <span class="keyword">new</span> MemoryStream()) {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                serializer.Serialize(memoryStream, obj);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                memoryStream.Flush();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                bytes = memoryStream.ToArray();</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            }</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            <span class="keywordtype">object</span> graph = null;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            <span class="keyword">using</span> (var memoryStream = <span class="keyword">new</span> MemoryStream(bytes)) {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                graph = serializer.Deserialize(memoryStream, typeof(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm">TestClass</a>));</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            Assert.IsNotNull(graph);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm">TestClass</a>&gt;(obj);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            obj = (<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm">TestClass</a>) graph;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;test1&quot;</span>, obj.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm#a419ecdebf92f5222770628255a0cee6c">Value</a>);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            Assert.IsNull(obj.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm#ab1dc86654b368c77923162db89ec877f">Parent</a>);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        [Test]</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests.htm#a2d825825056d0a9972cd50ee2966489f">   52</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests.htm#a2d825825056d0a9972cd50ee2966489f">SerializeObjectNameWithNoParent</a>() {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            var objName = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(<span class="stringliteral">&quot;name&quot;</span>);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            var serializer = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm">BinarySerializer</a>();</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            byte[] bytes;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <span class="keyword">using</span> (var memoryStream = <span class="keyword">new</span> MemoryStream()) {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                serializer.Serialize(memoryStream, objName);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                memoryStream.Flush();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                bytes = memoryStream.ToArray();</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordtype">object</span> graph = null;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keyword">using</span> (var memoryStream = <span class="keyword">new</span> MemoryStream(bytes)) {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                graph = serializer.Deserialize(memoryStream, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>));</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            Assert.IsNotNull(graph);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>&gt;(graph);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            var objName2 = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>) graph;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            Assert.AreEqual(objName.Name, objName2.Name);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            Assert.AreEqual(objName, objName2);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        [Test]</div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests.htm#a274212a3d35e5c1e5a36ab9aff8830f3">   78</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests.htm#a274212a3d35e5c1e5a36ab9aff8830f3">SerializeImplicit</a>() {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            var obj = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm">TestClass2</a>(<span class="stringliteral">&quot;test2&quot;</span>);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            var serializer = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm">BinarySerializer</a>();</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            byte[] bytes;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keyword">using</span> (var memoryStream = <span class="keyword">new</span> MemoryStream()) {</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                serializer.Serialize(memoryStream, obj);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                memoryStream.Flush();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                bytes = memoryStream.ToArray();</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="keywordtype">object</span> graph = null;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keyword">using</span> (var memoryStream = <span class="keyword">new</span> MemoryStream(bytes)) {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                graph = serializer.Deserialize(memoryStream, typeof(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm">TestClass2</a>));</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            Assert.IsNotNull(graph);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm">TestClass2</a>&gt;(obj);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            obj = (<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm">TestClass2</a>) graph;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;test2&quot;</span>, obj.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm#a801579234c18736b2769b21504de9a88">Value</a>);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            Assert.IsNull(obj.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm#a88cd26a0f55a152709d5f1756dfdc4c9">Parent</a>);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        [Serializable]</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm">  105</a></span>&#160;        <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm">TestClass</a> : <a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">ISerializable</a> {</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm#a79695ecba64b9bf7613c1567dc601d04">  106</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm#a79695ecba64b9bf7613c1567dc601d04">TestClass</a>() {    </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            }</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm#a6b846d2a3bbf3a3a9aae4aef4813e780">  109</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm#a6b846d2a3bbf3a3a9aae4aef4813e780">TestClass</a>(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">ObjectData</a> graph) {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                Value = graph.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a828a888ad7250283e9f596f6da5fe97f">GetString</a>(<span class="stringliteral">&quot;value&quot;</span>);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                Parent = graph.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a86f3d523b9ae1357b275ed330178ecb0">GetValue</a>&lt;<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm">TestClass</a>&gt;(<span class="stringliteral">&quot;parent&quot;</span>);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            }</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm#a419ecdebf92f5222770628255a0cee6c">  114</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">string</span> Value { <span class="keyword">get</span>; set; }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm#ab1dc86654b368c77923162db89ec877f">  116</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm">TestClass</a> Parent { <span class="keyword">get</span>; set; }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm#a54a6c88400f61f14aff7612d03c40fc4">  118</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm#a54a6c88400f61f14aff7612d03c40fc4">GetData</a>(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a> graph) {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                graph.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;value&quot;</span>, Value);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                graph.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;parent&quot;</span>, Parent);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        [Serializable]</div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm">  125</a></span>&#160;        <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm">TestClass2</a> {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            [NonSerialized]</div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm#affcb79a23ba18d21dc3a32d81262e4ee">  127</a></span>&#160;            <span class="keyword">internal</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm">TestClass2</a> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm#affcb79a23ba18d21dc3a32d81262e4ee">parent</a>;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm#abb2c937385df93689b1e49993e4db8bd">  129</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm#abb2c937385df93689b1e49993e4db8bd">TestClass2</a>() {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm#a523f6196cab01095e74f04e0092ebb6d">  132</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm#a523f6196cab01095e74f04e0092ebb6d">TestClass2</a>(<span class="keywordtype">string</span> value) {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                Value = value;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm#a801579234c18736b2769b21504de9a88">  136</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">string</span> Value { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm#a88cd26a0f55a152709d5f1756dfdc4c9">  138</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm">TestClass2</a> Parent {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                <span class="keyword">get</span> { <span class="keywordflow">return</span> parent; }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                set {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                    parent = value;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass_htm_ab1dc86654b368c77923162db89ec877f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm#ab1dc86654b368c77923162db89ec877f">Deveel.Data.Serialization.BinarySerializeTests.TestClass.Parent</a></div><div class="ttdeci">TestClass Parent</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00116">BinarySerializeTests.cs:116</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass_htm_a79695ecba64b9bf7613c1567dc601d04"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm#a79695ecba64b9bf7613c1567dc601d04">Deveel.Data.Serialization.BinarySerializeTests.TestClass.TestClass</a></div><div class="ttdeci">TestClass()</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00106">BinarySerializeTests.cs:106</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm">Deveel.Data.Serialization.BinarySerializeTests.TestClass2</a></div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00125">BinarySerializeTests.cs:125</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass_htm_a6b846d2a3bbf3a3a9aae4aef4813e780"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm#a6b846d2a3bbf3a3a9aae4aef4813e780">Deveel.Data.Serialization.BinarySerializeTests.TestClass.TestClass</a></div><div class="ttdeci">TestClass(ObjectData graph)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00109">BinarySerializeTests.cs:109</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2_htm_affcb79a23ba18d21dc3a32d81262e4ee"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm#affcb79a23ba18d21dc3a32d81262e4ee">Deveel.Data.Serialization.BinarySerializeTests.TestClass2.parent</a></div><div class="ttdeci">TestClass2 parent</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00127">BinarySerializeTests.cs:127</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2_htm_a523f6196cab01095e74f04e0092ebb6d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm#a523f6196cab01095e74f04e0092ebb6d">Deveel.Data.Serialization.BinarySerializeTests.TestClass2.TestClass2</a></div><div class="ttdeci">TestClass2(string value)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00132">BinarySerializeTests.cs:132</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2_htm_abb2c937385df93689b1e49993e4db8bd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm#abb2c937385df93689b1e49993e4db8bd">Deveel.Data.Serialization.BinarySerializeTests.TestClass2.TestClass2</a></div><div class="ttdeci">TestClass2()</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00129">BinarySerializeTests.cs:129</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm_a2a09ed1c661f92b60b0b38398fb7ced1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">Deveel.Data.Serialization.SerializeData.SetValue</a></div><div class="ttdeci">void SetValue(string key, Type type, object value)</div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00035">SerializeData.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">Deveel.Data.Sql.ObjectName</a></div><div class="ttdoc">Describes the name of an object within a database. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00044">ObjectName.cs:44</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">Deveel.Data.Serialization.ISerializable</a></div><div class="ttdef"><b>Definition:</b> <a href="ISerializable_8cs_source.htm#l00020">ISerializable.cs:20</a></div></div>
<div class="ttc" id="namespaceNUnit_htm"><div class="ttname"><a href="namespaceNUnit.htm">NUnit</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass_htm_a419ecdebf92f5222770628255a0cee6c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm#a419ecdebf92f5222770628255a0cee6c">Deveel.Data.Serialization.BinarySerializeTests.TestClass.Value</a></div><div class="ttdeci">string Value</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00114">BinarySerializeTests.cs:114</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">Deveel.Data.Serialization.SerializeData</a></div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00021">SerializeData.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2_htm_a801579234c18736b2769b21504de9a88"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm#a801579234c18736b2769b21504de9a88">Deveel.Data.Serialization.BinarySerializeTests.TestClass2.Value</a></div><div class="ttdeci">string Value</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00136">BinarySerializeTests.cs:136</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_htm_ac619dc94f786c1bf2aecf3b70861551c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests.htm#ac619dc94f786c1bf2aecf3b70861551c">Deveel.Data.Serialization.BinarySerializeTests.SerializeWithNoParent</a></div><div class="ttdeci">static void SerializeWithNoParent()</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00026">BinarySerializeTests.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">Deveel.Data.Serialization.ObjectData</a></div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00022">ObjectData.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_htm_a274212a3d35e5c1e5a36ab9aff8830f3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests.htm#a274212a3d35e5c1e5a36ab9aff8830f3">Deveel.Data.Serialization.BinarySerializeTests.SerializeImplicit</a></div><div class="ttdeci">static void SerializeImplicit()</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00078">BinarySerializeTests.cs:78</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass_htm_a54a6c88400f61f14aff7612d03c40fc4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm#a54a6c88400f61f14aff7612d03c40fc4">Deveel.Data.Serialization.BinarySerializeTests.TestClass.GetData</a></div><div class="ttdeci">void GetData(SerializeData graph)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00118">BinarySerializeTests.cs:118</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_htm_a2d825825056d0a9972cd50ee2966489f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests.htm#a2d825825056d0a9972cd50ee2966489f">Deveel.Data.Serialization.BinarySerializeTests.SerializeObjectNameWithNoParent</a></div><div class="ttdeci">static void SerializeObjectNameWithNoParent()</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00052">BinarySerializeTests.cs:52</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a86f3d523b9ae1357b275ed330178ecb0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a86f3d523b9ae1357b275ed330178ecb0">Deveel.Data.Serialization.ObjectData.GetValue</a></div><div class="ttdeci">object GetValue(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00048">ObjectData.cs:48</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass.htm">Deveel.Data.Serialization.BinarySerializeTests.TestClass</a></div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00105">BinarySerializeTests.cs:105</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm">Deveel.Data.Serialization.BinarySerializer</a></div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00025">BinarySerializer.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2_htm_a88cd26a0f55a152709d5f1756dfdc4c9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_1_1TestClass2.htm#a88cd26a0f55a152709d5f1756dfdc4c9">Deveel.Data.Serialization.BinarySerializeTests.TestClass2.Parent</a></div><div class="ttdeci">TestClass2 Parent</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00138">BinarySerializeTests.cs:138</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm">Deveel.Data.Sql</a></div><div class="ttdef"><b>Definition:</b> <a href="CellId_8cs_source.htm#l00022">CellId.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a828a888ad7250283e9f596f6da5fe97f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a828a888ad7250283e9f596f6da5fe97f">Deveel.Data.Serialization.ObjectData.GetString</a></div><div class="ttdeci">string GetString(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00101">ObjectData.cs:101</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializeTests.htm">Deveel.Data.Serialization.BinarySerializeTests</a></div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializeTests_8cs_source.htm#l00024">BinarySerializeTests.cs:24</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
