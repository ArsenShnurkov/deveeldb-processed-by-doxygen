<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Parser/DataTypeBuilder.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_f0ea0b9ea9aae2e0e9b9dfca26eb78a8.htm">Deveel.Data.Sql.Parser</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">DataTypeBuilder.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="DataTypeBuilder_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Linq;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm">Types</a>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Sql.Parser {</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm">   24</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm">DataTypeBuilder</a> {</div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm#a1f95b43094a45390ae56f5d06f69b926">   25</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm#a1f95b43094a45390ae56f5d06f69b926">Build</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">ITypeResolver</a> resolver, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> sqlNode) {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            var node = sqlNode as <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm">DataTypeNode</a>;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            <span class="keywordflow">if</span> (node == null)</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            var typeName = node.TypeName;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            var typeMeta = <span class="keyword">new</span> List&lt;DataTypeMeta&gt;();</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> sqlTypeCode;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            <span class="keywordflow">if</span> (node.IsPrimitive) {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(typeName, <span class="stringliteral">&quot;LONG VARCHAR&quot;</span>)) {</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                    sqlTypeCode = <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarChar;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(node.TypeName, <span class="stringliteral">&quot;LONG VARBINARY&quot;</span>)) {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                    sqlTypeCode = <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarBinary;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(typeName, <span class="stringliteral">&quot;INT&quot;</span>, StringComparison.OrdinalIgnoreCase)) {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                    sqlTypeCode = <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Integer;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                    <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                        sqlTypeCode = (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>) Enum.Parse(typeof (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>), node.TypeName, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                    } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                        sqlTypeCode = <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Unknown;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                    }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                 </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                <span class="keywordflow">if</span> (sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Float ||</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                    sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Real ||</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                    sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Double ||</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                    sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Decimal ||</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                    sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Numeric) {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                    <span class="keywordflow">if</span> (node.HasScale)</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                        typeMeta.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>(<span class="stringliteral">&quot;Scale&quot;</span>, node.Scale.ToString()));</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                    <span class="keywordflow">if</span> (node.HasPrecision)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                        typeMeta.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>(<span class="stringliteral">&quot;Precision&quot;</span>, node.Precision.ToString()));</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Char ||</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                           sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.VarChar ||</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                           sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarChar) {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                    <span class="keywordflow">if</span> (node.HasSize)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                        typeMeta.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>(<span class="stringliteral">&quot;MaxSize&quot;</span>, node.Size.ToString()));</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                    <span class="keywordflow">if</span> (node.HasLocale)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                        typeMeta.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>(<span class="stringliteral">&quot;Locale&quot;</span>, node.Locale));</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                    <span class="keywordflow">if</span> (node.HasEncoding)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                        typeMeta.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>(<span class="stringliteral">&quot;Encoding&quot;</span>, node.Encoding));</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Binary ||</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                           sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.VarBinary ||</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                           sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarBinary) {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                    <span class="keywordflow">if</span> (node.HasSize)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                        typeMeta.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>(<span class="stringliteral">&quot;MaxSize&quot;</span>, node.Size.ToString()));</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                <span class="comment">// TODO: Support %ROWTYPE and %TYPE</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                sqlTypeCode = <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Type;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.IsNullOrEmpty(typeName))</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseException.htm">SqlParseException</a>(<span class="stringliteral">&quot;Could not determine type name.&quot;</span>);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[] meta = typeMeta.ToArray();</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="keywordflow">if</span> (!node.IsPrimitive &amp;&amp; node.Metadata != null)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                meta = BuildTypeMeta(node.Metadata);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            var type = <a class="code" href="classDeveel_1_1Data_1_1Types_1_1TypeResolver.htm">TypeResolver</a>.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1TypeResolver.htm#a7f9638fb2b17a319f38051888d7f602a">Resolve</a>(sqlTypeCode, typeName, meta, resolver);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="keywordflow">if</span> (type == null)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseException.htm">SqlParseException</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;User defined type {0} could not be resolved.&quot;</span>, typeName));</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordflow">return</span> type;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm#ae98346bca00c2c9673a076e2b829c49e">   94</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[] <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm#ae98346bca00c2c9673a076e2b829c49e">BuildTypeMeta</a>(Dictionary&lt;string, string&gt; metadata) {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">return</span> metadata.Select(x =&gt; <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>(x.Key, x.Value)).ToArray();</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">Deveel.Data.Sql.Parser.ISqlNode</a></div><div class="ttdoc">Defines the contract for nodes in an AST model for a SQL grammar analysis and parsing. </div><div class="ttdef"><b>Definition:</b> <a href="ISqlNode_8cs_source.htm#l00025">ISqlNode.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1TypeResolver_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1TypeResolver.htm">Deveel.Data.Types.TypeResolver</a></div><div class="ttdef"><b>Definition:</b> <a href="TypeResolver_8cs_source.htm#l00020">TypeResolver.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm">Deveel.Data.Sql.Parser.DataTypeBuilder</a></div><div class="ttdef"><b>Definition:</b> <a href="DataTypeBuilder_8cs_source.htm#l00024">DataTypeBuilder.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1TypeResolver_htm_a7f9638fb2b17a319f38051888d7f602a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1TypeResolver.htm#a7f9638fb2b17a319f38051888d7f602a">Deveel.Data.Types.TypeResolver.Resolve</a></div><div class="ttdeci">static SqlType Resolve(SqlTypeCode typeCode, string typeName, DataTypeMeta[] metadata, ITypeResolver resolver)</div><div class="ttdef"><b>Definition:</b> <a href="TypeResolver_8cs_source.htm#l00021">TypeResolver.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder_htm_ae98346bca00c2c9673a076e2b829c49e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm#ae98346bca00c2c9673a076e2b829c49e">Deveel.Data.Sql.Parser.DataTypeBuilder.BuildTypeMeta</a></div><div class="ttdeci">static DataTypeMeta[] BuildTypeMeta(Dictionary&lt; string, string &gt; metadata)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeBuilder_8cs_source.htm#l00094">DataTypeBuilder.cs:94</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">Deveel.Data.Types.ITypeResolver</a></div><div class="ttdef"><b>Definition:</b> <a href="ITypeResolver_8cs_source.htm#l00020">ITypeResolver.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder_htm_a1f95b43094a45390ae56f5d06f69b926"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm#a1f95b43094a45390ae56f5d06f69b926">Deveel.Data.Sql.Parser.DataTypeBuilder.Build</a></div><div class="ttdeci">static SqlType Build(ITypeResolver resolver, ISqlNode sqlNode)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeBuilder_8cs_source.htm#l00025">DataTypeBuilder.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">Deveel.Data.Types.SqlType</a></div><div class="ttdoc">Defines the properties of a specific SQL Type and handles the values compatible. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00033">SqlType.cs:33</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm">Deveel.Data.Types</a></div><div class="ttdef"><b>Definition:</b> <a href="ArrayType_8cs_source.htm#l00021">ArrayType.cs:21</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm">Deveel.Data.Sql.Parser.DataTypeNode</a></div><div class="ttdoc">Describes the information of a data type as found in a SQL string. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00028">DataTypeNode.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseException_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseException.htm">Deveel.Data.Sql.Parser.SqlParseException</a></div><div class="ttdoc">An error that occurs when compiling a input string into a SQL object. </div><div class="ttdef"><b>Definition:</b> <a href="SqlParseException_8cs_source.htm#l00026">SqlParseException.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">Deveel.Data.Types.DataTypeMeta</a></div><div class="ttdef"><b>Definition:</b> <a href="DataTypeMeta_8cs_source.htm#l00020">DataTypeMeta.cs:20</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
