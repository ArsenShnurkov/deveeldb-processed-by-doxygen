<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Index/BlindSearchIndex.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_da8e3e59386dbd04e303b49ee54c7b55.htm">Deveel.Data.Index</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">BlindSearchIndex.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="BlindSearchIndex_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Linq;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Tables.htm">Tables</a>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="namespaceDeveel_1_1Data_1_1Index.htm">   24</a></span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Index {</div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm">   25</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm">BlindSearchIndex</a> : <a class="code" href="classDeveel_1_1Data_1_1Index_1_1ColumnIndex.htm">ColumnIndex</a> {</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a08934240078ccd6b9448c7a8ee27f783">   26</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a08934240078ccd6b9448c7a8ee27f783">BlindSearchIndex</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1ITable.htm">ITable</a> table, <span class="keywordtype">int</span> columnOffset)</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            : base(table, columnOffset) {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        }</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a5ad46876bb5d09252705b856865d2a09">   30</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">string</span> IndexType {</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1DefaultIndexTypes.htm">DefaultIndexTypes</a>.<a class="code" href="classDeveel_1_1Data_1_1Index_1_1DefaultIndexTypes.htm#a1728b26c621ee2e90f9897783c9ba438">BlindSearch</a>; }</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        }</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a447f8ba28eb7b086bd7b25356799106c">   34</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a447f8ba28eb7b086bd7b25356799106c">AssertNotReadOnly</a>() {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <span class="keywordflow">if</span> (IsReadOnly)</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<span class="stringliteral">&quot;Cannot mutate a read-only index.&quot;</span>);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        }</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#acb24986b6d99ab7c6dd734f41a7572d9">   39</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#acb24986b6d99ab7c6dd734f41a7572d9">HighestSearch</a>(<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a> ob, IList&lt;int&gt; list, <span class="keywordtype">int</span> lower, <span class="keywordtype">int</span> higher) {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <span class="keywordflow">if</span> ((higher - lower) &lt;= 5) {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                <span class="comment">// Start from the bottom up until we find the highest val</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                <span class="keywordflow">for</span> (var i = higher; i &gt;= lower; --i) {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                    <span class="keywordtype">int</span> res = ob.<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm#a8892431e41e335c606f99f5a971b0102">CompareTo</a>(GetValue(list[i]));</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                    <span class="keywordflow">if</span> (res &gt;= 0)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                        <span class="keywordflow">return</span> i + 1;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                <span class="comment">// Didn&#39;t find return lowest</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                <span class="keywordflow">return</span> lower;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            var mid = (lower + higher)/2;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <span class="keywordtype">int</span> compResult = ob.<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm#a8892431e41e335c606f99f5a971b0102">CompareTo</a>(GetValue(list[mid]));</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keywordflow">if</span> (compResult == 0)</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                <span class="comment">// We know the bottom is between &#39;mid&#39; and &#39;higher&#39;</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                <span class="keywordflow">return</span> HighestSearch(ob, list, mid, higher);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <span class="keywordflow">if</span> (compResult &lt; 0)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                <span class="keywordflow">return</span> HighestSearch(ob, list, lower, mid - 1);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keywordflow">return</span> HighestSearch(ob, list, mid + 1, higher);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a34180daea96d43857a42a7201974d044">   64</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a34180daea96d43857a42a7201974d044">DoInsertSort</a>(IList&lt;int&gt; list, <span class="keywordtype">int</span> row) {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keywordtype">int</span> listSize = list.Count;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <span class="keywordflow">if</span> (listSize == 0) {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                list.Add(row);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                var point = HighestSearch(GetValue(row), list, 0, listSize - 1);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                <span class="keywordflow">if</span> (point == listSize) {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                    list.Add(row);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                    list.Insert(point, row);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a130636515dd0152b3dd9d538a0ced564">   78</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1ColumnIndex.htm">ColumnIndex</a> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a130636515dd0152b3dd9d538a0ced564">Copy</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1ITable.htm">ITable</a> table, <span class="keywordtype">bool</span> readOnly) {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm">BlindSearchIndex</a>(table, ColumnOffset);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a650d47ece313540529911ee43acf3f71">   82</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a650d47ece313540529911ee43acf3f71">Insert</a>(<span class="keywordtype">int</span> rowNumber) {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            AssertNotReadOnly();</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a3fc66eb32d79799cca5672ace6fe230f">   86</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a3fc66eb32d79799cca5672ace6fe230f">Remove</a>(<span class="keywordtype">int</span> rowNumber) {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            AssertNotReadOnly();</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#abd6263ecab9f3bacc7ce2652e4fb8d7a">   90</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> IEnumerable&lt;int&gt; <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#abd6263ecab9f3bacc7ce2652e4fb8d7a">SelectRange</a>(<a class="code" href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm">IndexRange</a>[] ranges) {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordtype">int</span> setSize = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1Table.htm">Table</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1Table.htm#ab1a9a7c04e4f2ffcbc0b995fce677bb9">RowCount</a>;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="comment">// If no items in the set return an empty set</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keywordflow">if</span> (setSize == 0)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> List&lt;int&gt;(0);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            var checker = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm">RangeChecker</a>(<span class="keyword">this</span>, ranges);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">return</span> checker.Resolve();</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a96d912a818e9d31f618430989cf29195">  100</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> IEnumerable&lt;int&gt; <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a96d912a818e9d31f618430989cf29195">SelectAll</a>() {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            var rowList = <span class="keyword">new</span> List&lt;int&gt;(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1Table.htm">Table</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1Table.htm#ab1a9a7c04e4f2ffcbc0b995fce677bb9">RowCount</a>);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            var e = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1Table.htm">Table</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1Table.htm#a8bfafad5b00fa392c4ce36f00a886b75">GetEnumerator</a>();</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="keywordflow">while</span> (e.MoveNext()) {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                DoInsertSort(rowList, e.Current.RowId.RowNumber);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">return</span> rowList;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        }</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">        #region RangeChecker</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm">  111</a></span>&#160;        <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm">RangeChecker</a> {</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a46b0ed5a077d687bfffae0dadd5c44f8">  112</a></span>&#160;            <span class="keyword">private</span> readonly <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm">BlindSearchIndex</a> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a46b0ed5a077d687bfffae0dadd5c44f8">scheme</a>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#ab2d81215fbb1cdaf620869c8f7143c0e">  118</a></span>&#160;            <span class="keyword">private</span> IEnumerable&lt;int&gt; <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#ab2d81215fbb1cdaf620869c8f7143c0e">sortedSet</a>;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="comment">// The list of flags for each check in the range.</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="comment">// Either 0 for no check, 1 for &lt; or &gt;, 2 for &lt;= or &gt;=.</span></div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a7e9fe8da321cc9151efcd116a4d72ab8">  122</a></span>&#160;            <span class="keyword">private</span> readonly byte[] <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a7e9fe8da321cc9151efcd116a4d72ab8">lowerFlags</a>;</div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a5f7334737adf1b3ffd23956fdec59b00">  123</a></span>&#160;            <span class="keyword">private</span> readonly byte[] <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a5f7334737adf1b3ffd23956fdec59b00">upperFlags</a>;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <span class="comment">// The TObject objects to check against.</span></div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#afafa456e9dc6e4684f9eeae7ad33c549">  126</a></span>&#160;            <span class="keyword">private</span> readonly <a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>[] <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#afafa456e9dc6e4684f9eeae7ad33c549">lowerCells</a>;</div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#aa95c533b00ebc3c26dc3868b2b033643">  127</a></span>&#160;            <span class="keyword">private</span> readonly <a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>[] <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#aa95c533b00ebc3c26dc3868b2b033643">upperCells</a>;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a8a609e6d5d590608404f9a6e6e701730">  129</a></span>&#160;            <span class="keyword">private</span> <span class="keyword">const</span> byte NoCheck = 0;</div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a9b0a162feca7cf27b3ce15ce1ae664be">  130</a></span>&#160;            <span class="keyword">private</span> <span class="keyword">const</span> byte CheckLesserOrGreater = 1;</div>
<div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a43c12328870ce1eafe9e197a7e45b3ab">  131</a></span>&#160;            <span class="keyword">private</span> <span class="keyword">const</span> byte CheckLesserEqualOrGreaterEqual = 2; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a0719fe5573f3c055f59b15a7dfdf2e69">  133</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a0719fe5573f3c055f59b15a7dfdf2e69">RangeChecker</a>(<a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm">BlindSearchIndex</a> scheme, <a class="code" href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm">IndexRange</a>[] ranges) {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                this.scheme = scheme;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                <span class="keywordtype">int</span> size = ranges.Length;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                lowerFlags = <span class="keyword">new</span> byte[size];</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                upperFlags = <span class="keyword">new</span> byte[size];</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                lowerCells = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>[size];</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                upperCells = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>[size];</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; ranges.Length; ++i) {</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                    SetupRange(i, ranges[i]);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a9066e0f02d42d5fad0d5dd9d9b343782">  146</a></span>&#160;            <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a9066e0f02d42d5fad0d5dd9d9b343782">ResolveSortedSet</a>() {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                <span class="keywordflow">if</span> (sortedSet == null) {</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                    sortedSet = scheme.SelectAll();</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a6e3d20b2f8b10e836b421cb8e346ae73">  157</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a6e3d20b2f8b10e836b421cb8e346ae73">ResolveCell</a>(<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a> ob) {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                <span class="keywordflow">if</span> (ob.<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm#aaafd72f1bbb588779d4fbf0f5cd27818">Equals</a>(<a class="code" href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm">IndexRange</a>.<a class="code" href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm#a2b2f1367ba6e6ba4ec0ae6075bee1f7c">FirstInSet</a>)) {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                    ResolveSortedSet();</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                    <span class="keywordflow">return</span> scheme.GetValue(sortedSet.First());</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                <span class="keywordflow">if</span> (ob.<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm#aaafd72f1bbb588779d4fbf0f5cd27818">Equals</a>(<a class="code" href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm">IndexRange</a>.<a class="code" href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm#a33553bf4d3dd3366fe52ef3a36a4abae">LastInSet</a>)) {</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                    ResolveSortedSet();</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                    <span class="keywordflow">return</span> scheme.GetValue(sortedSet.Last());</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                <span class="keywordflow">return</span> ob;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            }</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a85505899d570aca7dab5898405749f4c">  176</a></span>&#160;            <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a85505899d570aca7dab5898405749f4c">SetupRange</a>(<span class="keywordtype">int</span> i, <a class="code" href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm">IndexRange</a> range) {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                var l = range.<a class="code" href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm#afaf4d124c2c5608f8758cb5c673a4d13">StartValue</a>;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                var lf = range.<a class="code" href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm#a4e60b7d75a13d1e47878766d9f6609b9">StartOffset</a>;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                var u = range.<a class="code" href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm#ae2347644aec9460e720eb714feab0f45">EndValue</a>;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                var uf = range.<a class="code" href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm#a4292b7e467cd8d3503b46037146c03b0">EndOffset</a>;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                <span class="comment">// Handle lower first</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                <span class="keywordflow">if</span> (l.Equals(<a class="code" href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm">IndexRange</a>.<a class="code" href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm#a2b2f1367ba6e6ba4ec0ae6075bee1f7c">FirstInSet</a>) &amp;&amp;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                    lf.Equals(<a class="code" href="namespaceDeveel_1_1Data_1_1Index.htm#a9004fa02174076840b6c401b13bed07b">RangeFieldOffset</a>.FirstValue)) {</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                    <span class="comment">// Special case no lower check</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                    lowerFlags[i] = NoCheck;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                    <span class="keywordflow">if</span> (lf.Equals(<a class="code" href="namespaceDeveel_1_1Data_1_1Index.htm#a9004fa02174076840b6c401b13bed07b">RangeFieldOffset</a>.FirstValue)) {</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                        lowerFlags[i] = CheckLesserEqualOrGreaterEqual;  <span class="comment">// &gt;=</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (lf.Equals(<a class="code" href="namespaceDeveel_1_1Data_1_1Index.htm#a9004fa02174076840b6c401b13bed07b">RangeFieldOffset</a>.AfterLastValue)) {</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                        lowerFlags[i] = CheckLesserOrGreater;  <span class="comment">// &gt;</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Incorrect lower flag.&quot;</span>);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                    }</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                    lowerCells[i] = ResolveCell(l);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                }</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                <span class="comment">// Now handle upper</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                <span class="keywordflow">if</span> (u.Equals(<a class="code" href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm">IndexRange</a>.<a class="code" href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm#a33553bf4d3dd3366fe52ef3a36a4abae">LastInSet</a>) &amp;&amp;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                    uf.Equals(<a class="code" href="namespaceDeveel_1_1Data_1_1Index.htm#a9004fa02174076840b6c401b13bed07b">RangeFieldOffset</a>.LastValue)) {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                    <span class="comment">// Special case no upper check</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                    upperFlags[i] = NoCheck;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                    <span class="keywordflow">if</span> (uf.Equals(<a class="code" href="namespaceDeveel_1_1Data_1_1Index.htm#a9004fa02174076840b6c401b13bed07b">RangeFieldOffset</a>.LastValue)) {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                        upperFlags[i] = CheckLesserEqualOrGreaterEqual;  <span class="comment">// &lt;=</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (uf.Equals( <a class="code" href="namespaceDeveel_1_1Data_1_1Index.htm#a9004fa02174076840b6c401b13bed07b">RangeFieldOffset</a>.BeforeFirstValue)) {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                        upperFlags[i] = CheckLesserOrGreater;  <span class="comment">// &lt;</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Incorrect upper flag.&quot;</span>);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                    }</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                    upperCells[i] = ResolveCell(u);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a1866bea0d84023750fdaca0e2bf62ce5">  220</a></span>&#160;            <span class="keyword">public</span> IEnumerable&lt;int&gt; <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a1866bea0d84023750fdaca0e2bf62ce5">Resolve</a>() {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                <span class="comment">// The idea here is to only need to scan the column once to find all</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                <span class="comment">// the cells that meet our criteria.</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                var list = <span class="keyword">new</span> List&lt;int&gt;();</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                var e = scheme.Table.GetEnumerator();</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                <span class="keywordtype">int</span> compareTally = 0;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                <span class="keywordtype">int</span> size = lowerFlags.Length;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                <span class="keywordflow">while</span> (e.MoveNext()) {</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                    <span class="keywordtype">int</span> row = e.Current.RowId.RowNumber;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                    <span class="comment">// For each range</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; size; ++i) {</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                        <span class="keywordtype">bool</span> result = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                        byte lf = lowerFlags[i];</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                        <span class="keywordflow">if</span> (lf != NoCheck) {</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                            ++compareTally;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                            var v = scheme.GetValue(row);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                            <span class="keywordtype">int</span> compare = lowerCells[i].CompareTo(v);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                            <span class="keywordflow">if</span> (lf == CheckLesserOrGreater) {  <span class="comment">// &gt;</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                                result = (compare &lt; 0);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (lf == CheckLesserEqualOrGreaterEqual) {  <span class="comment">// &gt;=</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                                result = (compare &lt;= 0);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Incorrect flag.&quot;</span>);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                            }</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                        }</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                        <span class="keywordflow">if</span> (result) {</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                            byte uf = upperFlags[i];</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                            <span class="keywordflow">if</span> (uf != NoCheck) {</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                ++compareTally;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                                var v = scheme.GetValue(row);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                                <span class="keywordtype">int</span> compare = upperCells[i].CompareTo(v);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                                <span class="keywordflow">if</span> (uf == CheckLesserOrGreater) {  <span class="comment">// &lt;</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                                    result = (compare &gt; 0);</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (uf == CheckLesserEqualOrGreaterEqual) {  <span class="comment">// &gt;=</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                                    result = (compare &gt;= 0);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                                    <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Incorrect flag.&quot;</span>);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                                }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                            }</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                            <span class="comment">// Pick this row</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                            <span class="keywordflow">if</span> (result) {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                                scheme.DoInsertSort(list, row);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                            }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                        }</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                    }</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                }</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                <span class="keywordflow">return</span> list.AsEnumerable();</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        }</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    }</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker_htm_a7e9fe8da321cc9151efcd116a4d72ab8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a7e9fe8da321cc9151efcd116a4d72ab8">Deveel.Data.Index.BlindSearchIndex.RangeChecker.lowerFlags</a></div><div class="ttdeci">readonly byte[] lowerFlags</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00122">BlindSearchIndex.cs:122</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1ITable_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1ITable.htm">Deveel.Data.Sql.Tables.ITable</a></div><div class="ttdoc">Defines the contract to access the data contained into a table of a database. </div><div class="ttdef"><b>Definition:</b> <a href="ITable_8cs_source.htm#l00040">ITable.cs:40</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker_htm_a46b0ed5a077d687bfffae0dadd5c44f8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a46b0ed5a077d687bfffae0dadd5c44f8">Deveel.Data.Index.BlindSearchIndex.RangeChecker.scheme</a></div><div class="ttdeci">readonly BlindSearchIndex scheme</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00112">BlindSearchIndex.cs:112</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_htm_a130636515dd0152b3dd9d538a0ced564"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a130636515dd0152b3dd9d538a0ced564">Deveel.Data.Index.BlindSearchIndex.Copy</a></div><div class="ttdeci">override ColumnIndex Copy(ITable table, bool readOnly)</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00078">BlindSearchIndex.cs:78</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1DataObject_htm_aaafd72f1bbb588779d4fbf0f5cd27818"><div class="ttname"><a href="classDeveel_1_1Data_1_1DataObject.htm#aaafd72f1bbb588779d4fbf0f5cd27818">Deveel.Data.DataObject.Equals</a></div><div class="ttdeci">override bool Equals(object obj)</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00179">DataObject.cs:179</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker_htm_a9066e0f02d42d5fad0d5dd9d9b343782"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a9066e0f02d42d5fad0d5dd9d9b343782">Deveel.Data.Index.BlindSearchIndex.RangeChecker.ResolveSortedSet</a></div><div class="ttdeci">void ResolveSortedSet()</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00146">BlindSearchIndex.cs:146</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker_htm_a1866bea0d84023750fdaca0e2bf62ce5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a1866bea0d84023750fdaca0e2bf62ce5">Deveel.Data.Index.BlindSearchIndex.RangeChecker.Resolve</a></div><div class="ttdeci">IEnumerable&lt; int &gt; Resolve()</div><div class="ttdoc">Resolves the ranges. </div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00220">BlindSearchIndex.cs:220</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Index_1_1IndexRange_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm">Deveel.Data.Index.IndexRange</a></div><div class="ttdoc">Describes the range of values to select from an index. </div><div class="ttdef"><b>Definition:</b> <a href="IndexRange_8cs_source.htm#l00038">IndexRange.cs:38</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1DefaultIndexTypes_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1DefaultIndexTypes.htm">Deveel.Data.Index.DefaultIndexTypes</a></div><div class="ttdef"><b>Definition:</b> <a href="DefaultIndexTypes_8cs_source.htm#l00020">DefaultIndexTypes.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker_htm_a6e3d20b2f8b10e836b421cb8e346ae73"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a6e3d20b2f8b10e836b421cb8e346ae73">Deveel.Data.Index.BlindSearchIndex.RangeChecker.ResolveCell</a></div><div class="ttdeci">DataObject ResolveCell(DataObject ob)</div><div class="ttdoc">Resolves a cell. </div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00157">BlindSearchIndex.cs:157</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Index_1_1IndexRange_htm_ae2347644aec9460e720eb714feab0f45"><div class="ttname"><a href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm#ae2347644aec9460e720eb714feab0f45">Deveel.Data.Index.IndexRange.EndValue</a></div><div class="ttdeci">DataObject EndValue</div><div class="ttdoc">Gets the last value of the range. </div><div class="ttdef"><b>Definition:</b> <a href="IndexRange_8cs_source.htm#l00103">IndexRange.cs:103</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm">Deveel.Data.Index.BlindSearchIndex</a></div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00025">BlindSearchIndex.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1Table_htm_a8bfafad5b00fa392c4ce36f00a886b75"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1Table.htm#a8bfafad5b00fa392c4ce36f00a886b75">Deveel.Data.Sql.Tables.Table.GetEnumerator</a></div><div class="ttdeci">abstract IEnumerator&lt; Row &gt; GetEnumerator()</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_htm_a650d47ece313540529911ee43acf3f71"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a650d47ece313540529911ee43acf3f71">Deveel.Data.Index.BlindSearchIndex.Insert</a></div><div class="ttdeci">override void Insert(int rowNumber)</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00082">BlindSearchIndex.cs:82</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Index_1_1IndexRange_htm_a2b2f1367ba6e6ba4ec0ae6075bee1f7c"><div class="ttname"><a href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm#a2b2f1367ba6e6ba4ec0ae6075bee1f7c">Deveel.Data.Index.IndexRange.FirstInSet</a></div><div class="ttdeci">static readonly DataObject FirstInSet</div><div class="ttdef"><b>Definition:</b> <a href="IndexRange_8cs_source.htm#l00042">IndexRange.cs:42</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Index_1_1IndexRange_htm_a4292b7e467cd8d3503b46037146c03b0"><div class="ttname"><a href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm#a4292b7e467cd8d3503b46037146c03b0">Deveel.Data.Index.IndexRange.EndOffset</a></div><div class="ttdeci">RangeFieldOffset EndOffset</div><div class="ttdoc">Gets the offset of the last value of the range. </div><div class="ttdef"><b>Definition:</b> <a href="IndexRange_8cs_source.htm#l00098">IndexRange.cs:98</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker_htm_a5f7334737adf1b3ffd23956fdec59b00"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a5f7334737adf1b3ffd23956fdec59b00">Deveel.Data.Index.BlindSearchIndex.RangeChecker.upperFlags</a></div><div class="ttdeci">readonly byte[] upperFlags</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00123">BlindSearchIndex.cs:123</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_htm_a96d912a818e9d31f618430989cf29195"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a96d912a818e9d31f618430989cf29195">Deveel.Data.Index.BlindSearchIndex.SelectAll</a></div><div class="ttdeci">override IEnumerable&lt; int &gt; SelectAll()</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00100">BlindSearchIndex.cs:100</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Tables_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Tables.htm">Deveel.Data.Sql.Tables</a></div><div class="ttdef"><b>Definition:</b> <a href="BaseDataTable_8cs_source.htm#l00025">BaseDataTable.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker_htm_ab2d81215fbb1cdaf620869c8f7143c0e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#ab2d81215fbb1cdaf620869c8f7143c0e">Deveel.Data.Index.BlindSearchIndex.RangeChecker.sortedSet</a></div><div class="ttdeci">IEnumerable&lt; int &gt; sortedSet</div><div class="ttdoc">The sorted list of all items in the set created as a cache for finding the first and last values...</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00118">BlindSearchIndex.cs:118</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1ColumnIndex_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1ColumnIndex.htm">Deveel.Data.Index.ColumnIndex</a></div><div class="ttdef"><b>Definition:</b> <a href="ColumnIndex_8cs_source.htm#l00025">ColumnIndex.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_htm_a08934240078ccd6b9448c7a8ee27f783"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a08934240078ccd6b9448c7a8ee27f783">Deveel.Data.Index.BlindSearchIndex.BlindSearchIndex</a></div><div class="ttdeci">BlindSearchIndex(ITable table, int columnOffset)</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00026">BlindSearchIndex.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1DataObject_htm_a8892431e41e335c606f99f5a971b0102"><div class="ttname"><a href="classDeveel_1_1Data_1_1DataObject.htm#a8892431e41e335c606f99f5a971b0102">Deveel.Data.DataObject.CompareTo</a></div><div class="ttdeci">int CompareTo(DataObject other)</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00131">DataObject.cs:131</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm">Deveel.Data.Index.BlindSearchIndex.RangeChecker</a></div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00111">BlindSearchIndex.cs:111</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1DataObject_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1DataObject.htm">Deveel.Data.DataObject</a></div><div class="ttdoc">Represents a dynamic object that encapsulates a defined SqlType and a compatible constant ISqlObject ...</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00035">DataObject.cs:35</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Index_1_1IndexRange_htm_afaf4d124c2c5608f8758cb5c673a4d13"><div class="ttname"><a href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm#afaf4d124c2c5608f8758cb5c673a4d13">Deveel.Data.Index.IndexRange.StartValue</a></div><div class="ttdeci">DataObject StartValue</div><div class="ttdoc">Gets the first value of the range. </div><div class="ttdef"><b>Definition:</b> <a href="IndexRange_8cs_source.htm#l00093">IndexRange.cs:93</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker_htm_afafa456e9dc6e4684f9eeae7ad33c549"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#afafa456e9dc6e4684f9eeae7ad33c549">Deveel.Data.Index.BlindSearchIndex.RangeChecker.lowerCells</a></div><div class="ttdeci">readonly DataObject[] lowerCells</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00126">BlindSearchIndex.cs:126</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_htm_a447f8ba28eb7b086bd7b25356799106c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a447f8ba28eb7b086bd7b25356799106c">Deveel.Data.Index.BlindSearchIndex.AssertNotReadOnly</a></div><div class="ttdeci">void AssertNotReadOnly()</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00034">BlindSearchIndex.cs:34</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker_htm_a0719fe5573f3c055f59b15a7dfdf2e69"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a0719fe5573f3c055f59b15a7dfdf2e69">Deveel.Data.Index.BlindSearchIndex.RangeChecker.RangeChecker</a></div><div class="ttdeci">RangeChecker(BlindSearchIndex scheme, IndexRange[] ranges)</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00133">BlindSearchIndex.cs:133</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Index_1_1IndexRange_htm_a33553bf4d3dd3366fe52ef3a36a4abae"><div class="ttname"><a href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm#a33553bf4d3dd3366fe52ef3a36a4abae">Deveel.Data.Index.IndexRange.LastInSet</a></div><div class="ttdeci">static readonly DataObject LastInSet</div><div class="ttdef"><b>Definition:</b> <a href="IndexRange_8cs_source.htm#l00047">IndexRange.cs:47</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker_htm_a85505899d570aca7dab5898405749f4c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#a85505899d570aca7dab5898405749f4c">Deveel.Data.Index.BlindSearchIndex.RangeChecker.SetupRange</a></div><div class="ttdeci">void SetupRange(int i, IndexRange range)</div><div class="ttdoc">Set up a range. </div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00176">BlindSearchIndex.cs:176</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1DefaultIndexTypes_htm_a1728b26c621ee2e90f9897783c9ba438"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1DefaultIndexTypes.htm#a1728b26c621ee2e90f9897783c9ba438">Deveel.Data.Index.DefaultIndexTypes.BlindSearch</a></div><div class="ttdeci">const string BlindSearch</div><div class="ttdef"><b>Definition:</b> <a href="DefaultIndexTypes_8cs_source.htm#l00021">DefaultIndexTypes.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1Table_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1Table.htm">Deveel.Data.Sql.Tables.Table</a></div><div class="ttdef"><b>Definition:</b> <a href="Table_8cs_source.htm#l00026">Table.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_htm_abd6263ecab9f3bacc7ce2652e4fb8d7a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#abd6263ecab9f3bacc7ce2652e4fb8d7a">Deveel.Data.Index.BlindSearchIndex.SelectRange</a></div><div class="ttdeci">override IEnumerable&lt; int &gt; SelectRange(IndexRange[] ranges)</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00090">BlindSearchIndex.cs:90</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Index_htm_a9004fa02174076840b6c401b13bed07b"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Index.htm#a9004fa02174076840b6c401b13bed07b">Deveel.Data.Index.RangeFieldOffset</a></div><div class="ttdeci">RangeFieldOffset</div><div class="ttdoc">The absolute offset of a field in a range of a selection. </div><div class="ttdef"><b>Definition:</b> <a href="RangeFieldOffset_8cs_source.htm#l00024">RangeFieldOffset.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker_htm_aa95c533b00ebc3c26dc3868b2b033643"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_1_1RangeChecker.htm#aa95c533b00ebc3c26dc3868b2b033643">Deveel.Data.Index.BlindSearchIndex.RangeChecker.upperCells</a></div><div class="ttdeci">readonly DataObject[] upperCells</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00127">BlindSearchIndex.cs:127</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_htm_a34180daea96d43857a42a7201974d044"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a34180daea96d43857a42a7201974d044">Deveel.Data.Index.BlindSearchIndex.DoInsertSort</a></div><div class="ttdeci">void DoInsertSort(IList&lt; int &gt; list, int row)</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00064">BlindSearchIndex.cs:64</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm">Deveel.Data.Sql</a></div><div class="ttdef"><b>Definition:</b> <a href="CellId_8cs_source.htm#l00022">CellId.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1Table_htm_ab1a9a7c04e4f2ffcbc0b995fce677bb9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1Table.htm#ab1a9a7c04e4f2ffcbc0b995fce677bb9">Deveel.Data.Sql.Tables.Table.RowCount</a></div><div class="ttdeci">abstract int RowCount</div><div class="ttdef"><b>Definition:</b> <a href="Table_8cs_source.htm#l00067">Table.cs:67</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_htm_a3fc66eb32d79799cca5672ace6fe230f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#a3fc66eb32d79799cca5672ace6fe230f">Deveel.Data.Index.BlindSearchIndex.Remove</a></div><div class="ttdeci">override void Remove(int rowNumber)</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00086">BlindSearchIndex.cs:86</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex_htm_acb24986b6d99ab7c6dd734f41a7572d9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlindSearchIndex.htm#acb24986b6d99ab7c6dd734f41a7572d9">Deveel.Data.Index.BlindSearchIndex.HighestSearch</a></div><div class="ttdeci">int HighestSearch(DataObject ob, IList&lt; int &gt; list, int lower, int higher)</div><div class="ttdef"><b>Definition:</b> <a href="BlindSearchIndex_8cs_source.htm#l00039">BlindSearchIndex.cs:39</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Index_1_1IndexRange_htm_a4e60b7d75a13d1e47878766d9f6609b9"><div class="ttname"><a href="structDeveel_1_1Data_1_1Index_1_1IndexRange.htm#a4e60b7d75a13d1e47878766d9f6609b9">Deveel.Data.Index.IndexRange.StartOffset</a></div><div class="ttdeci">RangeFieldOffset StartOffset</div><div class="ttdoc">Gets the offset of the first value of the range. </div><div class="ttdef"><b>Definition:</b> <a href="IndexRange_8cs_source.htm#l00088">IndexRange.cs:88</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
