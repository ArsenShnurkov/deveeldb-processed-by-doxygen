<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Sql.Objects.SqlNumberTests Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm">Objects</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumberTests.htm">SqlNumberTests</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumberTests-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Sql.Objects.SqlNumberTests Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a20bcefae70d4c829d17b3e3ff1eccb42"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumberTests.htm#a20bcefae70d4c829d17b3e3ff1eccb42">Create_FromInteger</a> ()</td></tr>
<tr class="separator:a20bcefae70d4c829d17b3e3ff1eccb42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84b5f968fccc844dab06e9a2ffc68c18"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumberTests.htm#a84b5f968fccc844dab06e9a2ffc68c18">Create_FromBigInt</a> ()</td></tr>
<tr class="separator:a84b5f968fccc844dab06e9a2ffc68c18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cbb70f9c1ca06398415cce534d11c14"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumberTests.htm#a0cbb70f9c1ca06398415cce534d11c14">Create_FromDouble</a> ()</td></tr>
<tr class="separator:a0cbb70f9c1ca06398415cce534d11c14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47552ffa1d7bdc2cdca291afeb75e012"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumberTests.htm#a47552ffa1d7bdc2cdca291afeb75e012">Parse_BigDecimal</a> ()</td></tr>
<tr class="separator:a47552ffa1d7bdc2cdca291afeb75e012"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec1ad020140fb402907647a9123d3182"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumberTests.htm#aec1ad020140fb402907647a9123d3182">Convert_ToBoolean_Success</a> ()</td></tr>
<tr class="separator:aec1ad020140fb402907647a9123d3182"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f086c77aaf9c25845ad3b77e3d004e9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumberTests.htm#a6f086c77aaf9c25845ad3b77e3d004e9">Integer_Greater_True</a> ()</td></tr>
<tr class="separator:a6f086c77aaf9c25845ad3b77e3d004e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aadaa59bca8a0e670f0e8f3e0c36aa541"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumberTests.htm#aadaa59bca8a0e670f0e8f3e0c36aa541">BigNumber_Greater_True</a> ()</td></tr>
<tr class="separator:aadaa59bca8a0e670f0e8f3e0c36aa541"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="SqlNumberTests_8cs_source.htm#l00024">24</a> of file <a class="el" href="SqlNumberTests_8cs_source.htm">SqlNumberTests.cs</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aadaa59bca8a0e670f0e8f3e0c36aa541"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Sql.Objects.SqlNumberTests.BigNumber_Greater_True </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlNumberTests_8cs_source.htm#l00088">88</a> of file <a class="el" href="SqlNumberTests_8cs_source.htm">SqlNumberTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                                                    {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            var value1 = SqlNumber.Parse(<span class="stringliteral">&quot;98356278.911288837773848500069994933229238e45789&quot;</span>);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            var value2 = SqlNumber.Parse(<span class="stringliteral">&quot;348299.01991828833333333333488888388829911182227373738488847112349928&quot;</span>);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            Assert.IsTrue(value1 &gt; value2);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aec1ad020140fb402907647a9123d3182"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlNumberTests.Convert_ToBoolean_Success </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlNumberTests_8cs_source.htm#l00072">72</a> of file <a class="el" href="SqlNumberTests_8cs_source.htm">SqlNumberTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                                {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            var value = SqlNumber.One;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            var b = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>();</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            Assert.DoesNotThrow(() =&gt; b = (<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>)Convert.ChangeType(value, typeof(<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>)));</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            Assert.IsTrue(b);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a5611a45679d0938ba19c3f26d7385e67"><div class="ttname"><a href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlBoolean SqlBoolean</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00026">DataObject.cs:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a84b5f968fccc844dab06e9a2ffc68c18"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlNumberTests.Create_FromBigInt </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlNumberTests_8cs_source.htm#l00038">38</a> of file <a class="el" href="SqlNumberTests_8cs_source.htm">SqlNumberTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                                        {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            var value = <span class="keyword">new</span> SqlNumber(4599356655L);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            Assert.IsFalse(value.IsNull);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            Assert.IsFalse(value.CanBeInt32);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            Assert.IsTrue(value.CanBeInt64);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            Assert.AreEqual(0, value.Scale);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            Assert.AreEqual(10, value.Precision);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            Assert.AreEqual(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, value.State);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            Assert.AreEqual(1, value.Sign);         </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Objects_htm_afe7dfc9aa4bf3283014653f9d5020327"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">Deveel.Data.Sql.Objects.NumericState</a></div><div class="ttdeci">NumericState</div><div class="ttdoc">Lists all the possible special states of a number. </div><div class="ttdef"><b>Definition:</b> <a href="NumericState_8cs_source.htm#l00021">NumericState.cs:21</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0cbb70f9c1ca06398415cce534d11c14"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlNumberTests.Create_FromDouble </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlNumberTests_8cs_source.htm#l00050">50</a> of file <a class="el" href="SqlNumberTests_8cs_source.htm">SqlNumberTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                                        {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            var value = <span class="keyword">new</span> SqlNumber(459935.9803d);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            Assert.IsFalse(value.IsNull);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            Assert.IsFalse(value.CanBeInt32);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            Assert.IsFalse(value.CanBeInt64);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            Assert.AreEqual(28, value.Scale);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            Assert.AreEqual(34, value.Precision);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            Assert.AreEqual(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, value.State);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            Assert.AreEqual(1, value.Sign);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Objects_htm_afe7dfc9aa4bf3283014653f9d5020327"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">Deveel.Data.Sql.Objects.NumericState</a></div><div class="ttdeci">NumericState</div><div class="ttdoc">Lists all the possible special states of a number. </div><div class="ttdef"><b>Definition:</b> <a href="NumericState_8cs_source.htm#l00021">NumericState.cs:21</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a20bcefae70d4c829d17b3e3ff1eccb42"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlNumberTests.Create_FromInteger </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlNumberTests_8cs_source.htm#l00026">26</a> of file <a class="el" href="SqlNumberTests_8cs_source.htm">SqlNumberTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                                         {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            var value = <span class="keyword">new</span> SqlNumber((<span class="keywordtype">int</span>) 45993);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            Assert.IsFalse(value.IsNull);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            Assert.IsTrue(value.CanBeInt32);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            Assert.IsTrue(value.CanBeInt64);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            Assert.AreEqual(0, value.Scale);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            Assert.AreEqual(5, value.Precision);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            Assert.AreEqual(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, value.State);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            Assert.AreEqual(1, value.Sign);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Objects_htm_afe7dfc9aa4bf3283014653f9d5020327"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">Deveel.Data.Sql.Objects.NumericState</a></div><div class="ttdeci">NumericState</div><div class="ttdoc">Lists all the possible special states of a number. </div><div class="ttdef"><b>Definition:</b> <a href="NumericState_8cs_source.htm#l00021">NumericState.cs:21</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6f086c77aaf9c25845ad3b77e3d004e9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlNumberTests.Integer_Greater_True </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlNumberTests_8cs_source.htm#l00080">80</a> of file <a class="el" href="SqlNumberTests_8cs_source.htm">SqlNumberTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                                           {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            var value1 = <span class="keyword">new</span> SqlNumber(76);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            var value2 = <span class="keyword">new</span> SqlNumber(54);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            Assert.IsTrue(value1 &gt; value2);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a47552ffa1d7bdc2cdca291afeb75e012"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlNumberTests.Parse_BigDecimal </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlNumberTests_8cs_source.htm#l00062">62</a> of file <a class="el" href="SqlNumberTests_8cs_source.htm">SqlNumberTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                       {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            var value = <span class="keyword">new</span> SqlNumber();</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            Assert.DoesNotThrow(() =&gt; value = SqlNumber.Parse(<span class="stringliteral">&quot;98356278.911288837773848500069994933229238e45789&quot;</span>));</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            Assert.IsFalse(value.IsNull);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            Assert.IsFalse(value.CanBeInt32);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            Assert.IsFalse(value.CanBeInt64);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            Assert.Greater(value.Precision, 40);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb-nunit/Deveel.Data.Sql.Objects/<a class="el" href="SqlNumberTests_8cs_source.htm">SqlNumberTests.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
