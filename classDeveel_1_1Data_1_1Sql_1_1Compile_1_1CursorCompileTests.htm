<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Sql.Compile.CursorCompileTests Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Compile.htm">Compile</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm">CursorCompileTests</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Sql.Compile.CursorCompileTests Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for Deveel.Data.Sql.Compile.CursorCompileTests:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.png" usemap="#Deveel.Data.Sql.Compile.CursorCompileTests_map" alt=""/>
  <map id="Deveel.Data.Sql.Compile.CursorCompileTests_map" name="Deveel.Data.Sql.Compile.CursorCompileTests_map">
<area href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm" alt="Deveel.Data.Sql.Compile.SqlCompileTestBase" shape="rect" coords="0,0,288,24"/>
<area href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm" alt="Deveel.Data.Sql.Compile.AlterTableCompileTests" shape="rect" coords="0,112,288,136"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0dbd71a7e7ca2ca312be252da0adea68"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#a0dbd71a7e7ca2ca312be252da0adea68">DeclareCursorWithArguments</a> ()</td></tr>
<tr class="separator:a0dbd71a7e7ca2ca312be252da0adea68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4d697f76370f790d9bb3909b7d05d1b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#af4d697f76370f790d9bb3909b7d05d1b">ImplicitDeclareCursor</a> ()</td></tr>
<tr class="separator:af4d697f76370f790d9bb3909b7d05d1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b1b32dd0fd202a6c956b0f1dc7cac75"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#a2b1b32dd0fd202a6c956b0f1dc7cac75">DeclareCursorWithoutArguments</a> ()</td></tr>
<tr class="separator:a2b1b32dd0fd202a6c956b0f1dc7cac75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab624d83595cf29a23cb5457f8002ea2b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#ab624d83595cf29a23cb5457f8002ea2b">OpenCursorWithArguments</a> ()</td></tr>
<tr class="separator:ab624d83595cf29a23cb5457f8002ea2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0de515d43181bb25e44213db130d787c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#a0de515d43181bb25e44213db130d787c">OpenCursorSimple</a> ()</td></tr>
<tr class="separator:a0de515d43181bb25e44213db130d787c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb5c06a0e3ea94fb8822d2e44e5cf3a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#acb5c06a0e3ea94fb8822d2e44e5cf3a7">CloseCursor</a> ()</td></tr>
<tr class="separator:acb5c06a0e3ea94fb8822d2e44e5cf3a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fb90ab0fab17c5ad1e51ce7bf2fce61"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#a2fb90ab0fab17c5ad1e51ce7bf2fce61">FetchNextFromCursorInto</a> ()</td></tr>
<tr class="separator:a2fb90ab0fab17c5ad1e51ce7bf2fce61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ae95d52ee655d25236595681a2074c5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#a1ae95d52ee655d25236595681a2074c5">FetchNextImplicitCursor</a> ()</td></tr>
<tr class="separator:a1ae95d52ee655d25236595681a2074c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm">Deveel.Data.Sql.Compile.SqlCompileTestBase</a></td></tr>
<tr class="memitem:a649370af1dfa33626db2ca5e78662b8c inherit pro_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileResult.htm">SqlCompileResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Compile</a> (string sql)</td></tr>
<tr class="separator:a649370af1dfa33626db2ca5e78662b8c inherit pro_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="CursorCompileTests_8cs_source.htm#l00010">10</a> of file <a class="el" href="CursorCompileTests_8cs_source.htm">CursorCompileTests.cs</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="acb5c06a0e3ea94fb8822d2e44e5cf3a7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Compile.CursorCompileTests.CloseCursor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CursorCompileTests_8cs_source.htm#l00127">127</a> of file <a class="el" href="CursorCompileTests_8cs_source.htm">CursorCompileTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                  {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;CLOSE test_cursor&quot;</span>;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            var result = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Compile</a>(sql);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            Assert.AreEqual(1, result.Statements.Count);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            var statement = result.Statements.FirstOrDefault();</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            Assert.IsNotNull(statement);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1CloseStatement.htm">CloseStatement</a>&gt;(statement);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            var cursorStatement = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1CloseStatement.htm">CloseStatement</a>) statement;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;test_cursor&quot;</span>, cursorStatement.CursorName);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1CloseStatement_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1CloseStatement.htm">Deveel.Data.Sql.Statements.CloseStatement</a></div><div class="ttdef"><b>Definition:</b> <a href="CloseStatement_8cs_source.htm#l00024">CloseStatement.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase_htm_a649370af1dfa33626db2ca5e78662b8c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Deveel.Data.Sql.Compile.SqlCompileTestBase.Compile</a></div><div class="ttdeci">SqlCompileResult Compile(string sql)</div><div class="ttdef"><b>Definition:</b> <a href="SqlCompileTestBase_8cs_source.htm#l00008">SqlCompileTestBase.cs:8</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0dbd71a7e7ca2ca312be252da0adea68"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Compile.CursorCompileTests.DeclareCursorWithArguments </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CursorCompileTests_8cs_source.htm#l00012">12</a> of file <a class="el" href="CursorCompileTests_8cs_source.htm">CursorCompileTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;                                                 {</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;DECLARE CURSOR test_cursor (a INT, b VARCHAR) IS SELECT * FROM test_table WHERE test_table.a = a&quot;</span>;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;            var result = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Compile</a>(sql);</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;            Assert.AreEqual(1, result.Statements.Count);</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;            var statement = result.Statements.FirstOrDefault();</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;            Assert.IsNotNull(statement);</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DeclareCursorStatement.htm">DeclareCursorStatement</a>&gt;(statement);</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            var cursorStatement = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DeclareCursorStatement.htm">DeclareCursorStatement</a>) statement;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;test_cursor&quot;</span>, cursorStatement.CursorName);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            Assert.IsNotEmpty(cursorStatement.Parameters);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            Assert.IsNotNull(cursorStatement.QueryExpression);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase_htm_a649370af1dfa33626db2ca5e78662b8c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Deveel.Data.Sql.Compile.SqlCompileTestBase.Compile</a></div><div class="ttdeci">SqlCompileResult Compile(string sql)</div><div class="ttdef"><b>Definition:</b> <a href="SqlCompileTestBase_8cs_source.htm#l00008">SqlCompileTestBase.cs:8</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DeclareCursorStatement_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DeclareCursorStatement.htm">Deveel.Data.Sql.Statements.DeclareCursorStatement</a></div><div class="ttdef"><b>Definition:</b> <a href="DeclareCursorStatement_8cs_source.htm#l00031">DeclareCursorStatement.cs:31</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2b1b32dd0fd202a6c956b0f1dc7cac75"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Compile.CursorCompileTests.DeclareCursorWithoutArguments </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CursorCompileTests_8cs_source.htm#l00059">59</a> of file <a class="el" href="CursorCompileTests_8cs_source.htm">CursorCompileTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                                    {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;DECLARE CURSOR test_cursor IS SELECT * FROM test_table WHERE test_table.a &gt; 0&quot;</span>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            var result = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Compile</a>(sql);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            Assert.AreEqual(1, result.Statements.Count);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            var statement = result.Statements.FirstOrDefault();</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            Assert.IsNotNull(statement);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DeclareCursorStatement.htm">DeclareCursorStatement</a>&gt;(statement);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            var cursorStatement = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DeclareCursorStatement.htm">DeclareCursorStatement</a>) statement;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;test_cursor&quot;</span>, cursorStatement.CursorName);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            Assert.IsEmpty(cursorStatement.Parameters);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            Assert.IsNotNull(cursorStatement.QueryExpression);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase_htm_a649370af1dfa33626db2ca5e78662b8c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Deveel.Data.Sql.Compile.SqlCompileTestBase.Compile</a></div><div class="ttdeci">SqlCompileResult Compile(string sql)</div><div class="ttdef"><b>Definition:</b> <a href="SqlCompileTestBase_8cs_source.htm#l00008">SqlCompileTestBase.cs:8</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DeclareCursorStatement_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DeclareCursorStatement.htm">Deveel.Data.Sql.Statements.DeclareCursorStatement</a></div><div class="ttdef"><b>Definition:</b> <a href="DeclareCursorStatement_8cs_source.htm#l00031">DeclareCursorStatement.cs:31</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2fb90ab0fab17c5ad1e51ce7bf2fce61"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Compile.CursorCompileTests.FetchNextFromCursorInto </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CursorCompileTests_8cs_source.htm#l00148">148</a> of file <a class="el" href="CursorCompileTests_8cs_source.htm">CursorCompileTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                                              {</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;FETCH NEXT FROM test_cursor INTO test_table&quot;</span>;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            var result = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Compile</a>(sql);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            Assert.AreEqual(1, result.Statements.Count);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            var statement = result.Statements.FirstOrDefault();</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            Assert.IsNotNull(statement);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1FetchStatement.htm">FetchStatement</a>&gt;(statement);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            var cursorStatement = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1FetchStatement.htm">FetchStatement</a>) statement;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;test_cursor&quot;</span>, cursorStatement.CursorName);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase_htm_a649370af1dfa33626db2ca5e78662b8c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Deveel.Data.Sql.Compile.SqlCompileTestBase.Compile</a></div><div class="ttdeci">SqlCompileResult Compile(string sql)</div><div class="ttdef"><b>Definition:</b> <a href="SqlCompileTestBase_8cs_source.htm#l00008">SqlCompileTestBase.cs:8</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1FetchStatement_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1FetchStatement.htm">Deveel.Data.Sql.Statements.FetchStatement</a></div><div class="ttdef"><b>Definition:</b> <a href="FetchStatement_8cs_source.htm#l00007">FetchStatement.cs:7</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1ae95d52ee655d25236595681a2074c5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Compile.CursorCompileTests.FetchNextImplicitCursor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CursorCompileTests_8cs_source.htm#l00169">169</a> of file <a class="el" href="CursorCompileTests_8cs_source.htm">CursorCompileTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                                              {</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;FETCH NEXT&quot;</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            var result = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Compile</a>(sql);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            Assert.AreEqual(1, result.Statements.Count);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            var statement = result.Statements.FirstOrDefault();</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            Assert.IsNotNull(statement);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1FetchStatement.htm">FetchStatement</a>&gt;(statement);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            var cursorStatement = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1FetchStatement.htm">FetchStatement</a>) statement;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            Assert.IsNullOrEmpty(cursorStatement.CursorName);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase_htm_a649370af1dfa33626db2ca5e78662b8c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Deveel.Data.Sql.Compile.SqlCompileTestBase.Compile</a></div><div class="ttdeci">SqlCompileResult Compile(string sql)</div><div class="ttdef"><b>Definition:</b> <a href="SqlCompileTestBase_8cs_source.htm#l00008">SqlCompileTestBase.cs:8</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1FetchStatement_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1FetchStatement.htm">Deveel.Data.Sql.Statements.FetchStatement</a></div><div class="ttdef"><b>Definition:</b> <a href="FetchStatement_8cs_source.htm#l00007">FetchStatement.cs:7</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af4d697f76370f790d9bb3909b7d05d1b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Compile.CursorCompileTests.ImplicitDeclareCursor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CursorCompileTests_8cs_source.htm#l00035">35</a> of file <a class="el" href="CursorCompileTests_8cs_source.htm">CursorCompileTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                                            {</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;CURSOR test_cursor (a INT, b VARCHAR) IS SELECT * FROM test_table WHERE test_table.a = a&quot;</span>;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            var result = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Compile</a>(sql);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            Assert.AreEqual(1, result.Statements.Count);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            var statement = result.Statements.FirstOrDefault();</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            Assert.IsNotNull(statement);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DeclareCursorStatement.htm">DeclareCursorStatement</a>&gt;(statement);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            var cursorStatement = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DeclareCursorStatement.htm">DeclareCursorStatement</a>) statement;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;test_cursor&quot;</span>, cursorStatement.CursorName);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            Assert.IsNotEmpty(cursorStatement.Parameters);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            Assert.IsNotNull(cursorStatement.QueryExpression);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase_htm_a649370af1dfa33626db2ca5e78662b8c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Deveel.Data.Sql.Compile.SqlCompileTestBase.Compile</a></div><div class="ttdeci">SqlCompileResult Compile(string sql)</div><div class="ttdef"><b>Definition:</b> <a href="SqlCompileTestBase_8cs_source.htm#l00008">SqlCompileTestBase.cs:8</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DeclareCursorStatement_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DeclareCursorStatement.htm">Deveel.Data.Sql.Statements.DeclareCursorStatement</a></div><div class="ttdef"><b>Definition:</b> <a href="DeclareCursorStatement_8cs_source.htm#l00031">DeclareCursorStatement.cs:31</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0de515d43181bb25e44213db130d787c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Compile.CursorCompileTests.OpenCursorSimple </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CursorCompileTests_8cs_source.htm#l00105">105</a> of file <a class="el" href="CursorCompileTests_8cs_source.htm">CursorCompileTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                                       {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;OPEN test_cursor&quot;</span>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            var result = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Compile</a>(sql);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            Assert.AreEqual(1, result.Statements.Count);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            var statement = result.Statements.FirstOrDefault();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            Assert.IsNotNull(statement);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1OpenStatement.htm">OpenStatement</a>&gt;(statement);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            var cursorStatement = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1OpenStatement.htm">OpenStatement</a>) statement;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;test_cursor&quot;</span>, cursorStatement.CursorName);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            Assert.IsEmpty(cursorStatement.Arguments);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase_htm_a649370af1dfa33626db2ca5e78662b8c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Deveel.Data.Sql.Compile.SqlCompileTestBase.Compile</a></div><div class="ttdeci">SqlCompileResult Compile(string sql)</div><div class="ttdef"><b>Definition:</b> <a href="SqlCompileTestBase_8cs_source.htm#l00008">SqlCompileTestBase.cs:8</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1OpenStatement_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1OpenStatement.htm">Deveel.Data.Sql.Statements.OpenStatement</a></div><div class="ttdef"><b>Definition:</b> <a href="OpenStatement_8cs_source.htm#l00026">OpenStatement.cs:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab624d83595cf29a23cb5457f8002ea2b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Compile.CursorCompileTests.OpenCursorWithArguments </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CursorCompileTests_8cs_source.htm#l00083">83</a> of file <a class="el" href="CursorCompileTests_8cs_source.htm">CursorCompileTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                                              {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;OPEN test_cursor (22, b)&quot;</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            var result = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Compile</a>(sql);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            Assert.AreEqual(1, result.Statements.Count);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            var statement = result.Statements.FirstOrDefault();</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            Assert.IsNotNull(statement);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1OpenStatement.htm">OpenStatement</a>&gt;(statement);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            var cursorStatement = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1OpenStatement.htm">OpenStatement</a>) statement;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;test_cursor&quot;</span>, cursorStatement.CursorName);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            Assert.IsNotEmpty(cursorStatement.Arguments);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase_htm_a649370af1dfa33626db2ca5e78662b8c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Deveel.Data.Sql.Compile.SqlCompileTestBase.Compile</a></div><div class="ttdeci">SqlCompileResult Compile(string sql)</div><div class="ttdef"><b>Definition:</b> <a href="SqlCompileTestBase_8cs_source.htm#l00008">SqlCompileTestBase.cs:8</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1OpenStatement_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1OpenStatement.htm">Deveel.Data.Sql.Statements.OpenStatement</a></div><div class="ttdef"><b>Definition:</b> <a href="OpenStatement_8cs_source.htm#l00026">OpenStatement.cs:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb-nunit/Deveel.Data.Sql.Compile/<a class="el" href="CursorCompileTests_8cs_source.htm">CursorCompileTests.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
