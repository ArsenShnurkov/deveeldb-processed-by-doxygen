<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Sql.Objects.SqlStringTests Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm">Objects</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm">SqlStringTests</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Sql.Objects.SqlStringTests Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3f2a9b8dda43ca7a68ba2c5469470bad"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a3f2a9b8dda43ca7a68ba2c5469470bad">String_Create</a> ()</td></tr>
<tr class="separator:a3f2a9b8dda43ca7a68ba2c5469470bad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2de9c94aa5883df14263df38955b99aa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a2de9c94aa5883df14263df38955b99aa">String_Compare_Equal</a> ()</td></tr>
<tr class="separator:a2de9c94aa5883df14263df38955b99aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacc6c8d080f07e943dabdbc27df6ec1a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#aacc6c8d080f07e943dabdbc27df6ec1a">String_Equals</a> ()</td></tr>
<tr class="separator:aacc6c8d080f07e943dabdbc27df6ec1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa90f1296960383b232808ce1503a5974"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#aa90f1296960383b232808ce1503a5974">String_Concat</a> ()</td></tr>
<tr class="separator:aa90f1296960383b232808ce1503a5974"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d33fa85fded24792d333afc601343f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a2d33fa85fded24792d333afc601343f5">String_EqualsToNull</a> ()</td></tr>
<tr class="separator:a2d33fa85fded24792d333afc601343f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1868d0d4a8685c8f5111a3a63b3b1b45"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a1868d0d4a8685c8f5111a3a63b3b1b45">String_Convert_TimeStamp</a> ()</td></tr>
<tr class="separator:a1868d0d4a8685c8f5111a3a63b3b1b45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a017dc8cf4483ce492c8df7c5ccfcd1e9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a017dc8cf4483ce492c8df7c5ccfcd1e9">String_Convert_Time</a> ()</td></tr>
<tr class="separator:a017dc8cf4483ce492c8df7c5ccfcd1e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75ae42b2383c3d14c762d2eec6a1cc3c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a75ae42b2383c3d14c762d2eec6a1cc3c">String_Convert_Date</a> ()</td></tr>
<tr class="separator:a75ae42b2383c3d14c762d2eec6a1cc3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d67075691bd1e9bfa2bf80f00013b4b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a8d67075691bd1e9bfa2bf80f00013b4b">String_Convert_BigNumber</a> ()</td></tr>
<tr class="separator:a8d67075691bd1e9bfa2bf80f00013b4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accaeefd8c9f492e5185acbc5ec929a57"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#accaeefd8c9f492e5185acbc5ec929a57">String_Convert_BooleanTrue</a> ()</td></tr>
<tr class="separator:accaeefd8c9f492e5185acbc5ec929a57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98753345221304619731b62e5c0abe3a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a98753345221304619731b62e5c0abe3a">String_Convert_BooleanFalse</a> ()</td></tr>
<tr class="separator:a98753345221304619731b62e5c0abe3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4afbce7dc898e474f66d399de8f229c9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a4afbce7dc898e474f66d399de8f229c9">String_Convert_BooleanNull</a> ()</td></tr>
<tr class="separator:a4afbce7dc898e474f66d399de8f229c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="SqlStringTests_8cs_source.htm#l00024">24</a> of file <a class="el" href="SqlStringTests_8cs_source.htm">SqlStringTests.cs</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a2de9c94aa5883df14263df38955b99aa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlStringTests.String_Compare_Equal </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlStringTests_8cs_source.htm#l00037">37</a> of file <a class="el" href="SqlStringTests_8cs_source.htm">SqlStringTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                                           {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;Test string in UTF-16 LE&quot;</span>;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            var sqlString1 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            var sqlString2 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            Assert.AreEqual(0, sqlString1.CompareTo(sqlString2));</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        }</div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa90f1296960383b232808ce1503a5974"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlStringTests.String_Concat </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlStringTests_8cs_source.htm#l00055">55</a> of file <a class="el" href="SqlStringTests_8cs_source.htm">SqlStringTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                    {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s1 = <span class="stringliteral">&quot;First string comes before the &quot;</span>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s2 = <span class="stringliteral">&quot;Second string that comes after&quot;</span>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            var sqlString1 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s1);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            var sqlString2 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s2);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            var sqlString3 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>();</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            Assert.DoesNotThrow(() =&gt; sqlString3 = sqlString1.Concat(sqlString2));</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;First string comes before the Second string that comes after&quot;</span>, sqlString3.ToString(Encoding.UTF8));</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        }</div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a8d67075691bd1e9bfa2bf80f00013b4b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlStringTests.String_Convert_BigNumber </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlStringTests_8cs_source.htm#l00136">136</a> of file <a class="el" href="SqlStringTests_8cs_source.htm">SqlStringTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                                               {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;7689994.0000033992988477226661525553666370058812345883288477383&quot;</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            var number = <span class="keyword">new</span> SqlNumber();</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            Assert.DoesNotThrow(() =&gt; number = (SqlNumber)Convert.ChangeType(sqlString, typeof(SqlNumber)));</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            Assert.IsFalse(number.IsNull);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            Assert.IsFalse(number.CanBeInt32);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            Assert.IsFalse(number.CanBeInt64);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            Assert.AreEqual(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, number.State);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Objects_htm_afe7dfc9aa4bf3283014653f9d5020327"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">Deveel.Data.Sql.Objects.NumericState</a></div><div class="ttdeci">NumericState</div><div class="ttdoc">Lists all the possible special states of a number. </div><div class="ttdef"><b>Definition:</b> <a href="NumericState_8cs_source.htm#l00021">NumericState.cs:21</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a98753345221304619731b62e5c0abe3a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlStringTests.String_Convert_BooleanFalse </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlStringTests_8cs_source.htm#l00164">164</a> of file <a class="el" href="SqlStringTests_8cs_source.htm">SqlStringTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                                  {</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;false&quot;</span>;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            var b = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>();</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            Assert.DoesNotThrow(() =&gt; b = (<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>)Convert.ChangeType(sqlString, typeof(<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>)));</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            Assert.IsFalse(b.IsNull);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            Assert.AreEqual(<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.False, b);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a5611a45679d0938ba19c3f26d7385e67"><div class="ttname"><a href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlBoolean SqlBoolean</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00026">DataObject.cs:26</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4afbce7dc898e474f66d399de8f229c9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlStringTests.String_Convert_BooleanNull </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlStringTests_8cs_source.htm#l00177">177</a> of file <a class="el" href="SqlStringTests_8cs_source.htm">SqlStringTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                                                 {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            var b = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>();</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            Assert.DoesNotThrow(() =&gt; b = (<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>)Convert.ChangeType(sqlString, typeof(<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>)));</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            Assert.IsTrue(b.IsNull);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            Assert.AreEqual(<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null, b);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a5611a45679d0938ba19c3f26d7385e67"><div class="ttname"><a href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlBoolean SqlBoolean</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00026">DataObject.cs:26</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="accaeefd8c9f492e5185acbc5ec929a57"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlStringTests.String_Convert_BooleanTrue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlStringTests_8cs_source.htm#l00151">151</a> of file <a class="el" href="SqlStringTests_8cs_source.htm">SqlStringTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                                                 {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;true&quot;</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            var b = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>();</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            Assert.DoesNotThrow(() =&gt; b = (<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>)Convert.ChangeType(sqlString, typeof(<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>)));</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            Assert.IsFalse(b.IsNull);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            Assert.AreEqual(<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True, b);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a5611a45679d0938ba19c3f26d7385e67"><div class="ttname"><a href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlBoolean SqlBoolean</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00026">DataObject.cs:26</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a75ae42b2383c3d14c762d2eec6a1cc3c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlStringTests.String_Convert_Date </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlStringTests_8cs_source.htm#l00116">116</a> of file <a class="el" href="SqlStringTests_8cs_source.htm">SqlStringTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                          {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;2011-01-23&quot;</span>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            var date = <span class="keyword">new</span> SqlDateTime();</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            Assert.DoesNotThrow(() =&gt; date = (SqlDateTime) Convert.ChangeType(sqlString, typeof(SqlDateTime)));</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            Assert.IsFalse(date.IsNull);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            Assert.AreEqual(2011, date.Year);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            Assert.AreEqual(01, date.Month);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            Assert.AreEqual(23, date.Day);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            Assert.AreEqual(0, date.Hour);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            Assert.AreEqual(0, date.Minute);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            Assert.AreEqual(0, date.Millisecond);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            Assert.AreEqual(0, date.Offset.Hours);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            Assert.AreEqual(0, date.Offset.Minutes);            </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a017dc8cf4483ce492c8df7c5ccfcd1e9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlStringTests.String_Convert_Time </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlStringTests_8cs_source.htm#l00097">97</a> of file <a class="el" href="SqlStringTests_8cs_source.htm">SqlStringTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                          {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;23:44:21.525&quot;</span>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            var time = <span class="keyword">new</span> SqlDateTime();</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            Assert.DoesNotThrow(() =&gt; time = (SqlDateTime) Convert.ChangeType(sqlString, typeof(SqlDateTime)));</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            Assert.IsFalse(time.IsNull);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            Assert.AreEqual(1, time.Year);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            Assert.AreEqual(1, time.Month);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            Assert.AreEqual(1, time.Day);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            Assert.AreEqual(23, time.Hour);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            Assert.AreEqual(44, time.Minute);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            Assert.AreEqual(21, time.Second);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            Assert.AreEqual(525, time.Millisecond);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        }</div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1868d0d4a8685c8f5111a3a63b3b1b45"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlStringTests.String_Convert_TimeStamp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlStringTests_8cs_source.htm#l00077">77</a> of file <a class="el" href="SqlStringTests_8cs_source.htm">SqlStringTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                               {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;2011-01-23T23:44:21.525 +01:00&quot;</span>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            var timeStamp = <span class="keyword">new</span> SqlDateTime();</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            Assert.DoesNotThrow(() =&gt; timeStamp = (SqlDateTime) Convert.ChangeType(sqlString, typeof(SqlDateTime)));</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            Assert.IsFalse(timeStamp.IsNull);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            Assert.AreEqual(2011, timeStamp.Year);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            Assert.AreEqual(01, timeStamp.Month);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            Assert.AreEqual(23, timeStamp.Day);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            Assert.AreEqual(23, timeStamp.Hour);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            Assert.AreEqual(44, timeStamp.Minute);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            Assert.AreEqual(525, timeStamp.Millisecond);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            Assert.AreEqual(1, timeStamp.Offset.Hours);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            Assert.AreEqual(0, timeStamp.Offset.Minutes);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        }</div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3f2a9b8dda43ca7a68ba2c5469470bad"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlStringTests.String_Create </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlStringTests_8cs_source.htm#l00027">27</a> of file <a class="el" href="SqlStringTests_8cs_source.htm">SqlStringTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                                    {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;Test string UTF-16 LE&quot;</span>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            Assert.IsNotNull(sqlString);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            Assert.AreEqual(s.Length, sqlString.Length);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            Assert.AreEqual(s, sqlString);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        }</div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aacc6c8d080f07e943dabdbc27df6ec1a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlStringTests.String_Equals </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlStringTests_8cs_source.htm#l00046">46</a> of file <a class="el" href="SqlStringTests_8cs_source.htm">SqlStringTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                    {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;Test string in UTF-16 LE&quot;</span>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            var sqlString1 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            var sqlString2 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            Assert.IsTrue(sqlString1.Equals(sqlString2));</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        }</div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2d33fa85fded24792d333afc601343f5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlStringTests.String_EqualsToNull </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlStringTests_8cs_source.htm#l00067">67</a> of file <a class="el" href="SqlStringTests_8cs_source.htm">SqlStringTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                          {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            var s = <a class="code" href="namespaceSqlString.htm">SqlString</a>.Null;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            Assert.IsTrue(s.IsNull);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            Assert.AreEqual(SqlNull.Value, s);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            Assert.AreEqual(s, SqlNull.Value);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlString_htm"><div class="ttname"><a href="namespaceSqlString.htm">SqlString</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb-nunit/Deveel.Data.Sql.Objects/<a class="el" href="SqlStringTests_8cs_source.htm">SqlStringTests.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
