<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Sql.Parser.SqlBinaryExpressionNode Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Parser.htm">Parser</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm">SqlBinaryExpressionNode</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#properties">Properties</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Represents an expression that evaluates between two other expressions.  
 <a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#details">More...</a></p>
<div class="dynheader">
Inheritance diagram for Deveel.Data.Sql.Parser.SqlBinaryExpressionNode:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.png" usemap="#Deveel.Data.Sql.Parser.SqlBinaryExpressionNode_map" alt=""/>
  <map id="Deveel.Data.Sql.Parser.SqlBinaryExpressionNode_map" name="Deveel.Data.Sql.Parser.SqlBinaryExpressionNode_map">
<area href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm" title="The default implementation of ISqlNode, that is a node in the text analysis parsing of SQL commands..." alt="Deveel.Data.Sql.Parser.SqlNode" shape="rect" coords="152,56,447,80"/>
<area href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IExpressionNode.htm" title="This interface acts like a marker that indicates if a ISqlNode represents a SQL expression. " alt="Deveel.Data.Sql.Parser.IExpressionNode" shape="rect" coords="610,56,905,80"/>
<area href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm" title="Defines the contract for nodes in an AST model for a SQL grammar analysis and parsing. " alt="Deveel.Data.Sql.Parser.ISqlNode" shape="rect" coords="0,0,295,24"/>
<area href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm" title="Defines the contract for nodes in an AST model for a SQL grammar analysis and parsing. " alt="Deveel.Data.Sql.Parser.ISqlNode" shape="rect" coords="610,0,905,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a3d356c2dab366576390a8dd3ea6a7e40"><td class="memItemLeft" align="right" valign="top">override <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a3d356c2dab366576390a8dd3ea6a7e40">OnChildNode</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="memdesc:a3d356c2dab366576390a8dd3ea6a7e40"><td class="mdescLeft">&#160;</td><td class="mdescRight">During the initialization of the node from the parser, this method is called for every child node added to <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a6ec9ab950c57cbf1d784f794e4862f0b" title="Gets an immutable list of nodes, children of the current node. ">ChildNodes</a>   <a href="#a3d356c2dab366576390a8dd3ea6a7e40">More...</a><br /></td></tr>
<tr class="separator:a3d356c2dab366576390a8dd3ea6a7e40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm">Deveel.Data.Sql.Parser.SqlNode</a></td></tr>
<tr class="memitem:aec9e95ca3cecd639219089c3c32589a7 inherit pro_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#aec9e95ca3cecd639219089c3c32589a7">OnNodeInit</a> ()</td></tr>
<tr class="memdesc:aec9e95ca3cecd639219089c3c32589a7 inherit pro_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">After the initialization of the node from the parser, this method is invoked to let the specific initialization to occur.  <a href="#aec9e95ca3cecd639219089c3c32589a7">More...</a><br /></td></tr>
<tr class="separator:aec9e95ca3cecd639219089c3c32589a7 inherit pro_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="properties"></a>
Properties</h2></td></tr>
<tr class="memitem:a4aae1dcafdcb9dee95f9cd9e3581343c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IExpressionNode.htm">IExpressionNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a4aae1dcafdcb9dee95f9cd9e3581343c">Left</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a4aae1dcafdcb9dee95f9cd9e3581343c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the left side argument of the expression.  <a href="#a4aae1dcafdcb9dee95f9cd9e3581343c">More...</a><br /></td></tr>
<tr class="separator:a4aae1dcafdcb9dee95f9cd9e3581343c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a6812fb666f5f41018308524e45b442"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IExpressionNode.htm">IExpressionNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a1a6812fb666f5f41018308524e45b442">Right</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a1a6812fb666f5f41018308524e45b442"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the right side argument of the expression.  <a href="#a1a6812fb666f5f41018308524e45b442">More...</a><br /></td></tr>
<tr class="separator:a1a6812fb666f5f41018308524e45b442"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fe0a0e63528b46b52f7ee2b116dd048"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a9fe0a0e63528b46b52f7ee2b116dd048">IsAll</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a9fe0a0e63528b46b52f7ee2b116dd048"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a boolean value indicating if the expression is the special case of <code>ALL</code>.  <a href="#a9fe0a0e63528b46b52f7ee2b116dd048">More...</a><br /></td></tr>
<tr class="separator:a9fe0a0e63528b46b52f7ee2b116dd048"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a9d4ddbac8cbc8a3a04959ec3d11aba"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a5a9d4ddbac8cbc8a3a04959ec3d11aba">IsAny</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a5a9d4ddbac8cbc8a3a04959ec3d11aba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a boolean value indicating if the expression is the special case of <code>ANY</code>.  <a href="#a5a9d4ddbac8cbc8a3a04959ec3d11aba">More...</a><br /></td></tr>
<tr class="separator:a5a9d4ddbac8cbc8a3a04959ec3d11aba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5125dcee1ece1c77801f0e597a70a94"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#ad5125dcee1ece1c77801f0e597a70a94">Operator</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:ad5125dcee1ece1c77801f0e597a70a94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the binary operator that will be used to evaluate the final result.  <a href="#ad5125dcee1ece1c77801f0e597a70a94">More...</a><br /></td></tr>
<tr class="separator:ad5125dcee1ece1c77801f0e597a70a94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td colspan="2" onclick="javascript:toggleInherit('properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode')"><img src="closed.png" alt="-"/>&#160;Properties inherited from <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm">Deveel.Data.Sql.Parser.SqlNode</a></td></tr>
<tr class="memitem:a11e94e676bc90355237f18fb79a66e18 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a11e94e676bc90355237f18fb79a66e18">Parent</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a11e94e676bc90355237f18fb79a66e18 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the parent of the current node.  <a href="#a11e94e676bc90355237f18fb79a66e18">More...</a><br /></td></tr>
<tr class="separator:a11e94e676bc90355237f18fb79a66e18 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55229a704d755b79993de8941b60617f inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a55229a704d755b79993de8941b60617f">NodeName</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a55229a704d755b79993de8941b60617f inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of the node, as expressed in the SQL grammar.  <a href="#a55229a704d755b79993de8941b60617f">More...</a><br /></td></tr>
<tr class="separator:a55229a704d755b79993de8941b60617f inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ec9ab950c57cbf1d784f794e4862f0b inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a6ec9ab950c57cbf1d784f794e4862f0b">ChildNodes</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a6ec9ab950c57cbf1d784f794e4862f0b inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an immutable list of <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">nodes</a>, children of the current node.  <a href="#a6ec9ab950c57cbf1d784f794e4862f0b">More...</a><br /></td></tr>
<tr class="separator:a6ec9ab950c57cbf1d784f794e4862f0b inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae67da2705629e870e7183bde27289d2a inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1Token.htm">Token</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#ae67da2705629e870e7183bde27289d2a">Tokens</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:ae67da2705629e870e7183bde27289d2a inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an immutable list of <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1Token.htm" title="This is a single token within a string parsed. ">Token</a> that represent the source of this node.  <a href="#ae67da2705629e870e7183bde27289d2a">More...</a><br /></td></tr>
<tr class="separator:ae67da2705629e870e7183bde27289d2a inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7c9f9d70ef7155b8730ebb76b047890 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">string ISqlNode.&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#aa7c9f9d70ef7155b8730ebb76b047890">NodeName</a><code> [get]</code></td></tr>
<tr class="separator:aa7c9f9d70ef7155b8730ebb76b047890 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b34c1276f47c47e24c5e3edd64f5563 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> ISqlNode.&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a1b34c1276f47c47e24c5e3edd64f5563">Parent</a><code> [get]</code></td></tr>
<tr class="separator:a1b34c1276f47c47e24c5e3edd64f5563 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73a772bb00bbbee167e34fe9c89c9b2a inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> &gt; ISqlNode.&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a73a772bb00bbbee167e34fe9c89c9b2a">ChildNodes</a><code> [get]</code></td></tr>
<tr class="separator:a73a772bb00bbbee167e34fe9c89c9b2a inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7355cfc36bac41ac9c6d6d354df9e76 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1Token.htm">Token</a> &gt; ISqlNode.&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#ad7355cfc36bac41ac9c6d6d354df9e76">Tokens</a><code> [get]</code></td></tr>
<tr class="separator:ad7355cfc36bac41ac9c6d6d354df9e76 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td colspan="2" onclick="javascript:toggleInherit('properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode')"><img src="closed.png" alt="-"/>&#160;Properties inherited from <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">Deveel.Data.Sql.Parser.ISqlNode</a></td></tr>
<tr class="memitem:a15af4a9f55b9d03b1265f1b3f0fb10d7 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a15af4a9f55b9d03b1265f1b3f0fb10d7">NodeName</a><code> [get]</code></td></tr>
<tr class="memdesc:a15af4a9f55b9d03b1265f1b3f0fb10d7 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of the node analyzed from the parser.  <a href="#a15af4a9f55b9d03b1265f1b3f0fb10d7">More...</a><br /></td></tr>
<tr class="separator:a15af4a9f55b9d03b1265f1b3f0fb10d7 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74dd6b1ed1ef2d59697c59d61fcb16c6 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a74dd6b1ed1ef2d59697c59d61fcb16c6">Parent</a><code> [get]</code></td></tr>
<tr class="memdesc:a74dd6b1ed1ef2d59697c59d61fcb16c6 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a reference to the parent <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm" title="Defines the contract for nodes in an AST model for a SQL grammar analysis and parsing. ">ISqlNode</a>, if any.  <a href="#a74dd6b1ed1ef2d59697c59d61fcb16c6">More...</a><br /></td></tr>
<tr class="separator:a74dd6b1ed1ef2d59697c59d61fcb16c6 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a156305a37aea852103bbae1642bfd8f8 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a156305a37aea852103bbae1642bfd8f8">ChildNodes</a><code> [get]</code></td></tr>
<tr class="memdesc:a156305a37aea852103bbae1642bfd8f8 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a read-only enumeration of the children nodes, if any.  <a href="#a156305a37aea852103bbae1642bfd8f8">More...</a><br /></td></tr>
<tr class="separator:a156305a37aea852103bbae1642bfd8f8 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d50293a0d738577d4db74fa85767ede inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1Token.htm">Token</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a5d50293a0d738577d4db74fa85767ede">Tokens</a><code> [get]</code></td></tr>
<tr class="memdesc:a5d50293a0d738577d4db74fa85767ede inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an enumeration of the tokens composing the this node.  <a href="#a5d50293a0d738577d4db74fa85767ede">More...</a><br /></td></tr>
<tr class="separator:a5d50293a0d738577d4db74fa85767ede inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a15dff25f7e71d8939a5285789fd3e002"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a15dff25f7e71d8939a5285789fd3e002">GetOperator</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:a15dff25f7e71d8939a5285789fd3e002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c391fe7c71ba9a938e468be7ed13598"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a2c391fe7c71ba9a938e468be7ed13598">GetLogicalOp</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:a2c391fe7c71ba9a938e468be7ed13598"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917694cd6299f3e8a3318c14ad911c34"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a917694cd6299f3e8a3318c14ad911c34">GetAnyAllOp</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:a917694cd6299f3e8a3318c14ad911c34"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a03740400929a86045a80c806cec730f9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a03740400929a86045a80c806cec730f9">leftSeen</a></td></tr>
<tr class="separator:a03740400929a86045a80c806cec730f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm">Deveel.Data.Sql.Parser.SqlNode</a></td></tr>
<tr class="memitem:a6b123ac842be4458d9452f73262c0fbd inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a6b123ac842be4458d9452f73262c0fbd">SqlNode</a> ()</td></tr>
<tr class="separator:a6b123ac842be4458d9452f73262c0fbd inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Represents an expression that evaluates between two other expressions. </p>

<p>Definition at line <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm#l00025">25</a> of file <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm">SqlBinaryExpressionNode.cs</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a917694cd6299f3e8a3318c14ad911c34"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.GetAnyAllOp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm#l00100">100</a> of file <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm">SqlBinaryExpressionNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                                                {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            var sb = <span class="keyword">new</span> StringBuilder();</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                <span class="keywordflow">if</span> (childNode is SqlKeyNode) {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                    var anyOrAll = ((SqlKeyNode) childNode).Text;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                    <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(anyOrAll, <span class="stringliteral">&quot;ALL&quot;</span>, StringComparison.OrdinalIgnoreCase)) {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                        <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a9fe0a0e63528b46b52f7ee2b116dd048">IsAll</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(anyOrAll, <span class="stringliteral">&quot;ANY&quot;</span>, StringComparison.OrdinalIgnoreCase)) {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                        <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a5a9d4ddbac8cbc8a3a04959ec3d11aba">IsAny</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                    }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (childNode.NodeName == <span class="stringliteral">&quot;binary_op_simple&quot;</span>) {</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                    var op = childNode.ChildNodes.First();</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                    sb.Append(((SqlKeyNode) op).Text);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#ad5125dcee1ece1c77801f0e597a70a94">Operator</a> = sb.ToString();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode_htm_ad5125dcee1ece1c77801f0e597a70a94"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#ad5125dcee1ece1c77801f0e597a70a94">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.Operator</a></div><div class="ttdeci">string Operator</div><div class="ttdoc">Gets the binary operator that will be used to evaluate the final result. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBinaryExpressionNode_8cs_source.htm#l00054">SqlBinaryExpressionNode.cs:54</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode_htm_a9fe0a0e63528b46b52f7ee2b116dd048"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a9fe0a0e63528b46b52f7ee2b116dd048">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.IsAll</a></div><div class="ttdeci">bool IsAll</div><div class="ttdoc">Gets a boolean value indicating if the expression is the special case of ALL. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBinaryExpressionNode_8cs_source.htm#l00042">SqlBinaryExpressionNode.cs:42</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode_htm_a5a9d4ddbac8cbc8a3a04959ec3d11aba"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a5a9d4ddbac8cbc8a3a04959ec3d11aba">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.IsAny</a></div><div class="ttdeci">bool IsAny</div><div class="ttdoc">Gets a boolean value indicating if the expression is the special case of ANY. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBinaryExpressionNode_8cs_source.htm#l00048">SqlBinaryExpressionNode.cs:48</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2c391fe7c71ba9a938e468be7ed13598"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.GetLogicalOp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm#l00088">88</a> of file <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm">SqlBinaryExpressionNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                                                 {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            var sb = <span class="keyword">new</span> StringBuilder();</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                <span class="keywordflow">if</span> (childNode is SqlKeyNode) {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                    sb.Append(((SqlKeyNode) childNode).Text);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                    sb.Append(<span class="stringliteral">&quot; &quot;</span>);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#ad5125dcee1ece1c77801f0e597a70a94">Operator</a> = sb.ToString().Trim();</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode_htm_ad5125dcee1ece1c77801f0e597a70a94"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#ad5125dcee1ece1c77801f0e597a70a94">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.Operator</a></div><div class="ttdeci">string Operator</div><div class="ttdoc">Gets the binary operator that will be used to evaluate the final result. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBinaryExpressionNode_8cs_source.htm#l00054">SqlBinaryExpressionNode.cs:54</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a15dff25f7e71d8939a5285789fd3e002"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.GetOperator </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm#l00073">73</a> of file <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm">SqlBinaryExpressionNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                                {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            var childNode = node.ChildNodes.First();</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">if</span> (childNode.NodeName == <span class="stringliteral">&quot;binary_op_simple&quot;</span>) {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                var op = childNode.ChildNodes.First();</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#ad5125dcee1ece1c77801f0e597a70a94">Operator</a> = ((SqlKeyNode) op).Text;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (childNode.NodeName == <span class="stringliteral">&quot;logical_op&quot;</span>) {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a2c391fe7c71ba9a938e468be7ed13598">GetLogicalOp</a>(childNode); </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;any_op&quot;</span> ||</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                       node.NodeName == <span class="stringliteral">&quot;all_op&quot;</span>) {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a917694cd6299f3e8a3318c14ad911c34">GetAnyAllOp</a>(childNode);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (childNode.NodeName == <span class="stringliteral">&quot;subquery_op&quot;</span>) {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a2c391fe7c71ba9a938e468be7ed13598">GetLogicalOp</a>(childNode);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode_htm_a917694cd6299f3e8a3318c14ad911c34"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a917694cd6299f3e8a3318c14ad911c34">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.GetAnyAllOp</a></div><div class="ttdeci">void GetAnyAllOp(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="SqlBinaryExpressionNode_8cs_source.htm#l00100">SqlBinaryExpressionNode.cs:100</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode_htm_a2c391fe7c71ba9a938e468be7ed13598"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a2c391fe7c71ba9a938e468be7ed13598">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.GetLogicalOp</a></div><div class="ttdeci">void GetLogicalOp(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="SqlBinaryExpressionNode_8cs_source.htm#l00088">SqlBinaryExpressionNode.cs:88</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode_htm_ad5125dcee1ece1c77801f0e597a70a94"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#ad5125dcee1ece1c77801f0e597a70a94">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.Operator</a></div><div class="ttdeci">string Operator</div><div class="ttdoc">Gets the binary operator that will be used to evaluate the final result. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBinaryExpressionNode_8cs_source.htm#l00054">SqlBinaryExpressionNode.cs:54</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3d356c2dab366576390a8dd3ea6a7e40"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.OnChildNode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>During the initialization of the node from the parser, this method is called for every child node added to <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a6ec9ab950c57cbf1d784f794e4862f0b" title="Gets an immutable list of nodes, children of the current node. ">ChildNodes</a>  </p>

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a49fd30b6a75efbe17f430f0a42681f3a">Deveel.Data.Sql.Parser.SqlNode</a>.</p>

<p>Definition at line <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm#l00057">57</a> of file <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm">SqlBinaryExpressionNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                                               {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <span class="keywordflow">if</span> (node is IExpressionNode) {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                <span class="keywordflow">if</span> (!<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a03740400929a86045a80c806cec730f9">leftSeen</a>) {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a4aae1dcafdcb9dee95f9cd9e3581343c">Left</a> = (IExpressionNode) node;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a03740400929a86045a80c806cec730f9">leftSeen</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a1a6812fb666f5f41018308524e45b442">Right</a> = (IExpressionNode) node;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a03740400929a86045a80c806cec730f9">leftSeen</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;binary_op&quot;</span>) {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a15dff25f7e71d8939a5285789fd3e002">GetOperator</a>(node);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            <span class="keywordflow">return</span> base.OnChildNode(node);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode_htm_a03740400929a86045a80c806cec730f9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a03740400929a86045a80c806cec730f9">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.leftSeen</a></div><div class="ttdeci">bool leftSeen</div><div class="ttdef"><b>Definition:</b> <a href="SqlBinaryExpressionNode_8cs_source.htm#l00026">SqlBinaryExpressionNode.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode_htm_a1a6812fb666f5f41018308524e45b442"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a1a6812fb666f5f41018308524e45b442">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.Right</a></div><div class="ttdeci">IExpressionNode Right</div><div class="ttdoc">Gets the right side argument of the expression. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBinaryExpressionNode_8cs_source.htm#l00036">SqlBinaryExpressionNode.cs:36</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode_htm_a4aae1dcafdcb9dee95f9cd9e3581343c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a4aae1dcafdcb9dee95f9cd9e3581343c">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.Left</a></div><div class="ttdeci">IExpressionNode Left</div><div class="ttdoc">Gets the left side argument of the expression. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBinaryExpressionNode_8cs_source.htm#l00031">SqlBinaryExpressionNode.cs:31</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode_htm_a15dff25f7e71d8939a5285789fd3e002"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a15dff25f7e71d8939a5285789fd3e002">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.GetOperator</a></div><div class="ttdeci">void GetOperator(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="SqlBinaryExpressionNode_8cs_source.htm#l00073">SqlBinaryExpressionNode.cs:73</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a03740400929a86045a80c806cec730f9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.leftSeen</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm#l00026">26</a> of file <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm">SqlBinaryExpressionNode.cs</a>.</p>

</div>
</div>
<h2 class="groupheader">Property Documentation</h2>
<a class="anchor" id="a9fe0a0e63528b46b52f7ee2b116dd048"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.IsAll</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a boolean value indicating if the expression is the special case of <code>ALL</code>. </p>

<p>Definition at line <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm#l00042">42</a> of file <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm">SqlBinaryExpressionNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a5a9d4ddbac8cbc8a3a04959ec3d11aba"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.IsAny</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a boolean value indicating if the expression is the special case of <code>ANY</code>. </p>

<p>Definition at line <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm#l00048">48</a> of file <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm">SqlBinaryExpressionNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a4aae1dcafdcb9dee95f9cd9e3581343c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IExpressionNode.htm">IExpressionNode</a> Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.Left</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the left side argument of the expression. </p>

<p>Definition at line <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm#l00031">31</a> of file <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm">SqlBinaryExpressionNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="ad5125dcee1ece1c77801f0e597a70a94"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.Operator</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the binary operator that will be used to evaluate the final result. </p>

<p>Definition at line <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm#l00054">54</a> of file <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm">SqlBinaryExpressionNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a1a6812fb666f5f41018308524e45b442"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IExpressionNode.htm">IExpressionNode</a> Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.Right</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the right side argument of the expression. </p>

<p>Definition at line <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm#l00036">36</a> of file <a class="el" href="SqlBinaryExpressionNode_8cs_source.htm">SqlBinaryExpressionNode.cs</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Parser/<a class="el" href="SqlBinaryExpressionNode_8cs_source.htm">SqlBinaryExpressionNode.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
