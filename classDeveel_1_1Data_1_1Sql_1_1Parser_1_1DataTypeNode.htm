<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Sql.Parser.DataTypeNode Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Parser.htm">Parser</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm">DataTypeNode</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pac-methods">Package Functions</a> &#124;
<a href="#properties">Properties</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Sql.Parser.DataTypeNode Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Describes the information of a data type as found in a SQL string.  
 <a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#details">More...</a></p>
<div class="dynheader">
Inheritance diagram for Deveel.Data.Sql.Parser.DataTypeNode:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.png" usemap="#Deveel.Data.Sql.Parser.DataTypeNode_map" alt=""/>
  <map id="Deveel.Data.Sql.Parser.DataTypeNode_map" name="Deveel.Data.Sql.Parser.DataTypeNode_map">
<area href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm" title="The default implementation of ISqlNode, that is a node in the text analysis parsing of SQL commands..." alt="Deveel.Data.Sql.Parser.SqlNode" shape="rect" coords="121,56,354,80"/>
<area href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm" title="Defines the contract for nodes in an AST model for a SQL grammar analysis and parsing. " alt="Deveel.Data.Sql.Parser.ISqlNode" shape="rect" coords="0,0,233,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a8044b3f52ddac6a9378e87cb6203850a"><td class="memItemLeft" align="right" valign="top">override <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a8044b3f52ddac6a9378e87cb6203850a">OnChildNode</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="memdesc:a8044b3f52ddac6a9378e87cb6203850a"><td class="mdescLeft">&#160;</td><td class="mdescRight">During the initialization of the node from the parser, this method is called for every child node added to <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a6ec9ab950c57cbf1d784f794e4862f0b" title="Gets an immutable list of nodes, children of the current node. ">ChildNodes</a>  <a href="#a8044b3f52ddac6a9378e87cb6203850a">More...</a><br /></td></tr>
<tr class="separator:a8044b3f52ddac6a9378e87cb6203850a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm">Deveel.Data.Sql.Parser.SqlNode</a></td></tr>
<tr class="memitem:aec9e95ca3cecd639219089c3c32589a7 inherit pro_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#aec9e95ca3cecd639219089c3c32589a7">OnNodeInit</a> ()</td></tr>
<tr class="memdesc:aec9e95ca3cecd639219089c3c32589a7 inherit pro_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">After the initialization of the node from the parser, this method is invoked to let the specific initialization to occur.  <a href="#aec9e95ca3cecd639219089c3c32589a7">More...</a><br /></td></tr>
<tr class="separator:aec9e95ca3cecd639219089c3c32589a7 inherit pro_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pac-methods"></a>
Package Functions</h2></td></tr>
<tr class="memitem:ace3ff7db72c35e75968d44a0d8449861"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#ace3ff7db72c35e75968d44a0d8449861">DataTypeNode</a> ()</td></tr>
<tr class="memdesc:ace3ff7db72c35e75968d44a0d8449861"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs an empty <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm" title="Describes the information of a data type as found in a SQL string. ">DataTypeNode</a>.  <a href="#ace3ff7db72c35e75968d44a0d8449861">More...</a><br /></td></tr>
<tr class="separator:ace3ff7db72c35e75968d44a0d8449861"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="properties"></a>
Properties</h2></td></tr>
<tr class="memitem:a232f42bdfabcf34cd2f966fe88da790a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a232f42bdfabcf34cd2f966fe88da790a">IsPrimitive</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a232f42bdfabcf34cd2f966fe88da790a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a boolean value indicating if the data type found is a primitive.  <a href="#a232f42bdfabcf34cd2f966fe88da790a">More...</a><br /></td></tr>
<tr class="separator:a232f42bdfabcf34cd2f966fe88da790a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27a8660a4c4536f2473109d42c28f8fb"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a27a8660a4c4536f2473109d42c28f8fb">TypeName</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a27a8660a4c4536f2473109d42c28f8fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of the data type, if <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a232f42bdfabcf34cd2f966fe88da790a" title="Gets a boolean value indicating if the data type found is a primitive. ">IsPrimitive</a> is <code>true</code>.  <a href="#a27a8660a4c4536f2473109d42c28f8fb">More...</a><br /></td></tr>
<tr class="separator:a27a8660a4c4536f2473109d42c28f8fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85883d73298abac6fa4655369bb6ea55"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a85883d73298abac6fa4655369bb6ea55">Size</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a85883d73298abac6fa4655369bb6ea55"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the size specification of the data-type.  <a href="#a85883d73298abac6fa4655369bb6ea55">More...</a><br /></td></tr>
<tr class="separator:a85883d73298abac6fa4655369bb6ea55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c4572d48038b04a42576b751cd8084a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a8c4572d48038b04a42576b751cd8084a">HasSize</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a8c4572d48038b04a42576b751cd8084a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a value indicating if the data-type specification has a size value.  <a href="#a8c4572d48038b04a42576b751cd8084a">More...</a><br /></td></tr>
<tr class="separator:a8c4572d48038b04a42576b751cd8084a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea9ecb96f85075f071a5af7a60f181c2"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aea9ecb96f85075f071a5af7a60f181c2">Scale</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:aea9ecb96f85075f071a5af7a60f181c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the scaling factor of a numeric data-type.  <a href="#aea9ecb96f85075f071a5af7a60f181c2">More...</a><br /></td></tr>
<tr class="separator:aea9ecb96f85075f071a5af7a60f181c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a890a269c733a8597d57e71ec8facca89"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a890a269c733a8597d57e71ec8facca89">HasScale</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a890a269c733a8597d57e71ec8facca89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a value indicating if the data-type specification has a scaling factor value indicated.  <a href="#a890a269c733a8597d57e71ec8facca89">More...</a><br /></td></tr>
<tr class="separator:a890a269c733a8597d57e71ec8facca89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b65cc19103c345adb928e6b4b1acad4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a5b65cc19103c345adb928e6b4b1acad4">Precision</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a5b65cc19103c345adb928e6b4b1acad4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the precision of a data-type that is <code>NUMERIC</code>.  <a href="#a5b65cc19103c345adb928e6b4b1acad4">More...</a><br /></td></tr>
<tr class="separator:a5b65cc19103c345adb928e6b4b1acad4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb336ab27f26a01f154a1f1e8ccce89c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#abb336ab27f26a01f154a1f1e8ccce89c">HasPrecision</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:abb336ab27f26a01f154a1f1e8ccce89c"><td class="mdescLeft">&#160;</td><td class="mdescRight">In case this data-type is a <code>NUMERIC</code> type, this gets a value indicating if a precision specification was defined.  <a href="#abb336ab27f26a01f154a1f1e8ccce89c">More...</a><br /></td></tr>
<tr class="separator:abb336ab27f26a01f154a1f1e8ccce89c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafd58426306e4d83958bb297c9129e33"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aafd58426306e4d83958bb297c9129e33">Locale</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:aafd58426306e4d83958bb297c9129e33"><td class="mdescLeft">&#160;</td><td class="mdescRight">In case the data-type is a <code>STRING</code> type, this gets the locale string used to collate the values handled by the type.  <a href="#aafd58426306e4d83958bb297c9129e33">More...</a><br /></td></tr>
<tr class="separator:aafd58426306e4d83958bb297c9129e33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa14cfb22cd40ba398bd387cf0a2a34b5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aa14cfb22cd40ba398bd387cf0a2a34b5">HasLocale</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:aa14cfb22cd40ba398bd387cf0a2a34b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">In case the data-type is a <code>STRING</code> type, this indicates if the data-type specification includes a locale definition.  <a href="#aa14cfb22cd40ba398bd387cf0a2a34b5">More...</a><br /></td></tr>
<tr class="separator:aa14cfb22cd40ba398bd387cf0a2a34b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdc4e6f4f3d0d677de31977dd3028b14"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#afdc4e6f4f3d0d677de31977dd3028b14">Encoding</a><code> [get, private set]</code></td></tr>
<tr class="separator:afdc4e6f4f3d0d677de31977dd3028b14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8dc51a5ac025cfe5056d69a9e2d1308"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#ad8dc51a5ac025cfe5056d69a9e2d1308">HasEncoding</a><code> [get, private set]</code></td></tr>
<tr class="separator:ad8dc51a5ac025cfe5056d69a9e2d1308"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37fb546fbcc569ad789fa3de3e6ee395"><td class="memItemLeft" align="right" valign="top">Dictionary&lt; string, string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a37fb546fbcc569ad789fa3de3e6ee395">Metadata</a><code> [get, private set]</code></td></tr>
<tr class="separator:a37fb546fbcc569ad789fa3de3e6ee395"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td colspan="2" onclick="javascript:toggleInherit('properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode')"><img src="closed.png" alt="-"/>&#160;Properties inherited from <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm">Deveel.Data.Sql.Parser.SqlNode</a></td></tr>
<tr class="memitem:a11e94e676bc90355237f18fb79a66e18 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a11e94e676bc90355237f18fb79a66e18">Parent</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a11e94e676bc90355237f18fb79a66e18 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the parent of the current node.  <a href="#a11e94e676bc90355237f18fb79a66e18">More...</a><br /></td></tr>
<tr class="separator:a11e94e676bc90355237f18fb79a66e18 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55229a704d755b79993de8941b60617f inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a55229a704d755b79993de8941b60617f">NodeName</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a55229a704d755b79993de8941b60617f inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of the node, as expressed in the SQL grammar.  <a href="#a55229a704d755b79993de8941b60617f">More...</a><br /></td></tr>
<tr class="separator:a55229a704d755b79993de8941b60617f inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ec9ab950c57cbf1d784f794e4862f0b inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a6ec9ab950c57cbf1d784f794e4862f0b">ChildNodes</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a6ec9ab950c57cbf1d784f794e4862f0b inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an immutable list of <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">nodes</a>, children of the current node.  <a href="#a6ec9ab950c57cbf1d784f794e4862f0b">More...</a><br /></td></tr>
<tr class="separator:a6ec9ab950c57cbf1d784f794e4862f0b inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae67da2705629e870e7183bde27289d2a inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1Token.htm">Token</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#ae67da2705629e870e7183bde27289d2a">Tokens</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:ae67da2705629e870e7183bde27289d2a inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an immutable list of <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1Token.htm" title="This is a single token within a string parsed. ">Token</a> that represent the source of this node.  <a href="#ae67da2705629e870e7183bde27289d2a">More...</a><br /></td></tr>
<tr class="separator:ae67da2705629e870e7183bde27289d2a inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7c9f9d70ef7155b8730ebb76b047890 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">string ISqlNode.&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#aa7c9f9d70ef7155b8730ebb76b047890">NodeName</a><code> [get]</code></td></tr>
<tr class="separator:aa7c9f9d70ef7155b8730ebb76b047890 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b34c1276f47c47e24c5e3edd64f5563 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> ISqlNode.&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a1b34c1276f47c47e24c5e3edd64f5563">Parent</a><code> [get]</code></td></tr>
<tr class="separator:a1b34c1276f47c47e24c5e3edd64f5563 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73a772bb00bbbee167e34fe9c89c9b2a inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> &gt; ISqlNode.&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a73a772bb00bbbee167e34fe9c89c9b2a">ChildNodes</a><code> [get]</code></td></tr>
<tr class="separator:a73a772bb00bbbee167e34fe9c89c9b2a inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7355cfc36bac41ac9c6d6d354df9e76 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1Token.htm">Token</a> &gt; ISqlNode.&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#ad7355cfc36bac41ac9c6d6d354df9e76">Tokens</a><code> [get]</code></td></tr>
<tr class="separator:ad7355cfc36bac41ac9c6d6d354df9e76 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td colspan="2" onclick="javascript:toggleInherit('properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode')"><img src="closed.png" alt="-"/>&#160;Properties inherited from <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">Deveel.Data.Sql.Parser.ISqlNode</a></td></tr>
<tr class="memitem:a15af4a9f55b9d03b1265f1b3f0fb10d7 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a15af4a9f55b9d03b1265f1b3f0fb10d7">NodeName</a><code> [get]</code></td></tr>
<tr class="memdesc:a15af4a9f55b9d03b1265f1b3f0fb10d7 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of the node analyzed from the parser.  <a href="#a15af4a9f55b9d03b1265f1b3f0fb10d7">More...</a><br /></td></tr>
<tr class="separator:a15af4a9f55b9d03b1265f1b3f0fb10d7 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74dd6b1ed1ef2d59697c59d61fcb16c6 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a74dd6b1ed1ef2d59697c59d61fcb16c6">Parent</a><code> [get]</code></td></tr>
<tr class="memdesc:a74dd6b1ed1ef2d59697c59d61fcb16c6 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a reference to the parent <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm" title="Defines the contract for nodes in an AST model for a SQL grammar analysis and parsing. ">ISqlNode</a>, if any.  <a href="#a74dd6b1ed1ef2d59697c59d61fcb16c6">More...</a><br /></td></tr>
<tr class="separator:a74dd6b1ed1ef2d59697c59d61fcb16c6 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a156305a37aea852103bbae1642bfd8f8 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a156305a37aea852103bbae1642bfd8f8">ChildNodes</a><code> [get]</code></td></tr>
<tr class="memdesc:a156305a37aea852103bbae1642bfd8f8 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a read-only enumeration of the children nodes, if any.  <a href="#a156305a37aea852103bbae1642bfd8f8">More...</a><br /></td></tr>
<tr class="separator:a156305a37aea852103bbae1642bfd8f8 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d50293a0d738577d4db74fa85767ede inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1Token.htm">Token</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a5d50293a0d738577d4db74fa85767ede">Tokens</a><code> [get]</code></td></tr>
<tr class="memdesc:a5d50293a0d738577d4db74fa85767ede inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an enumeration of the tokens composing the this node.  <a href="#a5d50293a0d738577d4db74fa85767ede">More...</a><br /></td></tr>
<tr class="separator:a5d50293a0d738577d4db74fa85767ede inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:aff21aea7e39f2d802c21d4a9590a9c2e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aff21aea7e39f2d802c21d4a9590a9c2e">GetBooleanType</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:aff21aea7e39f2d802c21d4a9590a9c2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35f96aadaa8be956d6a23befb5b773dc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a35f96aadaa8be956d6a23befb5b773dc">GetUserType</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:a35f96aadaa8be956d6a23befb5b773dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36101bce5e5e58a930551007424ee864"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a36101bce5e5e58a930551007424ee864">GetMeta</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:a36101bce5e5e58a930551007424ee864"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e4bca4b16bc888782f06804d201e81b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a7e4bca4b16bc888782f06804d201e81b">GetSimpleType</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:a7e4bca4b16bc888782f06804d201e81b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee2bd75255a62f87afda85e3af3881e0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aee2bd75255a62f87afda85e3af3881e0">GetSizedType</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:aee2bd75255a62f87afda85e3af3881e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfbec46d02305942ff53551e569916f7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#acfbec46d02305942ff53551e569916f7">GetLocale</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:acfbec46d02305942ff53551e569916f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a483ade52c0a86af60a45d7be6a94cfed"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a483ade52c0a86af60a45d7be6a94cfed">GetEncoding</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:a483ade52c0a86af60a45d7be6a94cfed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2d7552bafb66c017bcfccbfa456c870"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aa2d7552bafb66c017bcfccbfa456c870">GetDataSize</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:aa2d7552bafb66c017bcfccbfa456c870"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74567c5238e07fb1fc18017d39c0503f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a74567c5238e07fb1fc18017d39c0503f">GetNumberType</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:a74567c5238e07fb1fc18017d39c0503f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca94f892e10b80018c382f81795d0a21"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aca94f892e10b80018c382f81795d0a21">GetNumberPrecision</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:aca94f892e10b80018c382f81795d0a21"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm">Deveel.Data.Sql.Parser.SqlNode</a></td></tr>
<tr class="memitem:a6b123ac842be4458d9452f73262c0fbd inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a6b123ac842be4458d9452f73262c0fbd">SqlNode</a> ()</td></tr>
<tr class="separator:a6b123ac842be4458d9452f73262c0fbd inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Describes the information of a data type as found in a SQL string. </p>

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00028">28</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ace3ff7db72c35e75968d44a0d8449861"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Sql.Parser.DataTypeNode.DataTypeNode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">package</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructs an empty <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm" title="Describes the information of a data type as found in a SQL string. ">DataTypeNode</a>. </p>

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00032">32</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                                {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a232f42bdfabcf34cd2f966fe88da790a">IsPrimitive</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a37fb546fbcc569ad789fa3de3e6ee395">Metadata</a> = <span class="keyword">new</span> Dictionary&lt;string, string&gt;();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a232f42bdfabcf34cd2f966fe88da790a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a232f42bdfabcf34cd2f966fe88da790a">Deveel.Data.Sql.Parser.DataTypeNode.IsPrimitive</a></div><div class="ttdeci">bool IsPrimitive</div><div class="ttdoc">Gets a boolean value indicating if the data type found is a primitive. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00042">DataTypeNode.cs:42</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a37fb546fbcc569ad789fa3de3e6ee395"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a37fb546fbcc569ad789fa3de3e6ee395">Deveel.Data.Sql.Parser.DataTypeNode.Metadata</a></div><div class="ttdeci">Dictionary&lt; string, string &gt; Metadata</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00115">DataTypeNode.cs:115</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aff21aea7e39f2d802c21d4a9590a9c2e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.DataTypeNode.GetBooleanType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00141">141</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                                                   {</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a232f42bdfabcf34cd2f966fe88da790a">IsPrimitive</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a27a8660a4c4536f2473109d42c28f8fb">TypeName</a> = <span class="stringliteral">&quot;BOOLEAN&quot;</span>;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a27a8660a4c4536f2473109d42c28f8fb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a27a8660a4c4536f2473109d42c28f8fb">Deveel.Data.Sql.Parser.DataTypeNode.TypeName</a></div><div class="ttdeci">string TypeName</div><div class="ttdoc">Gets the name of the data type, if IsPrimitive is true. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00047">DataTypeNode.cs:47</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a232f42bdfabcf34cd2f966fe88da790a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a232f42bdfabcf34cd2f966fe88da790a">Deveel.Data.Sql.Parser.DataTypeNode.IsPrimitive</a></div><div class="ttdeci">bool IsPrimitive</div><div class="ttdoc">Gets a boolean value indicating if the data type found is a primitive. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00042">DataTypeNode.cs:42</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa2d7552bafb66c017bcfccbfa456c870"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.DataTypeNode.GetDataSize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00204">204</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                                {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                <span class="keywordflow">if</span> (childNode is IntegerLiteralNode) {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a85883d73298abac6fa4655369bb6ea55">Size</a> = (int) ((IntegerLiteralNode) childNode).Value;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a8c4572d48038b04a42576b751cd8084a">HasSize</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                }</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            }</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a85883d73298abac6fa4655369bb6ea55"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a85883d73298abac6fa4655369bb6ea55">Deveel.Data.Sql.Parser.DataTypeNode.Size</a></div><div class="ttdeci">int Size</div><div class="ttdoc">Gets the size specification of the data-type. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00056">DataTypeNode.cs:56</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a8c4572d48038b04a42576b751cd8084a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a8c4572d48038b04a42576b751cd8084a">Deveel.Data.Sql.Parser.DataTypeNode.HasSize</a></div><div class="ttdeci">bool HasSize</div><div class="ttdoc">Gets a value indicating if the data-type specification has a size value. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00063">DataTypeNode.cs:63</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a483ade52c0a86af60a45d7be6a94cfed"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.DataTypeNode.GetEncoding </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00195">195</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                                                {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                <span class="keywordflow">if</span> (childNode is StringLiteralNode) {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#afdc4e6f4f3d0d677de31977dd3028b14">Encoding</a> = ((StringLiteralNode) childNode).Value;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#ad8dc51a5ac025cfe5056d69a9e2d1308">HasEncoding</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_afdc4e6f4f3d0d677de31977dd3028b14"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#afdc4e6f4f3d0d677de31977dd3028b14">Deveel.Data.Sql.Parser.DataTypeNode.Encoding</a></div><div class="ttdeci">string Encoding</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00111">DataTypeNode.cs:111</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_ad8dc51a5ac025cfe5056d69a9e2d1308"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#ad8dc51a5ac025cfe5056d69a9e2d1308">Deveel.Data.Sql.Parser.DataTypeNode.HasEncoding</a></div><div class="ttdeci">bool HasEncoding</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00113">DataTypeNode.cs:113</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="acfbec46d02305942ff53551e569916f7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.DataTypeNode.GetLocale </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00186">186</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                                              {</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                <span class="keywordflow">if</span> (childNode is StringLiteralNode) {</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aafd58426306e4d83958bb297c9129e33">Locale</a> = ((StringLiteralNode) childNode).Value;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aa14cfb22cd40ba398bd387cf0a2a34b5">HasLocale</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                }</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_aafd58426306e4d83958bb297c9129e33"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aafd58426306e4d83958bb297c9129e33">Deveel.Data.Sql.Parser.DataTypeNode.Locale</a></div><div class="ttdeci">string Locale</div><div class="ttdoc">In case the data-type is a STRING type, this gets the locale string used to collate the values handle...</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00102">DataTypeNode.cs:102</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_aa14cfb22cd40ba398bd387cf0a2a34b5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aa14cfb22cd40ba398bd387cf0a2a34b5">Deveel.Data.Sql.Parser.DataTypeNode.HasLocale</a></div><div class="ttdeci">bool HasLocale</div><div class="ttdoc">In case the data-type is a STRING type, this indicates if the data-type specification includes a loca...</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00109">DataTypeNode.cs:109</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a36101bce5e5e58a930551007424ee864"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.DataTypeNode.GetMeta </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00155">155</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                                            {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="keywordflow">if</span> (node == null)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            var metas = node.FindNodes&lt;DataTypeMetaNode&gt;();</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keywordflow">foreach</span> (var meta <span class="keywordflow">in</span> metas) {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a37fb546fbcc569ad789fa3de3e6ee395">Metadata</a>[meta.Name] = meta.Value;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a37fb546fbcc569ad789fa3de3e6ee395"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a37fb546fbcc569ad789fa3de3e6ee395">Deveel.Data.Sql.Parser.DataTypeNode.Metadata</a></div><div class="ttdeci">Dictionary&lt; string, string &gt; Metadata</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00115">DataTypeNode.cs:115</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aca94f892e10b80018c382f81795d0a21"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.DataTypeNode.GetNumberPrecision </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00224">224</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                                                       {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                <span class="keywordflow">if</span> (!<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a890a269c733a8597d57e71ec8facca89">HasScale</a>) {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aea9ecb96f85075f071a5af7a60f181c2">Scale</a> = (int) ((IntegerLiteralNode) childNode).Value;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a890a269c733a8597d57e71ec8facca89">HasScale</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a5b65cc19103c345adb928e6b4b1acad4">Precision</a> = (int) ((IntegerLiteralNode) childNode).Value;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#abb336ab27f26a01f154a1f1e8ccce89c">HasPrecision</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a890a269c733a8597d57e71ec8facca89"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a890a269c733a8597d57e71ec8facca89">Deveel.Data.Sql.Parser.DataTypeNode.HasScale</a></div><div class="ttdeci">bool HasScale</div><div class="ttdoc">Gets a value indicating if the data-type specification has a scaling factor value indicated...</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00081">DataTypeNode.cs:81</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a5b65cc19103c345adb928e6b4b1acad4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a5b65cc19103c345adb928e6b4b1acad4">Deveel.Data.Sql.Parser.DataTypeNode.Precision</a></div><div class="ttdeci">int Precision</div><div class="ttdoc">Get the precision of a data-type that is NUMERIC. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00088">DataTypeNode.cs:88</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_abb336ab27f26a01f154a1f1e8ccce89c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#abb336ab27f26a01f154a1f1e8ccce89c">Deveel.Data.Sql.Parser.DataTypeNode.HasPrecision</a></div><div class="ttdeci">bool HasPrecision</div><div class="ttdoc">In case this data-type is a NUMERIC type, this gets a value indicating if a precision specification w...</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00094">DataTypeNode.cs:94</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_aea9ecb96f85075f071a5af7a60f181c2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aea9ecb96f85075f071a5af7a60f181c2">Deveel.Data.Sql.Parser.DataTypeNode.Scale</a></div><div class="ttdeci">int Scale</div><div class="ttdoc">Gets the scaling factor of a numeric data-type. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00074">DataTypeNode.cs:74</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a74567c5238e07fb1fc18017d39c0503f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.DataTypeNode.GetNumberType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00213">213</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                                                  {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <span class="keywordflow">if</span> (childNode is SqlKeyNode) {</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a27a8660a4c4536f2473109d42c28f8fb">TypeName</a> = ((SqlKeyNode) childNode).Text;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (childNode.NodeName == <span class="stringliteral">&quot;number_precision&quot;</span>) {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aca94f892e10b80018c382f81795d0a21">GetNumberPrecision</a>(childNode);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a27a8660a4c4536f2473109d42c28f8fb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a27a8660a4c4536f2473109d42c28f8fb">Deveel.Data.Sql.Parser.DataTypeNode.TypeName</a></div><div class="ttdeci">string TypeName</div><div class="ttdoc">Gets the name of the data type, if IsPrimitive is true. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00047">DataTypeNode.cs:47</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_aca94f892e10b80018c382f81795d0a21"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aca94f892e10b80018c382f81795d0a21">Deveel.Data.Sql.Parser.DataTypeNode.GetNumberPrecision</a></div><div class="ttdeci">void GetNumberPrecision(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00224">DataTypeNode.cs:224</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a7e4bca4b16bc888782f06804d201e81b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.DataTypeNode.GetSimpleType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00165">165</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                                                  {</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            var type = node.ChildNodes.First();</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a27a8660a4c4536f2473109d42c28f8fb">TypeName</a> = type.NodeName;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a27a8660a4c4536f2473109d42c28f8fb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a27a8660a4c4536f2473109d42c28f8fb">Deveel.Data.Sql.Parser.DataTypeNode.TypeName</a></div><div class="ttdeci">string TypeName</div><div class="ttdoc">Gets the name of the data type, if IsPrimitive is true. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00047">DataTypeNode.cs:47</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aee2bd75255a62f87afda85e3af3881e0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.DataTypeNode.GetSizedType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00170">170</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                                                 {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <span class="keywordflow">if</span> (childNode.NodeName == <span class="stringliteral">&quot;long_varchar&quot;</span>) {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a27a8660a4c4536f2473109d42c28f8fb">TypeName</a> = <span class="stringliteral">&quot;LONG VARCHAR&quot;</span>;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (childNode is SqlKeyNode) {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a27a8660a4c4536f2473109d42c28f8fb">TypeName</a> = ((SqlKeyNode) childNode).Text;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (childNode.NodeName == <span class="stringliteral">&quot;datatype_size&quot;</span>) {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aa2d7552bafb66c017bcfccbfa456c870">GetDataSize</a>(childNode);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (childNode.NodeName == <span class="stringliteral">&quot;locale_opt&quot;</span>) {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#acfbec46d02305942ff53551e569916f7">GetLocale</a>(childNode);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (childNode.NodeName == <span class="stringliteral">&quot;encoding_opt&quot;</span>) {</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a483ade52c0a86af60a45d7be6a94cfed">GetEncoding</a>(childNode);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a27a8660a4c4536f2473109d42c28f8fb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a27a8660a4c4536f2473109d42c28f8fb">Deveel.Data.Sql.Parser.DataTypeNode.TypeName</a></div><div class="ttdeci">string TypeName</div><div class="ttdoc">Gets the name of the data type, if IsPrimitive is true. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00047">DataTypeNode.cs:47</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_aa2d7552bafb66c017bcfccbfa456c870"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aa2d7552bafb66c017bcfccbfa456c870">Deveel.Data.Sql.Parser.DataTypeNode.GetDataSize</a></div><div class="ttdeci">void GetDataSize(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00204">DataTypeNode.cs:204</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_acfbec46d02305942ff53551e569916f7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#acfbec46d02305942ff53551e569916f7">Deveel.Data.Sql.Parser.DataTypeNode.GetLocale</a></div><div class="ttdeci">void GetLocale(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00186">DataTypeNode.cs:186</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a483ade52c0a86af60a45d7be6a94cfed"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a483ade52c0a86af60a45d7be6a94cfed">Deveel.Data.Sql.Parser.DataTypeNode.GetEncoding</a></div><div class="ttdeci">void GetEncoding(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00195">DataTypeNode.cs:195</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a35f96aadaa8be956d6a23befb5b773dc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.DataTypeNode.GetUserType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00146">146</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                                {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a232f42bdfabcf34cd2f966fe88da790a">IsPrimitive</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a27a8660a4c4536f2473109d42c28f8fb">TypeName</a> = node.FindNode&lt;ObjectNameNode&gt;().Name;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            var optMetaList = node.FindByName(<span class="stringliteral">&quot;user_type_meta_opt&quot;</span>);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordflow">if</span> (optMetaList != null) {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a36101bce5e5e58a930551007424ee864">GetMeta</a>(optMetaList.ChildNodes.FirstOrDefault());</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a27a8660a4c4536f2473109d42c28f8fb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a27a8660a4c4536f2473109d42c28f8fb">Deveel.Data.Sql.Parser.DataTypeNode.TypeName</a></div><div class="ttdeci">string TypeName</div><div class="ttdoc">Gets the name of the data type, if IsPrimitive is true. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00047">DataTypeNode.cs:47</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a36101bce5e5e58a930551007424ee864"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a36101bce5e5e58a930551007424ee864">Deveel.Data.Sql.Parser.DataTypeNode.GetMeta</a></div><div class="ttdeci">void GetMeta(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00155">DataTypeNode.cs:155</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a232f42bdfabcf34cd2f966fe88da790a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a232f42bdfabcf34cd2f966fe88da790a">Deveel.Data.Sql.Parser.DataTypeNode.IsPrimitive</a></div><div class="ttdeci">bool IsPrimitive</div><div class="ttdoc">Gets a boolean value indicating if the data type found is a primitive. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00042">DataTypeNode.cs:42</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a8044b3f52ddac6a9378e87cb6203850a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> Deveel.Data.Sql.Parser.DataTypeNode.OnChildNode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>During the initialization of the node from the parser, this method is called for every child node added to <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a6ec9ab950c57cbf1d784f794e4862f0b" title="Gets an immutable list of nodes, children of the current node. ">ChildNodes</a> </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">node</td><td>The node being added to the list of children.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a normalized version of the child node, or the node itself. </dd></dl>

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a49fd30b6a75efbe17f430f0a42681f3a">Deveel.Data.Sql.Parser.SqlNode</a>.</p>

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00117">117</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                                               {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;identity_type&quot;</span>) {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a27a8660a4c4536f2473109d42c28f8fb">TypeName</a> = <span class="stringliteral">&quot;IDENTITY&quot;</span>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;boolean_type&quot;</span>) {</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aff21aea7e39f2d802c21d4a9590a9c2e">GetBooleanType</a>(node);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;decimal_type&quot;</span>) {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a74567c5238e07fb1fc18017d39c0503f">GetNumberType</a>(node);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;character_type&quot;</span> ||</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                       node.NodeName == <span class="stringliteral">&quot;binary_type&quot;</span>) {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aee2bd75255a62f87afda85e3af3881e0">GetSizedType</a>(node);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;date_type&quot;</span> ||</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                       node.NodeName == <span class="stringliteral">&quot;integer_type&quot;</span> ||</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                       node.NodeName == <span class="stringliteral">&quot;float_type&quot;</span>) {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a7e4bca4b16bc888782f06804d201e81b">GetSimpleType</a>(node);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;interval_type&quot;</span>) {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;user_type&quot;</span>) {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a35f96aadaa8be956d6a23befb5b773dc">GetUserType</a>(node);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;row_type&quot;</span>) {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordflow">return</span> base.OnChildNode(node);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a27a8660a4c4536f2473109d42c28f8fb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a27a8660a4c4536f2473109d42c28f8fb">Deveel.Data.Sql.Parser.DataTypeNode.TypeName</a></div><div class="ttdeci">string TypeName</div><div class="ttdoc">Gets the name of the data type, if IsPrimitive is true. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00047">DataTypeNode.cs:47</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_aff21aea7e39f2d802c21d4a9590a9c2e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aff21aea7e39f2d802c21d4a9590a9c2e">Deveel.Data.Sql.Parser.DataTypeNode.GetBooleanType</a></div><div class="ttdeci">void GetBooleanType(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00141">DataTypeNode.cs:141</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a74567c5238e07fb1fc18017d39c0503f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a74567c5238e07fb1fc18017d39c0503f">Deveel.Data.Sql.Parser.DataTypeNode.GetNumberType</a></div><div class="ttdeci">void GetNumberType(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00213">DataTypeNode.cs:213</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a35f96aadaa8be956d6a23befb5b773dc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a35f96aadaa8be956d6a23befb5b773dc">Deveel.Data.Sql.Parser.DataTypeNode.GetUserType</a></div><div class="ttdeci">void GetUserType(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00146">DataTypeNode.cs:146</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_aee2bd75255a62f87afda85e3af3881e0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aee2bd75255a62f87afda85e3af3881e0">Deveel.Data.Sql.Parser.DataTypeNode.GetSizedType</a></div><div class="ttdeci">void GetSizedType(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00170">DataTypeNode.cs:170</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a7e4bca4b16bc888782f06804d201e81b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a7e4bca4b16bc888782f06804d201e81b">Deveel.Data.Sql.Parser.DataTypeNode.GetSimpleType</a></div><div class="ttdeci">void GetSimpleType(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00165">DataTypeNode.cs:165</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Property Documentation</h2>
<a class="anchor" id="afdc4e6f4f3d0d677de31977dd3028b14"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string Deveel.Data.Sql.Parser.DataTypeNode.Encoding</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00111">111</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="ad8dc51a5ac025cfe5056d69a9e2d1308"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Sql.Parser.DataTypeNode.HasEncoding</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00113">113</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="aa14cfb22cd40ba398bd387cf0a2a34b5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Sql.Parser.DataTypeNode.HasLocale</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>In case the data-type is a <code>STRING</code> type, this indicates if the data-type specification includes a locale definition. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aafd58426306e4d83958bb297c9129e33" title="In case the data-type is a STRING type, this gets the locale string used to collate the values handle...">Locale</a></dd></dl>

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00109">109</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="abb336ab27f26a01f154a1f1e8ccce89c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Sql.Parser.DataTypeNode.HasPrecision</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>In case this data-type is a <code>NUMERIC</code> type, this gets a value indicating if a precision specification was defined. </p>

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00094">94</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a890a269c733a8597d57e71ec8facca89"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Sql.Parser.DataTypeNode.HasScale</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a value indicating if the data-type specification has a scaling factor value indicated. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aea9ecb96f85075f071a5af7a60f181c2" title="Gets the scaling factor of a numeric data-type. ">Scale</a></dd></dl>

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00081">81</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a8c4572d48038b04a42576b751cd8084a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Sql.Parser.DataTypeNode.HasSize</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a value indicating if the data-type specification has a size value. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a85883d73298abac6fa4655369bb6ea55" title="Gets the size specification of the data-type. ">Size</a></dd></dl>

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00063">63</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a232f42bdfabcf34cd2f966fe88da790a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Sql.Parser.DataTypeNode.IsPrimitive</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a boolean value indicating if the data type found is a primitive. </p>
<dl class="section see"><dt>See also</dt><dd>SqlType.IsPrimitive, PrimitiveTypes.IsPrimitive(Deveel.Data.Types.SqlTypeCode)</dd></dl>

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00042">42</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="aafd58426306e4d83958bb297c9129e33"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string Deveel.Data.Sql.Parser.DataTypeNode.Locale</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>In case the data-type is a <code>STRING</code> type, this gets the locale string used to collate the values handled by the type. </p>
<dl class="section see"><dt>See also</dt><dd>StringType.Locale, <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aa14cfb22cd40ba398bd387cf0a2a34b5" title="In case the data-type is a STRING type, this indicates if the data-type specification includes a loca...">HasLocale</a></dd></dl>

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00102">102</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a37fb546fbcc569ad789fa3de3e6ee395"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Dictionary&lt;string, string&gt; Deveel.Data.Sql.Parser.DataTypeNode.Metadata</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00115">115</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a5b65cc19103c345adb928e6b4b1acad4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Deveel.Data.Sql.Parser.DataTypeNode.Precision</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the precision of a data-type that is <code>NUMERIC</code>. </p>
<dl class="section see"><dt>See also</dt><dd>NumericType, <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#abb336ab27f26a01f154a1f1e8ccce89c" title="In case this data-type is a NUMERIC type, this gets a value indicating if a precision specification w...">HasPrecision</a></dd></dl>

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00088">88</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="aea9ecb96f85075f071a5af7a60f181c2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Deveel.Data.Sql.Parser.DataTypeNode.Scale</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the scaling factor of a numeric data-type. </p>
<p>This value is present only if the data-type is <code>NUMERIC</code>. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a890a269c733a8597d57e71ec8facca89" title="Gets a value indicating if the data-type specification has a scaling factor value indicated...">HasScale</a>, SqlNumber.Scale, NumericType.Scale</dd></dl>

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00074">74</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a85883d73298abac6fa4655369bb6ea55"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Deveel.Data.Sql.Parser.DataTypeNode.Size</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the size specification of the data-type. </p>
<p>In case the type is a <code>NUMERIC</code> type, this value is not indicated: rather check <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aea9ecb96f85075f071a5af7a60f181c2" title="Gets the scaling factor of a numeric data-type. ">Scale</a> property. </p>

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00056">56</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a27a8660a4c4536f2473109d42c28f8fb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string Deveel.Data.Sql.Parser.DataTypeNode.TypeName</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the name of the data type, if <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a232f42bdfabcf34cd2f966fe88da790a" title="Gets a boolean value indicating if the data type found is a primitive. ">IsPrimitive</a> is <code>true</code>. </p>

<p>Definition at line <a class="el" href="DataTypeNode_8cs_source.htm#l00047">47</a> of file <a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Parser/<a class="el" href="DataTypeNode_8cs_source.htm">DataTypeNode.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
