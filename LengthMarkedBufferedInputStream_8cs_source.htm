<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Protocol/LengthMarkedBufferedInputStream.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_02e926e2c318bb7407624268db028ff1.htm">Deveel.Data.Protocol</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">LengthMarkedBufferedInputStream.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="LengthMarkedBufferedInputStream_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.IO;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Util.htm">Util</a>;</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Protocol {</div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm">   16</a></span>&#160;    <span class="keyword">public</span> sealed <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm">LengthMarkedBufferedInputStream</a> : Stream {</div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a1488e9702c276446e550403ecd7c82cd">   20</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">int</span> InitialBufferSize = 512;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#af33dbe539af7788adf7e5f092470a5b5">   25</a></span>&#160;        <span class="keyword">private</span> readonly <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IInputStream.htm">IInputStream</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#af33dbe539af7788adf7e5f092470a5b5">input</a>;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a4b19a1db8fdd79aa1912896544cb785d">   30</a></span>&#160;        <span class="keyword">private</span> byte[] <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a4b19a1db8fdd79aa1912896544cb785d">buf</a>;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#aa2fdf8560c1bb986ae4388ac14a4f8db">   35</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#aa2fdf8560c1bb986ae4388ac14a4f8db">count</a>;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a6eefbcc49529840a2f4537280ce62d7c">   41</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a6eefbcc49529840a2f4537280ce62d7c">markedLength</a>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a0c85a1c747becb6179162a0f1ebe5f7f">   46</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a0c85a1c747becb6179162a0f1ebe5f7f">markedIndex</a>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#ad606d15b7682d27f7e8a7a40b17fca81">   48</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#ad606d15b7682d27f7e8a7a40b17fca81">LengthMarkedBufferedInputStream</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IInputStream.htm">IInputStream</a> input) {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            this.input = input;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            buf = <span class="keyword">new</span> byte[InitialBufferSize];</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            count = 0;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            markedLength = -1;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            markedIndex = -1;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        }</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a855f3f1d9b9ec28eb002c9968e99abef">   63</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a855f3f1d9b9ec28eb002c9968e99abef">EnsureCapacity</a>(<span class="keywordtype">int</span> newSize) {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordtype">int</span> old_size = buf.Length;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keywordflow">if</span> (newSize &gt; old_size) {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                <span class="keywordtype">int</span> cap = (old_size * 3) / 2 + 1;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                <span class="keywordflow">if</span> (cap &lt; newSize)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                    cap = newSize;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                byte[] oldBuf = buf;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                buf = <span class="keyword">new</span> byte[cap];</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                <span class="comment">//      // Copy all the contents except the first 4 bytes (the size marker)</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                Array.Copy(oldBuf, 0, buf, 0, count);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a7c727f100268cfd3adea6baa7f2243bf">   86</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a7c727f100268cfd3adea6baa7f2243bf">HandleEndReached</a>() {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            <span class="comment">// Move anything from the end of the buffer to the start.</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            Array.Copy(buf, markedIndex, buf, 0, count - markedLength);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            count -= markedLength;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="comment">// Reset the state</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            markedLength = -1;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            markedIndex = -1;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="comment">// ---------- Overwritten from Stream ----------</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a18bf2a455600491f903aef5b9ff4911f">   98</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a18bf2a455600491f903aef5b9ff4911f">ReadByte</a>() {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                <span class="keywordflow">if</span> (markedIndex == -1)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;No mark has been read yet.&quot;</span>);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                <span class="keywordflow">if</span> (markedIndex &gt;= markedLength) {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                    <span class="keywordtype">string</span> debugMsg = <span class="stringliteral">&quot;Read over end of length marked buffer.  &quot;</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                    debugMsg += <span class="stringliteral">&quot;(marked_index=&quot;</span> + markedIndex;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                    debugMsg += <span class="stringliteral">&quot;,marked_length=&quot;</span> + markedLength + <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                    debugMsg += <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(debugMsg);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                <span class="keywordtype">int</span> n = buf[markedIndex++] &amp; 0x0FF;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                <span class="keywordflow">if</span> (markedIndex &gt;= markedLength) {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                    HandleEndReached();</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                <span class="keywordflow">return</span> n;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a0bd79943593c6d10a81aafe8c8b6a775">  118</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a0bd79943593c6d10a81aafe8c8b6a775">Write</a>(byte[] buffer, <span class="keywordtype">int</span> offset, <span class="keywordtype">int</span> count) {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a3c6cf4e801ebc5545428e0a8d6a962f9">  122</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> CanRead {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a496a1126414e2f05fad5968de107fe7f">  126</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> CanSeek {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a53ed4e38aba7c23637e61978a2c33d91">  130</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> CanWrite {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        }</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#aa5ac80c746c2518acf11c0e7dfe25a9d">  134</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">long</span> Length {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException(); }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a8f48be64979638add90e2ef19103301d">  138</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">long</span> Position {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException(); }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            set { <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException(); }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#aad5ab28987113620c439a779babc8eab">  143</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#aad5ab28987113620c439a779babc8eab">Flush</a>() {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a3371a5df56b7c3bcc2e146b0120baf65">  146</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a3371a5df56b7c3bcc2e146b0120baf65">Seek</a>(<span class="keywordtype">long</span> offset, SeekOrigin origin) {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a00744202ec3c772de4624f44273aa059">  150</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a00744202ec3c772de4624f44273aa059">SetLength</a>(<span class="keywordtype">long</span> value) {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#aa150f3b545c80388bf6333bbe11b1461">  154</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#aa150f3b545c80388bf6333bbe11b1461">Read</a>(byte[] b, <span class="keywordtype">int</span> off, <span class="keywordtype">int</span> len) {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                <span class="keywordflow">if</span> (markedIndex == -1)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;No mark has been read yet.&quot;</span>);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                <span class="keywordtype">int</span> readUpto = markedIndex + len;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                <span class="keywordflow">if</span> (readUpto &gt; markedLength) {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                    String debug_msg = <span class="stringliteral">&quot;Read over end of length marked buffer.  &quot;</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                    debug_msg += <span class="stringliteral">&quot;(marked_index=&quot;</span> + markedIndex;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                    debug_msg += <span class="stringliteral">&quot;,len=&quot;</span> + len;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                    debug_msg += <span class="stringliteral">&quot;,marked_length=&quot;</span> + markedLength + <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(debug_msg);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                Array.Copy(buf, markedIndex, b, off, len);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                markedIndex = readUpto;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                <span class="keywordflow">if</span> (markedIndex &gt;= markedLength) {</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                    HandleEndReached();</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <span class="keywordflow">return</span> len;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a6932ce47a3c7c05104ebbd84e903d684">  176</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> Available {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <span class="keyword">get</span> {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                    <span class="comment">// This method only returns a non 0 value if there is a complete command</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                    <span class="comment">// waiting on the stream.</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                    <span class="keywordflow">if</span> (markedLength &gt;= 0) {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                        <span class="keywordflow">return</span> (markedLength - markedIndex);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                    }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                }</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        }</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="comment">// ---------- These methods aid in reading state from the stream ----------</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a618adeb78e535994cb38d0bcb305f8f3">  204</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a618adeb78e535994cb38d0bcb305f8f3">PollForCommand</a>(<span class="keywordtype">int</span> maxSize) {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                <span class="keywordflow">if</span> (markedLength == -1) {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                    <span class="keywordtype">int</span> available = input.Available;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                    <span class="keywordflow">if</span> (count &gt; 0 || available &gt; 0) {</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                        <span class="keywordflow">if</span> ((count + available) &gt; maxSize) {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                            <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;Marked length is greater than max size ( &quot;</span> +</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                                                  (count + available) + <span class="stringliteral">&quot; &gt; &quot;</span> + maxSize + <span class="stringliteral">&quot; )&quot;</span>);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                        }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                        EnsureCapacity(count + available);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                        <span class="keywordtype">int</span> readIn = input.Read(buf, count, available);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                        <span class="keywordflow">if</span> (readIn == 0) {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                            <span class="comment">//TODO: Check this format...</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                            <span class="comment">// throw new EndOfStreamException();</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                            <span class="comment">// zero bytes read means that the stream is finished...</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                        }</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                        count = count + readIn;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                        <span class="comment">// Check: Is a complete command available?</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                        <span class="keywordflow">if</span> (count &gt;= 4) {</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                            <span class="keywordtype">int</span> lengthMarker = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(buf, 0);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                            <span class="keywordflow">if</span> (count &gt;= lengthMarker + 4) {</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                                <span class="comment">// Yes, complete command available.</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                                <span class="comment">// mark this area up.</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                                markedLength = lengthMarker + 4;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                                markedIndex = 4;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                            }</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                        }</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                    }</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            }</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        }</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div>
<div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#afd5607fcca4bf715f8fd44b9e18f4062">  247</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#afd5607fcca4bf715f8fd44b9e18f4062">BlockForCommand</a>() {</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                <span class="keywordflow">while</span> (<span class="keyword">true</span>) {</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                    <span class="comment">// Is there a command available?</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                    <span class="keywordflow">if</span> (count &gt;= 4) {</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                        <span class="keywordtype">int</span> lengthMarker = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(buf, 0);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                        <span class="keywordflow">if</span> (count &gt;= lengthMarker + 4) {</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                            <span class="comment">// Yes, complete command available.</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                            <span class="comment">// mark this area up.</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                            markedLength = lengthMarker + 4;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                            markedIndex = 4;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                        }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                    }</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                    <span class="comment">// If the buffer is full grow it larger.</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                    <span class="keywordflow">if</span> (count &gt;= buf.Length) {</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                        EnsureCapacity(count + InitialBufferSize);</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                    }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                    <span class="comment">// Read in a block of data, block if nothing there</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                    <span class="keywordtype">int</span> read_in = input.Read(buf, count, buf.Length - count);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                    <span class="keywordflow">if</span> (read_in == 0) {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                        <span class="comment">//TODO: Check this format...</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                        <span class="comment">// throw new EndOfStreamException();</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                        <span class="comment">// zero bytes read means that the stream is finished...</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                    }</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                    count += read_in;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                }</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            }</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        }</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    }</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_aad5ab28987113620c439a779babc8eab"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#aad5ab28987113620c439a779babc8eab">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.Flush</a></div><div class="ttdeci">override void Flush()</div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00143">LengthMarkedBufferedInputStream.cs:143</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm">Deveel.Data.Protocol.LengthMarkedBufferedInputStream</a></div><div class="ttdoc">Reads a command block on the underlying stream that is constrained by a length marker preceeding the ...</div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00016">LengthMarkedBufferedInputStream.cs:16</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Protocol_1_1IInputStream_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Protocol_1_1IInputStream.htm">Deveel.Data.Protocol.IInputStream</a></div><div class="ttdoc">Represents a stream that supports required functionalities for a LengthMarkedBufferedInputStream ...</div><div class="ttdef"><b>Definition:</b> <a href="IInputStream_8cs_source.htm#l00010">IInputStream.cs:10</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a946b330588fd8d78dcdf762be5b80886"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">Deveel.Data.Util.ByteBuffer.ReadInt4</a></div><div class="ttdeci">int ReadInt4()</div><div class="ttdoc">Reads an integer from the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00128">ByteBuffer.cs:128</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_aa2fdf8560c1bb986ae4388ac14a4f8db"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#aa2fdf8560c1bb986ae4388ac14a4f8db">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.count</a></div><div class="ttdeci">int count</div><div class="ttdoc">The number of valid bytes in the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00035">LengthMarkedBufferedInputStream.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_af33dbe539af7788adf7e5f092470a5b5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#af33dbe539af7788adf7e5f092470a5b5">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.input</a></div><div class="ttdeci">readonly IInputStream input</div><div class="ttdoc">The chained InputStream that is underneath this object. </div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00025">LengthMarkedBufferedInputStream.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_a00744202ec3c772de4624f44273aa059"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a00744202ec3c772de4624f44273aa059">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.SetLength</a></div><div class="ttdeci">override void SetLength(long value)</div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00150">LengthMarkedBufferedInputStream.cs:150</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_a855f3f1d9b9ec28eb002c9968e99abef"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a855f3f1d9b9ec28eb002c9968e99abef">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.EnsureCapacity</a></div><div class="ttdeci">void EnsureCapacity(int newSize)</div><div class="ttdoc">Ensures that the buffer is large enough to store the given value. </div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00063">LengthMarkedBufferedInputStream.cs:63</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_afd5607fcca4bf715f8fd44b9e18f4062"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#afd5607fcca4bf715f8fd44b9e18f4062">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.BlockForCommand</a></div><div class="ttdeci">void BlockForCommand()</div><div class="ttdoc">Blocks until a complete command has been read in. </div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00247">LengthMarkedBufferedInputStream.cs:247</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_a18bf2a455600491f903aef5b9ff4911f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a18bf2a455600491f903aef5b9ff4911f">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.ReadByte</a></div><div class="ttdeci">override int ReadByte()</div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00098">LengthMarkedBufferedInputStream.cs:98</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_a3371a5df56b7c3bcc2e146b0120baf65"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a3371a5df56b7c3bcc2e146b0120baf65">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.Seek</a></div><div class="ttdeci">override long Seek(long offset, SeekOrigin origin)</div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00146">LengthMarkedBufferedInputStream.cs:146</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_a6eefbcc49529840a2f4537280ce62d7c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a6eefbcc49529840a2f4537280ce62d7c">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.markedLength</a></div><div class="ttdeci">int markedLength</div><div class="ttdoc">The area of the buffer that is marked as being an available command. If it&#39;s -1 then there is no area...</div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00041">LengthMarkedBufferedInputStream.cs:41</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">Deveel.Data.Util.ByteBuffer</a></div><div class="ttdoc">A wrapper for an array of byte. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00027">ByteBuffer.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_a618adeb78e535994cb38d0bcb305f8f3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a618adeb78e535994cb38d0bcb305f8f3">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.PollForCommand</a></div><div class="ttdeci">bool PollForCommand(int maxSize)</div><div class="ttdoc">Checks to see if there is a complete command waiting on the input stream. </div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00204">LengthMarkedBufferedInputStream.cs:204</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_aa150f3b545c80388bf6333bbe11b1461"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#aa150f3b545c80388bf6333bbe11b1461">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.Read</a></div><div class="ttdeci">override int Read(byte[] b, int off, int len)</div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00154">LengthMarkedBufferedInputStream.cs:154</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_a0c85a1c747becb6179162a0f1ebe5f7f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a0c85a1c747becb6179162a0f1ebe5f7f">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.markedIndex</a></div><div class="ttdeci">int markedIndex</div><div class="ttdoc">The current index of the marked area that is being read. </div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00046">LengthMarkedBufferedInputStream.cs:46</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_a4b19a1db8fdd79aa1912896544cb785d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a4b19a1db8fdd79aa1912896544cb785d">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.buf</a></div><div class="ttdeci">byte[] buf</div><div class="ttdoc">The buffer that is used to read in whatever is on the stream. </div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00030">LengthMarkedBufferedInputStream.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_ad606d15b7682d27f7e8a7a40b17fca81"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#ad606d15b7682d27f7e8a7a40b17fca81">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.LengthMarkedBufferedInputStream</a></div><div class="ttdeci">LengthMarkedBufferedInputStream(IInputStream input)</div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00048">LengthMarkedBufferedInputStream.cs:48</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_a0bd79943593c6d10a81aafe8c8b6a775"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a0bd79943593c6d10a81aafe8c8b6a775">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.Write</a></div><div class="ttdeci">override void Write(byte[] buffer, int offset, int count)</div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00118">LengthMarkedBufferedInputStream.cs:118</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Util_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Util.htm">Deveel.Data.Util</a></div><div class="ttdef"><b>Definition:</b> <a href="BigArray_8cs_source.htm#l00019">BigArray.cs:19</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream_htm_a7c727f100268cfd3adea6baa7f2243bf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LengthMarkedBufferedInputStream.htm#a7c727f100268cfd3adea6baa7f2243bf">Deveel.Data.Protocol.LengthMarkedBufferedInputStream.HandleEndReached</a></div><div class="ttdeci">void HandleEndReached()</div><div class="ttdoc">Called when the end of the marked length is reached. </div><div class="ttdef"><b>Definition:</b> <a href="LengthMarkedBufferedInputStream_8cs_source.htm#l00086">LengthMarkedBufferedInputStream.cs:86</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
