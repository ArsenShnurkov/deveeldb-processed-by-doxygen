<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb-nunit/Deveel.Data.Sql.Compile/AlterTableCompileTests.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_161fca7059b832f09270a2e8ed498e3a.htm">deveeldb-nunit</a></li><li class="navelem"><a class="el" href="dir_936e5781f4e9fa52b6f4a1e2ca0ade5c.htm">Deveel.Data.Sql.Compile</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">AlterTableCompileTests.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="AlterTableCompileTests_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Linq;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Statements.htm">Statements</a>;</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm">Types</a>;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceNUnit.htm">NUnit</a>.Framework;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Sql.Compile {</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;    [TestFixture]</div>
<div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm">   11</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm">AlterTableCompileTests</a> : <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm">CursorCompileTests</a> {</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;        [Test]</div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#a88177820d9e16885949d9279a5f51621">   13</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#a88177820d9e16885949d9279a5f51621">AddColumn</a>() {</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;ALTER TABLE test ADD COLUMN b INT NOT NULL&quot;</span>;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;            var result = Compile(sql);</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;            Assert.AreEqual(1, result.Statements.Count);</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;            var statement = result.Statements.First();</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;            Assert.IsNotNull(statement);</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>&gt;(statement);</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            var alterStatement = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>) statement;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;test&quot;</span>, alterStatement.TableName.FullName);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddColumnAction.htm">AddColumnAction</a>&gt;(alterStatement.Action);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            var alterAction = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddColumnAction.htm">AddColumnAction</a>) alterStatement.Action;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;b&quot;</span>, alterAction.Column.ColumnName);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm">NumericType</a>&gt;(alterAction.Column.ColumnType);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            Assert.IsTrue(alterAction.Column.IsNotNull);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        }</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        [Test]</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#a94dfc01e591c09f9da68f9664981704e">   40</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#a94dfc01e591c09f9da68f9664981704e">AddMultipleColumns</a>() {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;ALTER TABLE test ADD COLUMN b INT NOT NULL ADD c VARCHAR DEFAULT &#39;test&#39;&quot;</span>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            var result = Compile(sql);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            Assert.AreEqual(2, result.Statements.Count);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        }</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        [Test]</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#aae105cd0e6cd21873efd9b02f9263278">   51</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#aae105cd0e6cd21873efd9b02f9263278">AddColumnsAndUniqeContraints</a>() {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;ALTER TABLE test ADD COLUMN b INT NOT NULL ADD CONSTRAINT c UNIQUE(a, b)&quot;</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            var result = Compile(sql);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            Assert.AreEqual(2, result.Statements.Count);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            var firstStatement = result.Statements.ElementAt(0);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            var secondStatement = result.Statements.ElementAt(1);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            Assert.IsNotNull(firstStatement);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            Assert.IsNotNull(secondStatement);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>&gt;(firstStatement);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>&gt;(secondStatement);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            var alter1 = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>) firstStatement;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            var alter2 = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>) secondStatement;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddColumnAction.htm">AddColumnAction</a>&gt;(alter1.Action);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddConstraintAction.htm">AddConstraintAction</a>&gt;(alter2.Action);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        [Test]</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#afb590b122f0d6ad34a118126e03de9c7">   77</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#afb590b122f0d6ad34a118126e03de9c7">AddPrimaryKeyContraint</a>() {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;ALTER TABLE test ADD CONSTRAINT c PRIMARY KEY(id)&quot;</span>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            var result = Compile(sql);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            Assert.AreEqual(1, result.Statements.Count);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            var statement = result.Statements.First();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            Assert.IsNotNull(statement);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>&gt;(statement);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            var alterStatement = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>) statement;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;test&quot;</span>, alterStatement.TableName.FullName);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddConstraintAction.htm">AddConstraintAction</a>&gt;(alterStatement.Action);            </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        [Test]</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#acdf8a93f9c2fba889a21535babdbe6bb">   98</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#acdf8a93f9c2fba889a21535babdbe6bb">DropColumn</a>() {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;ALTER TABLE test DROP COLUMN b&quot;</span>;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            var result = Compile(sql);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            Assert.AreEqual(1, result.Statements.Count);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            var statement = result.Statements.ElementAt(0);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>&gt;(statement);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            var alter = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>) statement;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DropColumnAction.htm">DropColumnAction</a>&gt;(alter.Action);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests_htm_acdf8a93f9c2fba889a21535babdbe6bb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#acdf8a93f9c2fba889a21535babdbe6bb">Deveel.Data.Sql.Compile.AlterTableCompileTests.DropColumn</a></div><div class="ttdeci">void DropColumn()</div><div class="ttdef"><b>Definition:</b> <a href="AlterTableCompileTests_8cs_source.htm#l00098">AlterTableCompileTests.cs:98</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Statements_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Statements.htm">Deveel.Data.Sql.Statements</a></div><div class="ttdef"><b>Definition:</b> <a href="AddColumnAction_8cs_source.htm#l00022">AddColumnAction.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests_htm_a88177820d9e16885949d9279a5f51621"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#a88177820d9e16885949d9279a5f51621">Deveel.Data.Sql.Compile.AlterTableCompileTests.AddColumn</a></div><div class="ttdeci">void AddColumn()</div><div class="ttdef"><b>Definition:</b> <a href="AlterTableCompileTests_8cs_source.htm#l00013">AlterTableCompileTests.cs:13</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddConstraintAction_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddConstraintAction.htm">Deveel.Data.Sql.Statements.AddConstraintAction</a></div><div class="ttdef"><b>Definition:</b> <a href="AddConstraintAction_8cs_source.htm#l00024">AddConstraintAction.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm">Deveel.Data.Sql.Compile.AlterTableCompileTests</a></div><div class="ttdef"><b>Definition:</b> <a href="AlterTableCompileTests_8cs_source.htm#l00011">AlterTableCompileTests.cs:11</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests_htm_afb590b122f0d6ad34a118126e03de9c7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#afb590b122f0d6ad34a118126e03de9c7">Deveel.Data.Sql.Compile.AlterTableCompileTests.AddPrimaryKeyContraint</a></div><div class="ttdeci">void AddPrimaryKeyContraint()</div><div class="ttdef"><b>Definition:</b> <a href="AlterTableCompileTests_8cs_source.htm#l00077">AlterTableCompileTests.cs:77</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm">Deveel.Data.Types.NumericType</a></div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00027">NumericType.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DropColumnAction_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DropColumnAction.htm">Deveel.Data.Sql.Statements.DropColumnAction</a></div><div class="ttdef"><b>Definition:</b> <a href="DropColumnAction_8cs_source.htm#l00023">DropColumnAction.cs:23</a></div></div>
<div class="ttc" id="namespaceNUnit_htm"><div class="ttname"><a href="namespaceNUnit.htm">NUnit</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm">Deveel.Data.Sql.Compile.CursorCompileTests</a></div><div class="ttdef"><b>Definition:</b> <a href="CursorCompileTests_8cs_source.htm#l00010">CursorCompileTests.cs:10</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests_htm_a94dfc01e591c09f9da68f9664981704e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#a94dfc01e591c09f9da68f9664981704e">Deveel.Data.Sql.Compile.AlterTableCompileTests.AddMultipleColumns</a></div><div class="ttdeci">void AddMultipleColumns()</div><div class="ttdef"><b>Definition:</b> <a href="AlterTableCompileTests_8cs_source.htm#l00040">AlterTableCompileTests.cs:40</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddColumnAction_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddColumnAction.htm">Deveel.Data.Sql.Statements.AddColumnAction</a></div><div class="ttdef"><b>Definition:</b> <a href="AddColumnAction_8cs_source.htm#l00024">AddColumnAction.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests_htm_aae105cd0e6cd21873efd9b02f9263278"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#aae105cd0e6cd21873efd9b02f9263278">Deveel.Data.Sql.Compile.AlterTableCompileTests.AddColumnsAndUniqeContraints</a></div><div class="ttdeci">void AddColumnsAndUniqeContraints()</div><div class="ttdef"><b>Definition:</b> <a href="AlterTableCompileTests_8cs_source.htm#l00051">AlterTableCompileTests.cs:51</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm">Deveel.Data.Types</a></div><div class="ttdef"><b>Definition:</b> <a href="ArrayType_8cs_source.htm#l00021">ArrayType.cs:21</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">Deveel.Data.Sql.Statements.AlterTableStatement</a></div><div class="ttdef"><b>Definition:</b> <a href="AlterTableStatement_8cs_source.htm#l00028">AlterTableStatement.cs:28</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm">Deveel.Data.Sql</a></div><div class="ttdef"><b>Definition:</b> <a href="CellId_8cs_source.htm#l00022">CellId.cs:22</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
