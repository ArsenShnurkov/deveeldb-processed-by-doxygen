<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Objects/SqlNumber.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_8d3ca2cb7518dd1b1915c037274ac88e.htm">Deveel.Data.Sql.Objects</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">SqlNumber.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="SqlNumber_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Serialization.htm">Serialization</a>;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.Math;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Sql.Objects {</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    [<a class="code" href="namespaceDeveel_1_1Data_1_1Transactions.htm#a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b">Serializable</a>]</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">   24</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">struct </span><a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> : <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>, IComparable&lt;SqlNumber&gt;, IConvertible, IEquatable&lt;SqlNumber&gt;, <a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">ISerializable</a> {</div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#adeaf54d6746c250564d66d517f97cca2">   25</a></span>&#160;        <span class="keyword">private</span> readonly BigDecimal <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#adeaf54d6746c250564d66d517f97cca2">innerValue</a>;</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a532448c282337e0a84eca30143f848ff">   26</a></span>&#160;        <span class="keyword">private</span> readonly <span class="keywordtype">int</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a532448c282337e0a84eca30143f848ff">byteCount</a>;</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae714812521b0c68b55411c577c247684">   27</a></span>&#160;        <span class="keyword">private</span> readonly <span class="keywordtype">long</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae714812521b0c68b55411c577c247684">valueAsLong</a>;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ac236f423532b37b3d012258d1246e320">   29</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> readonly <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> Zero = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, BigDecimal.Zero);</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ab2a04ae32fae52ab3bf7972e9003c35c">   30</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> readonly <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> One = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, BigDecimal.One);</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aed053d462ea48c3ad8ff42a90d7f35e8">   31</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> readonly <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> Null = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, null);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a91e60c82a16c0afe48c01c91bcace7b1">   33</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> readonly <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> NaN = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NotANumber, null);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a9571385368af14d6792f698a5cdd715a">   35</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> readonly <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327ac65958e0f9944d63bb0d7744146b8b21">NegativeInfinity</a> = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NegativeInfinity, null);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa8ddfdafabafb1ff4c686b483ed6dd29">   37</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> readonly <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327ad40fc076e9ae949248845b94f160ba6e">PositiveInfinity</a> = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.PositiveInfinity, null);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a1fb1dbd45bd630f32d142d791bb39be7">   39</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a1fb1dbd45bd630f32d142d791bb39be7">SqlNumber</a>(BigDecimal value)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            : this(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, value) {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a6861da3f03fb810eeffe01f373d55f81">   43</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a6861da3f03fb810eeffe01f373d55f81">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a> state, BigDecimal value)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            : this() {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            valueAsLong = 0;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            byteCount = 120;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            <span class="keywordflow">if</span> (value != null &amp;&amp; value.Scale == 0) {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                BigInteger bint = value.ToBigInteger();</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                <span class="keywordtype">int</span> bitCount = bint.BitLength;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                <span class="keywordflow">if</span> (bitCount &lt; 30) {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                    valueAsLong = bint.ToInt64();</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                    byteCount = 4;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (bitCount &lt; 60) {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                    valueAsLong = bint.ToInt64();</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                    byteCount = 8;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            innerValue = value;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            State = state;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a97d8b2d5c019045d6f236b8e41bba9ea">   64</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a97d8b2d5c019045d6f236b8e41bba9ea">SqlNumber</a>(byte[] bytes, <span class="keywordtype">int</span> scale)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            : this(new BigDecimal(new BigInteger(bytes), scale)) {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a80af25ec0ee65f0439c2eca43f4c15a1">   68</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a80af25ec0ee65f0439c2eca43f4c15a1">SqlNumber</a>(byte[] bytes, <span class="keywordtype">int</span> scale, <span class="keywordtype">int</span> precision)</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            : this(new BigDecimal(new BigInteger(bytes), scale, new MathContext(precision))) {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#afb36b4f92f2fe95a2f139d2949ceb87a">   72</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#afb36b4f92f2fe95a2f139d2949ceb87a">SqlNumber</a>(<span class="keywordtype">int</span> value, <span class="keywordtype">int</span> precision)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            : this(new BigDecimal(value, new MathContext(precision))) {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a2eb556bbf70bd09b743add17a6f7f748">   76</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a2eb556bbf70bd09b743add17a6f7f748">SqlNumber</a>(<span class="keywordtype">int</span> value)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            : this(value, MathContext.Decimal32.Precision) {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        }</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aaf6c2a27d46295465c2fc2e9df2a2348">   80</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aaf6c2a27d46295465c2fc2e9df2a2348">SqlNumber</a>(<span class="keywordtype">long</span> value, <span class="keywordtype">int</span> precision)</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            : this(new BigDecimal(value, new MathContext(precision))) {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a32ff018c18542dca27cb862c6d098639">   84</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a32ff018c18542dca27cb862c6d098639">SqlNumber</a>(<span class="keywordtype">long</span> value)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            : this(value, MathContext.Decimal64.Precision) {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a03279e672dc649f28df5035b2e8d34f5">   88</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a03279e672dc649f28df5035b2e8d34f5">SqlNumber</a>(<span class="keywordtype">double</span> value)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            : this(value, MathContext.Decimal128.Precision) {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aaf084305c58605c26984a1c2a8e33fc4">   92</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aaf084305c58605c26984a1c2a8e33fc4">SqlNumber</a>(<span class="keywordtype">double</span> value, <span class="keywordtype">int</span> precision)</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            : this(new BigDecimal(value, new MathContext(precision))) {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ad3b84f20e5e628f705cb12b73f101334">   96</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ad3b84f20e5e628f705cb12b73f101334">SqlNumber</a>(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">ObjectData</a> data)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            : this() {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            var state = (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>) data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a1c6522d2ec18af64478402734a00b986">GetByte</a>(<span class="stringliteral">&quot;State&quot;</span>);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="keywordflow">if</span> (state == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None) {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                var bytes = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a86f3d523b9ae1357b275ed330178ecb0">GetValue</a>&lt;byte[]&gt;(<span class="stringliteral">&quot;Bytes&quot;</span>);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                var scale = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a1e267f2009bb7e9c0a35d707aa64e63a">GetInt32</a>(<span class="stringliteral">&quot;Scale&quot;</span>);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                var precision = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a1e267f2009bb7e9c0a35d707aa64e63a">GetInt32</a>(<span class="stringliteral">&quot;Precision&quot;</span>);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                innerValue = <span class="keyword">new</span> BigDecimal(<span class="keyword">new</span> BigInteger(bytes), scale, <span class="keyword">new</span> MathContext(precision));</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            }</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            State = state;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">  111</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a> State { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ad78f30bbab0a84e2f4b11a245ff59fa2">  113</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> CanBeInt64 {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> byteCount &lt;= 8; }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7382e479a30d695f9dcdbce2a006a31e">  117</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> CanBeInt32 {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> byteCount &lt;= 4; }</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a211ebcac1b9ea6f7eb0d8034e5b4a3eb">  121</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> Scale {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None ? innerValue.Scale : 0; }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a05a51dd97fe2adaf314f5e952fa279a8">  125</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> Precision {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None ? innerValue.Precision : 0; }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a3fdef989f59d77431acf9af62b598b03">  129</a></span>&#160;        <span class="keyword">private</span> MathContext MathContext {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None ? <span class="keyword">new</span> MathContext(Precision) : null; }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a26a24cc9b78b06e4e74886a95bb73e0d">  133</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> Sign {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None ? innerValue.Sign : 0; }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7fa1217a3b153936c587a423784d0357">  137</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">ISerializable</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm#acd5831980e3c1969437ba5c9d838669e">GetData</a>(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a> data) {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;State&quot;</span>, (byte)State);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None) {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                var bytes = innerValue.UnscaledValue.ToByteArray();</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                var scale = innerValue.Scale;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                var precision = innerValue.Precision;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;Bytes&quot;</span>, bytes);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;Scale&quot;</span>, scale);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;Precision&quot;</span>, precision);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a69c42781f8ce3fad07b3546451333d26">  151</a></span>&#160;        <span class="keywordtype">int</span> IComparable.CompareTo(<span class="keywordtype">object</span> obj) {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keywordflow">if</span> (!(obj is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>))</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            <span class="keywordflow">return</span> CompareTo((SqlNumber) obj);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a3f960087e7e14ce62fc995d22c7fd222">  158</a></span>&#160;        <span class="keywordtype">int</span> IComparable&lt;ISqlObject&gt;.CompareTo(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> other) {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">if</span> (!(other is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>))</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="keywordflow">return</span> CompareTo((SqlNumber) other);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7c3afc0333c40b5c253f4add6639b29e">  165</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> IsNull {</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None &amp;&amp; innerValue == null; }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        }</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a5584bb92e1023176ac659d94588919ae">  169</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a5584bb92e1023176ac659d94588919ae">InverseState</a>() {</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NegativeInfinity)</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.PositiveInfinity;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.PositiveInfinity)</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NegativeInfinity;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="keywordflow">return</span> State;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a540bac00b9fd711f195a30faceda02b1">  177</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">IsComparableTo</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> other) {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keywordflow">return</span> other is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a857db0896fc5e812d04d525ab577a9c3">  181</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a857db0896fc5e812d04d525ab577a9c3">Equals</a>(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> other) {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NegativeInfinity &amp;&amp;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NegativeInfinity)</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.PositiveInfinity &amp;&amp;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.PositiveInfinity)</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NotANumber &amp;&amp;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NotANumber)</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <span class="keywordflow">if</span> (IsNull &amp;&amp; other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7c3afc0333c40b5c253f4add6639b29e">IsNull</a>)</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <span class="keywordflow">if</span> (IsNull &amp;&amp; !other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7c3afc0333c40b5c253f4add6639b29e">IsNull</a>)</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keywordflow">if</span> (!IsNull &amp;&amp; other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7c3afc0333c40b5c253f4add6639b29e">IsNull</a>)</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">return</span> innerValue.CompareTo(other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#adeaf54d6746c250564d66d517f97cca2">innerValue</a>) == 0;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7c293c78e9220f425c33021a04f5aeff">  202</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7c293c78e9220f425c33021a04f5aeff">Equals</a>(<span class="keywordtype">object</span> obj) {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keywordflow">if</span> (!(obj is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>))</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="keywordflow">return</span> Equals((SqlNumber) obj);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        }</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div>
<div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#af64f456498d72ae1a21dfa55a4716971">  209</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">int</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#af64f456498d72ae1a21dfa55a4716971">GetHashCode</a>() {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            <span class="keywordflow">return</span> innerValue.GetHashCode() ^ State.GetHashCode();</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a1ca59b35cdbfffd680def606b84bc448">  213</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a1ca59b35cdbfffd680def606b84bc448">CompareTo</a>(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> other) {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="keywordflow">if</span> (Equals(<span class="keyword">this</span>, other))</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="comment">// If this is a non-infinity number</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None) {</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                <span class="comment">// If both values can be represented by a long value</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                <span class="keywordflow">if</span> (CanBeInt64 &amp;&amp; other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ad78f30bbab0a84e2f4b11a245ff59fa2">CanBeInt64</a>) {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                    <span class="comment">// Perform a long comparison check,</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                    <span class="keywordflow">return</span> valueAsLong.CompareTo(other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae714812521b0c68b55411c577c247684">valueAsLong</a>);</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                }</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                <span class="comment">// And the compared number is non-infinity then use the BigDecimal</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                <span class="comment">// compareTo method.</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                <span class="keywordflow">if</span> (other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None)</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                    <span class="keywordflow">return</span> innerValue.CompareTo(other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#adeaf54d6746c250564d66d517f97cca2">innerValue</a>);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                <span class="comment">// Comparing a regular number with a NaN number.</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                <span class="comment">// If positive infinity or if NaN</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                <span class="keywordflow">if</span> (other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.PositiveInfinity ||</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                    other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NotANumber) {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                }</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                    <span class="comment">// If negative infinity</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                <span class="keywordflow">if</span> (other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NegativeInfinity)</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                    <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<span class="stringliteral">&quot;Unknown number state.&quot;</span>);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            }</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            <span class="comment">// This number is a NaN number.</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            <span class="comment">// Are we comparing with a regular number?</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            <span class="keywordflow">if</span> (other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None) {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                <span class="comment">// Yes, negative infinity</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NegativeInfinity)</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                <span class="comment">// positive infinity or NaN</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.PositiveInfinity ||</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                    State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NotANumber)</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                    <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<span class="stringliteral">&quot;Unknown number state.&quot;</span>);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            }</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            <span class="comment">// Comparing NaN number with a NaN number.</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            <span class="comment">// This compares -Inf less than Inf and NaN and NaN greater than</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            <span class="comment">// Inf and -Inf.  -Inf &lt; Inf &lt; NaN</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            <span class="keywordflow">return</span> (State - other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a>);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        }</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div>
<div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a0f40e1477ae26242b4df22ad0bae23a8">  264</a></span>&#160;        TypeCode IConvertible.GetTypeCode() {</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            <span class="keywordflow">if</span> (CanBeInt32)</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                <span class="keywordflow">return</span> TypeCode.Int32;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="keywordflow">if</span> (CanBeInt64)</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                <span class="keywordflow">return</span> TypeCode.Int64;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <span class="keywordflow">return</span> TypeCode.Object;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#abcbbb910d216d3cb956f423ca74d33f1">  273</a></span>&#160;                <span class="keywordtype">bool</span> IConvertible.ToBoolean(IFormatProvider provider) {</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            <span class="keywordflow">return</span> ToBoolean();</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        }</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div>
<div class="line"><a name="l00277"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7696cf3a89a05d5d5ff51ac125b47cff">  277</a></span>&#160;        <span class="keywordtype">char</span> IConvertible.ToChar(IFormatProvider provider) {</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<span class="stringliteral">&quot;Conversion of NUMERIC to Char is invalid.&quot;</span>);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        }</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a2ff28093d6c72307a0adbf7ede0f26eb">  281</a></span>&#160;        sbyte IConvertible.ToSByte(IFormatProvider provider) {</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<span class="stringliteral">&quot;Conversion to Signed Byte numbers not supported yet.&quot;</span>);</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        }</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div>
<div class="line"><a name="l00285"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a5853e9a75c777a6641127ec9f5fb972b">  285</a></span>&#160;        byte IConvertible.ToByte(IFormatProvider provider) {</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            <span class="keywordflow">return</span> ToByte();</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        }</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div>
<div class="line"><a name="l00289"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a8c3aa0535c28fe21864177d4c95378e3">  289</a></span>&#160;        <span class="keywordtype">short</span> IConvertible.ToInt16(IFormatProvider provider) {</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <span class="keywordflow">return</span> ToInt16();</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        }</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ac0f55f3e83e5fea4d80b5581adbb6a11">  293</a></span>&#160;        ushort IConvertible.ToUInt16(IFormatProvider provider) {</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<span class="stringliteral">&quot;Conversion to Unsigned numbers not supported yet.&quot;</span>);</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        }</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa68161d2f0fc6b1184eb49612fbbdfac">  297</a></span>&#160;        <span class="keywordtype">int</span> IConvertible.ToInt32(IFormatProvider provider) {</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            <span class="keywordflow">return</span> ToInt32();</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        }</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a98dd2b91345a8591a8a48e6dd7720d1c">  301</a></span>&#160;        uint IConvertible.ToUInt32(IFormatProvider provider) {</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<span class="stringliteral">&quot;Conversion to Unsigned numbers not supported yet.&quot;</span>);</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        }</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div>
<div class="line"><a name="l00305"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aea1033279020f2d989c3f460aac8b048">  305</a></span>&#160;        <span class="keywordtype">long</span> IConvertible.ToInt64(IFormatProvider provider) {</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <span class="keywordflow">return</span> ToInt64();</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        }</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div>
<div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a8b1984374a16a25047fae08c43971167">  309</a></span>&#160;        ulong IConvertible.ToUInt64(IFormatProvider provider) {</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<span class="stringliteral">&quot;Conversion to Unsigned numbers not supported yet.&quot;</span>);</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        }</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div>
<div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#abd30e4fe1b6b1eef9c0346506ef69c9c">  313</a></span>&#160;        <span class="keywordtype">float</span> IConvertible.ToSingle(IFormatProvider provider) {</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            <span class="keywordflow">return</span> ToSingle();</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        }</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div>
<div class="line"><a name="l00317"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a32545cbd3720d4150282aa0c290ec6f3">  317</a></span>&#160;        <span class="keywordtype">double</span> IConvertible.ToDouble(IFormatProvider provider) {</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <span class="keywordflow">return</span> ToDouble();</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        }</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div>
<div class="line"><a name="l00321"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a73e777f0ab34183746c519b63e525324">  321</a></span>&#160;        decimal IConvertible.ToDecimal(IFormatProvider provider) {</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<span class="stringliteral">&quot;Conversion to Decimal not supported yet.&quot;</span>);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        }</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div>
<div class="line"><a name="l00325"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ac4d00635643f2fb4e16afc7719e2dc7a">  325</a></span>&#160;        DateTime IConvertible.ToDateTime(IFormatProvider provider) {</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<span class="stringliteral">&quot;Cannot cast NUMERIC to DateTime automatically.&quot;</span>);</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        }</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div>
<div class="line"><a name="l00329"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a0231b495786c0cc930cee3f0c6288fa0">  329</a></span>&#160;        <span class="keywordtype">string</span> IConvertible.ToString(IFormatProvider provider) {</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            <span class="keywordflow">return</span> ToString();</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        }</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div>
<div class="line"><a name="l00333"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a41b6130a06c8d40af53a5e4dc05bc3f1">  333</a></span>&#160;        <span class="keywordtype">object</span> IConvertible.ToType(Type conversionType, IFormatProvider provider) {</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<span class="keywordtype">bool</span>))</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                <span class="keywordflow">return</span> ToBoolean();</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (byte))</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                <span class="keywordflow">return</span> ToByte();</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<span class="keywordtype">short</span>))</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                <span class="keywordflow">return</span> ToInt16();</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<span class="keywordtype">int</span>))</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                <span class="keywordflow">return</span> ToInt32();</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<span class="keywordtype">long</span>))</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                <span class="keywordflow">return</span> ToInt64();</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<span class="keywordtype">float</span>))</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                <span class="keywordflow">return</span> ToSingle();</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<span class="keywordtype">double</span>))</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                <span class="keywordflow">return</span> ToDouble();</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (byte[]))</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                <span class="keywordflow">return</span> ToByteArray();</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<span class="keywordtype">string</span>))</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                <span class="keywordflow">return</span> ToString();</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>))</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>(ToBoolean());</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBinary.htm">SqlBinary</a>))</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBinary.htm">SqlBinary</a>(ToByteArray());</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<a class="code" href="namespaceSqlString.htm">SqlString</a>))</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(ToString());</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<a class="code" href="namespaceSystem.htm">System</a>.String.Format(<span class="stringliteral">&quot;Cannot convert NUMERIC to {0}&quot;</span>, conversionType));</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        }</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div>
<div class="line"><a name="l00365"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a72fdabeb45e8a874663d3977531ef0ec">  365</a></span>&#160;                <span class="keyword">public</span> byte[] <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a72fdabeb45e8a874663d3977531ef0ec">ToByteArray</a>() {</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <span class="keywordflow">return</span> State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                ? innerValue.MovePointRight(innerValue.Scale).ToBigInteger().ToByteArray()</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                : <span class="keyword">new</span> byte[0];</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        }</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div>
<div class="line"><a name="l00371"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aaeeea74948c1f3af59d449984cf0570a">  371</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">string</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aaeeea74948c1f3af59d449984cf0570a">ToString</a>() {</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            <span class="keywordflow">switch</span> (State) {</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None):</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                    <span class="keywordflow">return</span> innerValue.ToString();</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NegativeInfinity):</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                    <span class="keywordflow">return</span> <span class="stringliteral">&quot;-Infinity&quot;</span>;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.PositiveInfinity):</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                    <span class="keywordflow">return</span> <span class="stringliteral">&quot;Infinity&quot;</span>;</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NotANumber):</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                    <span class="keywordflow">return</span> <span class="stringliteral">&quot;NaN&quot;</span>;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<span class="stringliteral">&quot;Unknown number state&quot;</span>);</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            }</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        }</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div>
<div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a118150558464f6650c0b7252a9f21e6b">  386</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">double</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a118150558464f6650c0b7252a9f21e6b">ToDouble</a>() {</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="keywordflow">switch</span> (State) {</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None):</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                    <span class="keywordflow">return</span> innerValue.ToDouble();</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NegativeInfinity):</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                    <span class="keywordflow">return</span> Double.NegativeInfinity;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.PositiveInfinity):</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                    <span class="keywordflow">return</span> Double.PositiveInfinity;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NotANumber):</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                    <span class="keywordflow">return</span> Double.NaN;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<span class="stringliteral">&quot;Unknown number state&quot;</span>);</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            }</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        }</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div>
<div class="line"><a name="l00401"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a699119ee9d5fa7e07b36b4b4fe4c886e">  401</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">float</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a699119ee9d5fa7e07b36b4b4fe4c886e">ToSingle</a>() {</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            <span class="keywordflow">switch</span> (State) {</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None):</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                    <span class="keywordflow">return</span> innerValue.ToSingle();</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NegativeInfinity):</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                    <span class="keywordflow">return</span> Single.NegativeInfinity;</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.PositiveInfinity):</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                    <span class="keywordflow">return</span> Single.PositiveInfinity;</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NotANumber):</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                    <span class="keywordflow">return</span> Single.NaN;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<span class="stringliteral">&quot;Unknown number state&quot;</span>);</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;            }</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        }</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div>
<div class="line"><a name="l00416"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a986129efd4a4f2321370d6186f9e152b">  416</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">long</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a986129efd4a4f2321370d6186f9e152b">ToInt64</a>() {</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;            <span class="keywordflow">if</span> (CanBeInt64)</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                <span class="keywordflow">return</span> valueAsLong;</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            <span class="keywordflow">switch</span> (State) {</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None):</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                    <span class="keywordflow">return</span> innerValue.ToInt64();</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                    <span class="keywordflow">return</span> (<span class="keywordtype">long</span>)ToDouble();</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;            }</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        }</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div>
<div class="line"><a name="l00427"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae3cada5ad31a0c0c816766f7d5ed7bea">  427</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae3cada5ad31a0c0c816766f7d5ed7bea">ToInt32</a>() {</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            <span class="keywordflow">if</span> (CanBeInt32)</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                <span class="keywordflow">return</span> (<span class="keywordtype">int</span>)valueAsLong;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            <span class="keywordflow">switch</span> (State) {</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None):</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                    <span class="keywordflow">return</span> innerValue.ToInt32();</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                    <span class="keywordflow">return</span> (<span class="keywordtype">int</span>)ToDouble();</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            }</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        }</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div>
<div class="line"><a name="l00438"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae9f737e54248a1bb9495f5e452770acc">  438</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">short</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae9f737e54248a1bb9495f5e452770acc">ToInt16</a>() {</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            <span class="keywordflow">if</span> (!CanBeInt32)</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<span class="stringliteral">&quot;The value of this numeric is over the maximum Int16.&quot;</span>);</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            var value = ToInt32();</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            <span class="keywordflow">if</span> (value &gt; Int16.MaxValue ||</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                value &lt; Int16.MinValue)</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<span class="stringliteral">&quot;The value of this numeric is out of range of a short integer.&quot;</span>);</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;            <span class="keywordflow">return</span> (<span class="keywordtype">short</span>)value;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        }</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div>
<div class="line"><a name="l00450"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ac378b87d9f7a9bd178b0d48dc22e5d73">  450</a></span>&#160;        <span class="keyword">public</span> byte <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ac378b87d9f7a9bd178b0d48dc22e5d73">ToByte</a>() {</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            <span class="keywordflow">if</span> (!CanBeInt32)</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<span class="stringliteral">&quot;The value of this numeric is over the maximum Byte.&quot;</span>);</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            var value = ToInt32();</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;            <span class="keywordflow">if</span> (value &gt; Byte.MaxValue ||</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                value &lt; Byte.MinValue)</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<span class="stringliteral">&quot;The value of this numeric is out of range of a byte.&quot;</span>);</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            <span class="keywordflow">return</span> (byte)value;</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        }</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div>
<div class="line"><a name="l00462"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa8a20ea2ca98d4c91a3e5a13c306ed7b">  462</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa8a20ea2ca98d4c91a3e5a13c306ed7b">ToBoolean</a>() {</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;            <span class="keywordflow">if</span> (Equals(One))</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;            <span class="keywordflow">if</span> (Equals(Zero))</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<span class="stringliteral">&quot;The value of this NUMERIC cannot be converted to a boolean.&quot;</span>);</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        }</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div>
<div class="line"><a name="l00471"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a5045059946bc2385ddac7269d219e6a7">  471</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a5045059946bc2385ddac7269d219e6a7">XOr</a>(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> value) {</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NotANumber)</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;            <span class="keywordflow">if</span> (Scale == 0 &amp;&amp; value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a211ebcac1b9ea6f7eb0d8034e5b4a3eb">Scale</a> == 0) {</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                BigInteger bi1 = innerValue.ToBigInteger();</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                BigInteger bi2 = value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#adeaf54d6746c250564d66d517f97cca2">innerValue</a>.ToBigInteger();</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, <span class="keyword">new</span> BigDecimal(bi1.XOr(bi2)));</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            }</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            <span class="keywordflow">return</span> Null;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        }</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div>
<div class="line"><a name="l00484"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae363d9907eaa6607b4999eb581419067">  484</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae363d9907eaa6607b4999eb581419067">And</a>(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> value) {</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NotANumber)</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            <span class="keywordflow">if</span> (Scale == 0 &amp;&amp; value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a211ebcac1b9ea6f7eb0d8034e5b4a3eb">Scale</a> == 0) {</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                BigInteger bi1 = innerValue.ToBigInteger();</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                BigInteger bi2 = value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#adeaf54d6746c250564d66d517f97cca2">innerValue</a>.ToBigInteger();</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, <span class="keyword">new</span> BigDecimal(bi1.And(bi2)));</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            }</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            <span class="keywordflow">return</span> Null;            </div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        }</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div>
<div class="line"><a name="l00497"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a4283dcffde93191cc66c6a6882f1cca5">  497</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a4283dcffde93191cc66c6a6882f1cca5">Or</a>(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> value) {</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NotANumber)</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;            <span class="keywordflow">if</span> (Scale == 0 &amp;&amp; value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a211ebcac1b9ea6f7eb0d8034e5b4a3eb">Scale</a> == 0) {</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                BigInteger bi1 = innerValue.ToBigInteger();</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                BigInteger bi2 = value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#adeaf54d6746c250564d66d517f97cca2">innerValue</a>.ToBigInteger();</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, <span class="keyword">new</span> BigDecimal(bi1.Or(bi2)));</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            }</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            <span class="keywordflow">return</span> Null;</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        }</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div>
<div class="line"><a name="l00510"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ad4b550b8c90050aeb76bda130f4e77a7">  510</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ad4b550b8c90050aeb76bda130f4e77a7">Add</a>(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> value) {</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None) {</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                <span class="keywordflow">if</span> (value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None) {</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                    <span class="keywordflow">if</span> (IsNull || value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7c3afc0333c40b5c253f4add6639b29e">IsNull</a>)</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                        <span class="keywordflow">return</span> Null;</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, innerValue.Add(value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#adeaf54d6746c250564d66d517f97cca2">innerValue</a>));</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                }</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a>, null);</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            }</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(State, null);</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        }</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;</div>
<div class="line"><a name="l00525"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#afd1bcf69dad8656cb315e0647cfcf1f3">  525</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#afd1bcf69dad8656cb315e0647cfcf1f3">Subtract</a>(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> value) {</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None) {</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                <span class="keywordflow">if</span> (value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None) {</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                    <span class="keywordflow">if</span> (IsNull || value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7c3afc0333c40b5c253f4add6639b29e">IsNull</a>)</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                        <span class="keywordflow">return</span> Null;</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, innerValue.Subtract(value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#adeaf54d6746c250564d66d517f97cca2">innerValue</a>));</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                }</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a5584bb92e1023176ac659d94588919ae">InverseState</a>(), null);</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            }</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            </div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(State, null);</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        }</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div>
<div class="line"><a name="l00539"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a282dbd0da7cb6509a20d2d8855af7ce8">  539</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a282dbd0da7cb6509a20d2d8855af7ce8">Multiply</a>(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> value) {</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None) {</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                <span class="keywordflow">if</span> (value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None) {</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                    <span class="keywordflow">if</span> (IsNull || value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7c3afc0333c40b5c253f4add6639b29e">IsNull</a>)</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                        <span class="keywordflow">return</span> Null;</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, innerValue.Multiply(value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#adeaf54d6746c250564d66d517f97cca2">innerValue</a>));</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                }</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a>, null);</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;            }</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(State, null);</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        }</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;</div>
<div class="line"><a name="l00554"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa90cc5dddfb17ef4237b00923bf0895d">  554</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa90cc5dddfb17ef4237b00923bf0895d">Divide</a>(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> value) {</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None) {</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                <span class="keywordflow">if</span> (value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None) {</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                    <span class="keywordflow">if</span> (IsNull || value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7c3afc0333c40b5c253f4add6639b29e">IsNull</a>)</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                        <span class="keywordflow">return</span> Null;</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                    BigDecimal divBy = value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#adeaf54d6746c250564d66d517f97cca2">innerValue</a>;</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                    <span class="keywordflow">if</span> (divBy.CompareTo (BigDecimal.Zero) != 0) {</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                        <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, innerValue.Divide(divBy, 10, RoundingMode.HalfUp));</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                    }</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                }</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;            }</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;            <span class="comment">// Return NaN if we can&#39;t divide</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NotANumber, null);</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        }</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div>
<div class="line"><a name="l00571"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a5768936ff5854dcc9336ffe885eb2547">  571</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a5768936ff5854dcc9336ffe885eb2547">Modulo</a>(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> value) {</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None) {</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                <span class="keywordflow">if</span> (value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">State</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None) {</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                    <span class="keywordflow">if</span> (IsNull || value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7c3afc0333c40b5c253f4add6639b29e">IsNull</a>)</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                        <span class="keywordflow">return</span> Null;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                    BigDecimal divBy = value.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#adeaf54d6746c250564d66d517f97cca2">innerValue</a>;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                    <span class="keywordflow">if</span> (divBy.CompareTo(BigDecimal.Zero) != 0) {</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                        BigDecimal remainder = innerValue.Remainder(divBy);</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                        <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, remainder);</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                    }</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                }</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;            }</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NotANumber, null);</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        }</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;</div>
<div class="line"><a name="l00588"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a1e8817384e50bdde6c77176b8d0a75f8">  588</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a1e8817384e50bdde6c77176b8d0a75f8">Abs</a>() {</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None)</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, innerValue.Abs());</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NegativeInfinity)</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.PositiveInfinity, null);</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(State, null);</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        }</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        [CLSCompliant(<span class="keyword">false</span>)]</div>
<div class="line"><a name="l00597"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a66a7f3c2b56a0fdb7891ad0484326bf9">  597</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a66a7f3c2b56a0fdb7891ad0484326bf9">SetScale</a>(<span class="keywordtype">int</span> scale, RoundingMode mode) {</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None)</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(innerValue.SetScale(scale, mode));</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;            <span class="comment">// Can&#39;t round -inf, +inf and NaN</span></div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        }</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div>
<div class="line"><a name="l00605"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ab0a6d4ce13627af21633f32e047f2cbf">  605</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ab0a6d4ce13627af21633f32e047f2cbf">Negate</a>() {</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None)</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(innerValue.Negate());</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NegativeInfinity ||</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.PositiveInfinity)</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(InverseState(), null);</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        }</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div>
<div class="line"><a name="l00615"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae8e7df8ecbcc0da475057e30668250aa">  615</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae8e7df8ecbcc0da475057e30668250aa">Plus</a>() {</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None)</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(innerValue.Plus());</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NegativeInfinity ||</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.PositiveInfinity)</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(InverseState(), null);</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        }</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;</div>
<div class="line"><a name="l00625"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a343a9da7ee5fc60ed10e387249bab0fa">  625</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a343a9da7ee5fc60ed10e387249bab0fa">Not</a>() {</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None)</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<span class="keyword">new</span> BigDecimal(innerValue.ToBigInteger().Not()));</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NegativeInfinity ||</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.PositiveInfinity)</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(InverseState(), null);</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;            </div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        }</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;</div>
<div class="line"><a name="l00635"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a33217d0c09ce034ee7873282854b70b6">  635</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a33217d0c09ce034ee7873282854b70b6">Sqrt</a>() {</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None)</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(BigMath.Sqrt(innerValue));</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;        }</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;</div>
<div class="line"><a name="l00642"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a2661a2b1970084aa54b2fc94e2ff02b1">  642</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a2661a2b1970084aa54b2fc94e2ff02b1">Root</a>(<span class="keywordtype">int</span> n) {</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None)</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(BigMath.Root(n, innerValue));</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;        }</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;</div>
<div class="line"><a name="l00649"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a0c6c6d62a2a2bfe8abf53773f2def0e4">  649</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a0c6c6d62a2a2bfe8abf53773f2def0e4">Sin</a>() {</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None)</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(BigMath.Sin(innerValue));</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        }</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;</div>
<div class="line"><a name="l00656"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a51c2a15182b8a3ed07da7744b9986cd6">  656</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a51c2a15182b8a3ed07da7744b9986cd6">Cos</a>() {</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None)</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(BigMath.Cos(innerValue));</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        }</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;</div>
<div class="line"><a name="l00663"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aee666b02ac6e48d6cc106e7fee5881ee">  663</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aee666b02ac6e48d6cc106e7fee5881ee">Cot</a>() {</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None)</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(BigMath.Cot(innerValue));</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;        }</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;</div>
<div class="line"><a name="l00670"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa7f623e9e4f70e12dde5cc885a407e81">  670</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa7f623e9e4f70e12dde5cc885a407e81">Tan</a>() {</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None)</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(BigMath.Tan(innerValue));</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;        }</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;</div>
<div class="line"><a name="l00677"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ab35de52c0a52259b5f606a790aa053ea">  677</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ab35de52c0a52259b5f606a790aa053ea">Pow</a>(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> exp) {</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None)</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(BigMath.Pow(innerValue, exp.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#adeaf54d6746c250564d66d517f97cca2">innerValue</a>));</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;        }</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div>
<div class="line"><a name="l00684"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a358cc7b780c74b6b3e63246185e10dcf">  684</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a358cc7b780c74b6b3e63246185e10dcf">Log2</a>() {</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None)</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(BigMath.Log(innerValue));</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        }</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;</div>
<div class="line"><a name="l00691"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a59e8e0f5359db085faf35be702c4fad4">  691</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a59e8e0f5359db085faf35be702c4fad4">Round</a>() {</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;            <span class="keywordflow">return</span> Round(MathContext.Precision);</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;        }</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div>
<div class="line"><a name="l00695"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae12956baa5ed9e11d06c35cf82fa6c8c">  695</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae12956baa5ed9e11d06c35cf82fa6c8c">Round</a>(<span class="keywordtype">int</span> precision) {</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;            <span class="keywordflow">if</span> (State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None)</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(innerValue.Round(<span class="keyword">new</span> MathContext(precision, RoundingMode.HalfUp)));</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;            </div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        }</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;</div>
<div class="line"><a name="l00702"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a47be2f65063ecc47a093f2cb8bcef30c">  702</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a47be2f65063ecc47a093f2cb8bcef30c">TryParse</a>(<span class="keywordtype">string</span> s, out <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> value) {</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;            <span class="keywordflow">if</span> (String.IsNullOrEmpty(s)) {</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;                value = Null;</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;            }</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;            <span class="keywordflow">if</span> (<span class="keywordtype">string</span>.Equals(s, <span class="stringliteral">&quot;+Infinity&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;                <span class="keywordtype">string</span>.Equals(s, <span class="stringliteral">&quot;+Inf&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;                <span class="keywordtype">string</span>.Equals(s, <span class="stringliteral">&quot;Infinity&quot;</span>, StringComparison.OrdinalIgnoreCase)) {</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;                value = PositiveInfinity;</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;            }</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;            <span class="keywordflow">if</span> (<span class="keywordtype">string</span>.Equals(s, <span class="stringliteral">&quot;-Infinity&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;                <span class="keywordtype">string</span>.Equals(s, <span class="stringliteral">&quot;-Inf&quot;</span>, StringComparison.OrdinalIgnoreCase)) {</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;                value = NegativeInfinity;</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;            }</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;            <span class="keywordflow">if</span> (<span class="keywordtype">string</span>.Equals(s, <span class="stringliteral">&quot;NaN&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;                <span class="keywordtype">string</span>.Equals(s, <span class="stringliteral">&quot;NotANumber&quot;</span>, StringComparison.OrdinalIgnoreCase)) {</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;                value = NaN;</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;            }</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;            BigDecimal decimalValue;</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;            <span class="keywordflow">if</span> (!BigDecimal.TryParse(s, out decimalValue)) {</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;                value = Null;</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;            }</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;            value = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, decimalValue);</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;        }</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;</div>
<div class="line"><a name="l00738"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a43621f511c074e0e5f7f6ebf25544e77">  738</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a43621f511c074e0e5f7f6ebf25544e77">Parse</a>(<span class="keywordtype">string</span> s) {</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;            <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> value;</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;            <span class="keywordflow">if</span> (!TryParse(s, out value))</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> FormatException(<span class="keywordtype">string</span>.Format(<span class="stringliteral">&quot;Cannot parse the string &#39;{0}&#39; to a valid Numeric object.&quot;</span>, s));</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;            <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;        }</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div>
<div class="line"><a name="l00746"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aef5b2f52d277d5aa3a8237fa89fe0349">  746</a></span>&#160;                <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> operator +(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> a, <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> b) {</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;            <span class="keywordflow">return</span> a.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ad4b550b8c90050aeb76bda130f4e77a7">Add</a>(b);</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;        }</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;</div>
<div class="line"><a name="l00750"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a87e17e0ed792fb8ddceb3b2e2cfa8dbe">  750</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> operator -(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> a, <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> b) {</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;            <span class="keywordflow">return</span> a.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#afd1bcf69dad8656cb315e0647cfcf1f3">Subtract</a>(b);</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;        }</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;</div>
<div class="line"><a name="l00754"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a5974a7abccbde0946144b94400033373">  754</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> operator *(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> a, <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> b) {</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;            <span class="keywordflow">return</span> a.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a282dbd0da7cb6509a20d2d8855af7ce8">Multiply</a>(b);</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;        }</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;</div>
<div class="line"><a name="l00758"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a1aef997f9a349e6de4d5e117c3eae00d">  758</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> operator /(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> a, <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> b) {</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;            <span class="keywordflow">return</span> a.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa90cc5dddfb17ef4237b00923bf0895d">Divide</a>(b);</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;        }</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;</div>
<div class="line"><a name="l00762"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a03af220e26612b9a2dcce393a6530435">  762</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> operator %(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> a, <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> b) {</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;            <span class="keywordflow">return</span> a.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a5768936ff5854dcc9336ffe885eb2547">Modulo</a>(b);</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;        }</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;</div>
<div class="line"><a name="l00766"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a44200490843fe7810dac210321e8b621">  766</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> operator |(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> a, <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> b) {</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;            <span class="keywordflow">return</span> a.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a5045059946bc2385ddac7269d219e6a7">XOr</a>(b);</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        }</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;</div>
<div class="line"><a name="l00770"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#afa3d51b1e909b1868a320a3d37d8f61a">  770</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> operator -(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> a) {</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;            <span class="keywordflow">return</span> a.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ab0a6d4ce13627af21633f32e047f2cbf">Negate</a>();</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;        }</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div>
<div class="line"><a name="l00774"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a032041b8daf52ba9e36cfe0c805e9a1e">  774</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> operator +(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> a) {</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;            <span class="keywordflow">return</span> a.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae8e7df8ecbcc0da475057e30668250aa">Plus</a>();</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;        }</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;</div>
<div class="line"><a name="l00778"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ad7fab7d0491240cafee8502d2824e612">  778</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> operator ==(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> a, <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> b) {              </div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;            <span class="keywordflow">return</span> a.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a857db0896fc5e812d04d525ab577a9c3">Equals</a>(b);</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;        }</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;</div>
<div class="line"><a name="l00782"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a587916c1fec4bc8c4aca3fed4ed132e0">  782</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> operator !=(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> a, <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> b) {</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;            <span class="keywordflow">return</span> !(a == b);</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;        }</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;</div>
<div class="line"><a name="l00786"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aad41b04b1217c73f584668a7ab5f99c4">  786</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> operator &gt;(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> a, <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> b) {</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;            <span class="keywordflow">return</span> a.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a69c42781f8ce3fad07b3546451333d26">CompareTo</a>(b) &gt; 0;</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;        }</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;</div>
<div class="line"><a name="l00790"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a9d6562e8784620463f373f9b91f5b6c2">  790</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> operator &lt;(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> a, <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> b) {</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;            <span class="keywordflow">return</span> a.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a69c42781f8ce3fad07b3546451333d26">CompareTo</a>(b) &lt; 0;</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;        }</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;</div>
<div class="line"><a name="l00794"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a81a456d2bc488e9b4ab9d62784016887">  794</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> operator &gt;=(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> a, <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> b) {</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;            var i = a.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a69c42781f8ce3fad07b3546451333d26">CompareTo</a>(b);</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;            <span class="keywordflow">return</span> i == 0 || i &gt; 0;</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;        }</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;</div>
<div class="line"><a name="l00799"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa74badf7b69c98bd4b0d07cf514c89f5">  799</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> operator &lt;=(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> a, <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> b) {</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;            var i = a.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a69c42781f8ce3fad07b3546451333d26">CompareTo</a>(b);</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;            <span class="keywordflow">return</span> i == 0 || i &lt; 0;</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;        }</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    }</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;}</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Serialization_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Serialization.htm">Deveel.Data.Serialization</a></div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00024">BinarySerializer.cs:24</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Objects_htm_afe7dfc9aa4bf3283014653f9d5020327"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">Deveel.Data.Sql.Objects.NumericState</a></div><div class="ttdeci">NumericState</div><div class="ttdoc">Lists all the possible special states of a number. </div><div class="ttdef"><b>Definition:</b> <a href="NumericState_8cs_source.htm#l00021">NumericState.cs:21</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ae3cada5ad31a0c0c816766f7d5ed7bea"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae3cada5ad31a0c0c816766f7d5ed7bea">Deveel.Data.Sql.Objects.SqlNumber.ToInt32</a></div><div class="ttdeci">int ToInt32()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00427">SqlNumber.cs:427</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a5584bb92e1023176ac659d94588919ae"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a5584bb92e1023176ac659d94588919ae">Deveel.Data.Sql.Objects.SqlNumber.InverseState</a></div><div class="ttdeci">NumericState InverseState()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00169">SqlNumber.cs:169</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a358cc7b780c74b6b3e63246185e10dcf"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a358cc7b780c74b6b3e63246185e10dcf">Deveel.Data.Sql.Objects.SqlNumber.Log2</a></div><div class="ttdeci">SqlNumber Log2()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00684">SqlNumber.cs:684</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable_htm_acd5831980e3c1969437ba5c9d838669e"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm#acd5831980e3c1969437ba5c9d838669e">Deveel.Data.Serialization.ISerializable.GetData</a></div><div class="ttdeci">void GetData(SerializeData data)</div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a5045059946bc2385ddac7269d219e6a7"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a5045059946bc2385ddac7269d219e6a7">Deveel.Data.Sql.Objects.SqlNumber.XOr</a></div><div class="ttdeci">SqlNumber XOr(SqlNumber value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00471">SqlNumber.cs:471</a></div></div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a857db0896fc5e812d04d525ab577a9c3"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a857db0896fc5e812d04d525ab577a9c3">Deveel.Data.Sql.Objects.SqlNumber.Equals</a></div><div class="ttdeci">bool Equals(SqlNumber other)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00181">SqlNumber.cs:181</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_aaf6c2a27d46295465c2fc2e9df2a2348"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aaf6c2a27d46295465c2fc2e9df2a2348">Deveel.Data.Sql.Objects.SqlNumber.SqlNumber</a></div><div class="ttdeci">SqlNumber(long value, int precision)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00080">SqlNumber.cs:80</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Objects_htm_afe7dfc9aa4bf3283014653f9d5020327ac65958e0f9944d63bb0d7744146b8b21"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327ac65958e0f9944d63bb0d7744146b8b21">Deveel.Data.Sql.Objects.NumericState.NegativeInfinity</a></div><div class="ttdoc">The number represents a negative infinity (for example, the result of a division of a negative number...</div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a47be2f65063ecc47a093f2cb8bcef30c"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a47be2f65063ecc47a093f2cb8bcef30c">Deveel.Data.Sql.Objects.SqlNumber.TryParse</a></div><div class="ttdeci">static bool TryParse(string s, out SqlNumber value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00702">SqlNumber.cs:702</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBinary_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBinary.htm">Deveel.Data.Sql.Objects.SqlBinary</a></div><div class="ttdoc">Implements a BINARY object that handles a limited number of bytes, not exceding MaxLength. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBinary_8cs_source.htm#l00027">SqlBinary.cs:27</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a1ca59b35cdbfffd680def606b84bc448"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a1ca59b35cdbfffd680def606b84bc448">Deveel.Data.Sql.Objects.SqlNumber.CompareTo</a></div><div class="ttdeci">int CompareTo(SqlNumber other)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00213">SqlNumber.cs:213</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a1c6522d2ec18af64478402734a00b986"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a1c6522d2ec18af64478402734a00b986">Deveel.Data.Serialization.ObjectData.GetByte</a></div><div class="ttdeci">byte GetByte(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00077">ObjectData.cs:77</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a5768936ff5854dcc9336ffe885eb2547"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a5768936ff5854dcc9336ffe885eb2547">Deveel.Data.Sql.Objects.SqlNumber.Modulo</a></div><div class="ttdeci">SqlNumber Modulo(SqlNumber value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00571">SqlNumber.cs:571</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a1fb1dbd45bd630f32d142d791bb39be7"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a1fb1dbd45bd630f32d142d791bb39be7">Deveel.Data.Sql.Objects.SqlNumber.SqlNumber</a></div><div class="ttdeci">SqlNumber(BigDecimal value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00039">SqlNumber.cs:39</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ab35de52c0a52259b5f606a790aa053ea"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ab35de52c0a52259b5f606a790aa053ea">Deveel.Data.Sql.Objects.SqlNumber.Pow</a></div><div class="ttdeci">SqlNumber Pow(SqlNumber exp)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00677">SqlNumber.cs:677</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm_a2a09ed1c661f92b60b0b38398fb7ced1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">Deveel.Data.Serialization.SerializeData.SetValue</a></div><div class="ttdeci">void SetValue(string key, Type type, object value)</div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00035">SerializeData.cs:35</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a33217d0c09ce034ee7873282854b70b6"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a33217d0c09ce034ee7873282854b70b6">Deveel.Data.Sql.Objects.SqlNumber.Sqrt</a></div><div class="ttdeci">SqlNumber Sqrt()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00635">SqlNumber.cs:635</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_adeaf54d6746c250564d66d517f97cca2"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#adeaf54d6746c250564d66d517f97cca2">Deveel.Data.Sql.Objects.SqlNumber.innerValue</a></div><div class="ttdeci">readonly BigDecimal innerValue</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00025">SqlNumber.cs:25</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a1e8817384e50bdde6c77176b8d0a75f8"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a1e8817384e50bdde6c77176b8d0a75f8">Deveel.Data.Sql.Objects.SqlNumber.Abs</a></div><div class="ttdeci">SqlNumber Abs()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00588">SqlNumber.cs:588</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">Deveel.Data.Serialization.ISerializable</a></div><div class="ttdef"><b>Definition:</b> <a href="ISerializable_8cs_source.htm#l00020">ISerializable.cs:20</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Objects_htm_afe7dfc9aa4bf3283014653f9d5020327ad40fc076e9ae949248845b94f160ba6e"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327ad40fc076e9ae949248845b94f160ba6e">Deveel.Data.Sql.Objects.NumericState.PositiveInfinity</a></div><div class="ttdoc">The number represents a positive infinity (for example, the result of a division of a positive number...</div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a6861da3f03fb810eeffe01f373d55f81"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a6861da3f03fb810eeffe01f373d55f81">Deveel.Data.Sql.Objects.SqlNumber.SqlNumber</a></div><div class="ttdeci">SqlNumber(NumericState state, BigDecimal value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00043">SqlNumber.cs:43</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_af64f456498d72ae1a21dfa55a4716971"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#af64f456498d72ae1a21dfa55a4716971">Deveel.Data.Sql.Objects.SqlNumber.GetHashCode</a></div><div class="ttdeci">override int GetHashCode()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00209">SqlNumber.cs:209</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">Deveel.Data.Serialization.SerializeData</a></div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00021">SerializeData.cs:21</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_aaf084305c58605c26984a1c2a8e33fc4"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aaf084305c58605c26984a1c2a8e33fc4">Deveel.Data.Sql.Objects.SqlNumber.SqlNumber</a></div><div class="ttdeci">SqlNumber(double value, int precision)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00092">SqlNumber.cs:92</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">Deveel.Data.Sql.Objects.ISqlObject</a></div><div class="ttdoc">Defines the contract for a valid SQL Object </div><div class="ttdef"><b>Definition:</b> <a href="ISqlObject_8cs_source.htm#l00023">ISqlObject.cs:23</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a32ff018c18542dca27cb862c6d098639"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a32ff018c18542dca27cb862c6d098639">Deveel.Data.Sql.Objects.SqlNumber.SqlNumber</a></div><div class="ttdeci">SqlNumber(long value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00084">SqlNumber.cs:84</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">Deveel.Data.Serialization.ObjectData</a></div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00022">ObjectData.cs:22</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ad3b84f20e5e628f705cb12b73f101334"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ad3b84f20e5e628f705cb12b73f101334">Deveel.Data.Sql.Objects.SqlNumber.SqlNumber</a></div><div class="ttdeci">SqlNumber(ObjectData data)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00096">SqlNumber.cs:96</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a66a7f3c2b56a0fdb7891ad0484326bf9"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a66a7f3c2b56a0fdb7891ad0484326bf9">Deveel.Data.Sql.Objects.SqlNumber.SetScale</a></div><div class="ttdeci">SqlNumber SetScale(int scale, RoundingMode mode)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00597">SqlNumber.cs:597</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ae12956baa5ed9e11d06c35cf82fa6c8c"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae12956baa5ed9e11d06c35cf82fa6c8c">Deveel.Data.Sql.Objects.SqlNumber.Round</a></div><div class="ttdeci">SqlNumber Round(int precision)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00695">SqlNumber.cs:695</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a1e267f2009bb7e9c0a35d707aa64e63a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a1e267f2009bb7e9c0a35d707aa64e63a">Deveel.Data.Serialization.ObjectData.GetInt32</a></div><div class="ttdeci">int GetInt32(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00085">ObjectData.cs:85</a></div></div>
<div class="ttc" id="namespaceSqlString_htm"><div class="ttname"><a href="namespaceSqlString.htm">SqlString</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a80af25ec0ee65f0439c2eca43f4c15a1"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a80af25ec0ee65f0439c2eca43f4c15a1">Deveel.Data.Sql.Objects.SqlNumber.SqlNumber</a></div><div class="ttdeci">SqlNumber(byte[] bytes, int scale, int precision)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00068">SqlNumber.cs:68</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_aa90cc5dddfb17ef4237b00923bf0895d"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa90cc5dddfb17ef4237b00923bf0895d">Deveel.Data.Sql.Objects.SqlNumber.Divide</a></div><div class="ttdeci">SqlNumber Divide(SqlNumber value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00554">SqlNumber.cs:554</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_aa7f623e9e4f70e12dde5cc885a407e81"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa7f623e9e4f70e12dde5cc885a407e81">Deveel.Data.Sql.Objects.SqlNumber.Tan</a></div><div class="ttdeci">SqlNumber Tan()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00670">SqlNumber.cs:670</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a7c3afc0333c40b5c253f4add6639b29e"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7c3afc0333c40b5c253f4add6639b29e">Deveel.Data.Sql.Objects.SqlNumber.IsNull</a></div><div class="ttdeci">bool IsNull</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00165">SqlNumber.cs:165</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a282dbd0da7cb6509a20d2d8855af7ce8"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a282dbd0da7cb6509a20d2d8855af7ce8">Deveel.Data.Sql.Objects.SqlNumber.Multiply</a></div><div class="ttdeci">SqlNumber Multiply(SqlNumber value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00539">SqlNumber.cs:539</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a2eb556bbf70bd09b743add17a6f7f748"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a2eb556bbf70bd09b743add17a6f7f748">Deveel.Data.Sql.Objects.SqlNumber.SqlNumber</a></div><div class="ttdeci">SqlNumber(int value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00076">SqlNumber.cs:76</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a0c6c6d62a2a2bfe8abf53773f2def0e4"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a0c6c6d62a2a2bfe8abf53773f2def0e4">Deveel.Data.Sql.Objects.SqlNumber.Sin</a></div><div class="ttdeci">SqlNumber Sin()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00649">SqlNumber.cs:649</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ae363d9907eaa6607b4999eb581419067"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae363d9907eaa6607b4999eb581419067">Deveel.Data.Sql.Objects.SqlNumber.And</a></div><div class="ttdeci">SqlNumber And(SqlNumber value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00484">SqlNumber.cs:484</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm_a259b94206e518756bd85186b4b22aaab"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">Deveel.Data.Sql.Objects.ISqlObject.IsComparableTo</a></div><div class="ttdeci">bool IsComparableTo(ISqlObject other)</div><div class="ttdoc">Checks if the current object is comparable with the given one. </div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_aa872e0624bfdebed9eaa5f13827cf27d"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa872e0624bfdebed9eaa5f13827cf27d">Deveel.Data.Sql.Objects.SqlNumber.State</a></div><div class="ttdeci">NumericState State</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00111">SqlNumber.cs:111</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a51c2a15182b8a3ed07da7744b9986cd6"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a51c2a15182b8a3ed07da7744b9986cd6">Deveel.Data.Sql.Objects.SqlNumber.Cos</a></div><div class="ttdeci">SqlNumber Cos()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00656">SqlNumber.cs:656</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a986129efd4a4f2321370d6186f9e152b"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a986129efd4a4f2321370d6186f9e152b">Deveel.Data.Sql.Objects.SqlNumber.ToInt64</a></div><div class="ttdeci">long ToInt64()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00416">SqlNumber.cs:416</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_aa8a20ea2ca98d4c91a3e5a13c306ed7b"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aa8a20ea2ca98d4c91a3e5a13c306ed7b">Deveel.Data.Sql.Objects.SqlNumber.ToBoolean</a></div><div class="ttdeci">bool ToBoolean()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00462">SqlNumber.cs:462</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a2661a2b1970084aa54b2fc94e2ff02b1"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a2661a2b1970084aa54b2fc94e2ff02b1">Deveel.Data.Sql.Objects.SqlNumber.Root</a></div><div class="ttdeci">SqlNumber Root(int n)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00642">SqlNumber.cs:642</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ad78f30bbab0a84e2f4b11a245ff59fa2"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ad78f30bbab0a84e2f4b11a245ff59fa2">Deveel.Data.Sql.Objects.SqlNumber.CanBeInt64</a></div><div class="ttdeci">bool CanBeInt64</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00113">SqlNumber.cs:113</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a118150558464f6650c0b7252a9f21e6b"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a118150558464f6650c0b7252a9f21e6b">Deveel.Data.Sql.Objects.SqlNumber.ToDouble</a></div><div class="ttdeci">double ToDouble()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00386">SqlNumber.cs:386</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a343a9da7ee5fc60ed10e387249bab0fa"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a343a9da7ee5fc60ed10e387249bab0fa">Deveel.Data.Sql.Objects.SqlNumber.Not</a></div><div class="ttdeci">SqlNumber Not()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00625">SqlNumber.cs:625</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_aaeeea74948c1f3af59d449984cf0570a"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aaeeea74948c1f3af59d449984cf0570a">Deveel.Data.Sql.Objects.SqlNumber.ToString</a></div><div class="ttdeci">override string ToString()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00371">SqlNumber.cs:371</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a5611a45679d0938ba19c3f26d7385e67"><div class="ttname"><a href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlBoolean SqlBoolean</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00026">DataObject.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a86f3d523b9ae1357b275ed330178ecb0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a86f3d523b9ae1357b275ed330178ecb0">Deveel.Data.Serialization.ObjectData.GetValue</a></div><div class="ttdeci">object GetValue(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00048">ObjectData.cs:48</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ae9f737e54248a1bb9495f5e452770acc"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae9f737e54248a1bb9495f5e452770acc">Deveel.Data.Sql.Objects.SqlNumber.ToInt16</a></div><div class="ttdeci">short ToInt16()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00438">SqlNumber.cs:438</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_afd1bcf69dad8656cb315e0647cfcf1f3"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#afd1bcf69dad8656cb315e0647cfcf1f3">Deveel.Data.Sql.Objects.SqlNumber.Subtract</a></div><div class="ttdeci">SqlNumber Subtract(SqlNumber value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00525">SqlNumber.cs:525</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ab0a6d4ce13627af21633f32e047f2cbf"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ab0a6d4ce13627af21633f32e047f2cbf">Deveel.Data.Sql.Objects.SqlNumber.Negate</a></div><div class="ttdeci">SqlNumber Negate()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00605">SqlNumber.cs:605</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a211ebcac1b9ea6f7eb0d8034e5b4a3eb"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a211ebcac1b9ea6f7eb0d8034e5b4a3eb">Deveel.Data.Sql.Objects.SqlNumber.Scale</a></div><div class="ttdeci">int Scale</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00121">SqlNumber.cs:121</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a7c293c78e9220f425c33021a04f5aeff"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a7c293c78e9220f425c33021a04f5aeff">Deveel.Data.Sql.Objects.SqlNumber.Equals</a></div><div class="ttdeci">override bool Equals(object obj)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00202">SqlNumber.cs:202</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ac378b87d9f7a9bd178b0d48dc22e5d73"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ac378b87d9f7a9bd178b0d48dc22e5d73">Deveel.Data.Sql.Objects.SqlNumber.ToByte</a></div><div class="ttdeci">byte ToByte()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00450">SqlNumber.cs:450</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a4283dcffde93191cc66c6a6882f1cca5"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a4283dcffde93191cc66c6a6882f1cca5">Deveel.Data.Sql.Objects.SqlNumber.Or</a></div><div class="ttdeci">SqlNumber Or(SqlNumber value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00497">SqlNumber.cs:497</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_afb36b4f92f2fe95a2f139d2949ceb87a"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#afb36b4f92f2fe95a2f139d2949ceb87a">Deveel.Data.Sql.Objects.SqlNumber.SqlNumber</a></div><div class="ttdeci">SqlNumber(int value, int precision)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00072">SqlNumber.cs:72</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Transactions_htm_a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Transactions.htm#a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b">Deveel.Data.Transactions.IsolationLevel.Serializable</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a69c42781f8ce3fad07b3546451333d26"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a69c42781f8ce3fad07b3546451333d26">Deveel.Data.Sql.Objects.SqlNumber.CompareTo</a></div><div class="ttdeci">int IComparable. CompareTo(object obj)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00151">SqlNumber.cs:151</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a43621f511c074e0e5f7f6ebf25544e77"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a43621f511c074e0e5f7f6ebf25544e77">Deveel.Data.Sql.Objects.SqlNumber.Parse</a></div><div class="ttdeci">static SqlNumber Parse(string s)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00738">SqlNumber.cs:738</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">Deveel.Data.Sql.Objects.SqlNumber</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00024">SqlNumber.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a532448c282337e0a84eca30143f848ff"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a532448c282337e0a84eca30143f848ff">Deveel.Data.Sql.Objects.SqlNumber.byteCount</a></div><div class="ttdeci">readonly int byteCount</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00026">SqlNumber.cs:26</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ae714812521b0c68b55411c577c247684"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae714812521b0c68b55411c577c247684">Deveel.Data.Sql.Objects.SqlNumber.valueAsLong</a></div><div class="ttdeci">readonly long valueAsLong</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00027">SqlNumber.cs:27</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a97d8b2d5c019045d6f236b8e41bba9ea"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a97d8b2d5c019045d6f236b8e41bba9ea">Deveel.Data.Sql.Objects.SqlNumber.SqlNumber</a></div><div class="ttdeci">SqlNumber(byte[] bytes, int scale)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00064">SqlNumber.cs:64</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a59e8e0f5359db085faf35be702c4fad4"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a59e8e0f5359db085faf35be702c4fad4">Deveel.Data.Sql.Objects.SqlNumber.Round</a></div><div class="ttdeci">SqlNumber Round()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00691">SqlNumber.cs:691</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a03279e672dc649f28df5035b2e8d34f5"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a03279e672dc649f28df5035b2e8d34f5">Deveel.Data.Sql.Objects.SqlNumber.SqlNumber</a></div><div class="ttdeci">SqlNumber(double value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00088">SqlNumber.cs:88</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a699119ee9d5fa7e07b36b4b4fe4c886e"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a699119ee9d5fa7e07b36b4b4fe4c886e">Deveel.Data.Sql.Objects.SqlNumber.ToSingle</a></div><div class="ttdeci">float ToSingle()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00401">SqlNumber.cs:401</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ae8e7df8ecbcc0da475057e30668250aa"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ae8e7df8ecbcc0da475057e30668250aa">Deveel.Data.Sql.Objects.SqlNumber.Plus</a></div><div class="ttdeci">SqlNumber Plus()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00615">SqlNumber.cs:615</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_aee666b02ac6e48d6cc106e7fee5881ee"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aee666b02ac6e48d6cc106e7fee5881ee">Deveel.Data.Sql.Objects.SqlNumber.Cot</a></div><div class="ttdeci">SqlNumber Cot()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00663">SqlNumber.cs:663</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ad4b550b8c90050aeb76bda130f4e77a7"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ad4b550b8c90050aeb76bda130f4e77a7">Deveel.Data.Sql.Objects.SqlNumber.Add</a></div><div class="ttdeci">SqlNumber Add(SqlNumber value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00510">SqlNumber.cs:510</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a72fdabeb45e8a874663d3977531ef0ec"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a72fdabeb45e8a874663d3977531ef0ec">Deveel.Data.Sql.Objects.SqlNumber.ToByteArray</a></div><div class="ttdeci">byte[] ToByteArray()</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00365">SqlNumber.cs:365</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
