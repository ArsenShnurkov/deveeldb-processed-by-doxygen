<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Text/Metaphone.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_2e908b721c31cc851893da7acaefc597.htm">Deveel.Data.Text</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Metaphone.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="Metaphone_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Text;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Text {</div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm">   21</a></span>&#160;    <span class="keyword">public</span> sealed <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm">Metaphone</a> {</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">        #region ctor</span></div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a6d7448448b4dc9bf880d43042c633840">   23</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a6d7448448b4dc9bf880d43042c633840">Metaphone</a>() {</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        }</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">        #region Fields</span></div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#ab58545ca89d2df7a0e0a5c498ffa5e5f">   28</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">string</span> vowels = <span class="stringliteral">&quot;AEIOU&quot;</span>;</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#af67a8590958de0475ec4861386acb118">   29</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">string</span> frontv = <span class="stringliteral">&quot;EIY&quot;</span>;</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#ab869504db448fad8d3ef8676bb8562ca">   30</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">string</span> varson = <span class="stringliteral">&quot;CSPTG&quot;</span>;</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#af88ce4941f161e162d7d95afd8303a20">   31</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> maxCodeLen = 4;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">        #region Private Methods</span></div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a27463bcf89bf13f167e46286a2c786f8">   35</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a27463bcf89bf13f167e46286a2c786f8">IsLastChar</a>(<span class="keywordtype">int</span> wdsz, <span class="keywordtype">int</span> n) {</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <span class="keywordflow">return</span> n + 1 == wdsz;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        }</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a0bb498e6725663237f8eb5166f659d65">   39</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a0bb498e6725663237f8eb5166f659d65">RegionMatch</a>(StringBuilder sb, <span class="keywordtype">int</span> index, String test) {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <span class="keywordtype">bool</span> matches = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            <span class="keywordflow">if</span>( index &gt;= 0 &amp;&amp;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                (index + test.Length - 1) &lt; sb.Length) {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                <span class="keywordtype">string</span> substring = sb.ToString(index, test.Length);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                matches = substring.Equals(test);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            }</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            <span class="keywordflow">return</span> matches;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a91da3ab719ca55dd88459b712e9c2466">   49</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a91da3ab719ca55dd88459b712e9c2466">IsVowel</a>(StringBuilder sb, <span class="keywordtype">int</span> index) {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            <span class="keywordflow">return</span> (this.vowels.IndexOf(sb[index]) &gt;= 0);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a3b3412e42f042b39fdda134a060a2333">   53</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a3b3412e42f042b39fdda134a060a2333">IsPreviousChar</a>(StringBuilder sb, <span class="keywordtype">int</span> index, <span class="keywordtype">char</span> c) {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keywordtype">bool</span> matches = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordflow">if</span>( index &gt; 0 &amp;&amp; index &lt; sb.Length) {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                matches = sb[index - 1] == c;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <span class="keywordflow">return</span> matches;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#ad0404f104cf10d31c328b85528638342">   61</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#ad0404f104cf10d31c328b85528638342">IsNextChar</a>(StringBuilder sb, <span class="keywordtype">int</span> index, <span class="keywordtype">char</span> c) {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keywordtype">bool</span> matches = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <span class="keywordflow">if</span> (index &gt;= 0 &amp;&amp; index &lt; sb.Length - 1) {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                matches = sb[index + 1] == c;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <span class="keywordflow">return</span> matches;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="preprocessor">        #region Public Methods</span></div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a6a2ea4247423f6a9752c789b654c079e">   71</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> <a class="code" href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a6a2ea4247423f6a9752c789b654c079e">Compute</a>(<span class="keywordtype">string</span> s) {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keywordflow">if</span> (<span class="keywordtype">string</span>.IsNullOrEmpty(s))</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="comment">// single character is itself</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <span class="keywordflow">if</span> (s.Length == 1)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                <span class="keywordflow">return</span> s.ToUpper();</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;       </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            <span class="keywordtype">char</span>[] inwd = s.ToUpper().ToCharArray() ;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;       </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            StringBuilder local = <span class="keyword">new</span> StringBuilder(40); <span class="comment">// manipulate</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            StringBuilder code = <span class="keyword">new</span> StringBuilder(10) ; <span class="comment">//   output</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="comment">// handle initial 2 characters exceptions</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">switch</span>(inwd[0]) {</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                <span class="keywordflow">case</span> <span class="charliteral">&#39;K&#39;</span> : </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                <span class="keywordflow">case</span> <span class="charliteral">&#39;G&#39;</span> : </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                <span class="keywordflow">case</span> <span class="charliteral">&#39;P&#39;</span> : <span class="comment">/* looking for KN, etc*/</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                    <span class="keywordflow">if</span> (inwd[1] == <span class="charliteral">&#39;N&#39;</span>) {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                        local.Append(inwd, 1, inwd.Length - 1);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                        local.Append(inwd);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                    }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                <span class="keywordflow">case</span> <span class="charliteral">&#39;A&#39;</span>: <span class="comment">/* looking for AE */</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                    <span class="keywordflow">if</span> (inwd[1] == <span class="charliteral">&#39;E&#39;</span>) {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                        local.Append(inwd, 1, inwd.Length - 1);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                        local.Append(inwd);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                    }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                <span class="keywordflow">case</span> <span class="charliteral">&#39;W&#39;</span> : <span class="comment">/* looking for WR or WH */</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                    <span class="keywordflow">if</span> (inwd[1] == <span class="charliteral">&#39;R&#39;</span>) {   <span class="comment">// WR -&gt; R</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                        local.Append(inwd, 1, inwd.Length - 1); </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                        break ;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                    }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                    <span class="keywordflow">if</span> (inwd[1] == <span class="charliteral">&#39;H&#39;</span>) {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                        local.Append(inwd, 1, inwd.Length - 1);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                        local[0] = <span class="charliteral">&#39;W&#39;</span>; <span class="comment">// WH -&gt; W</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                        local.Append(inwd);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                    }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                <span class="keywordflow">case</span> <span class="charliteral">&#39;X&#39;</span> : <span class="comment">/* initial X becomes S */</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                    inwd[0] = <span class="charliteral">&#39;S&#39;</span>;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                    local.Append(inwd);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                    break ;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                <span class="keywordflow">default</span> :</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                    local.Append(inwd);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            } <span class="comment">// now local has working string with initials fixed</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keywordtype">int</span> wdsz = local.Length;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordtype">int</span> n = 0 ;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <span class="keywordflow">while</span> ((code.Length &lt; <span class="keyword">this</span>.maxCodeLen) &amp;&amp; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                (n &lt; wdsz) ) { <span class="comment">// max code size of 4 works well</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                <span class="keywordtype">char</span> symb = local[n];</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                <span class="comment">// remove duplicate letters except C</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <span class="keywordflow">if</span> ((symb != <span class="charliteral">&#39;C&#39;</span>) &amp;&amp; (IsPreviousChar( local, n, symb )) ) {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                    n++ ;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                } <span class="keywordflow">else</span> { <span class="comment">// not dup</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                    <span class="keywordflow">switch</span>(symb) {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;A&#39;</span> : <span class="keywordflow">case</span> <span class="charliteral">&#39;E&#39;</span> : <span class="keywordflow">case</span> <span class="charliteral">&#39;I&#39;</span> : <span class="keywordflow">case</span> <span class="charliteral">&#39;O&#39;</span> : <span class="keywordflow">case</span> <span class="charliteral">&#39;U&#39;</span> :</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                            <span class="keywordflow">if</span> (n == 0) { </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                                code.Append(symb);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                            }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                            break ; <span class="comment">// only use vowel if leading char</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;B&#39;</span> :</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                            <span class="keywordflow">if</span> (IsPreviousChar(local, n, <span class="charliteral">&#39;M&#39;</span>) &amp;&amp; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                                IsLastChar(wdsz, n) ) { <span class="comment">// B is silent if word ends in MB</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                            }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                            code.Append(symb);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;C&#39;</span> : <span class="comment">// lots of C special cases</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                            <span class="comment">/* discard if SCI, SCE or SCY */</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                            <span class="keywordflow">if</span> (IsPreviousChar(local, n, <span class="charliteral">&#39;S&#39;</span>) &amp;&amp; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                                !IsLastChar(wdsz, n) &amp;&amp; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                (this.frontv.IndexOf(local[n + 1]) &gt;= 0)) {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                            }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                            <span class="keywordflow">if</span> (RegionMatch(local, n, <span class="stringliteral">&quot;CIA&quot;</span>)) { <span class="comment">// &quot;CIA&quot; -&gt; X</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                                code.Append(<span class="charliteral">&#39;X&#39;</span>); </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                            }</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                            <span class="keywordflow">if</span> (!IsLastChar(wdsz, n) &amp;&amp; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                                (this.frontv.IndexOf(local[n + 1]) &gt;= 0)) {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                code.Append(<span class="charliteral">&#39;S&#39;</span>);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                                <span class="keywordflow">break</span>; <span class="comment">// CI,CE,CY -&gt; S</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                            }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                            <span class="keywordflow">if</span> (IsPreviousChar(local, n, <span class="charliteral">&#39;S&#39;</span>) &amp;&amp;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                IsNextChar(local, n, <span class="charliteral">&#39;H&#39;</span>) ) { <span class="comment">// SCH-&amp;gtsk</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                                code.Append(<span class="charliteral">&#39;K&#39;</span>) ; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                break ;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                            }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                            <span class="keywordflow">if</span> (IsNextChar(local, n, <span class="charliteral">&#39;H&#39;</span>)) { <span class="comment">// detect CH</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                                <span class="keywordflow">if</span> ((n == 0) &amp;&amp; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                                    (wdsz &gt;= 3) &amp;&amp; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                                    IsVowel(local,2) ) { <span class="comment">// CH consonant -&gt; K consonant</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                                    code.Append(<span class="charliteral">&#39;K&#39;</span>);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                                } <span class="keywordflow">else</span> { </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                                    code.Append(<span class="charliteral">&#39;X&#39;</span>); <span class="comment">// CHvowel -&gt; X</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                                }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                            } <span class="keywordflow">else</span> { </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                                code.Append(<span class="charliteral">&#39;K&#39;</span>);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                            }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                            break ;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;D&#39;</span> :</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                            <span class="keywordflow">if</span> (!IsLastChar(wdsz, n + 1) &amp;&amp; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                IsNextChar(local, n, <span class="charliteral">&#39;G&#39;</span>) &amp;&amp; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                                (this.frontv.IndexOf(local[n + 2]) &gt;= 0)) { <span class="comment">// DGE DGI DGY -&gt; J </span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                                code.Append(<span class="charliteral">&#39;J&#39;</span>); n += 2 ;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                            } <span class="keywordflow">else</span> { </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                                code.Append(<span class="charliteral">&#39;T&#39;</span>);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                            }</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                            break ;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;G&#39;</span> : <span class="comment">// GH silent at end or before consonant</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                            <span class="keywordflow">if</span> (IsLastChar(wdsz, n + 1) &amp;&amp; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                                IsNextChar(local, n, <span class="charliteral">&#39;H&#39;</span>)) {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                            }</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                            <span class="keywordflow">if</span> (!IsLastChar(wdsz, n + 1) &amp;&amp;  </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                                IsNextChar(local,n,<span class="charliteral">&#39;H&#39;</span>) &amp;&amp; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                                !IsVowel(local,n+2)) {</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                            }</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                            <span class="keywordflow">if</span> ((n &gt; 0) &amp;&amp; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                (RegionMatch(local, n, <span class="stringliteral">&quot;GN&quot;</span>) ||</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                RegionMatch(local, n, <span class="stringliteral">&quot;GNED&quot;</span>) ) ) {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                                <span class="keywordflow">break</span>; <span class="comment">// silent G</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                            }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                            var hard = false ;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                            <span class="keywordflow">if</span> (IsPreviousChar(local, n, <span class="charliteral">&#39;G&#39;</span>)) {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                hard = true ;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                                hard = false ;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                            }</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                            <span class="keywordflow">if</span> (!IsLastChar(wdsz, n) &amp;&amp; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                                (this.frontv.IndexOf(local[n + 1]) &gt;= 0) &amp;&amp; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                                (!hard)) {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                                code.Append(<span class="charliteral">&#39;J&#39;</span>);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                                code.Append(<span class="charliteral">&#39;K&#39;</span>);</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                            }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                            break ;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;H&#39;</span>:</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                            <span class="keywordflow">if</span> (IsLastChar(wdsz, n)) {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                                break ; <span class="comment">// terminal H</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                            }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                            <span class="keywordflow">if</span> ((n &gt; 0) &amp;&amp; </div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                                (this.varson.IndexOf(local[n - 1]) &gt;= 0)) {</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                            }</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                            <span class="keywordflow">if</span> (IsVowel(local,n+1)) {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                                code.Append(<span class="charliteral">&#39;H&#39;</span>); <span class="comment">// Hvowel</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                            }</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;F&#39;</span>: </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;J&#39;</span> : </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;L&#39;</span> :</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;M&#39;</span>: </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;N&#39;</span> : </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;R&#39;</span> :</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                            code.Append(symb); </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;K&#39;</span> :</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                            <span class="keywordflow">if</span> (n &gt; 0) { <span class="comment">// not initial</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                                <span class="keywordflow">if</span> (!IsPreviousChar(local, n, <span class="charliteral">&#39;C&#39;</span>)) {</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                                    code.Append(symb);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                                }</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                                code.Append(symb); <span class="comment">// initial K</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                            }</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                            break ;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;P&#39;</span> :</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                            <span class="keywordflow">if</span> (IsNextChar(local,n,<span class="charliteral">&#39;H&#39;</span>)) {</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                                <span class="comment">// PH -&gt; F</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                                code.Append(<span class="charliteral">&#39;F&#39;</span>);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                code.Append(symb);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                            }</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                            break ;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;Q&#39;</span> :</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                            code.Append(<span class="charliteral">&#39;K&#39;</span>);</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;S&#39;</span> :</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                            <span class="keywordflow">if</span> (RegionMatch(local,n,<span class="stringliteral">&quot;SH&quot;</span>) || </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                                RegionMatch(local,n,<span class="stringliteral">&quot;SIO&quot;</span>) || </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                                RegionMatch(local,n,<span class="stringliteral">&quot;SIA&quot;</span>)) {</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                                code.Append(<span class="charliteral">&#39;X&#39;</span>);</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                                code.Append(<span class="charliteral">&#39;S&#39;</span>);</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                            }</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;T&#39;</span> :</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                            <span class="keywordflow">if</span> (RegionMatch(local,n,<span class="stringliteral">&quot;TIA&quot;</span>) || </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                                RegionMatch(local,n,<span class="stringliteral">&quot;TIO&quot;</span>)) {</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                                code.Append(<span class="charliteral">&#39;X&#39;</span>); </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                            }</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                            <span class="keywordflow">if</span> (RegionMatch(local,n,<span class="stringliteral">&quot;TCH&quot;</span>)) {</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                                <span class="comment">// Silent if in &quot;TCH&quot;</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                            }</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                            <span class="comment">// substitute numeral 0 for TH (resembles theta after all)</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                            <span class="keywordflow">if</span> (RegionMatch(local,n,<span class="stringliteral">&quot;TH&quot;</span>)) {</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                                code.Append(<span class="charliteral">&#39;0&#39;</span>);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                                code.Append(<span class="charliteral">&#39;T&#39;</span>);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                            }</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                            break ;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;V&#39;</span> :</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                            code.Append(<span class="charliteral">&#39;F&#39;</span>);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                            break ;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;W&#39;</span> : <span class="keywordflow">case</span> <span class="charliteral">&#39;Y&#39;</span> : <span class="comment">// silent if not followed by vowel</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                            <span class="keywordflow">if</span> (!IsLastChar(wdsz,n) &amp;&amp; </div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                                IsVowel(local,n+1)) {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                                code.Append(symb);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                            }</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                            break ;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;X&#39;</span> :</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                            code.Append(<span class="charliteral">&#39;K&#39;</span>);</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                            code.Append(<span class="charliteral">&#39;S&#39;</span>);</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                            break ;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                        <span class="keywordflow">case</span> <span class="charliteral">&#39;Z&#39;</span> :</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                            code.Append(<span class="charliteral">&#39;S&#39;</span>);</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                            break ;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                    } <span class="comment">// end switch</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                    n++ ;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                } <span class="comment">// end else from symb != &#39;C&#39;</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                <span class="keywordflow">if</span> (code.Length &gt; <span class="keyword">this</span>.maxCodeLen) { </div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                    code.Length = maxCodeLen; </div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                }</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            }</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            <span class="keywordflow">return</span> code.ToString();</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        }</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    }</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Text_1_1Metaphone_htm_a0bb498e6725663237f8eb5166f659d65"><div class="ttname"><a href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a0bb498e6725663237f8eb5166f659d65">Deveel.Data.Text.Metaphone.RegionMatch</a></div><div class="ttdeci">bool RegionMatch(StringBuilder sb, int index, String test)</div><div class="ttdef"><b>Definition:</b> <a href="Metaphone_8cs_source.htm#l00039">Metaphone.cs:39</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Text_1_1Metaphone_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm">Deveel.Data.Text.Metaphone</a></div><div class="ttdef"><b>Definition:</b> <a href="Metaphone_8cs_source.htm#l00021">Metaphone.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Text_1_1Metaphone_htm_a91da3ab719ca55dd88459b712e9c2466"><div class="ttname"><a href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a91da3ab719ca55dd88459b712e9c2466">Deveel.Data.Text.Metaphone.IsVowel</a></div><div class="ttdeci">bool IsVowel(StringBuilder sb, int index)</div><div class="ttdef"><b>Definition:</b> <a href="Metaphone_8cs_source.htm#l00049">Metaphone.cs:49</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Text_1_1Metaphone_htm_a3b3412e42f042b39fdda134a060a2333"><div class="ttname"><a href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a3b3412e42f042b39fdda134a060a2333">Deveel.Data.Text.Metaphone.IsPreviousChar</a></div><div class="ttdeci">bool IsPreviousChar(StringBuilder sb, int index, char c)</div><div class="ttdef"><b>Definition:</b> <a href="Metaphone_8cs_source.htm#l00053">Metaphone.cs:53</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Text_1_1Metaphone_htm_ad0404f104cf10d31c328b85528638342"><div class="ttname"><a href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#ad0404f104cf10d31c328b85528638342">Deveel.Data.Text.Metaphone.IsNextChar</a></div><div class="ttdeci">bool IsNextChar(StringBuilder sb, int index, char c)</div><div class="ttdef"><b>Definition:</b> <a href="Metaphone_8cs_source.htm#l00061">Metaphone.cs:61</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Text_1_1Metaphone_htm_a27463bcf89bf13f167e46286a2c786f8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a27463bcf89bf13f167e46286a2c786f8">Deveel.Data.Text.Metaphone.IsLastChar</a></div><div class="ttdeci">bool IsLastChar(int wdsz, int n)</div><div class="ttdef"><b>Definition:</b> <a href="Metaphone_8cs_source.htm#l00035">Metaphone.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Text_1_1Metaphone_htm_a6a2ea4247423f6a9752c789b654c079e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a6a2ea4247423f6a9752c789b654c079e">Deveel.Data.Text.Metaphone.Compute</a></div><div class="ttdeci">string Compute(string s)</div><div class="ttdef"><b>Definition:</b> <a href="Metaphone_8cs_source.htm#l00071">Metaphone.cs:71</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Text_1_1Metaphone_htm_a6d7448448b4dc9bf880d43042c633840"><div class="ttname"><a href="classDeveel_1_1Data_1_1Text_1_1Metaphone.htm#a6d7448448b4dc9bf880d43042c633840">Deveel.Data.Text.Metaphone.Metaphone</a></div><div class="ttdeci">Metaphone()</div><div class="ttdef"><b>Definition:</b> <a href="Metaphone_8cs_source.htm#l00023">Metaphone.cs:23</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
