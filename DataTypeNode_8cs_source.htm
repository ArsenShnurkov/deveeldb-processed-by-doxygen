<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Parser/DataTypeNode.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_f0ea0b9ea9aae2e0e9b9dfca26eb78a8.htm">Deveel.Data.Sql.Parser</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">DataTypeNode.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="DataTypeNode_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Linq;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm">Objects</a>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm">Types</a>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Sql.Parser {</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm">   28</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm">DataTypeNode</a> : <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm">SqlNode</a> {</div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#ace3ff7db72c35e75968d44a0d8449861">   32</a></span>&#160;        <span class="keyword">internal</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#ace3ff7db72c35e75968d44a0d8449861">DataTypeNode</a>() {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            IsPrimitive = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            Metadata = <span class="keyword">new</span> Dictionary&lt;string, string&gt;();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a232f42bdfabcf34cd2f966fe88da790a">   42</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> IsPrimitive { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a27a8660a4c4536f2473109d42c28f8fb">   47</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> TypeName { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a85883d73298abac6fa4655369bb6ea55">   56</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> Size { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a8c4572d48038b04a42576b751cd8084a">   63</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> HasSize { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aea9ecb96f85075f071a5af7a60f181c2">   74</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> Scale { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a890a269c733a8597d57e71ec8facca89">   81</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> HasScale { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a5b65cc19103c345adb928e6b4b1acad4">   88</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> Precision { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#abb336ab27f26a01f154a1f1e8ccce89c">   94</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> HasPrecision { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aafd58426306e4d83958bb297c9129e33">  102</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> Locale { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aa14cfb22cd40ba398bd387cf0a2a34b5">  109</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> HasLocale { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#afdc4e6f4f3d0d677de31977dd3028b14">  111</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> Encoding { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#ad8dc51a5ac025cfe5056d69a9e2d1308">  113</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> HasEncoding { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a37fb546fbcc569ad789fa3de3e6ee395">  115</a></span>&#160;        <span class="keyword">public</span> Dictionary&lt;string, string&gt; Metadata { <span class="keyword">get</span>; <span class="keyword">private</span> set; } </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a8044b3f52ddac6a9378e87cb6203850a">  117</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a8044b3f52ddac6a9378e87cb6203850a">OnChildNode</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">if</span> (node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a15af4a9f55b9d03b1265f1b3f0fb10d7">NodeName</a> == <span class="stringliteral">&quot;identity_type&quot;</span>) {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                TypeName = <span class="stringliteral">&quot;IDENTITY&quot;</span>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a15af4a9f55b9d03b1265f1b3f0fb10d7">NodeName</a> == <span class="stringliteral">&quot;boolean_type&quot;</span>) {</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                GetBooleanType(node);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a15af4a9f55b9d03b1265f1b3f0fb10d7">NodeName</a> == <span class="stringliteral">&quot;decimal_type&quot;</span>) {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                GetNumberType(node);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a15af4a9f55b9d03b1265f1b3f0fb10d7">NodeName</a> == <span class="stringliteral">&quot;character_type&quot;</span> ||</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                       node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a15af4a9f55b9d03b1265f1b3f0fb10d7">NodeName</a> == <span class="stringliteral">&quot;binary_type&quot;</span>) {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                GetSizedType(node);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a15af4a9f55b9d03b1265f1b3f0fb10d7">NodeName</a> == <span class="stringliteral">&quot;date_type&quot;</span> ||</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                       node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a15af4a9f55b9d03b1265f1b3f0fb10d7">NodeName</a> == <span class="stringliteral">&quot;integer_type&quot;</span> ||</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                       node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a15af4a9f55b9d03b1265f1b3f0fb10d7">NodeName</a> == <span class="stringliteral">&quot;float_type&quot;</span>) {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                GetSimpleType(node);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a15af4a9f55b9d03b1265f1b3f0fb10d7">NodeName</a> == <span class="stringliteral">&quot;interval_type&quot;</span>) {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a15af4a9f55b9d03b1265f1b3f0fb10d7">NodeName</a> == <span class="stringliteral">&quot;user_type&quot;</span>) {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                GetUserType(node);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a15af4a9f55b9d03b1265f1b3f0fb10d7">NodeName</a> == <span class="stringliteral">&quot;row_type&quot;</span>) {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordflow">return</span> base.OnChildNode(node);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aff21aea7e39f2d802c21d4a9590a9c2e">  141</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aff21aea7e39f2d802c21d4a9590a9c2e">GetBooleanType</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) {</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            IsPrimitive = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            TypeName = <span class="stringliteral">&quot;BOOLEAN&quot;</span>;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a35f96aadaa8be956d6a23befb5b773dc">  146</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a35f96aadaa8be956d6a23befb5b773dc">GetUserType</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            IsPrimitive = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            TypeName = node.FindNode&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ObjectNameNode.htm">ObjectNameNode</a>&gt;().Name;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            var optMetaList = node.FindByName(<span class="stringliteral">&quot;user_type_meta_opt&quot;</span>);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordflow">if</span> (optMetaList != null) {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                GetMeta(optMetaList.ChildNodes.FirstOrDefault());</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a36101bce5e5e58a930551007424ee864">  155</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a36101bce5e5e58a930551007424ee864">GetMeta</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="keywordflow">if</span> (node == null)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            var metas = node.FindNodes&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeMetaNode.htm">DataTypeMetaNode</a>&gt;();</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keywordflow">foreach</span> (var meta <span class="keywordflow">in</span> metas) {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                Metadata[meta.Name] = meta.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeMetaNode.htm#a62d4a21edd28c0160e939d752d8f4d7b">Value</a>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a7e4bca4b16bc888782f06804d201e81b">  165</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a7e4bca4b16bc888782f06804d201e81b">GetSimpleType</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) {</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            var type = node.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a156305a37aea852103bbae1642bfd8f8">ChildNodes</a>.First();</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            TypeName = type.NodeName;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        }</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aee2bd75255a62f87afda85e3af3881e0">  170</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aee2bd75255a62f87afda85e3af3881e0">GetSizedType</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <span class="keywordflow">if</span> (childNode.NodeName == <span class="stringliteral">&quot;long_varchar&quot;</span>) {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                    TypeName = <span class="stringliteral">&quot;LONG VARCHAR&quot;</span>;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (childNode is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlKeyNode.htm">SqlKeyNode</a>) {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                    TypeName = ((SqlKeyNode) childNode).Text;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (childNode.NodeName == <span class="stringliteral">&quot;datatype_size&quot;</span>) {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                    GetDataSize(childNode);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (childNode.NodeName == <span class="stringliteral">&quot;locale_opt&quot;</span>) {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                    GetLocale(childNode);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (childNode.NodeName == <span class="stringliteral">&quot;encoding_opt&quot;</span>) {</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                    GetEncoding(childNode);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        }</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#acfbec46d02305942ff53551e569916f7">  186</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#acfbec46d02305942ff53551e569916f7">GetLocale</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) {</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                <span class="keywordflow">if</span> (childNode is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1StringLiteralNode.htm">StringLiteralNode</a>) {</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                    Locale = ((StringLiteralNode) childNode).Value;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                    HasLocale = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                }</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a483ade52c0a86af60a45d7be6a94cfed">  195</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a483ade52c0a86af60a45d7be6a94cfed">GetEncoding</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                <span class="keywordflow">if</span> (childNode is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1StringLiteralNode.htm">StringLiteralNode</a>) {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                    Encoding = ((StringLiteralNode) childNode).Value;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                    HasEncoding = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aa2d7552bafb66c017bcfccbfa456c870">  204</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aa2d7552bafb66c017bcfccbfa456c870">GetDataSize</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                <span class="keywordflow">if</span> (childNode is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1IntegerLiteralNode.htm">IntegerLiteralNode</a>) {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                    Size = (int) ((IntegerLiteralNode) childNode).Value;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                    HasSize = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                }</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            }</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a74567c5238e07fb1fc18017d39c0503f">  213</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a74567c5238e07fb1fc18017d39c0503f">GetNumberType</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <span class="keywordflow">if</span> (childNode is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlKeyNode.htm">SqlKeyNode</a>) {</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                    TypeName = ((SqlKeyNode) childNode).Text;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (childNode.NodeName == <span class="stringliteral">&quot;number_precision&quot;</span>) {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                    GetNumberPrecision(childNode);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aca94f892e10b80018c382f81795d0a21">  224</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aca94f892e10b80018c382f81795d0a21">GetNumberPrecision</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node) {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                <span class="keywordflow">if</span> (!HasScale) {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                    Scale = (int) ((<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1IntegerLiteralNode.htm">IntegerLiteralNode</a>) childNode).Value;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                    HasScale = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                    Precision = (int) ((<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1IntegerLiteralNode.htm">IntegerLiteralNode</a>) childNode).Value;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                    HasPrecision = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    }</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a36101bce5e5e58a930551007424ee864"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a36101bce5e5e58a930551007424ee864">Deveel.Data.Sql.Parser.DataTypeNode.GetMeta</a></div><div class="ttdeci">void GetMeta(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00155">DataTypeNode.cs:155</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a8044b3f52ddac6a9378e87cb6203850a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a8044b3f52ddac6a9378e87cb6203850a">Deveel.Data.Sql.Parser.DataTypeNode.OnChildNode</a></div><div class="ttdeci">override ISqlNode OnChildNode(ISqlNode node)</div><div class="ttdoc">During the initialization of the node from the parser, this method is called for every child node add...</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00117">DataTypeNode.cs:117</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">Deveel.Data.Sql.Parser.ISqlNode</a></div><div class="ttdoc">Defines the contract for nodes in an AST model for a SQL grammar analysis and parsing. </div><div class="ttdef"><b>Definition:</b> <a href="ISqlNode_8cs_source.htm#l00025">ISqlNode.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlKeyNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlKeyNode.htm">Deveel.Data.Sql.Parser.SqlKeyNode</a></div><div class="ttdoc">Represents a keyword found during the compilation of a source text. </div><div class="ttdef"><b>Definition:</b> <a href="SqlKeyNode_8cs_source.htm#l00025">SqlKeyNode.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_aff21aea7e39f2d802c21d4a9590a9c2e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aff21aea7e39f2d802c21d4a9590a9c2e">Deveel.Data.Sql.Parser.DataTypeNode.GetBooleanType</a></div><div class="ttdeci">void GetBooleanType(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00141">DataTypeNode.cs:141</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ObjectNameNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ObjectNameNode.htm">Deveel.Data.Sql.Parser.ObjectNameNode</a></div><div class="ttdoc">Represents a composed name for an object within the system. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectNameNode_8cs_source.htm#l00032">ObjectNameNode.cs:32</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode_htm_a15af4a9f55b9d03b1265f1b3f0fb10d7"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a15af4a9f55b9d03b1265f1b3f0fb10d7">Deveel.Data.Sql.Parser.ISqlNode.NodeName</a></div><div class="ttdeci">string NodeName</div><div class="ttdoc">Gets the name of the node analyzed from the parser. </div><div class="ttdef"><b>Definition:</b> <a href="ISqlNode_8cs_source.htm#l00029">ISqlNode.cs:29</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a74567c5238e07fb1fc18017d39c0503f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a74567c5238e07fb1fc18017d39c0503f">Deveel.Data.Sql.Parser.DataTypeNode.GetNumberType</a></div><div class="ttdeci">void GetNumberType(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00213">DataTypeNode.cs:213</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Objects_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm">Deveel.Data.Sql.Objects</a></div><div class="ttdef"><b>Definition:</b> <a href="IObjectRef_8cs_source.htm#l00021">IObjectRef.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a35f96aadaa8be956d6a23befb5b773dc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a35f96aadaa8be956d6a23befb5b773dc">Deveel.Data.Sql.Parser.DataTypeNode.GetUserType</a></div><div class="ttdeci">void GetUserType(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00146">DataTypeNode.cs:146</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_aee2bd75255a62f87afda85e3af3881e0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aee2bd75255a62f87afda85e3af3881e0">Deveel.Data.Sql.Parser.DataTypeNode.GetSizedType</a></div><div class="ttdeci">void GetSizedType(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00170">DataTypeNode.cs:170</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1StringLiteralNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1StringLiteralNode.htm">Deveel.Data.Sql.Parser.StringLiteralNode</a></div><div class="ttdoc">A node containing a constant literal string passed within an SQL command. </div><div class="ttdef"><b>Definition:</b> <a href="StringLiteralNode_8cs_source.htm#l00025">StringLiteralNode.cs:25</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode_htm_a156305a37aea852103bbae1642bfd8f8"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a156305a37aea852103bbae1642bfd8f8">Deveel.Data.Sql.Parser.ISqlNode.ChildNodes</a></div><div class="ttdeci">IEnumerable&lt; ISqlNode &gt; ChildNodes</div><div class="ttdoc">Gets a read-only enumeration of the children nodes, if any. </div><div class="ttdef"><b>Definition:</b> <a href="ISqlNode_8cs_source.htm#l00039">ISqlNode.cs:39</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a7e4bca4b16bc888782f06804d201e81b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a7e4bca4b16bc888782f06804d201e81b">Deveel.Data.Sql.Parser.DataTypeNode.GetSimpleType</a></div><div class="ttdeci">void GetSimpleType(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00165">DataTypeNode.cs:165</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_aa2d7552bafb66c017bcfccbfa456c870"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aa2d7552bafb66c017bcfccbfa456c870">Deveel.Data.Sql.Parser.DataTypeNode.GetDataSize</a></div><div class="ttdeci">void GetDataSize(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00204">DataTypeNode.cs:204</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeMetaNode_htm_a62d4a21edd28c0160e939d752d8f4d7b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeMetaNode.htm#a62d4a21edd28c0160e939d752d8f4d7b">Deveel.Data.Sql.Parser.DataTypeMetaNode.Value</a></div><div class="ttdeci">string Value</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeMetaNode_8cs_source.htm#l00023">DataTypeMetaNode.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_ace3ff7db72c35e75968d44a0d8449861"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#ace3ff7db72c35e75968d44a0d8449861">Deveel.Data.Sql.Parser.DataTypeNode.DataTypeNode</a></div><div class="ttdeci">DataTypeNode()</div><div class="ttdoc">Constructs an empty DataTypeNode. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00032">DataTypeNode.cs:32</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm">Deveel.Data.Types</a></div><div class="ttdef"><b>Definition:</b> <a href="ArrayType_8cs_source.htm#l00021">ArrayType.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeMetaNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeMetaNode.htm">Deveel.Data.Sql.Parser.DataTypeMetaNode</a></div><div class="ttdef"><b>Definition:</b> <a href="DataTypeMetaNode_8cs_source.htm#l00020">DataTypeMetaNode.cs:20</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_aca94f892e10b80018c382f81795d0a21"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#aca94f892e10b80018c382f81795d0a21">Deveel.Data.Sql.Parser.DataTypeNode.GetNumberPrecision</a></div><div class="ttdeci">void GetNumberPrecision(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00224">DataTypeNode.cs:224</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm">Deveel.Data.Sql</a></div><div class="ttdef"><b>Definition:</b> <a href="CellId_8cs_source.htm#l00022">CellId.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm">Deveel.Data.Sql.Parser.DataTypeNode</a></div><div class="ttdoc">Describes the information of a data type as found in a SQL string. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00028">DataTypeNode.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm">Deveel.Data.Sql.Parser.SqlNode</a></div><div class="ttdoc">The default implementation of ISqlNode, that is a node in the text analysis parsing of SQL commands...</div><div class="ttdef"><b>Definition:</b> <a href="SqlNode_8cs_source.htm#l00032">SqlNode.cs:32</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1IntegerLiteralNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1IntegerLiteralNode.htm">Deveel.Data.Sql.Parser.IntegerLiteralNode</a></div><div class="ttdoc">Encapsulates a number that is any falling in the group of integers. </div><div class="ttdef"><b>Definition:</b> <a href="IntegerLiteralNode_8cs_source.htm#l00030">IntegerLiteralNode.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_acfbec46d02305942ff53551e569916f7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#acfbec46d02305942ff53551e569916f7">Deveel.Data.Sql.Parser.DataTypeNode.GetLocale</a></div><div class="ttdeci">void GetLocale(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00186">DataTypeNode.cs:186</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm_a483ade52c0a86af60a45d7be6a94cfed"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm#a483ade52c0a86af60a45d7be6a94cfed">Deveel.Data.Sql.Parser.DataTypeNode.GetEncoding</a></div><div class="ttdeci">void GetEncoding(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00195">DataTypeNode.cs:195</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
