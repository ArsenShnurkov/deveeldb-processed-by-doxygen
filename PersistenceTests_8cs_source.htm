<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb-nunit/Deveel.Data.Control/PersistenceTests.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_161fca7059b832f09270a2e8ed498e3a.htm">deveeldb-nunit</a></li><li class="navelem"><a class="el" href="dir_1be6a3c0f4914821ddd1f50d01b72071.htm">Deveel.Data.Control</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">PersistenceTests.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="PersistenceTests_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Data;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Configuration.htm">Configuration</a>;</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Diagnostics.htm">Diagnostics</a>;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceNUnit.htm">NUnit</a>.Framework;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Control {</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;    [TestFixture]</div>
<div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Control_1_1PersistenceTests.htm">   11</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Control_1_1PersistenceTests.htm">PersistenceTests</a> {</div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Control_1_1PersistenceTests.htm#a53a4d1efd4dbb73abea6ad070ec708a1">   12</a></span>&#160;        <span class="keyword">const</span> <span class="keywordtype">string</span> testDbName = <span class="stringliteral">&quot;testdb&quot;</span>;</div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Control_1_1PersistenceTests.htm#a7c300e06ad8384cafacd417314ae1270">   13</a></span>&#160;        <span class="keyword">const</span> <span class="keywordtype">string</span> testDbAdmin = <span class="stringliteral">&quot;SA&quot;</span>;</div>
<div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Control_1_1PersistenceTests.htm#ace7d921b6b51efadb445ebf921533ee0">   14</a></span>&#160;        <span class="keyword">const</span> <span class="keywordtype">string</span> testDbPass = <span class="stringliteral">&quot;1234&quot;</span>;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Control_1_1PersistenceTests.htm#acd0f074a6aa022294dd975013809bf30">   16</a></span>&#160;        <span class="keyword">private</span> IDbConfig <a class="code" href="classDeveel_1_1Data_1_1Control_1_1PersistenceTests.htm#acd0f074a6aa022294dd975013809bf30">Config</a>;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        [SetUp]</div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Control_1_1PersistenceTests.htm#a72741a5325b43ab271e73c9f5b3225dd">   19</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Control_1_1PersistenceTests.htm#a72741a5325b43ab271e73c9f5b3225dd">SetUp</a>() {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;            Config = DbConfig.Default;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;            Config.StorageSystem(ConfigDefaultValues.FileStorageSystem);</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;            Config.LoggerType(typeof (<a class="code" href="classDeveel_1_1Diagnostics_1_1ConsoleLogger.htm">ConsoleLogger</a>));</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;            <span class="keyword">using</span> (var controller = DbController.Create(Config)) {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                <span class="keywordflow">if</span> (controller.DatabaseExists(testDbName))</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                    controller.DeleteDatabase(testDbName, testDbAdmin, testDbPass);</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            }</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        }</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        [Test]</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        [Category(<span class="stringliteral">&quot;Create&quot;</span>)]</div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Control_1_1PersistenceTests.htm#a87497d2da0890c62caea40b2f83d1725">   32</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Control_1_1PersistenceTests.htm#a87497d2da0890c62caea40b2f83d1725">FullCycle</a>() {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            <span class="comment">// First create the controller for the system context</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            <span class="keyword">using</span> (var controller = DbController.Create(Config)) {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                Console.Out.WriteLine(<span class="stringliteral">&quot;A new system controller was created at path {0}&quot;</span>, controller.Config.BasePath());</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                <span class="comment">// Then create the database &#39;testdb&#39;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                <span class="keyword">using</span> (var dbSystem = controller.CreateDatabase(testDbName, testDbAdmin, testDbPass)) {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                    Console.Out.WriteLine(<span class="stringliteral">&quot;The database {0} was created at the path {1}&quot;</span>,</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                        dbSystem.Config.DatabaseName(),</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                        dbSystem.Config.DatabaseFullPath());</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                    Assert.IsTrue(dbSystem.Database.Exists, <span class="stringliteral">&quot;The database was created but was not not physically found.&quot;</span>);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                    <span class="comment">// now open am ADO.NET connection to write data to the database</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                    <span class="keyword">using</span> (var connection = dbSystem.GetConnection(testDbAdmin, testDbPass)) {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                        Assert.IsTrue(connection.State == ConnectionState.Open, <span class="stringliteral">&quot;The connection is not open&quot;</span>);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                        <span class="keyword">using</span> (var transaction = connection.BeginTransaction()) {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                            <span class="comment">// Create the table &#39;people&#39;</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                            var command = connection.CreateCommand();</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                            command.CommandText = <span class="stringliteral">&quot;CREATE TABLE people (first_name VARCHAR(255), last_name VARCHAR(255), age INT)&quot;</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                            command.ExecuteNonQuery();</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                            Console.Out.WriteLine(<span class="stringliteral">&quot;The table &#39;people&#39; was created in the database&quot;</span>);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                            <span class="comment">// insert an entry into the table</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                            command = connection.CreateCommand();</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                            command.CommandText = <span class="stringliteral">&quot;INSERT INTO people (first_name, last_name, age) VALUES (&#39;Antonello&#39;, &#39;Provenzano&#39;, 33)&quot;</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                            command.ExecuteNonQuery();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                            Console.Out.WriteLine(<span class="stringliteral">&quot;An entry was inserted into the table &#39;people&#39;.&quot;</span>);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                            <span class="comment">// assert the entry exists within this context</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                            command = connection.CreateCommand();</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                            command.CommandText = <span class="stringliteral">&quot;SELECT COUNT(*) FROM people&quot;</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                            var count = (BigNumber) command.ExecuteScalar();</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                            Assert.AreEqual(1, count.ToInt32(), <span class="stringliteral">&quot;The number of entries in the table is not coherent.&quot;</span>);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                            transaction.Commit();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                        }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                    }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            <span class="comment">// The previous system context was disposed, any reference to the databases within the</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="comment">// context has been released. So create another system controller</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            <span class="keyword">using</span> (var controller = DbController.Create(Config)) {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="comment">// Check the database physically exists in the system</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                Assert.IsTrue(controller.DatabaseExists(testDbName), <span class="stringliteral">&quot;The database {0} was not physically found at the path {1}&quot;</span>, testDbName, Config.BasePath());</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="comment">// Open another system context that is isolated from the previous ones.</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keyword">using</span> (var controller = DbController.Create(Config)) {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                <span class="comment">// Open an existing database within the system context. If the database doesn&#39;t exist</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                <span class="comment">// this will throw an exception.</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                <span class="keyword">using</span> (var dbSystem = controller.StartDatabase(testDbName)) {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                    <span class="comment">// Open a connection to the database</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                    <span class="keyword">using</span> (var connection = dbSystem.GetConnection(testDbAdmin, testDbPass)) {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                        <span class="comment">// Assert the connection state is open</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                        Assert.IsTrue(connection.State == ConnectionState.Open, <span class="stringliteral">&quot;The connection is not open&quot;</span>);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                        <span class="comment">// Check the &#39;people&#39; table and count the items. If the table doesn&#39;t physically</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                        <span class="comment">// exist this will throw an exception</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                        var command = connection.CreateCommand();</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                        command.CommandText = <span class="stringliteral">&quot;SELECT COUNT(*) FROM people&quot;</span>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                        <span class="comment">// Assert there is exactly one element in the table</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                        var count = (BigNumber) command.ExecuteScalar();</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                        Assert.AreEqual(1, count.ToInt32(), <span class="stringliteral">&quot;An incorrect number of items was found in the table.&quot;</span>);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                        <span class="comment">// Now select the entry in the table</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                        command = connection.CreateCommand();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                        command.CommandText = <span class="stringliteral">&quot;SELECT * FROM people&quot;</span>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                        <span class="comment">// Assert the data structure is coherent with the one created in</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                        <span class="comment">// the previous passage</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                        var reader = command.ExecuteReader();</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                        Assert.AreEqual(3, reader.FieldCount, <span class="stringliteral">&quot;An incorrect number of fields was found in the table.&quot;</span>);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                        Assert.AreEqual(0, reader.GetOrdinal(<span class="stringliteral">&quot;first_name&quot;</span>), <span class="stringliteral">&quot;The first field in the table is not &#39;first_name&#39;&quot;</span>);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                        Assert.AreEqual(1, reader.GetOrdinal(<span class="stringliteral">&quot;last_name&quot;</span>), <span class="stringliteral">&quot;The second field in the table is not &#39;last_name&#39;&quot;</span>);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                        Assert.AreEqual(2, reader.GetOrdinal(<span class="stringliteral">&quot;age&quot;</span>), <span class="stringliteral">&quot;The third field in the table is not &#39;age&#39;&quot;</span>);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                        <span class="comment">// Assert at least one entry can be read</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                        Assert.IsTrue(reader.Read(), <span class="stringliteral">&quot;It was not possible to read from the result&quot;</span>);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                        <span class="comment">// Assert the entry read is exactly the one created in the previous stage</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                        Assert.AreEqual(<span class="stringliteral">&quot;Antonello&quot;</span>, reader.GetString(0), <span class="stringliteral">&quot;The value of &#39;first_name&#39; is not &#39;Antonello&#39;&quot;</span>);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                        Assert.AreEqual(<span class="stringliteral">&quot;Provenzano&quot;</span>, reader.GetString(1), <span class="stringliteral">&quot;The value of &#39;last_name&#39; is not &#39;Provenzano&#39;&quot;</span>);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                        Assert.AreEqual(33, reader.GetInt32(2), <span class="stringliteral">&quot;The value of &#39;age&#39; is not 33&quot;</span>);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                    }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}</div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="namespaceNUnit_htm"><div class="ttname"><a href="namespaceNUnit.htm">NUnit</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Control_1_1PersistenceTests_htm_acd0f074a6aa022294dd975013809bf30"><div class="ttname"><a href="classDeveel_1_1Data_1_1Control_1_1PersistenceTests.htm#acd0f074a6aa022294dd975013809bf30">Deveel.Data.Control.PersistenceTests.Config</a></div><div class="ttdeci">IDbConfig Config</div><div class="ttdef"><b>Definition:</b> <a href="PersistenceTests_8cs_source.htm#l00016">PersistenceTests.cs:16</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Control_1_1PersistenceTests_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Control_1_1PersistenceTests.htm">Deveel.Data.Control.PersistenceTests</a></div><div class="ttdef"><b>Definition:</b> <a href="PersistenceTests_8cs_source.htm#l00011">PersistenceTests.cs:11</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Diagnostics_htm"><div class="ttname"><a href="namespaceDeveel_1_1Diagnostics.htm">Deveel.Diagnostics</a></div><div class="ttdef"><b>Definition:</b> <a href="ConsoleLogger_8cs_source.htm#l00005">ConsoleLogger.cs:5</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Control_1_1PersistenceTests_htm_a87497d2da0890c62caea40b2f83d1725"><div class="ttname"><a href="classDeveel_1_1Data_1_1Control_1_1PersistenceTests.htm#a87497d2da0890c62caea40b2f83d1725">Deveel.Data.Control.PersistenceTests.FullCycle</a></div><div class="ttdeci">void FullCycle()</div><div class="ttdef"><b>Definition:</b> <a href="PersistenceTests_8cs_source.htm#l00032">PersistenceTests.cs:32</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Configuration_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Configuration.htm">Deveel.Data.Configuration</a></div><div class="ttdef"><b>Definition:</b> <a href="ConfigGroup_8cs_source.htm#l00019">ConfigGroup.cs:19</a></div></div>
<div class="ttc" id="classDeveel_1_1Diagnostics_1_1ConsoleLogger_htm"><div class="ttname"><a href="classDeveel_1_1Diagnostics_1_1ConsoleLogger.htm">Deveel.Diagnostics.ConsoleLogger</a></div><div class="ttdef"><b>Definition:</b> <a href="ConsoleLogger_8cs_source.htm#l00006">ConsoleLogger.cs:6</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Control_1_1PersistenceTests_htm_a72741a5325b43ab271e73c9f5b3225dd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Control_1_1PersistenceTests.htm#a72741a5325b43ab271e73c9f5b3225dd">Deveel.Data.Control.PersistenceTests.SetUp</a></div><div class="ttdeci">void SetUp()</div><div class="ttdef"><b>Definition:</b> <a href="PersistenceTests_8cs_source.htm#l00019">PersistenceTests.cs:19</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
