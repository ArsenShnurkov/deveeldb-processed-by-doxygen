<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Sql.Parser.ExpressionBuilder Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Parser.htm">Parser</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm">ExpressionBuilder</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Sql.Parser.ExpressionBuilder Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a17c231e2e2feab8bf0b534130086d072"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IExpressionNode.htm">IExpressionNode</a> node)</td></tr>
<tr class="separator:a17c231e2e2feab8bf0b534130086d072"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:a4b8fca0349dd8ec2ff489ab0f6058e57"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a4b8fca0349dd8ec2ff489ab0f6058e57">VisitVariableRefExpression</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlVariableRefExpressionNode.htm">SqlVariableRefExpressionNode</a> node)</td></tr>
<tr class="separator:a4b8fca0349dd8ec2ff489ab0f6058e57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada34a553b42bf992671bf261127212cb"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ada34a553b42bf992671bf261127212cb">VisitTupleExpression</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlExpressionTupleNode.htm">SqlExpressionTupleNode</a> node)</td></tr>
<tr class="separator:ada34a553b42bf992671bf261127212cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f7897cf019eeeec668e2a6acc0c8d0a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a2f7897cf019eeeec668e2a6acc0c8d0a">VisitQueryExpression</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm">SqlQueryExpressionNode</a> node)</td></tr>
<tr class="separator:a2f7897cf019eeeec668e2a6acc0c8d0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a2aa67765ef6439df4c9362e30be804"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceDeveel_1_1Data_1_1Sql.htm#a43a8483ef91b1611fe44f265383656b1">CompositeFunction</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a5a2aa67765ef6439df4c9362e30be804">GetCompositeFunction</a> (string s)</td></tr>
<tr class="separator:a5a2aa67765ef6439df4c9362e30be804"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3929f3d580d0e3c75f30630cf479712"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ac3929f3d580d0e3c75f30630cf479712">SetFromTableInClause</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm">FromClause</a> clause, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IFromSourceNode.htm">IFromSourceNode</a> source, <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode.htm">JoinNode</a> join)</td></tr>
<tr class="separator:ac3929f3d580d0e3c75f30630cf479712"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e82449d0a4488fb015460319d08801f"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a5e82449d0a4488fb015460319d08801f">AddSourceToClause</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm">FromClause</a> clause, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IFromSourceNode.htm">IFromSourceNode</a> source)</td></tr>
<tr class="separator:a5e82449d0a4488fb015460319d08801f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82f187b53f76eb66f1737f3be20b26d7"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">JoinType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a82f187b53f76eb66f1737f3be20b26d7">GetJoinType</a> (string typeName)</td></tr>
<tr class="separator:a82f187b53f76eb66f1737f3be20b26d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae156d20cfeacf58f17be212fff1e8dd8"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ae156d20cfeacf58f17be212fff1e8dd8">SetFromClause</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm">FromClause</a> clause, <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromClauseNode.htm">FromClauseNode</a> node)</td></tr>
<tr class="separator:ae156d20cfeacf58f17be212fff1e8dd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8740fdd085bf4075243cfaffd4b48a33"><td class="memItemLeft" align="right" valign="top">static IEnumerable&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SelectColumn.htm">SelectColumn</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a8740fdd085bf4075243cfaffd4b48a33">GetSelectColumns</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm">SqlQueryExpressionNode</a> node)</td></tr>
<tr class="separator:a8740fdd085bf4075243cfaffd4b48a33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec6126d6fa502f1c14f684dc238cf3de"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aec6126d6fa502f1c14f684dc238cf3de">VisitCaseExpression</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlCaseExpressionNode.htm">SqlCaseExpressionNode</a> expressionNode)</td></tr>
<tr class="separator:aec6126d6fa502f1c14f684dc238cf3de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e950a554c604a3dd8b2206aef88ffa8"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a8e950a554c604a3dd8b2206aef88ffa8">VisitConstantExpression</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlConstantExpressionNode.htm">SqlConstantExpressionNode</a> expressionNode)</td></tr>
<tr class="separator:a8e950a554c604a3dd8b2206aef88ffa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75b7fbda8ff8139acd1df3407537de4d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a75b7fbda8ff8139acd1df3407537de4d">VisitReferenceExpression</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlReferenceExpressionNode.htm">SqlReferenceExpressionNode</a> node)</td></tr>
<tr class="separator:a75b7fbda8ff8139acd1df3407537de4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1d7779eb8a8066b7295d92a32926dd6"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aa1d7779eb8a8066b7295d92a32926dd6">VisitFunctionCall</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlFunctionCallExpressionNode.htm">SqlFunctionCallExpressionNode</a> node)</td></tr>
<tr class="separator:aa1d7779eb8a8066b7295d92a32926dd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f457a5ac917694e1fc3405cce523457"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a3f457a5ac917694e1fc3405cce523457">VisitBetweenExpression</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode.htm">SqlBetweenExpressionNode</a> expressionNode)</td></tr>
<tr class="separator:a3f457a5ac917694e1fc3405cce523457"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a193abdb690da82103291812dff537615"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a193abdb690da82103291812dff537615">VisitBinaryExpression</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm">SqlBinaryExpressionNode</a> expressionNode)</td></tr>
<tr class="separator:a193abdb690da82103291812dff537615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c50824c8850b0a8c4f0e6ca70d447cc"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a6c50824c8850b0a8c4f0e6ca70d447cc">GetBinaryExpressionType</a> (string op)</td></tr>
<tr class="separator:a6c50824c8850b0a8c4f0e6ca70d447cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6037e0d8ca8c53ee2935290e7b79263"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aa6037e0d8ca8c53ee2935290e7b79263">VisitUnaryExpression</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlUnaryExpressionNode.htm">SqlUnaryExpressionNode</a> expressionNode)</td></tr>
<tr class="separator:aa6037e0d8ca8c53ee2935290e7b79263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac776eec4423e04c1fb294232c6fb7f88"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ac776eec4423e04c1fb294232c6fb7f88">GetUnaryExpressionType</a> (string op)</td></tr>
<tr class="separator:ac776eec4423e04c1fb294232c6fb7f88"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00026">26</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a5e82449d0a4488fb015460319d08801f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Sql.Parser.ExpressionBuilder.AddSourceToClause </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm">FromClause</a>&#160;</td>
          <td class="paramname"><em>clause</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IFromSourceNode.htm">IFromSourceNode</a>&#160;</td>
          <td class="paramname"><em>source</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00124">124</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                                                                                         {</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <span class="keywordtype">string</span> alias = null;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">if</span> (source.Alias != null)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                alias = source.Alias.Text;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordflow">if</span> (source is FromTableSourceNode) {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                var tableSource = (FromTableSourceNode)source;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                clause.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a82c6e260b655b2aba403aaff5255cfe3">AddTable</a>(alias, tableSource.TableName.Name);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (source is FromQuerySourceNode) {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                var querySource = (FromQuerySourceNode)source;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                var queryExpression = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">SqlQueryExpression</a>) <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>(querySource.Query);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                clause.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#ae15ef55de3bf671faa9d37804621ad2c">AddSubQuery</a>(alias, queryExpression);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_a82c6e260b655b2aba403aaff5255cfe3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a82c6e260b655b2aba403aaff5255cfe3">Deveel.Data.Sql.Expressions.FromClause.AddTable</a></div><div class="ttdeci">void AddTable(string alias, FromTable table)</div><div class="ttdoc">Adds a table as source to the query with a given alias. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00093">FromClause.cs:93</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a17c231e2e2feab8bf0b534130086d072"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Deveel.Data.Sql.Parser.ExpressionBuilder.Build</a></div><div class="ttdeci">static SqlExpression Build(IExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00027">ExpressionBuilder.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_ae15ef55de3bf671faa9d37804621ad2c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#ae15ef55de3bf671faa9d37804621ad2c">Deveel.Data.Sql.Expressions.FromClause.AddSubQuery</a></div><div class="ttdeci">void AddSubQuery(SqlQueryExpression subQuery)</div><div class="ttdoc">Adds a sub-query expression as source of the query. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00134">FromClause.cs:134</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">Deveel.Data.Sql.Expressions.SqlQueryExpression</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpression_8cs_source.htm#l00025">SqlQueryExpression.cs:25</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a17c231e2e2feab8bf0b534130086d072"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> Deveel.Data.Sql.Parser.ExpressionBuilder.Build </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IExpressionNode.htm">IExpressionNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00027">27</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                                                                {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            <span class="keywordflow">if</span> (node is SqlVariableRefExpressionNode)</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a4b8fca0349dd8ec2ff489ab0f6058e57">VisitVariableRefExpression</a>((SqlVariableRefExpressionNode) node);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            <span class="keywordflow">if</span> (node is SqlExpressionTupleNode)</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ada34a553b42bf992671bf261127212cb">VisitTupleExpression</a>((SqlExpressionTupleNode) node);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <span class="keywordflow">if</span> (node is SqlQueryExpressionNode)</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a2f7897cf019eeeec668e2a6acc0c8d0a">VisitQueryExpression</a>((SqlQueryExpressionNode) node);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            <span class="keywordflow">if</span> (node is SqlCaseExpressionNode)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aec6126d6fa502f1c14f684dc238cf3de">VisitCaseExpression</a>((SqlCaseExpressionNode) node);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <span class="keywordflow">if</span> (node is SqlConstantExpressionNode)</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a8e950a554c604a3dd8b2206aef88ffa8">VisitConstantExpression</a>((SqlConstantExpressionNode) node);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            <span class="keywordflow">if</span> (node is SqlFunctionCallExpressionNode)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aa1d7779eb8a8066b7295d92a32926dd6">VisitFunctionCall</a>((SqlFunctionCallExpressionNode) node);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <span class="keywordflow">if</span> (node is SqlReferenceExpressionNode)</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a75b7fbda8ff8139acd1df3407537de4d">VisitReferenceExpression</a>((SqlReferenceExpressionNode) node);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            <span class="keywordflow">if</span> (node is SqlBinaryExpressionNode)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a193abdb690da82103291812dff537615">VisitBinaryExpression</a>((SqlBinaryExpressionNode) node);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            <span class="keywordflow">if</span> (node is SqlUnaryExpressionNode)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aa6037e0d8ca8c53ee2935290e7b79263">VisitUnaryExpression</a>((SqlUnaryExpressionNode) node);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            <span class="keywordflow">if</span> (node is SqlBetweenExpressionNode)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a3f457a5ac917694e1fc3405cce523457">VisitBetweenExpression</a>((SqlBetweenExpressionNode) node);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a8e950a554c604a3dd8b2206aef88ffa8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a8e950a554c604a3dd8b2206aef88ffa8">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitConstantExpression</a></div><div class="ttdeci">static SqlExpression VisitConstantExpression(SqlConstantExpressionNode expressionNode)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00192">ExpressionBuilder.cs:192</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a3f457a5ac917694e1fc3405cce523457"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a3f457a5ac917694e1fc3405cce523457">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitBetweenExpression</a></div><div class="ttdeci">static SqlExpression VisitBetweenExpression(SqlBetweenExpressionNode expressionNode)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00222">ExpressionBuilder.cs:222</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_aa1d7779eb8a8066b7295d92a32926dd6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aa1d7779eb8a8066b7295d92a32926dd6">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitFunctionCall</a></div><div class="ttdeci">static SqlExpression VisitFunctionCall(SqlFunctionCallExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00214">ExpressionBuilder.cs:214</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_aa6037e0d8ca8c53ee2935290e7b79263"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aa6037e0d8ca8c53ee2935290e7b79263">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitUnaryExpression</a></div><div class="ttdeci">static SqlExpression VisitUnaryExpression(SqlUnaryExpressionNode expressionNode)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00296">ExpressionBuilder.cs:296</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a75b7fbda8ff8139acd1df3407537de4d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a75b7fbda8ff8139acd1df3407537de4d">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitReferenceExpression</a></div><div class="ttdeci">static SqlExpression VisitReferenceExpression(SqlReferenceExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00210">ExpressionBuilder.cs:210</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_ada34a553b42bf992671bf261127212cb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ada34a553b42bf992671bf261127212cb">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitTupleExpression</a></div><div class="ttdeci">static SqlExpression VisitTupleExpression(SqlExpressionTupleNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00056">ExpressionBuilder.cs:56</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_aec6126d6fa502f1c14f684dc238cf3de"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aec6126d6fa502f1c14f684dc238cf3de">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitCaseExpression</a></div><div class="ttdeci">static SqlExpression VisitCaseExpression(SqlCaseExpressionNode expressionNode)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00188">ExpressionBuilder.cs:188</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a4b8fca0349dd8ec2ff489ab0f6058e57"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a4b8fca0349dd8ec2ff489ab0f6058e57">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitVariableRefExpression</a></div><div class="ttdeci">static SqlExpression VisitVariableRefExpression(SqlVariableRefExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00052">ExpressionBuilder.cs:52</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a193abdb690da82103291812dff537615"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a193abdb690da82103291812dff537615">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitBinaryExpression</a></div><div class="ttdeci">static SqlExpression VisitBinaryExpression(SqlBinaryExpressionNode expressionNode)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00238">ExpressionBuilder.cs:238</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a2f7897cf019eeeec668e2a6acc0c8d0a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a2f7897cf019eeeec668e2a6acc0c8d0a">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitQueryExpression</a></div><div class="ttdeci">static SqlExpression VisitQueryExpression(SqlQueryExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00060">ExpressionBuilder.cs:60</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6c50824c8850b0a8c4f0e6ca70d447cc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a> Deveel.Data.Sql.Parser.ExpressionBuilder.GetBinaryExpressionType </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>op</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00248">248</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                                                                            {</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;+&quot;</span> ||</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                op == <span class="stringliteral">&quot;||&quot;</span>)</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Add;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;-&quot;</span>)</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Subtract;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;*&quot;</span>)</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Multiply;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;/&quot;</span>)</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Divide;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;%&quot;</span> ||</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(op, <span class="stringliteral">&quot;MOD&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Modulo;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            if (op == <span class="stringliteral">&quot;=&quot;</span>)</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Equal;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;&lt;&gt;&quot;</span>)</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.NotEqual;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;&gt;&quot;</span>)</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.GreaterThan;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;&gt;=&quot;</span>)</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.GreaterOrEqualThan;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;&lt;&quot;</span>)</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.SmallerThan;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;&lt;=&quot;</span>)</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.SmallerOrEqualThan;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(op, <span class="stringliteral">&quot;LIKE&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Like;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            if (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(op, <span class="stringliteral">&quot;NOT LIKE&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.NotLike;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            if (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(op, <span class="stringliteral">&quot;IS&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Is;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            if (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(op, <span class="stringliteral">&quot;IS NOT&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.IsNot;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            if (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(op, <span class="stringliteral">&quot;AND&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.And;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            if (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(op, <span class="stringliteral">&quot;OR&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Or;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            if (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(op, <span class="stringliteral">&quot;IN&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.AnyEqual;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            if (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(op, <span class="stringliteral">&quot;NOT IN&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.AllNotEqual;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;The operator {0} is not a binary one.&quot;</span>, op));</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions_htm_a2cdcdc86afbc2d50cb1ec8e389598b4a"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">Deveel.Data.Sql.Expressions.SqlExpressionType</a></div><div class="ttdeci">SqlExpressionType</div><div class="ttdoc">All the possible type of SqlExpression supported </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpressionType_8cs_source.htm#l00023">SqlExpressionType.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a5a2aa67765ef6439df4c9362e30be804"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespaceDeveel_1_1Data_1_1Sql.htm#a43a8483ef91b1611fe44f265383656b1">CompositeFunction</a> Deveel.Data.Sql.Parser.ExpressionBuilder.GetCompositeFunction </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00095">95</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                                                                        {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(s, <span class="stringliteral">&quot;UNION&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a43a8483ef91b1611fe44f265383656b1">CompositeFunction</a>.Union;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            if (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(s, <span class="stringliteral">&quot;EXCEPT&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a43a8483ef91b1611fe44f265383656b1">CompositeFunction</a>.Except;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            if (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(s, <span class="stringliteral">&quot;INTERSECT&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a43a8483ef91b1611fe44f265383656b1">CompositeFunction</a>.Intersect;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;Composite function {0} is invalid.&quot;</span>, s));</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm_a43a8483ef91b1611fe44f265383656b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm#a43a8483ef91b1611fe44f265383656b1">Deveel.Data.Sql.CompositeFunction</a></div><div class="ttdeci">CompositeFunction</div><div class="ttdoc">The kind of composite function in a CompositeTable. </div><div class="ttdef"><b>Definition:</b> <a href="CompositeFunction_8cs_source.htm#l00025">CompositeFunction.cs:25</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a82f187b53f76eb66f1737f3be20b26d7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">JoinType</a> Deveel.Data.Sql.Parser.ExpressionBuilder.GetJoinType </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>typeName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00139">139</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                                                             {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(typeName, <span class="stringliteral">&quot;INNER&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(typeName, <span class="stringliteral">&quot;INNER JOIN&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(typeName, <span class="stringliteral">&quot;,&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">JoinType</a>.Inner;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            if (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(typeName, <span class="stringliteral">&quot;LEFT OUTER&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(typeName, <span class="stringliteral">&quot;LFT OUTER JOIN&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(typeName, <span class="stringliteral">&quot;LEFT&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(typeName, <span class="stringliteral">&quot;LFT JOIN&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">JoinType</a>.Left;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            if (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(typeName, <span class="stringliteral">&quot;RIGHT OUTER&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(typeName, <span class="stringliteral">&quot;RIGHT OUTER JOIN&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(typeName, <span class="stringliteral">&quot;RIGHT&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(typeName, <span class="stringliteral">&quot;RIGHT JOIN&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">JoinType</a>.Right;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">JoinType</a>.None;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions_htm_adb07f7a341b1eda61ff53ddf48cfec81"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">Deveel.Data.Sql.Expressions.JoinType</a></div><div class="ttdeci">JoinType</div><div class="ttdoc">Enumerates the kind of group join in a selection query. </div><div class="ttdef"><b>Definition:</b> <a href="JoinType_8cs_source.htm#l00023">JoinType.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a8740fdd085bf4075243cfaffd4b48a33"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static IEnumerable&lt;<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SelectColumn.htm">SelectColumn</a>&gt; Deveel.Data.Sql.Parser.ExpressionBuilder.GetSelectColumns </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm">SqlQueryExpressionNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00162">162</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                                                                               {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">if</span> (node.IsAll) {</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span>[] {<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SelectColumn.htm">SelectColumn</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ae3792af713778beb017f2ed55e219e86">Reference</a>(<span class="keyword">new</span> ObjectName(<span class="stringliteral">&quot;*&quot;</span>)))};</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            var items = <span class="keyword">new</span> List&lt;SelectColumn&gt;();</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keywordflow">foreach</span> (var item <span class="keywordflow">in</span> node.SelectItems) {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> exp;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                <span class="keywordflow">if</span> (item.Name != null) {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                    exp = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ae3792af713778beb017f2ed55e219e86">Reference</a>(ObjectName.Parse(item.Name.Name));</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (item.Expression != null) {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                    exp = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>(item.Expression);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException();</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                <span class="keywordtype">string</span> alias = null;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                <span class="keywordflow">if</span> (item.Alias != null)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                    alias = item.Alias.Text;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                items.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SelectColumn.htm">SelectColumn</a>(exp, alias));</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <span class="keywordflow">return</span> items.ToArray();</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a17c231e2e2feab8bf0b534130086d072"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Deveel.Data.Sql.Parser.ExpressionBuilder.Build</a></div><div class="ttdeci">static SqlExpression Build(IExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00027">ExpressionBuilder.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SelectColumn_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SelectColumn.htm">Deveel.Data.Sql.Expressions.SelectColumn</a></div><div class="ttdoc">Represents a column selected to be in the output of a select statement. </div><div class="ttdef"><b>Definition:</b> <a href="SelectColumn_8cs_source.htm#l00031">SelectColumn.cs:31</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_ae3792af713778beb017f2ed55e219e86"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ae3792af713778beb017f2ed55e219e86">Deveel.Data.Sql.Expressions.SqlExpression.Reference</a></div><div class="ttdeci">static SqlReferenceExpression Reference(ObjectName objectName)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00284">SqlExpression.cs:284</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">Deveel.Data.Sql.Expressions.SqlExpression</a></div><div class="ttdoc">Defines the base class for instances that represent SQL expression tree nodes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00035">SqlExpression.cs:35</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac776eec4423e04c1fb294232c6fb7f88"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a> Deveel.Data.Sql.Parser.ExpressionBuilder.GetUnaryExpressionType </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>op</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00303">303</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                                                                           {</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;+&quot;</span>)</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.UnaryPlus;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;-&quot;</span>)</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Negate;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(op, <span class="stringliteral">&quot;NOT&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Not;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;The operator {0} is not a unary one.&quot;</span>, op));</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions_htm_a2cdcdc86afbc2d50cb1ec8e389598b4a"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">Deveel.Data.Sql.Expressions.SqlExpressionType</a></div><div class="ttdeci">SqlExpressionType</div><div class="ttdoc">All the possible type of SqlExpression supported </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpressionType_8cs_source.htm#l00023">SqlExpressionType.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae156d20cfeacf58f17be212fff1e8dd8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Sql.Parser.ExpressionBuilder.SetFromClause </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm">FromClause</a>&#160;</td>
          <td class="paramname"><em>clause</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromClauseNode.htm">FromClauseNode</a>&#160;</td>
          <td class="paramname"><em>node</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00158">158</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                                                                  {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ac3929f3d580d0e3c75f30630cf479712">SetFromTableInClause</a>(clause, node.Source, node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a5539305f5692f0f373b31ba5737b974f">Join</a>);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_a5539305f5692f0f373b31ba5737b974f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a5539305f5692f0f373b31ba5737b974f">Deveel.Data.Sql.Expressions.FromClause.Join</a></div><div class="ttdeci">void Join(JoinType joinType, SqlExpression onExpression)</div><div class="ttdoc">Sets a join between the last added table and the one that preceeds it. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00154">FromClause.cs:154</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_ac3929f3d580d0e3c75f30630cf479712"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ac3929f3d580d0e3c75f30630cf479712">Deveel.Data.Sql.Parser.ExpressionBuilder.SetFromTableInClause</a></div><div class="ttdeci">static void SetFromTableInClause(FromClause clause, IFromSourceNode source, JoinNode join)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00106">ExpressionBuilder.cs:106</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac3929f3d580d0e3c75f30630cf479712"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Sql.Parser.ExpressionBuilder.SetFromTableInClause </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm">FromClause</a>&#160;</td>
          <td class="paramname"><em>clause</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IFromSourceNode.htm">IFromSourceNode</a>&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode.htm">JoinNode</a>&#160;</td>
          <td class="paramname"><em>join</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00106">106</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                                                                                                           {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a5e82449d0a4488fb015460319d08801f">AddSourceToClause</a>(clause, source);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">if</span> (join != null) {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                var joinType = <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">JoinType</a>.Inner;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                <span class="keywordflow">if</span> (!<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.IsNullOrEmpty(join.JoinType))</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                    joinType = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a82f187b53f76eb66f1737f3be20b26d7">GetJoinType</a>(join.JoinType);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> onExpression = null;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                <span class="keywordflow">if</span> (join.OnExpression != null)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                    onExpression = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>(join.OnExpression);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                clause.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a5539305f5692f0f373b31ba5737b974f">Join</a>(joinType, onExpression);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ac3929f3d580d0e3c75f30630cf479712">SetFromTableInClause</a>(clause, join.Source, join.NextJoin);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a82f187b53f76eb66f1737f3be20b26d7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a82f187b53f76eb66f1737f3be20b26d7">Deveel.Data.Sql.Parser.ExpressionBuilder.GetJoinType</a></div><div class="ttdeci">static JoinType GetJoinType(string typeName)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00139">ExpressionBuilder.cs:139</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions_htm_adb07f7a341b1eda61ff53ddf48cfec81"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">Deveel.Data.Sql.Expressions.JoinType</a></div><div class="ttdeci">JoinType</div><div class="ttdoc">Enumerates the kind of group join in a selection query. </div><div class="ttdef"><b>Definition:</b> <a href="JoinType_8cs_source.htm#l00023">JoinType.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a17c231e2e2feab8bf0b534130086d072"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Deveel.Data.Sql.Parser.ExpressionBuilder.Build</a></div><div class="ttdeci">static SqlExpression Build(IExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00027">ExpressionBuilder.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_a5539305f5692f0f373b31ba5737b974f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a5539305f5692f0f373b31ba5737b974f">Deveel.Data.Sql.Expressions.FromClause.Join</a></div><div class="ttdeci">void Join(JoinType joinType, SqlExpression onExpression)</div><div class="ttdoc">Sets a join between the last added table and the one that preceeds it. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00154">FromClause.cs:154</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a5e82449d0a4488fb015460319d08801f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a5e82449d0a4488fb015460319d08801f">Deveel.Data.Sql.Parser.ExpressionBuilder.AddSourceToClause</a></div><div class="ttdeci">static void AddSourceToClause(FromClause clause, IFromSourceNode source)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00124">ExpressionBuilder.cs:124</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">Deveel.Data.Sql.Expressions.SqlExpression</a></div><div class="ttdoc">Defines the base class for instances that represent SQL expression tree nodes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00035">SqlExpression.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_ac3929f3d580d0e3c75f30630cf479712"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ac3929f3d580d0e3c75f30630cf479712">Deveel.Data.Sql.Parser.ExpressionBuilder.SetFromTableInClause</a></div><div class="ttdeci">static void SetFromTableInClause(FromClause clause, IFromSourceNode source, JoinNode join)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00106">ExpressionBuilder.cs:106</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3f457a5ac917694e1fc3405cce523457"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> Deveel.Data.Sql.Parser.ExpressionBuilder.VisitBetweenExpression </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode.htm">SqlBetweenExpressionNode</a>&#160;</td>
          <td class="paramname"><em>expressionNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00222">222</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                                                                                                     {</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            var testExp = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>(expressionNode.Expression);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            var minValue = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>(expressionNode.MinValue);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            var maxValue = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>(expressionNode.MaxValue);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            var smallerExp = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a19507f51f60edc055a06d588a1515a4d">SmallerOrEqualThan</a>(testExp, maxValue);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            var greaterExp = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a6160a8dfa2206e5bba032be177e5b769">GreaterOrEqualThan</a>(testExp, minValue);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> exp = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a190b32bbe269e178bb69866170e55441">And</a>(smallerExp, greaterExp);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keywordflow">if</span> (expressionNode.Not)</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                exp = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a1924d618a9bedd91fac16177086af7a4">Not</a>(exp);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            <span class="keywordflow">return</span> exp;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a190b32bbe269e178bb69866170e55441"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a190b32bbe269e178bb69866170e55441">Deveel.Data.Sql.Expressions.SqlExpression.And</a></div><div class="ttdeci">static SqlBinaryExpression And(SqlExpression left, SqlExpression right)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00393">SqlExpression.cs:393</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a19507f51f60edc055a06d588a1515a4d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a19507f51f60edc055a06d588a1515a4d">Deveel.Data.Sql.Expressions.SqlExpression.SmallerOrEqualThan</a></div><div class="ttdeci">static SqlBinaryExpression SmallerOrEqualThan(SqlExpression left, SqlExpression right)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00369">SqlExpression.cs:369</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a17c231e2e2feab8bf0b534130086d072"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Deveel.Data.Sql.Parser.ExpressionBuilder.Build</a></div><div class="ttdeci">static SqlExpression Build(IExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00027">ExpressionBuilder.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a1924d618a9bedd91fac16177086af7a4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a1924d618a9bedd91fac16177086af7a4">Deveel.Data.Sql.Expressions.SqlExpression.Not</a></div><div class="ttdeci">static SqlUnaryExpression Not(SqlExpression operand)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00534">SqlExpression.cs:534</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">Deveel.Data.Sql.Expressions.SqlExpression</a></div><div class="ttdoc">Defines the base class for instances that represent SQL expression tree nodes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00035">SqlExpression.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a6160a8dfa2206e5bba032be177e5b769"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a6160a8dfa2206e5bba032be177e5b769">Deveel.Data.Sql.Expressions.SqlExpression.GreaterOrEqualThan</a></div><div class="ttdeci">static SqlBinaryExpression GreaterOrEqualThan(SqlExpression left, SqlExpression right)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00373">SqlExpression.cs:373</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a193abdb690da82103291812dff537615"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> Deveel.Data.Sql.Parser.ExpressionBuilder.VisitBinaryExpression </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm">SqlBinaryExpressionNode</a>&#160;</td>
          <td class="paramname"><em>expressionNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00238">238</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                                                                                                   {</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            var left = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>(expressionNode.Left);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            var right = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>(expressionNode.Right);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            var op = expressionNode.Operator;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            var expType = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a6c50824c8850b0a8c4f0e6ca70d447cc">GetBinaryExpressionType</a>(op);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ad5bd15eb16058f78c184625a44fffde8">Binary</a>(left, expType, right);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a17c231e2e2feab8bf0b534130086d072"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Deveel.Data.Sql.Parser.ExpressionBuilder.Build</a></div><div class="ttdeci">static SqlExpression Build(IExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00027">ExpressionBuilder.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_ad5bd15eb16058f78c184625a44fffde8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ad5bd15eb16058f78c184625a44fffde8">Deveel.Data.Sql.Expressions.SqlExpression.Binary</a></div><div class="ttdeci">static SqlBinaryExpression Binary(SqlExpression left, SqlExpressionType expressionType, SqlExpression right)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00304">SqlExpression.cs:304</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a6c50824c8850b0a8c4f0e6ca70d447cc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a6c50824c8850b0a8c4f0e6ca70d447cc">Deveel.Data.Sql.Parser.ExpressionBuilder.GetBinaryExpressionType</a></div><div class="ttdeci">static SqlExpressionType GetBinaryExpressionType(string op)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00248">ExpressionBuilder.cs:248</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">Deveel.Data.Sql.Expressions.SqlExpression</a></div><div class="ttdoc">Defines the base class for instances that represent SQL expression tree nodes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00035">SqlExpression.cs:35</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aec6126d6fa502f1c14f684dc238cf3de"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> Deveel.Data.Sql.Parser.ExpressionBuilder.VisitCaseExpression </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlCaseExpressionNode.htm">SqlCaseExpressionNode</a>&#160;</td>
          <td class="paramname"><em>expressionNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00188">188</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                                                                                               {</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a8e950a554c604a3dd8b2206aef88ffa8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> Deveel.Data.Sql.Parser.ExpressionBuilder.VisitConstantExpression </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlConstantExpressionNode.htm">SqlConstantExpressionNode</a>&#160;</td>
          <td class="paramname"><em>expressionNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00192">192</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                                                                                                       {</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            var sqlValue = expressionNode.Value;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            DataObject obj;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">if</span> (sqlValue is <a class="code" href="namespaceSqlString.htm">SqlString</a>) {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                obj = DataObject.VarChar((SqlString) sqlValue);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (sqlValue is <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>) {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                obj = DataObject.Boolean((SqlBoolean) sqlValue);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (sqlValue is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                obj = DataObject.Number((SqlNumber) sqlValue);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (sqlValue is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>) { </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                obj = DataObject.Null();</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<span class="stringliteral">&quot;Constant value not supported.&quot;</span>);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            }</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a78749d3e57bb42c82189114d3c0887c8">Constant</a>(obj);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="namespaceSqlString_htm"><div class="ttname"><a href="namespaceSqlString.htm">SqlString</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">Deveel.Data.Sql.Expressions.SqlExpression</a></div><div class="ttdoc">Defines the base class for instances that represent SQL expression tree nodes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00035">SqlExpression.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a78749d3e57bb42c82189114d3c0887c8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a78749d3e57bb42c82189114d3c0887c8">Deveel.Data.Sql.Expressions.SqlExpression.Constant</a></div><div class="ttdeci">static SqlConstantExpression Constant(object value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00256">SqlExpression.cs:256</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">Deveel.Data.Sql.Objects.SqlNumber</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00024">SqlNumber.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa1d7779eb8a8066b7295d92a32926dd6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> Deveel.Data.Sql.Parser.ExpressionBuilder.VisitFunctionCall </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlFunctionCallExpressionNode.htm">SqlFunctionCallExpressionNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00214">214</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                                                                           {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            var args = <span class="keyword">new</span> List&lt;SqlExpression&gt;();</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keywordflow">if</span> (node.Arguments != null)</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                args.AddRange(node.Arguments.Select(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>));</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a36c8e682aa362e44b316c8797f3f9564">FunctionCall</a>(node.FunctionName, args.ToArray());</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a17c231e2e2feab8bf0b534130086d072"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Deveel.Data.Sql.Parser.ExpressionBuilder.Build</a></div><div class="ttdeci">static SqlExpression Build(IExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00027">ExpressionBuilder.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">Deveel.Data.Sql.Expressions.SqlExpression</a></div><div class="ttdoc">Defines the base class for instances that represent SQL expression tree nodes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00035">SqlExpression.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a36c8e682aa362e44b316c8797f3f9564"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a36c8e682aa362e44b316c8797f3f9564">Deveel.Data.Sql.Expressions.SqlExpression.FunctionCall</a></div><div class="ttdeci">static SqlFunctionCallExpression FunctionCall(ObjectName functionName)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00268">SqlExpression.cs:268</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2f7897cf019eeeec668e2a6acc0c8d0a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> Deveel.Data.Sql.Parser.ExpressionBuilder.VisitQueryExpression </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm">SqlQueryExpressionNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00060">60</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                                                                       {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            var selectColumns = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a8740fdd085bf4075243cfaffd4b48a33">GetSelectColumns</a>(node);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            var exp = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">SqlQueryExpression</a>(selectColumns);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordflow">if</span> (node.FromClause != null) {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ae156d20cfeacf58f17be212fff1e8dd8">SetFromClause</a>(exp.FromClause, node.FromClause);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            <span class="keywordflow">if</span> (node.WhereExpression != null) {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                exp.WhereExpression = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>(node.WhereExpression);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keywordflow">if</span> (node.GroupBy != null) {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                var groupBy = <span class="keyword">new</span> List&lt;SqlExpression&gt;();</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                <span class="keywordflow">if</span> (node.GroupBy.GroupExpressions != null)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    groupBy.AddRange(node.GroupBy.GroupExpressions.Select(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>));</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                exp.GroupBy = groupBy.ToList();</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                var having = node.GroupBy.HavingExpression;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="keywordflow">if</span> (having != null)</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                    exp.HavingExpression = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>(having);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">if</span> (node.Composite != null) {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                var compositeExp = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>(node.Composite.QueryExpression);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                exp.NextComposite = compositeExp as <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">SqlQueryExpression</a>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                exp.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm#ac7cbbc395bfc2dffe1a492c0cafaf062">IsCompositeAll</a> = node.Composite.IsAll;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                exp.CompositeFunction = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a5a2aa67765ef6439df4c9362e30be804">GetCompositeFunction</a>(node.Composite.CompositeFunction);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keywordflow">return</span> exp;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a8740fdd085bf4075243cfaffd4b48a33"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a8740fdd085bf4075243cfaffd4b48a33">Deveel.Data.Sql.Parser.ExpressionBuilder.GetSelectColumns</a></div><div class="ttdeci">static IEnumerable&lt; SelectColumn &gt; GetSelectColumns(SqlQueryExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00162">ExpressionBuilder.cs:162</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a5a2aa67765ef6439df4c9362e30be804"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a5a2aa67765ef6439df4c9362e30be804">Deveel.Data.Sql.Parser.ExpressionBuilder.GetCompositeFunction</a></div><div class="ttdeci">static CompositeFunction GetCompositeFunction(string s)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00095">ExpressionBuilder.cs:95</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a17c231e2e2feab8bf0b534130086d072"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Deveel.Data.Sql.Parser.ExpressionBuilder.Build</a></div><div class="ttdeci">static SqlExpression Build(IExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00027">ExpressionBuilder.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression_htm_ac7cbbc395bfc2dffe1a492c0cafaf062"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm#ac7cbbc395bfc2dffe1a492c0cafaf062">Deveel.Data.Sql.Expressions.SqlQueryExpression.IsCompositeAll</a></div><div class="ttdeci">bool IsCompositeAll</div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpression_8cs_source.htm#l00073">SqlQueryExpression.cs:73</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_ae156d20cfeacf58f17be212fff1e8dd8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ae156d20cfeacf58f17be212fff1e8dd8">Deveel.Data.Sql.Parser.ExpressionBuilder.SetFromClause</a></div><div class="ttdeci">static void SetFromClause(FromClause clause, FromClauseNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00158">ExpressionBuilder.cs:158</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">Deveel.Data.Sql.Expressions.SqlQueryExpression</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpression_8cs_source.htm#l00025">SqlQueryExpression.cs:25</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a75b7fbda8ff8139acd1df3407537de4d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> Deveel.Data.Sql.Parser.ExpressionBuilder.VisitReferenceExpression </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlReferenceExpressionNode.htm">SqlReferenceExpressionNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00210">210</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                                                                                               {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ae3792af713778beb017f2ed55e219e86">Reference</a>(ObjectName.Parse(node.Reference.Name));</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_ae3792af713778beb017f2ed55e219e86"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ae3792af713778beb017f2ed55e219e86">Deveel.Data.Sql.Expressions.SqlExpression.Reference</a></div><div class="ttdeci">static SqlReferenceExpression Reference(ObjectName objectName)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00284">SqlExpression.cs:284</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">Deveel.Data.Sql.Expressions.SqlExpression</a></div><div class="ttdoc">Defines the base class for instances that represent SQL expression tree nodes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00035">SqlExpression.cs:35</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ada34a553b42bf992671bf261127212cb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> Deveel.Data.Sql.Parser.ExpressionBuilder.VisitTupleExpression </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlExpressionTupleNode.htm">SqlExpressionTupleNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00056">56</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                                                                       {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a39a249665c09f3eb9a52a7adc6c2ff6a">Tuple</a>(node.Expressions.Select(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>).ToArray());</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a17c231e2e2feab8bf0b534130086d072"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Deveel.Data.Sql.Parser.ExpressionBuilder.Build</a></div><div class="ttdeci">static SqlExpression Build(IExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00027">ExpressionBuilder.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a39a249665c09f3eb9a52a7adc6c2ff6a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a39a249665c09f3eb9a52a7adc6c2ff6a">Deveel.Data.Sql.Expressions.SqlExpression.Tuple</a></div><div class="ttdeci">static SqlTupleExpression Tuple(SqlExpression[] expressions)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00553">SqlExpression.cs:553</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">Deveel.Data.Sql.Expressions.SqlExpression</a></div><div class="ttdoc">Defines the base class for instances that represent SQL expression tree nodes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00035">SqlExpression.cs:35</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa6037e0d8ca8c53ee2935290e7b79263"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> Deveel.Data.Sql.Parser.ExpressionBuilder.VisitUnaryExpression </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlUnaryExpressionNode.htm">SqlUnaryExpressionNode</a>&#160;</td>
          <td class="paramname"><em>expressionNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00296">296</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                                                                                                 {</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            var expressionType = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ac776eec4423e04c1fb294232c6fb7f88">GetUnaryExpressionType</a>(expressionNode.Operator);</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            var operand = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>(expressionNode.Operand);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a018364702d4130a75ffe5a1d046e8f29">Unary</a>(expressionType, operand);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_ac776eec4423e04c1fb294232c6fb7f88"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ac776eec4423e04c1fb294232c6fb7f88">Deveel.Data.Sql.Parser.ExpressionBuilder.GetUnaryExpressionType</a></div><div class="ttdeci">static SqlExpressionType GetUnaryExpressionType(string op)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00303">ExpressionBuilder.cs:303</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a17c231e2e2feab8bf0b534130086d072"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Deveel.Data.Sql.Parser.ExpressionBuilder.Build</a></div><div class="ttdeci">static SqlExpression Build(IExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00027">ExpressionBuilder.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">Deveel.Data.Sql.Expressions.SqlExpression</a></div><div class="ttdoc">Defines the base class for instances that represent SQL expression tree nodes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00035">SqlExpression.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a018364702d4130a75ffe5a1d046e8f29"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a018364702d4130a75ffe5a1d046e8f29">Deveel.Data.Sql.Expressions.SqlExpression.Unary</a></div><div class="ttdeci">static SqlUnaryExpression Unary(SqlExpressionType expressionType, SqlExpression operand)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00523">SqlExpression.cs:523</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4b8fca0349dd8ec2ff489ab0f6058e57"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> Deveel.Data.Sql.Parser.ExpressionBuilder.VisitVariableRefExpression </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlVariableRefExpressionNode.htm">SqlVariableRefExpressionNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExpressionBuilder_8cs_source.htm#l00052">52</a> of file <a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                                                                                   {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ad70966bc00c62ca478374e07d8fb895b">VariableReference</a>(node.Variable);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_ad70966bc00c62ca478374e07d8fb895b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ad70966bc00c62ca478374e07d8fb895b">Deveel.Data.Sql.Expressions.SqlExpression.VariableReference</a></div><div class="ttdeci">static SqlVariableReferenceExpression VariableReference(string varName)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00288">SqlExpression.cs:288</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">Deveel.Data.Sql.Expressions.SqlExpression</a></div><div class="ttdoc">Defines the base class for instances that represent SQL expression tree nodes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00035">SqlExpression.cs:35</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Parser/<a class="el" href="ExpressionBuilder_8cs_source.htm">ExpressionBuilder.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
