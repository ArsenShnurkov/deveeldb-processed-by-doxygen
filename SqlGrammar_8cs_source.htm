<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Parser/SqlGrammar.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_f0ea0b9ea9aae2e0e9b9dfca26eb78a8.htm">Deveel.Data.Sql.Parser</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">SqlGrammar.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="SqlGrammar_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.ComponentModel;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceIrony.htm">Irony</a>.Parsing;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Sql.Parser {</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm">   22</a></span>&#160;    <span class="keyword">partial class </span><a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm">SqlGrammar</a> : <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammarBase.htm">SqlGrammarBase</a> {</div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ac191cd24d8ea18a905a0867a2dae89ab">   23</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">string</span> Dialect {</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> <span class="stringliteral">&quot;SQL-99&quot;</span>; }</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        }</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a83d9e1f677c22889ee1ec78a1f3eb231">   27</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">override</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a83d9e1f677c22889ee1ec78a1f3eb231">MakeRoot</a>() {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            var root = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;root&quot;</span>);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            Productions(root);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            <span class="keywordflow">return</span> root;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        }</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ae0f0cfd41529b514f808271c2f959aaf">   34</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ae0f0cfd41529b514f808271c2f959aaf">Productions</a>(NonTerminal root) {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <span class="comment">// PL/SQL</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            var block = PlSqlBlock();</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            var blockList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;block_list&quot;</span>);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            blockList.Rule = MakePlusRule(blockList, block);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            root.Rule = SqlStatementList() + Eof | </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                blockList + Eof;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        }</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ac6136efb8667ac5640e218ffa9b36ec9">   44</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ac6136efb8667ac5640e218ffa9b36ec9">StatementEnd</a>() {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            var statementEnd = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;statement_end&quot;</span>);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            statementEnd.Rule = Empty | <span class="stringliteral">&quot;;&quot;</span>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <span class="keywordflow">return</span> statementEnd;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        }</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#adf06b473ba35525064a77b9e049fb156">   50</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#adf06b473ba35525064a77b9e049fb156">OrReplace</a>() {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            var orReplaceOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;or_replace_opt&quot;</span>);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            orReplaceOpt.Rule = Empty | OR + REPLACE;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="keywordflow">return</span> orReplaceOpt;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        }</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a6b02393c373eaf13a941c012a83367c7">   56</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a6b02393c373eaf13a941c012a83367c7">SqlStatementList</a>() {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            var commandList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;command_list&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SequenceOfStatementsNode.htm">SequenceOfStatementsNode</a>));</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            commandList.Rule = MakePlusRule(commandList, SqlStatement());</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keywordflow">return</span> commandList;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a452096a01155ec85f21287cfecac7291">   64</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a452096a01155ec85f21287cfecac7291">SqlStatement</a>() {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            var sqlStatement = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;sql_statement&quot;</span>);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            var command = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;command&quot;</span>);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            sqlStatement.Rule = command + StatementEnd();</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            command.Rule =</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                VariableDeclaration() |</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                Create() |</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                Alter() |</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                Drop() |</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                Declare() |</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                Open() |</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                Close() |</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                Fetch() |</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                Select() |</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                CursorDeclaration() |</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                Insert() |</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                Update() |</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                Delete() |</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                Truncate() |</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                Set() |</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                Commit() |</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                Rollback() |</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                Grant() |</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                Revoke();</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keywordflow">return</span> sqlStatement;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#abef0ce71f6c6cdfdf821b1bdd194ac7b">   95</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#abef0ce71f6c6cdfdf821b1bdd194ac7b">Declare</a>() {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            var command = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;declare&quot;</span>);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            command.Rule = DeclareCursor() |</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                           DeclareVariable() |</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                           DeclareException();</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">return</span> command;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ab16189d9fb71f988aad5891398dbaf52">  105</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ab16189d9fb71f988aad5891398dbaf52">CursorDeclaration</a>() {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            var declareCursor = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;cursor_declaration&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DeclareCursorNode.htm">DeclareCursorNode</a>));</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            var insensitiveOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;insensitive_opt&quot;</span>);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            var scrollOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;scroll_opt&quot;</span>);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            var cursorArgsOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;cursor_args_opt&quot;</span>);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            var cursorArgs = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;cursor_args&quot;</span>);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            var cursorArg = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;cursor_arg&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CursorParameterNode.htm">CursorParameterNode</a>));</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            declareCursor.Rule = Key(<span class="stringliteral">&quot;CURSOR&quot;</span>) + Identifier + cursorArgsOpt + </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                insensitiveOpt + scrollOpt +</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                Key(<span class="stringliteral">&quot;IS&quot;</span>) + SqlQueryExpression();</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            cursorArgsOpt.Rule = Empty | <span class="stringliteral">&quot;(&quot;</span> + cursorArgs + <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            cursorArgs.Rule = MakePlusRule(cursorArgs, Comma, cursorArg);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            cursorArg.Rule = Identifier + DataType();</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            insensitiveOpt.Rule = Empty | Key(<span class="stringliteral">&quot;INSENSITIVE&quot;</span>);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            scrollOpt.Rule = Empty | Key(<span class="stringliteral">&quot;SCROLL&quot;</span>);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="keywordflow">return</span> declareCursor;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a644d4062381cac0c4dc71a720fea2a34">  123</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a644d4062381cac0c4dc71a720fea2a34">DeclareCursor</a>() {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            var declareCuror = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;declare_cursor&quot;</span>);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            declareCuror.Rule = Key(<span class="stringliteral">&quot;DECLARE&quot;</span>) + CursorDeclaration();</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">return</span> declareCuror;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a985ca89a8ca7606a6608059e8f5a6fc3">  129</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a985ca89a8ca7606a6608059e8f5a6fc3">VariableDeclaration</a>() {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            var declareVariable = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;variable_declaration&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DeclareVariableNode.htm">DeclareVariableNode</a>));</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            var constantOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;constant_opt&quot;</span>);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            var varNotNullOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;var_not_null_opt&quot;</span>);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            var varDefaultOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;var_default_opt&quot;</span>);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            var varDefaultAssign = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;var_default_assign&quot;</span>);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            declareVariable.Rule = Identifier + constantOpt + DataType() + varNotNullOpt + varDefaultOpt;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            constantOpt.Rule = Empty | Key(<span class="stringliteral">&quot;CONSTANT&quot;</span>);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            varNotNullOpt.Rule = Empty | Key(<span class="stringliteral">&quot;NOT&quot;</span>) + Key(<span class="stringliteral">&quot;NULL&quot;</span>);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            varDefaultOpt.Rule = Empty | varDefaultAssign + SqlExpression();</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            varDefaultAssign.Rule = <span class="stringliteral">&quot;:=&quot;</span> | Key(<span class="stringliteral">&quot;DEFAULT&quot;</span>);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <span class="keywordflow">return</span> declareVariable;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a85fbb53a0130de22d589230c8663e81d">  145</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a85fbb53a0130de22d589230c8663e81d">ExceptionDeclaration</a>() {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            var declareException = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;exception_declaration&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DeclareExceptionNode.htm">DeclareExceptionNode</a>));</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            declareException.Rule = Identifier + Key(<span class="stringliteral">&quot;EXCEPTION&quot;</span>);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keywordflow">return</span> declareException;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aefd31ec0644fceb5f4391beb3679bb60">  151</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aefd31ec0644fceb5f4391beb3679bb60">DeclareException</a>() {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            var command = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;declare_exception&quot;</span>);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            command.Rule = Key(<span class="stringliteral">&quot;DECLARE&quot;</span>) + ExceptionDeclaration();</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <span class="keywordflow">return</span> command;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        }</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a9b05d192242405f2b670ee543c243b54">  157</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a9b05d192242405f2b670ee543c243b54">DeclareVariable</a>() {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            var declareVariable = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;declare_variable&quot;</span>);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            declareVariable.Rule = Key(<span class="stringliteral">&quot;DECLARE&quot;</span>) + VariableDeclaration();</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keywordflow">return</span> declareVariable;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ad6395687910613431eda953d800fcf7c">  163</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ad6395687910613431eda953d800fcf7c">Open</a>() {</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            var openCommand = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;open_command&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1OpenCursorStatementNode.htm">OpenCursorStatementNode</a>));</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            var argsOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;args_opt&quot;</span>);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            var argList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;arg_list&quot;</span>);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            openCommand.Rule = Key(<span class="stringliteral">&quot;OPEN&quot;</span>) + Identifier + argsOpt;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            argsOpt.Rule = Empty | <span class="stringliteral">&quot;(&quot;</span> + argList + <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            argList.Rule = MakePlusRule(argList, Comma, SqlExpression());</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keywordflow">return</span> openCommand;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aff0290632b442f5e997af210b432405f">  174</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aff0290632b442f5e997af210b432405f">Close</a>() {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            var closeCommand = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;close_command&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CloseCursorStatementNode.htm">CloseCursorStatementNode</a>));</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            closeCommand.Rule = Key(<span class="stringliteral">&quot;CLOSE&quot;</span>) + Identifier;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <span class="keywordflow">return</span> closeCommand;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        }</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div>
<div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a4bb6959237158da3b7e450a78897150e">  180</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a4bb6959237158da3b7e450a78897150e">Fetch</a>() {</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            var fetchCommand=<span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;fetch_command&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FetchStatementNode.htm">FetchStatementNode</a>));</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            var directionOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;direction_opt&quot;</span>);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            var fetchDirection = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;fetch_direction&quot;</span>);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            var identOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;ident_opt&quot;</span>);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            identOpt.Flags = TermFlags.IsTransient;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            var fromOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;from_opt&quot;</span>);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            var intoOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;into_opt&quot;</span>);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            fetchCommand.Rule = Key(<span class="stringliteral">&quot;FETCH&quot;</span>) + directionOpt + fromOpt + identOpt + intoOpt;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            directionOpt.Rule = Empty | fetchDirection;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            identOpt.Rule = Empty | Identifier;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            fetchDirection.Rule = Key(<span class="stringliteral">&quot;NEXT&quot;</span>) |</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                                  Key(<span class="stringliteral">&quot;PRIOR&quot;</span>) |</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                                  Key(<span class="stringliteral">&quot;FIRST&quot;</span>) |</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                                  Key(<span class="stringliteral">&quot;LAST&quot;</span>) |</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                  Key(<span class="stringliteral">&quot;ABSOLUTE&quot;</span>) + SqlExpression() |</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                                  Key(<span class="stringliteral">&quot;RELATIVE&quot;</span>) + SqlExpression();</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            fromOpt.Rule = Empty | Key(<span class="stringliteral">&quot;FROM&quot;</span>);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            intoOpt.Rule = Empty | Key(<span class="stringliteral">&quot;INTO&quot;</span>) + SqlExpression();</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            <span class="keywordflow">return</span> fetchCommand;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div>
<div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#abf69bbd06d159b796af110d3dd1ed583">  203</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#abf69bbd06d159b796af110d3dd1ed583">NestedSqlStatement</a>() {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            var sqlStatement = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;sql_statement&quot;</span>);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            sqlStatement.Rule = Select() |</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                    Insert() |</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                    Update() |</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                    Delete() |</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                    Open() |</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                    Close() |</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                    Fetch() |</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                    Commit() |</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                    Set() |</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                    Rollback();</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="keywordflow">return</span> sqlStatement;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        }</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div>
<div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a8d54040ede2afae1549921315c80cc76">  220</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a8d54040ede2afae1549921315c80cc76">PlSqlBlock</a>() {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            var plsqlBlock = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;plsql_block&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1PlSqlBlockNode.htm">PlSqlBlockNode</a>));</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            var labelStatement = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;plsql_label&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1LabelNode.htm">LabelNode</a>));</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            var labelStatementOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;plsql_label_opt&quot;</span>);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            var declareStatementOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;declare_statement_opt&quot;</span>);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            var declareSpec = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;declare_spec&quot;</span>);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            var declareCommand = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;declare_command&quot;</span>);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            var declareSpecList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;declare_spec_list&quot;</span>);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            var plsqlCodeBlock = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;plsql_code_block&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1PlSqlCodeBlockNode.htm">PlSqlCodeBlockNode</a>));</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            var sqlStatementList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;sql_statement_list&quot;</span>);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            var declarePragma = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;declare_pragma&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DeclarePragmaNode.htm">DeclarePragmaNode</a>));</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            var exceptionBlockOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;exception_block_opt&quot;</span>);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            var exceptionBlock = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;exception_block&quot;</span>);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            var exceptionHandler = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;exception_handler&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExceptionHandlerNode.htm">ExceptionHandlerNode</a>));</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            var exceptionHandlerList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;exception_handler_list&quot;</span>);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            var exceptionNames = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;exception_names&quot;</span>);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            var handledExceptions = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;handled_exceptions&quot;</span>);</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            var whenOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;when_opt&quot;</span>);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            whenOpt.Rule = Empty | Key(<span class="stringliteral">&quot;WHEN&quot;</span>) + SqlExpression();</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="preprocessor">            #region PL/SQL Statement</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            var plsqlStatement = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;plsql_statement&quot;</span>);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            var plsqlCommand = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;plsql_command&quot;</span>);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            var plsqlStatementList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;plsql_statement_list&quot;</span>);</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            plsqlStatementList.Rule = MakePlusRule(plsqlStatementList, plsqlStatement);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="preprocessor">            #region Conditional</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            var conditionalStatement = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;conditional_statement&quot;</span>);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            var conditionalElsifList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;conditional_elsif_list&quot;</span>);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            var conditionalElsif = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;conditional_elsif&quot;</span>);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            var conditionalElseOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;conditional_else_opt&quot;</span>);</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            conditionalStatement.Rule = IF + SqlExpression() + THEN + plsqlStatementList +</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                                        conditionalElsifList +</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                                        conditionalElseOpt +</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                                        END + IF;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            conditionalElsifList.Rule = MakeStarRule(conditionalElsifList, conditionalElsif);</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            conditionalElsif.Rule = ELSIF + SqlExpression() + THEN + plsqlStatementList;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            conditionalElseOpt.Rule = Empty | ELSE + plsqlStatementList;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="preprocessor">            #endregion</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="preprocessor">            #region Loop</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            var loopStatement = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;loop_statement&quot;</span>);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            var loopLabelOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;loop_label_opt&quot;</span>);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            var loopHeadOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;loop_head_opt&quot;</span>);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            var loopHead = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;loop_head&quot;</span>);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            var whileLoop = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;while_loop&quot;</span>);</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            var forLoop = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;for_loop&quot;</span>);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            var numericLoopParam = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;numeric_loop_param&quot;</span>);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            var reverseOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;reverse_opt&quot;</span>);</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            var forLoopParam = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;for_loop_param&quot;</span>);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            var cursorLoopParam = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;cursor_loop_param&quot;</span>);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            var loopBodyList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;loop_body_list&quot;</span>);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            var loopBody = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;loop_body&quot;</span>);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            var loopControlStatement = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;loop_control_statement&quot;</span>);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            var labelOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;label_opt&quot;</span>);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            labelOpt.Rule = Empty | Identifier;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="preprocessor">            #region Exit</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            var exitStatement = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;exit_statement&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExitStatementNode.htm">ExitStatementNode</a>));</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            exitStatement.Rule = Key(<span class="stringliteral">&quot;EXIT&quot;</span>) + labelOpt + whenOpt + StatementEnd();</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="preprocessor">            #endregion</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="preprocessor">            #region Break</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            var breakStatement = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;break_statement&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1BreakStatementNode.htm">BreakStatementNode</a>));</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            breakStatement.Rule = Key(<span class="stringliteral">&quot;BREAK&quot;</span>) + labelOpt + whenOpt + StatementEnd();</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="preprocessor">            #endregion</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="preprocessor">            #region Continue</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            var continueStatement = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;continue_statement&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ContinueStatementNode.htm">ContinueStatementNode</a>));</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            continueStatement.Rule = Key(<span class="stringliteral">&quot;CONTINUE&quot;</span>) + labelOpt + whenOpt + StatementEnd();</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="preprocessor">            #endregion</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            loopStatement.Rule = loopLabelOpt + loopHeadOpt + Key(<span class="stringliteral">&quot;LOOP&quot;</span>) + loopBodyList + Key(<span class="stringliteral">&quot;LOOP&quot;</span>) + Key(<span class="stringliteral">&quot;END&quot;</span>);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            loopLabelOpt.Rule = Empty | Identifier;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            loopBody.Rule = plsqlStatement | loopControlStatement;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            loopBodyList.Rule = MakePlusRule(loopBodyList, loopBody);</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            loopControlStatement.Rule = exitStatement |</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                                        breakStatement |</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                                        continueStatement;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            loopHeadOpt.Rule = Empty | loopHead;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            loopHead.Rule = whileLoop | forLoop;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            whileLoop.Rule = Key(<span class="stringliteral">&quot;WHILE&quot;</span>) + SqlExpression();</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            forLoop.Rule = Key(<span class="stringliteral">&quot;FOR&quot;</span>) + forLoopParam;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            forLoopParam.Rule = numericLoopParam | cursorLoopParam;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            numericLoopParam.Rule = Identifier + Key(<span class="stringliteral">&quot;IN&quot;</span>) + reverseOpt + SqlExpression() + <span class="stringliteral">&quot;..&quot;</span> + SqlExpression();</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            reverseOpt.Rule = Empty | Key(<span class="stringliteral">&quot;REVERSE&quot;</span>);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            cursorLoopParam.Rule = Identifier + Key(<span class="stringliteral">&quot;IN&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>();</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="preprocessor">            #endregion</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="preprocessor">            #region Raise</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            var raiseStatement = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;raise_statement&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1RaiseStatementNode.htm">RaiseStatementNode</a>));</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            var exceptionNameOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;exception_name_opt&quot;</span>);</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;            raiseStatement.Rule = Key(<span class="stringliteral">&quot;RAISE&quot;</span>) + exceptionNameOpt;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            exceptionNameOpt.Rule = Empty | Identifier;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="preprocessor">            #endregion</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="preprocessor">            #region Return</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            var returnStatement = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;return_statement&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ReturnStatementNode.htm">ReturnStatementNode</a>));</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            returnStatement.Rule = Key(<span class="stringliteral">&quot;RETURN&quot;</span>) + SqlExpression();</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="preprocessor">            #endregion</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="preprocessor">            #region GoTo</span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            var gotoStatement = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;goto_statement&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GotoStatementNode.htm">GotoStatementNode</a>));</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            gotoStatement.Rule = Key(<span class="stringliteral">&quot;GOTO&quot;</span>) + StringLiteral;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="preprocessor">            #endregion</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            plsqlStatement.Rule = plsqlCommand + StatementEnd();</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            plsqlCommand.Rule = NestedSqlStatement() |</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                                gotoStatement |</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                                returnStatement |</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                                raiseStatement |</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                                loopStatement |</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                                conditionalStatement;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="preprocessor">            #endregion</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            plsqlBlock.Rule = labelStatementOpt + declareStatementOpt + plsqlCodeBlock;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            labelStatementOpt.Rule = Empty | labelStatement;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            labelStatement.Rule = <span class="stringliteral">&quot;&lt;&lt;&quot;</span> + Identifier + <span class="stringliteral">&quot;&gt;&gt;&quot;</span>;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            declareStatementOpt.Rule = Empty | DECLARE + declareSpecList;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            declareSpecList.Rule = MakePlusRule(declareSpecList, declareSpec);</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            declareCommand.Rule = VariableDeclaration() |</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                                  ExceptionDeclaration() |</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                                  declarePragma |</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                                  CursorDeclaration();</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            declareSpec.Rule = declareCommand + StatementEnd();</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            declarePragma.Rule = Key(<span class="stringliteral">&quot;PRAGMA&quot;</span>) + Key(<span class="stringliteral">&quot;EXCEPTION_INIT&quot;</span>) + <span class="stringliteral">&quot;(&quot;</span> + StringLiteral + <span class="stringliteral">&quot;,&quot;</span> + PositiveLiteral + <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            plsqlCodeBlock.Rule = Key(<span class="stringliteral">&quot;BEGIN&quot;</span>) + plsqlStatementList + exceptionBlockOpt + Key(<span class="stringliteral">&quot;END&quot;</span>);</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;            sqlStatementList.Rule = MakePlusRule(sqlStatementList, NestedSqlStatement());</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            exceptionBlockOpt.Rule = Empty | exceptionBlock;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            exceptionBlock.Rule = Key(<span class="stringliteral">&quot;EXCEPTION&quot;</span>) + exceptionHandlerList;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            exceptionHandlerList.Rule = MakePlusRule(exceptionHandlerList, exceptionHandler);</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            exceptionHandler.Rule = Key(<span class="stringliteral">&quot;WHEN&quot;</span>) + handledExceptions + Key(<span class="stringliteral">&quot;THEN&quot;</span>) + plsqlStatementList;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            handledExceptions.Rule = Key(<span class="stringliteral">&quot;OTHERS&quot;</span>) | exceptionNames;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            exceptionNames.Rule = MakePlusRule(exceptionNames, OR, Identifier);</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            <span class="keywordflow">return</span> plsqlBlock;</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        }</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="preprocessor">        #region CREATE ...</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div>
<div class="line"><a name="l00388"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a02fbda51f4ae5289ffff9f3fddd57680">  388</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a02fbda51f4ae5289ffff9f3fddd57680">Create</a>() {</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            var createCommand = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;create_command&quot;</span>);</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="comment">// -- CREATE</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            createCommand.Rule = CreateSchema() |</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                                  CreateTable() |</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                                  CreateView() |</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                                  CreateIndex() |</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                                  CreateSequence() |</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                                  CreateTrigger() |</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                                  CreateUser() |</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                                  CreateType();</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            <span class="keywordflow">return</span> createCommand;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        }</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div>
<div class="line"><a name="l00404"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aefca5d008206d58b0961be150c3a77c5">  404</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aefca5d008206d58b0961be150c3a77c5">CreateTable</a>() {</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            var createTable = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;create_table&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateTableNode.htm">CreateTableNode</a>));</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            var ifNotExistsOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;if_not_exists_opt&quot;</span>);</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            var temporaryOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;temporary_opt&quot;</span>);</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            var columnOrConstraintList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_or_constraint_list&quot;</span>);</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            var columnOrConstraint = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_or_constraint&quot;</span>);</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            var tableColumn = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;table_column&quot;</span>, typeof (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1TableColumnNode.htm">TableColumnNode</a>));</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            var columnDefaultOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_default_opt&quot;</span>);</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            var columnIdentityOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_identity_opt&quot;</span>);</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;            var columnConstraintList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_constraint_list&quot;</span>);</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;            var columnConstraint = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_constraint&quot;</span>, typeof (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ColumnConstraintNode.htm">ColumnConstraintNode</a>));</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;            var columnConstraintRefOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_constraint_ref_opt&quot;</span>);</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            var fkeyActionList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;fkey_action_list&quot;</span>);</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;            var fkeyAction = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;fkey_action&quot;</span>);</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            var fkeyActionType = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;fkey_action_type&quot;</span>);</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            var tableConstraint = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;table_constraint&quot;</span>, typeof (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1TableConstraintNode.htm">TableConstraintNode</a>));</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            var constraintName = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;constraint_name&quot;</span>);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;            var tableConstraintNameOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;table_constraint_name_opt&quot;</span>);</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            var defTableConstraint = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;def_table_constraint&quot;</span>);</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;            var columnList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_list&quot;</span>);</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            createTable.Rule = CREATE + temporaryOpt + TABLE + ifNotExistsOpt + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() + <span class="stringliteral">&quot;(&quot;</span> + columnOrConstraintList + <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;            ifNotExistsOpt.Rule = Empty | IF + NOT + EXISTS;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            temporaryOpt.Rule = Empty | Key(<span class="stringliteral">&quot;TEMPORARY&quot;</span>);</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            columnOrConstraintList.Rule = MakePlusRule(columnOrConstraintList, Comma, columnOrConstraint);</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            columnOrConstraint.Rule = tableColumn | tableConstraint;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;            tableColumn.Rule = Identifier + DataType() + columnConstraintList + columnDefaultOpt + columnIdentityOpt;</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            columnConstraintList.Rule = MakeStarRule(columnConstraintList, columnConstraint);</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            columnConstraint.Rule = NULL |</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                                     NOT + NULL |</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                                     UNIQUE |</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                                     PRIMARY + KEY |</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                                     CHECK + SqlExpression() |</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                                     REFERENCES + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() + columnConstraintRefOpt + fkeyActionList;</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;            columnConstraintRefOpt.Rule = Empty | <span class="stringliteral">&quot;(&quot;</span> + Identifier + <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            columnDefaultOpt.Rule = Empty | DEFAULT + SqlExpression();</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            columnIdentityOpt.Rule = Empty | IDENTITY;</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            fkeyActionList.Rule = MakeStarRule(fkeyActionList, fkeyAction);</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            fkeyAction.Rule = ON + DELETE + fkeyActionType | ON + UPDATE + fkeyActionType;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            fkeyActionType.Rule = Key(<span class="stringliteral">&quot;CASCADE&quot;</span>) |</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                                  Key(<span class="stringliteral">&quot;SET&quot;</span>) + Key(<span class="stringliteral">&quot;NULL&quot;</span>) |</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                                  Key(<span class="stringliteral">&quot;SET&quot;</span>) + Key(<span class="stringliteral">&quot;DEFAULT&quot;</span>) |</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                                  Key(<span class="stringliteral">&quot;NO&quot;</span>) + Key(<span class="stringliteral">&quot;ACTION&quot;</span>);</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            tableConstraint.Rule = tableConstraintNameOpt + defTableConstraint;</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            tableConstraintNameOpt.Rule = Empty | CONSTRAINT + constraintName;</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;            constraintName.Rule = Identifier;</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            defTableConstraint.Rule = PRIMARY + KEY + <span class="stringliteral">&quot;(&quot;</span> + columnList + <span class="stringliteral">&quot;)&quot;</span> |</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                                        UNIQUE + <span class="stringliteral">&quot;(&quot;</span> + columnList + <span class="stringliteral">&quot;)&quot;</span> |</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                                        CHECK + <span class="stringliteral">&quot;(&quot;</span> + SqlExpression() + <span class="stringliteral">&quot;)&quot;</span> |</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                                        FOREIGN + KEY + <span class="stringliteral">&quot;(&quot;</span> + columnList + <span class="stringliteral">&quot;)&quot;</span> + REFERENCES + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() + <span class="stringliteral">&quot;(&quot;</span> + columnList +</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                                        <span class="stringliteral">&quot;)&quot;</span> +</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                                        fkeyActionList;</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;            columnList.Rule = MakePlusRule(columnList, Comma, Identifier);</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            <span class="keywordflow">return</span> createTable;</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        }</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div>
<div class="line"><a name="l00465"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a359b8e376fc65f86d02588733eeaa8fe">  465</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a359b8e376fc65f86d02588733eeaa8fe">CreateView</a>() {</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            var createView = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;create_view&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateViewNode.htm">CreateViewNode</a>));</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;            var columnList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_list&quot;</span>);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;            var columnName = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_name&quot;</span>);</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;            var columnListOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_list_opt&quot;</span>);</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;            columnName.Rule = Identifier;</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            columnList.Rule = MakeStarRule(columnList, Comma, columnName);</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;            columnListOpt.Rule = Empty | <span class="stringliteral">&quot;(&quot;</span> + columnList + <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;            createView.Rule = CREATE + OrReplace() + VIEW + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() + columnListOpt + <span class="stringliteral">&quot;AS&quot;</span> + SqlQueryExpression();</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;            <span class="keywordflow">return</span> createView;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        }</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div>
<div class="line"><a name="l00478"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a72729526ac8b90e638eba802e92e6aac">  478</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a72729526ac8b90e638eba802e92e6aac">CreateUser</a>() {</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            var createUser = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;create_user&quot;</span>, typeof (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateUserStatementNode.htm">CreateUserStatementNode</a>));</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            var identifiedRule = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;identified&quot;</span>);</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            var identifiedByPassword = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;identified_by_password&quot;</span>, typeof (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1IdentifiedByPasswordNode.htm">IdentifiedByPasswordNode</a>));</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;            var identifiedByAuth = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;identified_by_auth&quot;</span>);</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            var setAccountLockOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;set_account_lock_opt&quot;</span>);</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;            var setGroupsOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;set_groups_opt&quot;</span>);</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;            createUser.Rule = Key(<span class="stringliteral">&quot;CREATE&quot;</span>) + Key(<span class="stringliteral">&quot;USER&quot;</span>) + Identifier +</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                              Key(<span class="stringliteral">&quot;IDENTIFIED&quot;</span>) + identifiedRule + setAccountLockOpt + setGroupsOpt;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;            identifiedRule.Rule = identifiedByPassword | identifiedByAuth;</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            identifiedByPassword.Rule = Key(<span class="stringliteral">&quot;BY&quot;</span>) + Key(<span class="stringliteral">&quot;PASSWORD&quot;</span>) + SqlExpression();</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            identifiedByAuth.Rule = Key(<span class="stringliteral">&quot;BY&quot;</span>) + StringLiteral;</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            setAccountLockOpt.Rule = Empty |</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                                     SET + ACCOUNT + LOCK |</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                                     SET + ACCOUNT + UNLOCK;</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            setGroupsOpt.Rule = Empty | SET + GROUPS + StringLiteral;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            <span class="keywordflow">return</span> createUser;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        }</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div>
<div class="line"><a name="l00501"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a854d16862d63d18396406e36ed2a14f5">  501</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a854d16862d63d18396406e36ed2a14f5">CreateIndex</a>() {</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            var createIndex = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;create_index&quot;</span>);</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;            var columnList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_list&quot;</span>);</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            var columnName = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_name&quot;</span>);</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            columnName.Rule = Identifier;</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            columnList.Rule = MakePlusRule(columnList, Comma, columnName);</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;            createIndex.Rule = CREATE + INDEX + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() + ON + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() + <span class="stringliteral">&quot;(&quot;</span> + columnList + <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;            <span class="keywordflow">return</span> createIndex;</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        }</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div>
<div class="line"><a name="l00515"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a1839f3f3e0ff3accd7690d7469f7747e">  515</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a1839f3f3e0ff3accd7690d7469f7747e">CreateSequence</a>() {</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;            var createSequence = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;create_sequence&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateSequenceNode.htm">CreateSequenceNode</a>));</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;            var incrementOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;increment_opt&quot;</span>);</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;            var increment = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;increment&quot;</span>);</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            var startOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;start_opt&quot;</span>);</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            var start = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;start&quot;</span>);</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            var minvalueOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;minvalue_opt&quot;</span>);</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            var minvalue = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;minvalue&quot;</span>);</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            var maxvalueOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;maxvalue_opt&quot;</span>);</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            var maxvalue = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;maxvalue&quot;</span>);</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            var cacheOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;cache_opt&quot;</span>);</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            var cycleOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;cycle_opt&quot;</span>);</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;            var cache = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;cache&quot;</span>);</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;            createSequence.Rule = Key(<span class="stringliteral">&quot;CREATE&quot;</span>) + Key(<span class="stringliteral">&quot;SEQUENCE&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() +</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                                   incrementOpt +</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                                   startOpt +</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                                   minvalueOpt +</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                                   maxvalueOpt +</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                                   cacheOpt +</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                                   cycleOpt;</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;            incrementOpt.Rule = Empty | increment;</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;            increment.Rule = Key(<span class="stringliteral">&quot;INCREMENT&quot;</span>) + Key(<span class="stringliteral">&quot;BY&quot;</span>) + SqlExpression();</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;            startOpt.Rule = Empty | start;</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;            start.Rule = Key(<span class="stringliteral">&quot;START&quot;</span>) + Key(<span class="stringliteral">&quot;WITH&quot;</span>) + SqlExpression();</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;            minvalueOpt.Rule = Empty | minvalue;</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;            minvalue.Rule = Key(<span class="stringliteral">&quot;MINVALUE&quot;</span>) + SqlExpression();</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;            maxvalueOpt.Rule = Empty | maxvalue;</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;            maxvalue.Rule = Key(<span class="stringliteral">&quot;MAXVALUE&quot;</span>) + SqlExpression();</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;            cycleOpt.Rule = Empty | Key(<span class="stringliteral">&quot;CYCLE&quot;</span>);</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;            cacheOpt.Rule = Empty | cache;</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;            cache.Rule = Key(<span class="stringliteral">&quot;CACHE&quot;</span>) + SqlExpression();</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;            <span class="keywordflow">return</span> createSequence;</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        }</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div>
<div class="line"><a name="l00552"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aa7515a53d95b20fba6b07b87f24ada48">  552</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aa7515a53d95b20fba6b07b87f24ada48">CreateSchema</a>() {</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;            var createSchema = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;create_schema&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateSchemaNode.htm">CreateSchemaNode</a>));</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;            createSchema.Rule = Key(<span class="stringliteral">&quot;CREATE&quot;</span>) + Key(<span class="stringliteral">&quot;SCHEMA&quot;</span>) + Identifier;</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;            <span class="keywordflow">return</span> createSchema;</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        }</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div>
<div class="line"><a name="l00559"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a918120dbcf79d596c19757b2cd2031e5">  559</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a918120dbcf79d596c19757b2cd2031e5">CreateTrigger</a>() {</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            var createTrigger = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;create_trigger&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateTriggerNode.htm">CreateTriggerNode</a>));</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;            var createProcedureTrigger = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;create_procedure_trigger&quot;</span>);</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            var createCallbackTrigger = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;create_callback_trigger&quot;</span>);</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;            var triggerSync = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;trigger_sync&quot;</span>);</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;            var beforeOrAfter = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;before_or_after&quot;</span>);</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;            var triggerEvents = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;trigger_events&quot;</span>);</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;            var triggerEvent = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;trigger_event&quot;</span>);</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;            var triggerBody = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;trigger_body&quot;</span>);</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;            var triggerRefOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;trigger_ref_opt&quot;</span>);</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;            var triggerRefList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;trigger_ref_list&quot;</span>);</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;            var triggerRef = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;trigger_ref&quot;</span>);</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;            var stateTableRef = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;state_table_ref&quot;</span>);</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;            var asOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;as_opt&quot;</span>);</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;            var functionCallArgsOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;function_call_args_opt&quot;</span>);</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;            var functionCallArgsList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;function_call_args_list&quot;</span>);</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;            createTrigger.Rule = createProcedureTrigger | createCallbackTrigger;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;            createCallbackTrigger.Rule = CREATE + OrReplace() + CALLBACK + TRIGGER +</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                                           beforeOrAfter + ON + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>();</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;            createProcedureTrigger.Rule = CREATE + OrReplace() + TRIGGER + ObjectName() +</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                                            triggerSync + triggerRefOpt +</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                                            FOR + EACH + ROW + triggerBody;</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;            triggerSync.Rule = beforeOrAfter + triggerEvents + ON + ObjectName();</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;            beforeOrAfter.Rule = BEFORE | AFTER;</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;            triggerEvents.Rule = MakePlusRule(triggerEvents, OR, triggerEvent);</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;            triggerEvent.Rule = INSERT | UPDATE | DELETE;</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;            triggerRefOpt.Rule = Empty | Key(<span class="stringliteral">&quot;REFERENCING&quot;</span>) + triggerRefList;</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            triggerRefList.Rule = MakePlusRule(triggerRefList, triggerRef);</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            triggerRef.Rule = stateTableRef + asOpt + Identifier;</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;            asOpt.Rule = Empty | Key(<span class="stringliteral">&quot;AS&quot;</span>);</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;            stateTableRef.Rule = Key(<span class="stringliteral">&quot;OLD&quot;</span>) | Key(<span class="stringliteral">&quot;NEW&quot;</span>);</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            triggerBody.Rule = EXECUTE + PROCEDURE + ObjectName() + <span class="stringliteral">&quot;(&quot;</span> + functionCallArgsList + <span class="stringliteral">&quot;)&quot;</span> |</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                                PlSqlBlock();</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;            functionCallArgsOpt.Rule = Empty | <span class="stringliteral">&quot;(&quot;</span> + functionCallArgsList + <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;            functionCallArgsList.Rule = MakeStarRule(functionCallArgsList, Comma, SqlExpression());</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;            <span class="keywordflow">return</span> createTrigger;</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        }</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div>
<div class="line"><a name="l00601"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a419ec0f93ddb6721ad081c40d28e02de">  601</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a419ec0f93ddb6721ad081c40d28e02de">CreateType</a>() {</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;            var createType = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;create_type&quot;</span>);</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;            createType.Rule = CREATE + OrReplace() + TYPE + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>();</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;            <span class="keywordflow">return</span> createType;</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;        }</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;<span class="preprocessor">        #region ALTER ...</span></div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;</div>
<div class="line"><a name="l00613"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a9b0e141ce23fbb6ed2a128fd6cc51658">  613</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a9b0e141ce23fbb6ed2a128fd6cc51658">Alter</a>() {</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;            var alterCommand = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;alter_command&quot;</span>);</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;            alterCommand.Rule = AlterTable() | AlterUser();</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;            <span class="keywordflow">return</span> alterCommand;</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        }</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div>
<div class="line"><a name="l00621"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a3a5f6fedc550e91fd601622a68a2409b">  621</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a3a5f6fedc550e91fd601622a68a2409b">AlterTable</a>() {</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;            var alterTable = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;alter_table&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1AlterTableNode.htm">AlterTableNode</a>));</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;            var alterActions = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;alter_actions&quot;</span>);</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;            var alterAction = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;alter_action&quot;</span>);</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;            var addColumn = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;add_column&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1AddColumnNode.htm">AddColumnNode</a>));</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;            var columnOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_opt&quot;</span>);</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;            var addConstraint = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;add_constraint&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1AddConstraintNode.htm">AddConstraintNode</a>));</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;            var dropColumn = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;drop_column&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropColumnNode.htm">DropColumnNode</a>));</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;            var dropConstraint = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;drop_constraint&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropConstraintNode.htm">DropConstraintNode</a>));</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;            var dropPrimaryKey = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;drop_primary_key&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropPrimaryKeyNode.htm">DropPrimaryKeyNode</a>));</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;            var setDefault = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;set_default&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SetDefaultNode.htm">SetDefaultNode</a>));</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;            var alterColumn = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;alter_column&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1AlterColumnNode.htm">AlterColumnNode</a>));</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;            var dropDefault = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;drop_default&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropDefaultNode.htm">DropDefaultNode</a>));</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;            var columnDef = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_def&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1TableColumnNode.htm">TableColumnNode</a>));</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;            var columnConstraintList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_constraint_lst&quot;</span>);</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            var columnDefaultOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_default_opt&quot;</span>);</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;            var columnIdentityOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_identity_opt&quot;</span>);</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;            var columnConstraint = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_constraint&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ColumnConstraintNode.htm">ColumnConstraintNode</a>));</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;            var columnConstraintRefOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_constraint_ref_opt&quot;</span>);</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;            var fkeyActionList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;fkey_action_list&quot;</span>);</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;            var fkeyAction = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;fkey_action&quot;</span>);</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;            var fkeyActionType = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;fkey_action_type&quot;</span>);</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;            var tableConstraint = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;table_constraint&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1TableConstraintNode.htm">TableConstraintNode</a>));</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;            var constraintName = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;constraint_name&quot;</span>);</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;            var tableConstraintNameOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;table_constraint_name_opt&quot;</span>);</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;            var defTableConstraint = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;def_table_constraint&quot;</span>);</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;            var columnList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_list&quot;</span>);</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;            alterTable.Rule = Key(<span class="stringliteral">&quot;ALTER&quot;</span>) + Key(<span class="stringliteral">&quot;TABLE&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() + alterActions;</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;            alterActions.Rule = MakePlusRule(alterActions, alterAction);</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;            alterAction.Rule = addColumn | addConstraint | dropColumn | dropConstraint | dropPrimaryKey | setDefault | dropDefault | alterColumn;</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;            addColumn.Rule = Key(<span class="stringliteral">&quot;ADD&quot;</span>) + columnOpt + columnDef;</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;            columnOpt.Rule = Empty | Key(<span class="stringliteral">&quot;COLUMN&quot;</span>);</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;            dropColumn.Rule = Key(<span class="stringliteral">&quot;DROP&quot;</span>) + columnOpt + Identifier;</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;            addConstraint.Rule = Key(<span class="stringliteral">&quot;ADD&quot;</span>) + Key(<span class="stringliteral">&quot;CONSTRAINT&quot;</span>) + tableConstraint;</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;            dropConstraint.Rule = Key(<span class="stringliteral">&quot;DROP&quot;</span>) + Key(<span class="stringliteral">&quot;CONSTRAINT&quot;</span>) + Identifier;</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;            dropPrimaryKey.Rule = Key(<span class="stringliteral">&quot;DROP&quot;</span>) + Key(<span class="stringliteral">&quot;PRIMARY&quot;</span>) + Key(<span class="stringliteral">&quot;KEY&quot;</span>);</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;            dropDefault.Rule = Key(<span class="stringliteral">&quot;ALTER&quot;</span>) + columnOpt + Identifier + Key(<span class="stringliteral">&quot;DROP&quot;</span>) + Key(<span class="stringliteral">&quot;DEFAULT&quot;</span>);</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;            setDefault.Rule = Key(<span class="stringliteral">&quot;ALTER&quot;</span>) + columnOpt + Identifier + Key(<span class="stringliteral">&quot;SET&quot;</span>) + Key(<span class="stringliteral">&quot;DEFAULT&quot;</span>) + SqlExpression();</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;            alterColumn.Rule = Key(<span class="stringliteral">&quot;ALTER&quot;</span>) + columnOpt + columnDef;</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;            columnDef.Rule = Identifier + DataType() + columnConstraintList + columnDefaultOpt + columnIdentityOpt;</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;            columnConstraintList.Rule = MakeStarRule(columnConstraintList, columnConstraint);</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;            columnConstraint.Rule = Key(<span class="stringliteral">&quot;NULL&quot;</span>) |</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;                                     Key(<span class="stringliteral">&quot;NOT&quot;</span>) + Key(<span class="stringliteral">&quot;NULL&quot;</span>) |</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;                                     Key(<span class="stringliteral">&quot;UNIQUE&quot;</span>) |</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;                                     Key(<span class="stringliteral">&quot;PRIMARY&quot;</span>) + Key(<span class="stringliteral">&quot;KEY&quot;</span>) |</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;                                     Key(<span class="stringliteral">&quot;CHECK&quot;</span>) + SqlExpression() |</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;                                     Key(<span class="stringliteral">&quot;REFERENCES&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() + columnConstraintRefOpt + fkeyActionList;</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;            columnConstraintRefOpt.Rule = Empty | <span class="stringliteral">&quot;(&quot;</span> + Identifier + <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;            columnDefaultOpt.Rule = Empty | Key(<span class="stringliteral">&quot;DEFAULT&quot;</span>) + SqlExpression();</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;            columnIdentityOpt.Rule = Empty | Key(<span class="stringliteral">&quot;IDENTITY&quot;</span>);</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;            fkeyActionList.Rule = MakeStarRule(fkeyActionList, fkeyAction);</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;            fkeyAction.Rule = ON + DELETE + fkeyActionType | ON + UPDATE + fkeyActionType;</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;            fkeyActionType.Rule = Key(<span class="stringliteral">&quot;CASCADE&quot;</span>) |</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;                                  Key(<span class="stringliteral">&quot;SET&quot;</span>) + Key(<span class="stringliteral">&quot;NULL&quot;</span>) |</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                                  Key(<span class="stringliteral">&quot;SET&quot;</span>) + Key(<span class="stringliteral">&quot;DEFAULT&quot;</span>) |</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                                  Key(<span class="stringliteral">&quot;NO&quot;</span>) + Key(<span class="stringliteral">&quot;ACTION&quot;</span>);</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;            tableConstraint.Rule = tableConstraintNameOpt + defTableConstraint;</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;            tableConstraintNameOpt.Rule = Empty | constraintName;</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;            constraintName.Rule = Identifier;</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;            defTableConstraint.Rule = Key(<span class="stringliteral">&quot;PRIMARY&quot;</span>) + Key(<span class="stringliteral">&quot;KEY&quot;</span>) + <span class="stringliteral">&quot;(&quot;</span> + columnList + <span class="stringliteral">&quot;)&quot;</span> |</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;                                        Key(<span class="stringliteral">&quot;UNIQUE&quot;</span>) + <span class="stringliteral">&quot;(&quot;</span> + columnList + <span class="stringliteral">&quot;)&quot;</span> |</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;                                        Key(<span class="stringliteral">&quot;CHECK&quot;</span>) + <span class="stringliteral">&quot;(&quot;</span> + SqlExpression() + <span class="stringliteral">&quot;)&quot;</span> |</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;                                        FOREIGN + KEY + <span class="stringliteral">&quot;(&quot;</span> + columnList + <span class="stringliteral">&quot;)&quot;</span> + REFERENCES + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() + <span class="stringliteral">&quot;(&quot;</span> + columnList +</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;                                        <span class="stringliteral">&quot;)&quot;</span> +</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;                                        fkeyActionList;</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;            columnList.Rule = MakePlusRule(columnList, Comma, Identifier);</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;            <span class="keywordflow">return</span> alterTable;</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;        }</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;</div>
<div class="line"><a name="l00693"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a7a01458f028c4e98c7391b455eb539a7">  693</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a7a01458f028c4e98c7391b455eb539a7">AlterUser</a>() {</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;            var alterUser = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;alter_user&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1AlterUserStatementNode.htm">AlterUserStatementNode</a>));</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;            var actionList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;action_list&quot;</span>);</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;            var action = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;action&quot;</span>);</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;            var setAccountStatus = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;set_account_status&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SetAccountStatusNode.htm">SetAccountStatusNode</a>));</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;            var setPassword = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;set_password&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SetPasswordNode.htm">SetPasswordNode</a>));</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;            var setGroups = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;set_groups&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SetGroupsNode.htm">SetGroupsNode</a>));</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;            var accountStatus = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;account_status&quot;</span>);</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;            alterUser.Rule = Key(<span class="stringliteral">&quot;ALTER&quot;</span>) + Key(<span class="stringliteral">&quot;USER&quot;</span>) + Identifier + actionList;</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;            actionList.Rule = MakePlusRule(actionList, action);</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;            action.Rule = setAccountStatus | setPassword | setGroups;</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;            setAccountStatus.Rule = Key(<span class="stringliteral">&quot;SET&quot;</span>) + Key(<span class="stringliteral">&quot;ACCOUNT&quot;</span>) + accountStatus;</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;            accountStatus.Rule = Key(<span class="stringliteral">&quot;LOCK&quot;</span>) | Key(<span class="stringliteral">&quot;UNLOCK&quot;</span>);</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;            setPassword.Rule = Key(<span class="stringliteral">&quot;SET&quot;</span>) + Key(<span class="stringliteral">&quot;PASSWORD&quot;</span>) + SqlExpression();</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;            setGroups.Rule = Key(<span class="stringliteral">&quot;SET&quot;</span>) + Key(<span class="stringliteral">&quot;GROUPS&quot;</span>) + SqlExpressionList();</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;            <span class="keywordflow">return</span> alterUser;</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;        }</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;</div>
<div class="line"><a name="l00715"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a6b68af5b2e8bf0395947ef748f276ec7">  715</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a6b68af5b2e8bf0395947ef748f276ec7">Drop</a>() {</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;            var dropCommand = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;drop_command&quot;</span>);</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;            dropCommand.Rule = DropSchema() |</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;                               DropTable() |</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;                               DropView() |</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;                               DropIndex() |</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;                               DropSequence() |</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;                               DropTrigger() |</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;                               DropUser() |</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;                               DropType();</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;            <span class="keywordflow">return</span> dropCommand;</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;        }</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;</div>
<div class="line"><a name="l00730"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a6ad70973ec9c3c55ef00502d7c833f68">  730</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a6ad70973ec9c3c55ef00502d7c833f68">DropSchema</a>() {</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;            var dropSchema = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;drop_schema&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropSchemaStatementNode.htm">DropSchemaStatementNode</a>));</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;            dropSchema.Rule = Key(<span class="stringliteral">&quot;DROP&quot;</span>) + Key(<span class="stringliteral">&quot;SCHEMA&quot;</span>) + Identifier;</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;            <span class="keywordflow">return</span> dropSchema;</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        }</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;</div>
<div class="line"><a name="l00737"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aa97f714e248715cedd66b6feecba97cf">  737</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aa97f714e248715cedd66b6feecba97cf">DropTable</a>() {</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;            var dropTable = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;drop_table&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropTableStatementNode.htm">DropTableStatementNode</a>));</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;            var tableNameList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;table_name_list&quot;</span>);</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;            var ifExistsOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;if_exists_opt&quot;</span>);</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;            dropTable.Rule = Key(<span class="stringliteral">&quot;DROP&quot;</span>) + Key(<span class="stringliteral">&quot;TABLE&quot;</span>) + ifExistsOpt + tableNameList;</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;            tableNameList.Rule = MakePlusRule(tableNameList, Comma, <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>());</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;            ifExistsOpt.Rule = Empty | Key(<span class="stringliteral">&quot;IF&quot;</span>) + Key(<span class="stringliteral">&quot;EXISTS&quot;</span>);</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;            <span class="keywordflow">return</span> dropTable;</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;        }</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;</div>
<div class="line"><a name="l00749"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ac0a7a849f7b06ab1b37077620b16beea">  749</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ac0a7a849f7b06ab1b37077620b16beea">DropView</a>() {</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;            var dropView = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;drop_view&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropViewStatementNode.htm">DropViewStatementNode</a>));</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;            var viewNameList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;view_name_list&quot;</span>);</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;            var ifExistsOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;if_exists_opt&quot;</span>);</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;            dropView.Rule = Key(<span class="stringliteral">&quot;DROP&quot;</span>) + Key(<span class="stringliteral">&quot;VIEW&quot;</span>) + ifExistsOpt + viewNameList;</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;            viewNameList.Rule = MakePlusRule(viewNameList, Comma, <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>());</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;            ifExistsOpt.Rule = Empty | Key(<span class="stringliteral">&quot;IF&quot;</span>) + Key(<span class="stringliteral">&quot;EXISTS&quot;</span>);</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;            <span class="keywordflow">return</span> dropView;</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;        }</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;</div>
<div class="line"><a name="l00761"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a48f4bdfe8525f7596348cfda1bd402be">  761</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a48f4bdfe8525f7596348cfda1bd402be">DropIndex</a>() {</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;            var dropIndex = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;drop_index&quot;</span>);</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;            dropIndex.Rule = Key(<span class="stringliteral">&quot;DROP&quot;</span>) + Key(<span class="stringliteral">&quot;INDEX&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>();</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;            <span class="keywordflow">return</span> dropIndex;</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        }</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;</div>
<div class="line"><a name="l00767"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aba843f427ec91916047c5be4bede9e34">  767</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aba843f427ec91916047c5be4bede9e34">DropSequence</a>() {</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;            var dropSequence = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;drop_index&quot;</span>);</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;            dropSequence.Rule = Key(<span class="stringliteral">&quot;DROP&quot;</span>) + Key(<span class="stringliteral">&quot;SEQUENCE&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>();</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;            <span class="keywordflow">return</span> dropSequence;</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;        }</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;</div>
<div class="line"><a name="l00773"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ad58ffedf21329722e394a7def2c669d8">  773</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ad58ffedf21329722e394a7def2c669d8">DropTrigger</a>() {</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;            var dropTrigger = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;drop_trigger&quot;</span>);</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;            var dropProcedureTrigger = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;drop_procedure_trigger&quot;</span>);</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;            var dropCallbackTrigger = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;drop_callback_trigger&quot;</span>);</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;            dropTrigger.Rule = dropProcedureTrigger | dropCallbackTrigger;</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;            dropProcedureTrigger.Rule = Key(<span class="stringliteral">&quot;DROP&quot;</span>) + Key(<span class="stringliteral">&quot;TRIGGER&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>();</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;            dropCallbackTrigger.Rule = Key(<span class="stringliteral">&quot;DROP&quot;</span>) + Key(<span class="stringliteral">&quot;CALLBACK&quot;</span>) + Key(<span class="stringliteral">&quot;TRIGGER&quot;</span>) + Key(<span class="stringliteral">&quot;FROM&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>();</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;            <span class="keywordflow">return</span> dropTrigger;</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;        }</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;</div>
<div class="line"><a name="l00784"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ab55c37eb801de53e32d616f5c5338656">  784</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ab55c37eb801de53e32d616f5c5338656">DropUser</a>() {</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;            var dropUser = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;drop_user&quot;</span>);</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;            dropUser.Rule = Key(<span class="stringliteral">&quot;DROP&quot;</span>) + Key(<span class="stringliteral">&quot;USER&quot;</span>) + Identifier;</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;            <span class="keywordflow">return</span> dropUser;</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;        }</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;</div>
<div class="line"><a name="l00790"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a300052d4d825417dad0a41107d686e5e">  790</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a300052d4d825417dad0a41107d686e5e">DropType</a>() {</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;            var dropType = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;drop_type&quot;</span>);</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;            dropType.Rule = Key(<span class="stringliteral">&quot;DROP&quot;</span>) + Key(<span class="stringliteral">&quot;TYPE&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>();</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;            <span class="keywordflow">return</span> dropType;</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;        }</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;</div>
<div class="line"><a name="l00796"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ad1c9aa133a6b48b598dac011c05d9b96">  796</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ad1c9aa133a6b48b598dac011c05d9b96">Commit</a>() {</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;            var commitCommand = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;commit&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CommitStatementNode.htm">CommitStatementNode</a>));</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;            commitCommand.Rule = Key(<span class="stringliteral">&quot;COMMIT&quot;</span>);</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;            <span class="keywordflow">return</span> commitCommand;</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;        }</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;</div>
<div class="line"><a name="l00802"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a1b7cc7fb95404df540242f1daf970347">  802</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a1b7cc7fb95404df540242f1daf970347">Rollback</a>() {</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;            var command = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;rollback&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1RollbackStatementNode.htm">RollbackStatementNode</a>));</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;            command.Rule = Key(<span class="stringliteral">&quot;ROLLBACK&quot;</span>);</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;            <span class="keywordflow">return</span> command;</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;        }</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;</div>
<div class="line"><a name="l00808"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a5c401adb17bcb50a5e88b517feebab38">  808</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a5c401adb17bcb50a5e88b517feebab38">Select</a>() {</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;            var selectCommand = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;select_command&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SelectStatementNode.htm">SelectStatementNode</a>));</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;            var orderOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;order_opt&quot;</span>);</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;            var sortedDef = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;sorted_def&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1OrderByNode.htm">OrderByNode</a>));</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;            var sortedDefList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;sorted_def_list&quot;</span>);</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;            var sortOrder = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;sort_order&quot;</span>);</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;            var limitOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;limit_opt&quot;</span>);</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;            var limit = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;limit&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1LimitNode.htm">LimitNode</a>));</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;            selectCommand.Rule = SqlQueryExpression() + orderOpt + limitOpt;</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;            orderOpt.Rule = Empty | Key(<span class="stringliteral">&quot;ORDER&quot;</span>) + Key(<span class="stringliteral">&quot;BY&quot;</span>) + sortedDefList;</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;            sortedDef.Rule = SqlExpression() + sortOrder;</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;            sortOrder.Rule = Key(<span class="stringliteral">&quot;ASC&quot;</span>) | Key(<span class="stringliteral">&quot;DESC&quot;</span>);</div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;            sortedDefList.Rule = MakePlusRule(sortedDefList, Comma, sortedDef);</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;            limitOpt.Rule = Empty | limit;</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;            limit.Rule = Key(<span class="stringliteral">&quot;LIMIT&quot;</span>) + PositiveLiteral + <span class="stringliteral">&quot;,&quot;</span> + PositiveLiteral |</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;                         Key(<span class="stringliteral">&quot;LIMIT&quot;</span>) + PositiveLiteral;</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;            <span class="keywordflow">return</span> selectCommand;</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;        }</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;</div>
<div class="line"><a name="l00831"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a078396250a7f75c5ac69476492b638a7">  831</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a078396250a7f75c5ac69476492b638a7">Grant</a>() {</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;            var grant = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;grant&quot;</span>);</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;            var grantObject = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;grant_object&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GrantStatementNode.htm">GrantStatementNode</a>));</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;            var grantPriv = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;grant_priv&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GrantRoleStatementNode.htm">GrantRoleStatementNode</a>));</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;            var roleList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;role_list&quot;</span>);</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;            var priv = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;priv&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1PrivilegeNode.htm">PrivilegeNode</a>));</div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;            var privList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;priv_list&quot;</span>);</div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;            var objPriv = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;object_priv&quot;</span>);</div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;            var privilegeOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;privilege_opt&quot;</span>);</div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;            var privilegesOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;privileges_opt&quot;</span>);</div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;            var distributionList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;distribution_list&quot;</span>);</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;            var withAdminOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;with_admin_opt&quot;</span>);</div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;            var withAdmin = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;with_admin&quot;</span>);</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;            var withGrantOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;with_grant_opt&quot;</span>);</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;            var withGrant = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;with_grant&quot;</span>);</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;            var optionOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;option_opt&quot;</span>);</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;            var columnList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_list&quot;</span>);</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;            var columnListOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_list_opt&quot;</span>);</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;            var referencePriv = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;reference_priv&quot;</span>);</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;            var updatePriv = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;update_priv&quot;</span>);</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;            var selectPriv = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;select_priv&quot;</span>);</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;            grant.Rule = grantObject | grantPriv;</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;            grantPriv.Rule = Key(<span class="stringliteral">&quot;GRANT&quot;</span>) + roleList + Key(<span class="stringliteral">&quot;TO&quot;</span>) + distributionList + withAdminOpt;</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;            roleList.Rule = MakePlusRule(roleList, Comma, Identifier);</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;            withAdminOpt.Rule = Empty | withAdmin;</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;            withAdmin.Rule = Key(<span class="stringliteral">&quot;WITH&quot;</span>) + Key(<span class="stringliteral">&quot;ADMIN&quot;</span>) + optionOpt;</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;            optionOpt.Rule = Empty | Key(<span class="stringliteral">&quot;OPTION&quot;</span>);</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;            grantObject.Rule = Key(<span class="stringliteral">&quot;GRANT&quot;</span>) + objPriv + Key(<span class="stringliteral">&quot;ON&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() + Key(<span class="stringliteral">&quot;TO&quot;</span>) + distributionList + withGrantOpt;</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;            objPriv.Rule = Key(<span class="stringliteral">&quot;ALL&quot;</span>) + privilegesOpt | privList;</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;            privilegesOpt.Rule = Empty | Key(<span class="stringliteral">&quot;PRIVILEGES&quot;</span>);</div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;            privilegeOpt.Rule = Empty | Key(<span class="stringliteral">&quot;PRIVILEGE&quot;</span>);</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;            privList.Rule = MakePlusRule(privList, Comma, priv);</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;            priv.Rule = Key(<span class="stringliteral">&quot;USAGE&quot;</span>) + privilegeOpt|</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;                        Key(<span class="stringliteral">&quot;INSERT&quot;</span>) + privilegeOpt |</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;                        Key(<span class="stringliteral">&quot;DELETE&quot;</span>) + privilegeOpt |</div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                        Key(<span class="stringliteral">&quot;EXECUTE&quot;</span>) + privilegeOpt |</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                        Key(<span class="stringliteral">&quot;ALTER&quot;</span>) + privilegeOpt |</div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;                        Key(<span class="stringliteral">&quot;INDEX&quot;</span>) + privilegeOpt |</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;                        updatePriv |</div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;                        referencePriv |</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;                        selectPriv;</div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;            updatePriv.Rule = Key(<span class="stringliteral">&quot;UPDATE&quot;</span>) + privilegeOpt + columnListOpt;</div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;            referencePriv.Rule = Key(<span class="stringliteral">&quot;REFERENCES&quot;</span>) + privilegeOpt + columnListOpt;</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;            selectPriv.Rule = Key(<span class="stringliteral">&quot;SELECT&quot;</span>) + columnListOpt;</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;            columnListOpt.Rule = Empty | <span class="stringliteral">&quot;(&quot;</span> + columnList + <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;            columnList.Rule = MakePlusRule(columnList, Comma, Identifier);</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;            withGrantOpt.Rule = Empty | withGrant;</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;            withGrant.Rule = Key(<span class="stringliteral">&quot;WITH&quot;</span>) + Key(<span class="stringliteral">&quot;GRANT&quot;</span>) + optionOpt;</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;            distributionList.Rule = MakePlusRule(distributionList, Comma, Identifier);</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;            <span class="keywordflow">return</span> grant;</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;        }</div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;</div>
<div class="line"><a name="l00886"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a175bec5110687e4638877d827fbc5c18">  886</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a175bec5110687e4638877d827fbc5c18">Revoke</a>() {</div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;            var revoke = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;revoke&quot;</span>);</div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;            var grantObject = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;grant_object&quot;</span>);</div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;            var grantPriv = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;grant_priv&quot;</span>);</div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;            var roleList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;role_list&quot;</span>);</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;            var priv = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;priv&quot;</span>);</div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;            var privList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;priv_list&quot;</span>);</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;            var objPriv = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;object_priv&quot;</span>);</div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;            var privilegeOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;privilege_opt&quot;</span>);</div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;            var privilegesOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;privileges_opt&quot;</span>);</div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;            var distributionList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;distribution_list&quot;</span>);</div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;</div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;            revoke.Rule = grantObject | grantPriv;</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;            grantPriv.Rule = Key(<span class="stringliteral">&quot;REVOKE&quot;</span>) + roleList + Key(<span class="stringliteral">&quot;FROM&quot;</span>) + distributionList;</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;            roleList.Rule = MakePlusRule(roleList, Comma, Identifier);</div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;</div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;            grantObject.Rule = Key(<span class="stringliteral">&quot;REVOKE&quot;</span>) + objPriv + Key(<span class="stringliteral">&quot;ON&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() + Key(<span class="stringliteral">&quot;TO&quot;</span>) + distributionList;</div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;            objPriv.Rule = Key(<span class="stringliteral">&quot;ALL&quot;</span>) + privilegesOpt | privList;</div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;            privilegesOpt.Rule = Empty | Key(<span class="stringliteral">&quot;PRIVILEGES&quot;</span>);</div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;            privilegeOpt.Rule = Empty | Key(<span class="stringliteral">&quot;PRIVILEGE&quot;</span>);</div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;            privList.Rule = MakePlusRule(privList, Comma, priv);</div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;            priv.Rule = Key(<span class="stringliteral">&quot;USAGE&quot;</span>) + privilegeOpt |</div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;                        Key(<span class="stringliteral">&quot;INSERT&quot;</span>) + privilegeOpt |</div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;                        Key(<span class="stringliteral">&quot;DELETE&quot;</span>) + privilegeOpt |</div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;                        Key(<span class="stringliteral">&quot;EXECUTE&quot;</span>) + privilegeOpt |</div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;                        Key(<span class="stringliteral">&quot;ALTER&quot;</span>) + privilegeOpt |</div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;                        Key(<span class="stringliteral">&quot;INDEX&quot;</span>) + privilegeOpt |</div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;                        Key(<span class="stringliteral">&quot;UPDATE&quot;</span>) + privilegeOpt |</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;                        Key(<span class="stringliteral">&quot;REFERENCES&quot;</span>) + privilegeOpt |</div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;                        Key(<span class="stringliteral">&quot;SELECT&quot;</span>) + privilegeOpt;</div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;            distributionList.Rule = MakePlusRule(distributionList, Comma, Identifier);</div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;</div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;            <span class="keywordflow">return</span> revoke;</div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;        }</div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;</div>
<div class="line"><a name="l00921"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aa4f1ac03cf4dfe31a2663b05a57bfc3c">  921</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aa4f1ac03cf4dfe31a2663b05a57bfc3c">Insert</a>() {</div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;            var insert = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;insert_command&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1InsertStatementNode.htm">InsertStatementNode</a>));</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;            var insertSource = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;insert_source&quot;</span>);</div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;            var sourceWithColumns = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;source_with_columns&quot;</span>);</div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;            var fromValues = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;from_values&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ValuesInsertNode.htm">ValuesInsertNode</a>));</div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;</div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;            var fromQuery = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;from_query&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryInsertNode.htm">QueryInsertNode</a>));</div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;            var fromSet = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;from_set&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SetInsertNode.htm">SetInsertNode</a>));</div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;            var columnList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_list&quot;</span>);</div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;            var columnListOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_list_opt&quot;</span>);</div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;            var columnSet = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_set&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1InsertSetNode.htm">InsertSetNode</a>));</div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;            var columnSetList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_set_list&quot;</span>);</div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;            var insertTuple = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;insert_tuple&quot;</span>);</div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;            var insertValue = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;insert_value&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1InsertValueNode.htm">InsertValueNode</a>));</div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;</div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;            insert.Rule = Key(<span class="stringliteral">&quot;INSERT&quot;</span>) + Key(<span class="stringliteral">&quot;INTO&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() + insertSource;</div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;            insertSource.Rule = columnListOpt + sourceWithColumns | fromSet;</div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;            sourceWithColumns.Rule = fromQuery | fromValues;</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;            fromValues.Rule = columnListOpt + Key(<span class="stringliteral">&quot;VALUES&quot;</span>) + insertTuple;</div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;            fromQuery.Rule = columnListOpt + Key(<span class="stringliteral">&quot;FROM&quot;</span>) + <span class="stringliteral">&quot;(&quot;</span> + SqlQueryExpression() + <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;            fromSet.Rule = Key(<span class="stringliteral">&quot;SET&quot;</span>) +  columnSetList;</div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;            columnListOpt.Rule = Empty | <span class="stringliteral">&quot;(&quot;</span> + columnList + <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;            columnList.Rule = MakePlusRule(columnList, Comma, Identifier);</div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;            fromValues.Rule = Key(<span class="stringliteral">&quot;VALUES&quot;</span>) + insertTuple;</div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;            insertTuple.Rule = MakePlusRule(insertTuple, Comma, insertValue);</div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;            insertValue.Rule = <span class="stringliteral">&quot;(&quot;</span> + SqlExpressionList() + <span class="stringliteral">&quot;)&quot;</span>;</div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;            columnSetList.Rule = MakePlusRule(columnSetList, Comma, columnSet);</div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;            columnSet.Rule = Identifier + <span class="stringliteral">&quot;=&quot;</span> + SqlExpression();</div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;            <span class="keywordflow">return</span> insert;</div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;        }</div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;</div>
<div class="line"><a name="l00952"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a0e6dbed320e8eeb31a9c5930a2b2e22f">  952</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a0e6dbed320e8eeb31a9c5930a2b2e22f">Delete</a>() {</div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;            var deleteCommand = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;delete_command&quot;</span>);</div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;            var whereOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;where_opt&quot;</span>);</div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;</div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;            deleteCommand.Rule = Key(<span class="stringliteral">&quot;DELETE&quot;</span>) + Key(<span class="stringliteral">&quot;FROM&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() + whereOpt;</div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;            whereOpt.Rule = Empty | Key(<span class="stringliteral">&quot;WHERE&quot;</span>) + SqlQueryExpression();</div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;</div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;            <span class="keywordflow">return</span> deleteCommand;</div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;        }</div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;</div>
<div class="line"><a name="l00962"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a7961335dfbf9939a679ce806ecd1672f">  962</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a7961335dfbf9939a679ce806ecd1672f">Update</a>() {</div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;            var update = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;update_command&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1UpdateStatementNode.htm">UpdateStatementNode</a>));</div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;            var updateSimple = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;update_simple&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SimpleUpdateNode.htm">SimpleUpdateNode</a>));</div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;            var updateQuery = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;update_query&quot;</span>);</div>
<div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;            var columnSet = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_set&quot;</span>, typeof(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1UpdateColumnNode.htm">UpdateColumnNode</a>));</div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;            var columnSetList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_set_list&quot;</span>);</div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;            var columnList = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;column_list&quot;</span>);</div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;            var updateWhere = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;update_where&quot;</span>);</div>
<div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;            var limitOpt = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;limit_opt&quot;</span>);</div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;</div>
<div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;            update.Rule = updateSimple | updateQuery;</div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;            updateSimple.Rule = Key(<span class="stringliteral">&quot;UPDATE&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() + Key(<span class="stringliteral">&quot;SET&quot;</span>) + columnSetList + updateWhere + limitOpt;</div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;            updateQuery.Rule = Key(<span class="stringliteral">&quot;UPDATE&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>() + Key(<span class="stringliteral">&quot;SET&quot;</span>) + <span class="stringliteral">&quot;(&quot;</span> + columnList + <span class="stringliteral">&quot;)&quot;</span> + <span class="stringliteral">&quot;=&quot;</span> + SqlQueryExpression() + updateWhere + limitOpt;</div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;            columnSetList.Rule = MakePlusRule(columnSetList, Comma, columnSet);</div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;            columnSet.Rule = Identifier + <span class="stringliteral">&quot;=&quot;</span> + SqlExpression();</div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;            columnList.Rule = MakePlusRule(columnList, Comma, Identifier);</div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;            updateWhere.Rule = Key(<span class="stringliteral">&quot;WHERE&quot;</span>) + SqlExpression();</div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;            limitOpt.Rule = Empty | Key(<span class="stringliteral">&quot;LIMIT&quot;</span>) + PositiveLiteral;</div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;</div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;            <span class="keywordflow">return</span> update;</div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;        }</div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;</div>
<div class="line"><a name="l00984"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#abaae9e00b62f269a5e8d4cf550006686">  984</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#abaae9e00b62f269a5e8d4cf550006686">Truncate</a>() {</div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;            var truncate = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;truncate_command&quot;</span>);</div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;            truncate.Rule = Key(<span class="stringliteral">&quot;TRUNCATE&quot;</span>) + <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>();</div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;            <span class="keywordflow">return</span> truncate;</div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;        }</div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;</div>
<div class="line"><a name="l00990"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a782175b92d71c1b72c985c7f52d53742">  990</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a782175b92d71c1b72c985c7f52d53742">Set</a>() {</div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;            var set = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;set_command&quot;</span>);</div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;            set.Rule = SetTransaction() | SetVariable();</div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;            <span class="keywordflow">return</span> set;</div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;        }</div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;</div>
<div class="line"><a name="l00996"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a7564524a5390236b8b39a97fe810b4a4">  996</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a7564524a5390236b8b39a97fe810b4a4">SetTransaction</a>() {</div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;            var set = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;set_transaction&quot;</span>);</div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;            var access = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;access&quot;</span>);</div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;            var accessType = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;access_type&quot;</span>);</div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;            var isolationLevel = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;isolation_level&quot;</span>);</div>
<div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;            var levelType = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;level_type&quot;</span>);</div>
<div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;            var defaultSchema = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;default_schema&quot;</span>);</div>
<div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;</div>
<div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;            set.Rule = access | isolationLevel | defaultSchema;</div>
<div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;            access.Rule = Key(<span class="stringliteral">&quot;SET&quot;</span>) + Key(<span class="stringliteral">&quot;TRANSACTION&quot;</span>) + accessType;</div>
<div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;            accessType.Rule = Key(<span class="stringliteral">&quot;READ&quot;</span>) + Key(<span class="stringliteral">&quot;ONLY&quot;</span>) | Key(<span class="stringliteral">&quot;READ&quot;</span>) + Key(<span class="stringliteral">&quot;WRITE&quot;</span>);</div>
<div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;            isolationLevel.Rule = Key(<span class="stringliteral">&quot;SET&quot;</span>) + Key(<span class="stringliteral">&quot;TRANSACTION&quot;</span>) + Key(<span class="stringliteral">&quot;ISOLATION&quot;</span>) + Key(<span class="stringliteral">&quot;LEVEL&quot;</span>) + levelType;</div>
<div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;            levelType.Rule = Key(<span class="stringliteral">&quot;SERIALIZABLE&quot;</span>) |</div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;                             Key(<span class="stringliteral">&quot;READ&quot;</span>) + Key(<span class="stringliteral">&quot;COMMITTED&quot;</span>) |</div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;                             Key(<span class="stringliteral">&quot;READ&quot;</span>) + Key(<span class="stringliteral">&quot;UNCOMMITTED&quot;</span>) |</div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;                             Key(<span class="stringliteral">&quot;SNAPSHOT&quot;</span>);</div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;            defaultSchema.Rule = Key(<span class="stringliteral">&quot;SET&quot;</span>) + Key(<span class="stringliteral">&quot;TRANSACTION&quot;</span>) + Key(<span class="stringliteral">&quot;DEFAULT&quot;</span>) + Key(<span class="stringliteral">&quot;SCHEMA&quot;</span>) + Identifier;</div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;            <span class="keywordflow">return</span> set;</div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;        }</div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;</div>
<div class="line"><a name="l01016"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a5a8b91fed0d66dd804b75f7409e40da9"> 1016</a></span>&#160;        <span class="keyword">private</span> NonTerminal <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a5a8b91fed0d66dd804b75f7409e40da9">SetVariable</a>() {</div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;            var varSet = <span class="keyword">new</span> NonTerminal(<span class="stringliteral">&quot;var_set&quot;</span>);</div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;            varSet.Rule = Identifier + <span class="stringliteral">&quot;=&quot;</span> + SqlExpression();</div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;            <span class="keywordflow">return</span> varSet;</div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;        }</div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;    }</div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a02fbda51f4ae5289ffff9f3fddd57680"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a02fbda51f4ae5289ffff9f3fddd57680">Deveel.Data.Sql.Parser.SqlGrammar.Create</a></div><div class="ttdeci">NonTerminal Create()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00388">SqlGrammar.cs:388</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a9b0e141ce23fbb6ed2a128fd6cc51658"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a9b0e141ce23fbb6ed2a128fd6cc51658">Deveel.Data.Sql.Parser.SqlGrammar.Alter</a></div><div class="ttdeci">NonTerminal Alter()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00613">SqlGrammar.cs:613</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_abf69bbd06d159b796af110d3dd1ed583"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#abf69bbd06d159b796af110d3dd1ed583">Deveel.Data.Sql.Parser.SqlGrammar.NestedSqlStatement</a></div><div class="ttdeci">NonTerminal NestedSqlStatement()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00203">SqlGrammar.cs:203</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SetAccountStatusNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SetAccountStatusNode.htm">Deveel.Data.Sql.Parser.SetAccountStatusNode</a></div><div class="ttdef"><b>Definition:</b> <a href="SetAccountStatusNode_8cs_source.htm#l00020">SetAccountStatusNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_ac6136efb8667ac5640e218ffa9b36ec9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ac6136efb8667ac5640e218ffa9b36ec9">Deveel.Data.Sql.Parser.SqlGrammar.StatementEnd</a></div><div class="ttdeci">NonTerminal StatementEnd()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00044">SqlGrammar.cs:44</a></div></div>
<div class="ttc" id="namespaceIrony_htm"><div class="ttname"><a href="namespaceIrony.htm">Irony</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a918120dbcf79d596c19757b2cd2031e5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a918120dbcf79d596c19757b2cd2031e5">Deveel.Data.Sql.Parser.SqlGrammar.CreateTrigger</a></div><div class="ttdeci">NonTerminal CreateTrigger()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00559">SqlGrammar.cs:559</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1RaiseStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1RaiseStatementNode.htm">Deveel.Data.Sql.Parser.RaiseStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="RaiseStatementNode_8cs_source.htm#l00022">RaiseStatementNode.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a48f4bdfe8525f7596348cfda1bd402be"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a48f4bdfe8525f7596348cfda1bd402be">Deveel.Data.Sql.Parser.SqlGrammar.DropIndex</a></div><div class="ttdeci">NonTerminal DropIndex()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00761">SqlGrammar.cs:761</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a985ca89a8ca7606a6608059e8f5a6fc3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a985ca89a8ca7606a6608059e8f5a6fc3">Deveel.Data.Sql.Parser.SqlGrammar.VariableDeclaration</a></div><div class="ttdeci">NonTerminal VariableDeclaration()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00129">SqlGrammar.cs:129</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1OrderByNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1OrderByNode.htm">Deveel.Data.Sql.Parser.OrderByNode</a></div><div class="ttdoc">Within an SQL query node, this describes the ordering criteria that will be applied when returning th...</div><div class="ttdef"><b>Definition:</b> <a href="OrderByNode_8cs_source.htm#l00025">OrderByNode.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_aff0290632b442f5e997af210b432405f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aff0290632b442f5e997af210b432405f">Deveel.Data.Sql.Parser.SqlGrammar.Close</a></div><div class="ttdeci">NonTerminal Close()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00174">SqlGrammar.cs:174</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GrantStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GrantStatementNode.htm">Deveel.Data.Sql.Parser.GrantStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="GrantStatementNode_8cs_source.htm#l00025">GrantStatementNode.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CursorParameterNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CursorParameterNode.htm">Deveel.Data.Sql.Parser.CursorParameterNode</a></div><div class="ttdef"><b>Definition:</b> <a href="CursorParameterNode_8cs_source.htm#l00020">CursorParameterNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1PrivilegeNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1PrivilegeNode.htm">Deveel.Data.Sql.Parser.PrivilegeNode</a></div><div class="ttdef"><b>Definition:</b> <a href="PrivilegeNode_8cs_source.htm#l00022">PrivilegeNode.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DeclareCursorNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DeclareCursorNode.htm">Deveel.Data.Sql.Parser.DeclareCursorNode</a></div><div class="ttdef"><b>Definition:</b> <a href="DeclareCursorNode_8cs_source.htm#l00026">DeclareCursorNode.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a175bec5110687e4638877d827fbc5c18"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a175bec5110687e4638877d827fbc5c18">Deveel.Data.Sql.Parser.SqlGrammar.Revoke</a></div><div class="ttdeci">NonTerminal Revoke()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00886">SqlGrammar.cs:886</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a6ad70973ec9c3c55ef00502d7c833f68"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a6ad70973ec9c3c55ef00502d7c833f68">Deveel.Data.Sql.Parser.SqlGrammar.DropSchema</a></div><div class="ttdeci">NonTerminal DropSchema()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00730">SqlGrammar.cs:730</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1LabelNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1LabelNode.htm">Deveel.Data.Sql.Parser.LabelNode</a></div><div class="ttdef"><b>Definition:</b> <a href="LabelNode_8cs_source.htm#l00020">LabelNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a5c401adb17bcb50a5e88b517feebab38"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a5c401adb17bcb50a5e88b517feebab38">Deveel.Data.Sql.Parser.SqlGrammar.Select</a></div><div class="ttdeci">NonTerminal Select()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00808">SqlGrammar.cs:808</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a85fbb53a0130de22d589230c8663e81d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a85fbb53a0130de22d589230c8663e81d">Deveel.Data.Sql.Parser.SqlGrammar.ExceptionDeclaration</a></div><div class="ttdeci">NonTerminal ExceptionDeclaration()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00145">SqlGrammar.cs:145</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SetDefaultNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SetDefaultNode.htm">Deveel.Data.Sql.Parser.SetDefaultNode</a></div><div class="ttdef"><b>Definition:</b> <a href="SetDefaultNode_8cs_source.htm#l00020">SetDefaultNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropTableStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropTableStatementNode.htm">Deveel.Data.Sql.Parser.DropTableStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="DropTableStatementNode_8cs_source.htm#l00024">DropTableStatementNode.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SequenceOfStatementsNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SequenceOfStatementsNode.htm">Deveel.Data.Sql.Parser.SequenceOfStatementsNode</a></div><div class="ttdef"><b>Definition:</b> <a href="SequenceOfStatementsNode_8cs_source.htm#l00022">SequenceOfStatementsNode.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a83d9e1f677c22889ee1ec78a1f3eb231"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a83d9e1f677c22889ee1ec78a1f3eb231">Deveel.Data.Sql.Parser.SqlGrammar.MakeRoot</a></div><div class="ttdeci">override NonTerminal MakeRoot()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00027">SqlGrammar.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1RollbackStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1RollbackStatementNode.htm">Deveel.Data.Sql.Parser.RollbackStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="RollbackStatementNode_8cs_source.htm#l00020">RollbackStatementNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DeclarePragmaNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DeclarePragmaNode.htm">Deveel.Data.Sql.Parser.DeclarePragmaNode</a></div><div class="ttdef"><b>Definition:</b> <a href="DeclarePragmaNode_8cs_source.htm#l00020">DeclarePragmaNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropDefaultNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropDefaultNode.htm">Deveel.Data.Sql.Parser.DropDefaultNode</a></div><div class="ttdef"><b>Definition:</b> <a href="DropDefaultNode_8cs_source.htm#l00020">DropDefaultNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExceptionHandlerNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExceptionHandlerNode.htm">Deveel.Data.Sql.Parser.ExceptionHandlerNode</a></div><div class="ttdef"><b>Definition:</b> <a href="ExceptionHandlerNode_8cs_source.htm#l00022">ExceptionHandlerNode.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SimpleUpdateNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SimpleUpdateNode.htm">Deveel.Data.Sql.Parser.SimpleUpdateNode</a></div><div class="ttdef"><b>Definition:</b> <a href="SimpleUpdateNode_8cs_source.htm#l00021">SimpleUpdateNode.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_ad6395687910613431eda953d800fcf7c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ad6395687910613431eda953d800fcf7c">Deveel.Data.Sql.Parser.SqlGrammar.Open</a></div><div class="ttdeci">NonTerminal Open()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00163">SqlGrammar.cs:163</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CommitStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CommitStatementNode.htm">Deveel.Data.Sql.Parser.CommitStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="CommitStatementNode_8cs_source.htm#l00020">CommitStatementNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1AlterTableNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1AlterTableNode.htm">Deveel.Data.Sql.Parser.AlterTableNode</a></div><div class="ttdef"><b>Definition:</b> <a href="AlterTableNode_8cs_source.htm#l00024">AlterTableNode.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ContinueStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ContinueStatementNode.htm">Deveel.Data.Sql.Parser.ContinueStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="ContinueStatementNode_8cs_source.htm#l00023">ContinueStatementNode.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a6b02393c373eaf13a941c012a83367c7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a6b02393c373eaf13a941c012a83367c7">Deveel.Data.Sql.Parser.SqlGrammar.SqlStatementList</a></div><div class="ttdeci">NonTerminal SqlStatementList()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00056">SqlGrammar.cs:56</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateUserStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateUserStatementNode.htm">Deveel.Data.Sql.Parser.CreateUserStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="CreateUserStatementNode_8cs_source.htm#l00022">CreateUserStatementNode.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_ac0a7a849f7b06ab1b37077620b16beea"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ac0a7a849f7b06ab1b37077620b16beea">Deveel.Data.Sql.Parser.SqlGrammar.DropView</a></div><div class="ttdeci">NonTerminal DropView()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00749">SqlGrammar.cs:749</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1InsertSetNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1InsertSetNode.htm">Deveel.Data.Sql.Parser.InsertSetNode</a></div><div class="ttdef"><b>Definition:</b> <a href="ColumnSetNode_8cs_source.htm#l00021">ColumnSetNode.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">Deveel.Data.Sql.ObjectName</a></div><div class="ttdoc">Describes the name of an object within a database. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00044">ObjectName.cs:44</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a300052d4d825417dad0a41107d686e5e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a300052d4d825417dad0a41107d686e5e">Deveel.Data.Sql.Parser.SqlGrammar.DropType</a></div><div class="ttdeci">NonTerminal DropType()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00790">SqlGrammar.cs:790</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1AlterUserStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1AlterUserStatementNode.htm">Deveel.Data.Sql.Parser.AlterUserStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="AlterUserStatementNode_8cs_source.htm#l00021">AlterUserStatementNode.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_aa97f714e248715cedd66b6feecba97cf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aa97f714e248715cedd66b6feecba97cf">Deveel.Data.Sql.Parser.SqlGrammar.DropTable</a></div><div class="ttdeci">NonTerminal DropTable()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00737">SqlGrammar.cs:737</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1UpdateStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1UpdateStatementNode.htm">Deveel.Data.Sql.Parser.UpdateStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="UpdateStatementNode_8cs_source.htm#l00025">UpdateStatementNode.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_ae0f0cfd41529b514f808271c2f959aaf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ae0f0cfd41529b514f808271c2f959aaf">Deveel.Data.Sql.Parser.SqlGrammar.Productions</a></div><div class="ttdeci">void Productions(NonTerminal root)</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00034">SqlGrammar.cs:34</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a078396250a7f75c5ac69476492b638a7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a078396250a7f75c5ac69476492b638a7">Deveel.Data.Sql.Parser.SqlGrammar.Grant</a></div><div class="ttdeci">NonTerminal Grant()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00831">SqlGrammar.cs:831</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a3a5f6fedc550e91fd601622a68a2409b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a3a5f6fedc550e91fd601622a68a2409b">Deveel.Data.Sql.Parser.SqlGrammar.AlterTable</a></div><div class="ttdeci">NonTerminal AlterTable()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00621">SqlGrammar.cs:621</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExitStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExitStatementNode.htm">Deveel.Data.Sql.Parser.ExitStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="ExitStatementNode_8cs_source.htm#l00023">ExitStatementNode.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1AlterColumnNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1AlterColumnNode.htm">Deveel.Data.Sql.Parser.AlterColumnNode</a></div><div class="ttdef"><b>Definition:</b> <a href="AlterColumnNode_8cs_source.htm#l00020">AlterColumnNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammarBase_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammarBase.htm">Deveel.Data.Sql.Parser.SqlGrammarBase</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammarBase_8cs_source.htm#l00022">SqlGrammarBase.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1PlSqlCodeBlockNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1PlSqlCodeBlockNode.htm">Deveel.Data.Sql.Parser.PlSqlCodeBlockNode</a></div><div class="ttdef"><b>Definition:</b> <a href="PlSqlCodeBlockNode_8cs_source.htm#l00022">PlSqlCodeBlockNode.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1TableConstraintNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1TableConstraintNode.htm">Deveel.Data.Sql.Parser.TableConstraintNode</a></div><div class="ttdef"><b>Definition:</b> <a href="TableConstraintNode_8cs_source.htm#l00025">TableConstraintNode.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_abaae9e00b62f269a5e8d4cf550006686"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#abaae9e00b62f269a5e8d4cf550006686">Deveel.Data.Sql.Parser.SqlGrammar.Truncate</a></div><div class="ttdeci">NonTerminal Truncate()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00984">SqlGrammar.cs:984</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a359b8e376fc65f86d02588733eeaa8fe"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a359b8e376fc65f86d02588733eeaa8fe">Deveel.Data.Sql.Parser.SqlGrammar.CreateView</a></div><div class="ttdeci">NonTerminal CreateView()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00465">SqlGrammar.cs:465</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a72729526ac8b90e638eba802e92e6aac"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a72729526ac8b90e638eba802e92e6aac">Deveel.Data.Sql.Parser.SqlGrammar.CreateUser</a></div><div class="ttdeci">NonTerminal CreateUser()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00478">SqlGrammar.cs:478</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a854d16862d63d18396406e36ed2a14f5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a854d16862d63d18396406e36ed2a14f5">Deveel.Data.Sql.Parser.SqlGrammar.CreateIndex</a></div><div class="ttdeci">NonTerminal CreateIndex()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00501">SqlGrammar.cs:501</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1UpdateColumnNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1UpdateColumnNode.htm">Deveel.Data.Sql.Parser.UpdateColumnNode</a></div><div class="ttdef"><b>Definition:</b> <a href="UpdateColumnNode_8cs_source.htm#l00020">UpdateColumnNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1BreakStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1BreakStatementNode.htm">Deveel.Data.Sql.Parser.BreakStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="BreakStatementNode_8cs_source.htm#l00023">BreakStatementNode.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SetInsertNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SetInsertNode.htm">Deveel.Data.Sql.Parser.SetInsertNode</a></div><div class="ttdef"><b>Definition:</b> <a href="SetInsertNode_8cs_source.htm#l00022">SetInsertNode.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropPrimaryKeyNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropPrimaryKeyNode.htm">Deveel.Data.Sql.Parser.DropPrimaryKeyNode</a></div><div class="ttdef"><b>Definition:</b> <a href="DropPrimaryKeyNode_8cs_source.htm#l00020">DropPrimaryKeyNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a782175b92d71c1b72c985c7f52d53742"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a782175b92d71c1b72c985c7f52d53742">Deveel.Data.Sql.Parser.SqlGrammar.Set</a></div><div class="ttdeci">NonTerminal Set()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00990">SqlGrammar.cs:990</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_aa7515a53d95b20fba6b07b87f24ada48"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aa7515a53d95b20fba6b07b87f24ada48">Deveel.Data.Sql.Parser.SqlGrammar.CreateSchema</a></div><div class="ttdeci">NonTerminal CreateSchema()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00552">SqlGrammar.cs:552</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ColumnConstraintNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ColumnConstraintNode.htm">Deveel.Data.Sql.Parser.ColumnConstraintNode</a></div><div class="ttdef"><b>Definition:</b> <a href="ColumnConstraintNode_8cs_source.htm#l00020">ColumnConstraintNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_ad1c9aa133a6b48b598dac011c05d9b96"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ad1c9aa133a6b48b598dac011c05d9b96">Deveel.Data.Sql.Parser.SqlGrammar.Commit</a></div><div class="ttdeci">NonTerminal Commit()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00796">SqlGrammar.cs:796</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a7564524a5390236b8b39a97fe810b4a4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a7564524a5390236b8b39a97fe810b4a4">Deveel.Data.Sql.Parser.SqlGrammar.SetTransaction</a></div><div class="ttdeci">NonTerminal SetTransaction()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00996">SqlGrammar.cs:996</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropSchemaStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropSchemaStatementNode.htm">Deveel.Data.Sql.Parser.DropSchemaStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="DropSchemaStatementNode_8cs_source.htm#l00006">DropSchemaStatementNode.cs:6</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_adf06b473ba35525064a77b9e049fb156"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#adf06b473ba35525064a77b9e049fb156">Deveel.Data.Sql.Parser.SqlGrammar.OrReplace</a></div><div class="ttdeci">NonTerminal OrReplace()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00050">SqlGrammar.cs:50</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_abef0ce71f6c6cdfdf821b1bdd194ac7b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#abef0ce71f6c6cdfdf821b1bdd194ac7b">Deveel.Data.Sql.Parser.SqlGrammar.Declare</a></div><div class="ttdeci">NonTerminal Declare()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00095">SqlGrammar.cs:95</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryInsertNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryInsertNode.htm">Deveel.Data.Sql.Parser.QueryInsertNode</a></div><div class="ttdef"><b>Definition:</b> <a href="QueryInsertNode_8cs_source.htm#l00020">QueryInsertNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a4bb6959237158da3b7e450a78897150e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a4bb6959237158da3b7e450a78897150e">Deveel.Data.Sql.Parser.SqlGrammar.Fetch</a></div><div class="ttdeci">NonTerminal Fetch()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00180">SqlGrammar.cs:180</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a6b68af5b2e8bf0395947ef748f276ec7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a6b68af5b2e8bf0395947ef748f276ec7">Deveel.Data.Sql.Parser.SqlGrammar.Drop</a></div><div class="ttdeci">NonTerminal Drop()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00715">SqlGrammar.cs:715</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SetGroupsNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SetGroupsNode.htm">Deveel.Data.Sql.Parser.SetGroupsNode</a></div><div class="ttdef"><b>Definition:</b> <a href="SetGroupsNode_8cs_source.htm#l00021">SetGroupsNode.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DeclareVariableNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DeclareVariableNode.htm">Deveel.Data.Sql.Parser.DeclareVariableNode</a></div><div class="ttdef"><b>Definition:</b> <a href="DeclareVariableNode_8cs_source.htm#l00023">DeclareVariableNode.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GotoStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GotoStatementNode.htm">Deveel.Data.Sql.Parser.GotoStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="GotoStatementNode_8cs_source.htm#l00020">GotoStatementNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1OpenCursorStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1OpenCursorStatementNode.htm">Deveel.Data.Sql.Parser.OpenCursorStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="OpenCursorStatementNode_8cs_source.htm#l00026">OpenCursorStatementNode.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateTriggerNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateTriggerNode.htm">Deveel.Data.Sql.Parser.CreateTriggerNode</a></div><div class="ttdef"><b>Definition:</b> <a href="CreateTriggerNode_8cs_source.htm#l00021">CreateTriggerNode.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_ab55c37eb801de53e32d616f5c5338656"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ab55c37eb801de53e32d616f5c5338656">Deveel.Data.Sql.Parser.SqlGrammar.DropUser</a></div><div class="ttdeci">NonTerminal DropUser()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00784">SqlGrammar.cs:784</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CloseCursorStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CloseCursorStatementNode.htm">Deveel.Data.Sql.Parser.CloseCursorStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="CloseCursorStatementNode_8cs_source.htm#l00022">CloseCursorStatementNode.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_aba843f427ec91916047c5be4bede9e34"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aba843f427ec91916047c5be4bede9e34">Deveel.Data.Sql.Parser.SqlGrammar.DropSequence</a></div><div class="ttdeci">NonTerminal DropSequence()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00767">SqlGrammar.cs:767</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateTableNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateTableNode.htm">Deveel.Data.Sql.Parser.CreateTableNode</a></div><div class="ttdef"><b>Definition:</b> <a href="CreateTableNode_8cs_source.htm#l00025">CreateTableNode.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1IdentifiedByPasswordNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1IdentifiedByPasswordNode.htm">Deveel.Data.Sql.Parser.IdentifiedByPasswordNode</a></div><div class="ttdef"><b>Definition:</b> <a href="IdentifiedByPasswordNode_8cs_source.htm#l00020">IdentifiedByPasswordNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1InsertStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1InsertStatementNode.htm">Deveel.Data.Sql.Parser.InsertStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="InsertStatementNode_8cs_source.htm#l00025">InsertStatementNode.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a9b05d192242405f2b670ee543c243b54"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a9b05d192242405f2b670ee543c243b54">Deveel.Data.Sql.Parser.SqlGrammar.DeclareVariable</a></div><div class="ttdeci">NonTerminal DeclareVariable()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00157">SqlGrammar.cs:157</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1AddConstraintNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1AddConstraintNode.htm">Deveel.Data.Sql.Parser.AddConstraintNode</a></div><div class="ttdef"><b>Definition:</b> <a href="AddConstraintNode_8cs_source.htm#l00020">AddConstraintNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FetchStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FetchStatementNode.htm">Deveel.Data.Sql.Parser.FetchStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="FetchStatementNode_8cs_source.htm#l00008">FetchStatementNode.cs:8</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_aefd31ec0644fceb5f4391beb3679bb60"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aefd31ec0644fceb5f4391beb3679bb60">Deveel.Data.Sql.Parser.SqlGrammar.DeclareException</a></div><div class="ttdeci">NonTerminal DeclareException()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00151">SqlGrammar.cs:151</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a644d4062381cac0c4dc71a720fea2a34"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a644d4062381cac0c4dc71a720fea2a34">Deveel.Data.Sql.Parser.SqlGrammar.DeclareCursor</a></div><div class="ttdeci">NonTerminal DeclareCursor()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00123">SqlGrammar.cs:123</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a1839f3f3e0ff3accd7690d7469f7747e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a1839f3f3e0ff3accd7690d7469f7747e">Deveel.Data.Sql.Parser.SqlGrammar.CreateSequence</a></div><div class="ttdeci">NonTerminal CreateSequence()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00515">SqlGrammar.cs:515</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a7961335dfbf9939a679ce806ecd1672f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a7961335dfbf9939a679ce806ecd1672f">Deveel.Data.Sql.Parser.SqlGrammar.Update</a></div><div class="ttdeci">NonTerminal Update()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00962">SqlGrammar.cs:962</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a452096a01155ec85f21287cfecac7291"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a452096a01155ec85f21287cfecac7291">Deveel.Data.Sql.Parser.SqlGrammar.SqlStatement</a></div><div class="ttdeci">NonTerminal SqlStatement()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00064">SqlGrammar.cs:64</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a1b7cc7fb95404df540242f1daf970347"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a1b7cc7fb95404df540242f1daf970347">Deveel.Data.Sql.Parser.SqlGrammar.Rollback</a></div><div class="ttdeci">NonTerminal Rollback()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00802">SqlGrammar.cs:802</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a8d54040ede2afae1549921315c80cc76"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a8d54040ede2afae1549921315c80cc76">Deveel.Data.Sql.Parser.SqlGrammar.PlSqlBlock</a></div><div class="ttdeci">NonTerminal PlSqlBlock()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00220">SqlGrammar.cs:220</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_aa4f1ac03cf4dfe31a2663b05a57bfc3c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aa4f1ac03cf4dfe31a2663b05a57bfc3c">Deveel.Data.Sql.Parser.SqlGrammar.Insert</a></div><div class="ttdeci">NonTerminal Insert()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00921">SqlGrammar.cs:921</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_aefca5d008206d58b0961be150c3a77c5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#aefca5d008206d58b0961be150c3a77c5">Deveel.Data.Sql.Parser.SqlGrammar.CreateTable</a></div><div class="ttdeci">NonTerminal CreateTable()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00404">SqlGrammar.cs:404</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1LimitNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1LimitNode.htm">Deveel.Data.Sql.Parser.LimitNode</a></div><div class="ttdef"><b>Definition:</b> <a href="Deveel_8Data_8Sql_8Parser_2LimitNode_8cs_source.htm#l00020">LimitNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm">Deveel.Data.Sql.Parser.SqlGrammar</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00022">SqlGrammar.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a7a01458f028c4e98c7391b455eb539a7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a7a01458f028c4e98c7391b455eb539a7">Deveel.Data.Sql.Parser.SqlGrammar.AlterUser</a></div><div class="ttdeci">NonTerminal AlterUser()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00693">SqlGrammar.cs:693</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ValuesInsertNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ValuesInsertNode.htm">Deveel.Data.Sql.Parser.ValuesInsertNode</a></div><div class="ttdef"><b>Definition:</b> <a href="ValuesInsertNode_8cs_source.htm#l00022">ValuesInsertNode.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a419ec0f93ddb6721ad081c40d28e02de"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a419ec0f93ddb6721ad081c40d28e02de">Deveel.Data.Sql.Parser.SqlGrammar.CreateType</a></div><div class="ttdeci">NonTerminal CreateType()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00601">SqlGrammar.cs:601</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SetPasswordNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SetPasswordNode.htm">Deveel.Data.Sql.Parser.SetPasswordNode</a></div><div class="ttdef"><b>Definition:</b> <a href="SetPasswordNode_8cs_source.htm#l00020">SetPasswordNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateSequenceNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateSequenceNode.htm">Deveel.Data.Sql.Parser.CreateSequenceNode</a></div><div class="ttdef"><b>Definition:</b> <a href="CreateSequenceNode_8cs_source.htm#l00008">CreateSequenceNode.cs:8</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DeclareExceptionNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DeclareExceptionNode.htm">Deveel.Data.Sql.Parser.DeclareExceptionNode</a></div><div class="ttdef"><b>Definition:</b> <a href="DeclareExceptionNode_8cs_source.htm#l00020">DeclareExceptionNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1PlSqlBlockNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1PlSqlBlockNode.htm">Deveel.Data.Sql.Parser.PlSqlBlockNode</a></div><div class="ttdef"><b>Definition:</b> <a href="PlSqlBlockNode_8cs_source.htm#l00021">PlSqlBlockNode.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1AddColumnNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1AddColumnNode.htm">Deveel.Data.Sql.Parser.AddColumnNode</a></div><div class="ttdef"><b>Definition:</b> <a href="AddColumnNode_8cs_source.htm#l00021">AddColumnNode.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1TableColumnNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1TableColumnNode.htm">Deveel.Data.Sql.Parser.TableColumnNode</a></div><div class="ttdef"><b>Definition:</b> <a href="TableColumnNode_8cs_source.htm#l00026">TableColumnNode.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_ab16189d9fb71f988aad5891398dbaf52"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ab16189d9fb71f988aad5891398dbaf52">Deveel.Data.Sql.Parser.SqlGrammar.CursorDeclaration</a></div><div class="ttdeci">NonTerminal CursorDeclaration()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00105">SqlGrammar.cs:105</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a0e6dbed320e8eeb31a9c5930a2b2e22f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a0e6dbed320e8eeb31a9c5930a2b2e22f">Deveel.Data.Sql.Parser.SqlGrammar.Delete</a></div><div class="ttdeci">NonTerminal Delete()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00952">SqlGrammar.cs:952</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateViewNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateViewNode.htm">Deveel.Data.Sql.Parser.CreateViewNode</a></div><div class="ttdef"><b>Definition:</b> <a href="CreateViewNode_8cs_source.htm#l00026">CreateViewNode.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropViewStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropViewStatementNode.htm">Deveel.Data.Sql.Parser.DropViewStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="DropViewStatementNode_8cs_source.htm#l00024">DropViewStatementNode.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1InsertValueNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1InsertValueNode.htm">Deveel.Data.Sql.Parser.InsertValueNode</a></div><div class="ttdef"><b>Definition:</b> <a href="InsertValueNode_8cs_source.htm#l00021">InsertValueNode.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateSchemaNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1CreateSchemaNode.htm">Deveel.Data.Sql.Parser.CreateSchemaNode</a></div><div class="ttdef"><b>Definition:</b> <a href="CreateSchemaNode_8cs_source.htm#l00006">CreateSchemaNode.cs:6</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ReturnStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ReturnStatementNode.htm">Deveel.Data.Sql.Parser.ReturnStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="ReturnStatementNode_8cs_source.htm#l00020">ReturnStatementNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SelectStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SelectStatementNode.htm">Deveel.Data.Sql.Parser.SelectStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="SelectStatementNode_8cs_source.htm#l00026">SelectStatementNode.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropColumnNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropColumnNode.htm">Deveel.Data.Sql.Parser.DropColumnNode</a></div><div class="ttdef"><b>Definition:</b> <a href="DropColumnNode_8cs_source.htm#l00020">DropColumnNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropConstraintNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DropConstraintNode.htm">Deveel.Data.Sql.Parser.DropConstraintNode</a></div><div class="ttdef"><b>Definition:</b> <a href="DropConstraintNode_8cs_source.htm#l00020">DropConstraintNode.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GrantRoleStatementNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GrantRoleStatementNode.htm">Deveel.Data.Sql.Parser.GrantRoleStatementNode</a></div><div class="ttdef"><b>Definition:</b> <a href="GrantRoleStatementNode_8cs_source.htm#l00024">GrantRoleStatementNode.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_ad58ffedf21329722e394a7def2c669d8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#ad58ffedf21329722e394a7def2c669d8">Deveel.Data.Sql.Parser.SqlGrammar.DropTrigger</a></div><div class="ttdeci">NonTerminal DropTrigger()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l00773">SqlGrammar.cs:773</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar_htm_a5a8b91fed0d66dd804b75f7409e40da9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammar.htm#a5a8b91fed0d66dd804b75f7409e40da9">Deveel.Data.Sql.Parser.SqlGrammar.SetVariable</a></div><div class="ttdeci">NonTerminal SetVariable()</div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammar_8cs_source.htm#l01016">SqlGrammar.cs:1016</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
