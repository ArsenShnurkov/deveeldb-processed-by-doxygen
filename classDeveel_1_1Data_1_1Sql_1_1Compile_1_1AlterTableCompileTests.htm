<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Sql.Compile.AlterTableCompileTests Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Compile.htm">Compile</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm">AlterTableCompileTests</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Sql.Compile.AlterTableCompileTests Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for Deveel.Data.Sql.Compile.AlterTableCompileTests:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.png" usemap="#Deveel.Data.Sql.Compile.AlterTableCompileTests_map" alt=""/>
  <map id="Deveel.Data.Sql.Compile.AlterTableCompileTests_map" name="Deveel.Data.Sql.Compile.AlterTableCompileTests_map">
<area href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm" alt="Deveel.Data.Sql.Compile.CursorCompileTests" shape="rect" coords="0,56,288,80"/>
<area href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm" alt="Deveel.Data.Sql.Compile.SqlCompileTestBase" shape="rect" coords="0,0,288,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a88177820d9e16885949d9279a5f51621"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#a88177820d9e16885949d9279a5f51621">AddColumn</a> ()</td></tr>
<tr class="separator:a88177820d9e16885949d9279a5f51621"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94dfc01e591c09f9da68f9664981704e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#a94dfc01e591c09f9da68f9664981704e">AddMultipleColumns</a> ()</td></tr>
<tr class="separator:a94dfc01e591c09f9da68f9664981704e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae105cd0e6cd21873efd9b02f9263278"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#aae105cd0e6cd21873efd9b02f9263278">AddColumnsAndUniqeContraints</a> ()</td></tr>
<tr class="separator:aae105cd0e6cd21873efd9b02f9263278"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb590b122f0d6ad34a118126e03de9c7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#afb590b122f0d6ad34a118126e03de9c7">AddPrimaryKeyContraint</a> ()</td></tr>
<tr class="separator:afb590b122f0d6ad34a118126e03de9c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdf8a93f9c2fba889a21535babdbe6bb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1AlterTableCompileTests.htm#acdf8a93f9c2fba889a21535babdbe6bb">DropColumn</a> ()</td></tr>
<tr class="separator:acdf8a93f9c2fba889a21535babdbe6bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm">Deveel.Data.Sql.Compile.CursorCompileTests</a></td></tr>
<tr class="memitem:a0dbd71a7e7ca2ca312be252da0adea68 inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#a0dbd71a7e7ca2ca312be252da0adea68">DeclareCursorWithArguments</a> ()</td></tr>
<tr class="separator:a0dbd71a7e7ca2ca312be252da0adea68 inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4d697f76370f790d9bb3909b7d05d1b inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#af4d697f76370f790d9bb3909b7d05d1b">ImplicitDeclareCursor</a> ()</td></tr>
<tr class="separator:af4d697f76370f790d9bb3909b7d05d1b inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b1b32dd0fd202a6c956b0f1dc7cac75 inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#a2b1b32dd0fd202a6c956b0f1dc7cac75">DeclareCursorWithoutArguments</a> ()</td></tr>
<tr class="separator:a2b1b32dd0fd202a6c956b0f1dc7cac75 inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab624d83595cf29a23cb5457f8002ea2b inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#ab624d83595cf29a23cb5457f8002ea2b">OpenCursorWithArguments</a> ()</td></tr>
<tr class="separator:ab624d83595cf29a23cb5457f8002ea2b inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0de515d43181bb25e44213db130d787c inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#a0de515d43181bb25e44213db130d787c">OpenCursorSimple</a> ()</td></tr>
<tr class="separator:a0de515d43181bb25e44213db130d787c inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb5c06a0e3ea94fb8822d2e44e5cf3a7 inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#acb5c06a0e3ea94fb8822d2e44e5cf3a7">CloseCursor</a> ()</td></tr>
<tr class="separator:acb5c06a0e3ea94fb8822d2e44e5cf3a7 inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fb90ab0fab17c5ad1e51ce7bf2fce61 inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#a2fb90ab0fab17c5ad1e51ce7bf2fce61">FetchNextFromCursorInto</a> ()</td></tr>
<tr class="separator:a2fb90ab0fab17c5ad1e51ce7bf2fce61 inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ae95d52ee655d25236595681a2074c5 inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests.htm#a1ae95d52ee655d25236595681a2074c5">FetchNextImplicitCursor</a> ()</td></tr>
<tr class="separator:a1ae95d52ee655d25236595681a2074c5 inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1CursorCompileTests"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm">Deveel.Data.Sql.Compile.SqlCompileTestBase</a></td></tr>
<tr class="memitem:a649370af1dfa33626db2ca5e78662b8c inherit pro_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileResult.htm">SqlCompileResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Compile</a> (string sql)</td></tr>
<tr class="separator:a649370af1dfa33626db2ca5e78662b8c inherit pro_methods_classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="AlterTableCompileTests_8cs_source.htm#l00011">11</a> of file <a class="el" href="AlterTableCompileTests_8cs_source.htm">AlterTableCompileTests.cs</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a88177820d9e16885949d9279a5f51621"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Compile.AlterTableCompileTests.AddColumn </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="AlterTableCompileTests_8cs_source.htm#l00013">13</a> of file <a class="el" href="AlterTableCompileTests_8cs_source.htm">AlterTableCompileTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;                                {</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;ALTER TABLE test ADD COLUMN b INT NOT NULL&quot;</span>;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;            var result = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Compile</a>(sql);</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;            Assert.AreEqual(1, result.Statements.Count);</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;            var statement = result.Statements.First();</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;            Assert.IsNotNull(statement);</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>&gt;(statement);</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            var alterStatement = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>) statement;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;test&quot;</span>, alterStatement.TableName.FullName);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddColumnAction.htm">AddColumnAction</a>&gt;(alterStatement.Action);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            var alterAction = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddColumnAction.htm">AddColumnAction</a>) alterStatement.Action;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;b&quot;</span>, alterAction.Column.ColumnName);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm">NumericType</a>&gt;(alterAction.Column.ColumnType);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            Assert.IsTrue(alterAction.Column.IsNotNull);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm">Deveel.Data.Types.NumericType</a></div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00027">NumericType.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase_htm_a649370af1dfa33626db2ca5e78662b8c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Deveel.Data.Sql.Compile.SqlCompileTestBase.Compile</a></div><div class="ttdeci">SqlCompileResult Compile(string sql)</div><div class="ttdef"><b>Definition:</b> <a href="SqlCompileTestBase_8cs_source.htm#l00008">SqlCompileTestBase.cs:8</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddColumnAction_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddColumnAction.htm">Deveel.Data.Sql.Statements.AddColumnAction</a></div><div class="ttdef"><b>Definition:</b> <a href="AddColumnAction_8cs_source.htm#l00024">AddColumnAction.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">Deveel.Data.Sql.Statements.AlterTableStatement</a></div><div class="ttdef"><b>Definition:</b> <a href="AlterTableStatement_8cs_source.htm#l00028">AlterTableStatement.cs:28</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aae105cd0e6cd21873efd9b02f9263278"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Compile.AlterTableCompileTests.AddColumnsAndUniqeContraints </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="AlterTableCompileTests_8cs_source.htm#l00051">51</a> of file <a class="el" href="AlterTableCompileTests_8cs_source.htm">AlterTableCompileTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                                                   {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;ALTER TABLE test ADD COLUMN b INT NOT NULL ADD CONSTRAINT c UNIQUE(a, b)&quot;</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            var result = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Compile</a>(sql);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            Assert.AreEqual(2, result.Statements.Count);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            var firstStatement = result.Statements.ElementAt(0);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            var secondStatement = result.Statements.ElementAt(1);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            Assert.IsNotNull(firstStatement);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            Assert.IsNotNull(secondStatement);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>&gt;(firstStatement);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>&gt;(secondStatement);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            var alter1 = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>) firstStatement;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            var alter2 = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>) secondStatement;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddColumnAction.htm">AddColumnAction</a>&gt;(alter1.Action);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddConstraintAction.htm">AddConstraintAction</a>&gt;(alter2.Action);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddConstraintAction_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddConstraintAction.htm">Deveel.Data.Sql.Statements.AddConstraintAction</a></div><div class="ttdef"><b>Definition:</b> <a href="AddConstraintAction_8cs_source.htm#l00024">AddConstraintAction.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase_htm_a649370af1dfa33626db2ca5e78662b8c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Deveel.Data.Sql.Compile.SqlCompileTestBase.Compile</a></div><div class="ttdeci">SqlCompileResult Compile(string sql)</div><div class="ttdef"><b>Definition:</b> <a href="SqlCompileTestBase_8cs_source.htm#l00008">SqlCompileTestBase.cs:8</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddColumnAction_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddColumnAction.htm">Deveel.Data.Sql.Statements.AddColumnAction</a></div><div class="ttdef"><b>Definition:</b> <a href="AddColumnAction_8cs_source.htm#l00024">AddColumnAction.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">Deveel.Data.Sql.Statements.AlterTableStatement</a></div><div class="ttdef"><b>Definition:</b> <a href="AlterTableStatement_8cs_source.htm#l00028">AlterTableStatement.cs:28</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a94dfc01e591c09f9da68f9664981704e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Compile.AlterTableCompileTests.AddMultipleColumns </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="AlterTableCompileTests_8cs_source.htm#l00040">40</a> of file <a class="el" href="AlterTableCompileTests_8cs_source.htm">AlterTableCompileTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                                         {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;ALTER TABLE test ADD COLUMN b INT NOT NULL ADD c VARCHAR DEFAULT &#39;test&#39;&quot;</span>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            var result = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Compile</a>(sql);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            Assert.AreEqual(2, result.Statements.Count);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase_htm_a649370af1dfa33626db2ca5e78662b8c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Deveel.Data.Sql.Compile.SqlCompileTestBase.Compile</a></div><div class="ttdeci">SqlCompileResult Compile(string sql)</div><div class="ttdef"><b>Definition:</b> <a href="SqlCompileTestBase_8cs_source.htm#l00008">SqlCompileTestBase.cs:8</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="afb590b122f0d6ad34a118126e03de9c7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Compile.AlterTableCompileTests.AddPrimaryKeyContraint </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="AlterTableCompileTests_8cs_source.htm#l00077">77</a> of file <a class="el" href="AlterTableCompileTests_8cs_source.htm">AlterTableCompileTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                                             {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;ALTER TABLE test ADD CONSTRAINT c PRIMARY KEY(id)&quot;</span>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            var result = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Compile</a>(sql);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            Assert.AreEqual(1, result.Statements.Count);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            var statement = result.Statements.First();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            Assert.IsNotNull(statement);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>&gt;(statement);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            var alterStatement = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>) statement;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;test&quot;</span>, alterStatement.TableName.FullName);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddConstraintAction.htm">AddConstraintAction</a>&gt;(alterStatement.Action);            </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddConstraintAction_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AddConstraintAction.htm">Deveel.Data.Sql.Statements.AddConstraintAction</a></div><div class="ttdef"><b>Definition:</b> <a href="AddConstraintAction_8cs_source.htm#l00024">AddConstraintAction.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase_htm_a649370af1dfa33626db2ca5e78662b8c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Deveel.Data.Sql.Compile.SqlCompileTestBase.Compile</a></div><div class="ttdeci">SqlCompileResult Compile(string sql)</div><div class="ttdef"><b>Definition:</b> <a href="SqlCompileTestBase_8cs_source.htm#l00008">SqlCompileTestBase.cs:8</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">Deveel.Data.Sql.Statements.AlterTableStatement</a></div><div class="ttdef"><b>Definition:</b> <a href="AlterTableStatement_8cs_source.htm#l00028">AlterTableStatement.cs:28</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="acdf8a93f9c2fba889a21535babdbe6bb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Compile.AlterTableCompileTests.DropColumn </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="AlterTableCompileTests_8cs_source.htm#l00098">98</a> of file <a class="el" href="AlterTableCompileTests_8cs_source.htm">AlterTableCompileTests.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                                 {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> sql = <span class="stringliteral">&quot;ALTER TABLE test DROP COLUMN b&quot;</span>;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            var result = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Compile</a>(sql);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            Assert.IsFalse(result.HasErrors);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            Assert.IsNotEmpty(result.Statements);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            Assert.AreEqual(1, result.Statements.Count);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            var statement = result.Statements.ElementAt(0);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>&gt;(statement);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            var alter = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">AlterTableStatement</a>) statement;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DropColumnAction.htm">DropColumnAction</a>&gt;(alter.Action);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DropColumnAction_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1DropColumnAction.htm">Deveel.Data.Sql.Statements.DropColumnAction</a></div><div class="ttdef"><b>Definition:</b> <a href="DropColumnAction_8cs_source.htm#l00023">DropColumnAction.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase_htm_a649370af1dfa33626db2ca5e78662b8c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Compile_1_1SqlCompileTestBase.htm#a649370af1dfa33626db2ca5e78662b8c">Deveel.Data.Sql.Compile.SqlCompileTestBase.Compile</a></div><div class="ttdeci">SqlCompileResult Compile(string sql)</div><div class="ttdef"><b>Definition:</b> <a href="SqlCompileTestBase_8cs_source.htm#l00008">SqlCompileTestBase.cs:8</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Statements_1_1AlterTableStatement.htm">Deveel.Data.Sql.Statements.AlterTableStatement</a></div><div class="ttdef"><b>Definition:</b> <a href="AlterTableStatement_8cs_source.htm#l00028">AlterTableStatement.cs:28</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb-nunit/Deveel.Data.Sql.Compile/<a class="el" href="AlterTableCompileTests_8cs_source.htm">AlterTableCompileTests.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
