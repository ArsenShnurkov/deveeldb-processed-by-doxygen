<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb-nunit/Deveel.Data.Sql.Objects/SqlBooleanTest.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_161fca7059b832f09270a2e8ed498e3a.htm">deveeldb-nunit</a></li><li class="navelem"><a class="el" href="dir_4dbe6e6fc3d467f8fa2c5648deb90144.htm">Deveel.Data.Sql.Objects</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">SqlBooleanTest.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="SqlBooleanTest_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2014 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceNUnit.htm">NUnit</a>.Framework;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Sql.Objects {</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    [TestFixture]</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    [Category(<span class="stringliteral">&quot;SQL Objects&quot;</span>)]</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    [Category(<span class="stringliteral">&quot;Booleans&quot;</span>)]</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm">   24</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm">SqlBooleanTest</a> {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        [Test]</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a617dfe59bd9c741f131a2c704598e778">   26</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a617dfe59bd9c741f131a2c704598e778">CreateFromByte</a>() {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            var value = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>(1);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            Assert.IsNotNull(value);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            Assert.IsFalse(value.IsNull);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            Assert.AreEqual(<span class="keyword">true</span>, (<span class="keywordtype">bool</span>)value);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            value = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>(0);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            Assert.IsNotNull(value);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            Assert.IsFalse(value.IsNull);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            Assert.AreEqual(<span class="keyword">false</span>, (<span class="keywordtype">bool</span>)value);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        }</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        [Test]</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a56429ee4fe60dd6bf82c70ba11dc7fba">   39</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a56429ee4fe60dd6bf82c70ba11dc7fba">CreateFromBoolean</a>() {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            var value = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            Assert.IsNotNull(value);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            Assert.IsFalse(value.IsNull);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            Assert.AreEqual(<span class="keyword">true</span>, (<span class="keywordtype">bool</span>)value);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            value = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            Assert.IsNotNull(value);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            Assert.IsFalse(value.IsNull);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            Assert.AreEqual(<span class="keyword">false</span>, (<span class="keywordtype">bool</span>)value);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        [Test]</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        [Category(<span class="stringliteral">&quot;Comparison&quot;</span>)]</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#aca27f168b3d34d6a309e614e489e4ecb">   53</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#aca27f168b3d34d6a309e614e489e4ecb">Compare_Equal</a>() {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            var value2 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            Assert.IsFalse(value1.IsNull);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            Assert.IsFalse(value2.IsNull);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            Assert.IsTrue(value1.IsComparableTo(value2));</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keywordtype">int</span> i = -2;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            Assert.DoesNotThrow(() =&gt; i = value1.CompareTo(value2));</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            Assert.AreEqual(0, i);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        [Test]</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        [Category(<span class="stringliteral">&quot;Comparison&quot;</span>)]</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a94f45c7bb77a20364566202be0d6cd4c">   69</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a94f45c7bb77a20364566202be0d6cd4c">Compare_NotEqual</a>() {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.False;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            var value2 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            Assert.IsFalse(value1.IsNull);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            Assert.IsFalse(value2.IsNull);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            Assert.IsTrue(value1.IsComparableTo(value2));</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="keywordtype">int</span> i = -2;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            Assert.DoesNotThrow(() =&gt; i = value1.CompareTo(value2));</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            Assert.AreEqual(-1, i);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        [Test]</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        [Category(<span class="stringliteral">&quot;Comparison&quot;</span>)]</div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#aa451c4f7ea3b13b42d5f5256f7b74f56">   85</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#aa451c4f7ea3b13b42d5f5256f7b74f56">Compare_ToBooleanNull</a>() {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            var value2 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            Assert.IsFalse(value1.IsNull);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            Assert.IsTrue(value2.IsNull);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            Assert.IsTrue(value1.IsComparableTo(value2));</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordtype">int</span> i = -2;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            Assert.DoesNotThrow(() =&gt; i = value1.CompareTo(value2));</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            Assert.AreEqual(1, i);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        [Test]</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        [Category(<span class="stringliteral">&quot;Comparison&quot;</span>)]</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#acdcaee82be679f140bfd928bdf5a6d55">  101</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#acdcaee82be679f140bfd928bdf5a6d55">Compare_ToNull</a>() {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            var value2 = <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Value</a>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            Assert.IsFalse(value1.IsNull);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            Assert.IsTrue(value2.IsNull);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            Assert.IsTrue(value1.IsComparableTo(value2));</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordtype">int</span> i = -2;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            Assert.DoesNotThrow(() =&gt; i = value1.CompareTo(value2));</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            Assert.AreEqual(1, i);          </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        [Test]</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        [Category(<span class="stringliteral">&quot;Comparison&quot;</span>)]</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        [Category(<span class="stringliteral">&quot;Numbers&quot;</span>)]</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a46f6fbae91ffa73a10b469c7ede3bd7b">  118</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a46f6fbae91ffa73a10b469c7ede3bd7b">Compare_ToNumber_InRange</a>() {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            var value2 = <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ab2a04ae32fae52ab3bf7972e9003c35c">One</a>;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            Assert.IsFalse(value1.IsNull);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            Assert.IsFalse(value2.IsNull);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            Assert.IsTrue(value1.IsComparableTo(value2));</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordtype">int</span> i = -2;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            Assert.DoesNotThrow(() =&gt; i = value1.CompareTo(value2));</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            Assert.AreEqual(0, i);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            value2 = <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ac236f423532b37b3d012258d1246e320">Zero</a>;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            Assert.IsFalse(value1.IsNull);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            Assert.IsFalse(value2.IsNull);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            Assert.IsTrue(value1.IsComparableTo(value2));</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            i = -2;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            Assert.DoesNotThrow(() =&gt; i = value1.CompareTo(value2));</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            Assert.AreEqual(1, i);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        [Test]</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        [Category(<span class="stringliteral">&quot;Comparison&quot;</span>)]</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        [Category(<span class="stringliteral">&quot;Numbers&quot;</span>)]</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a1b2ed14099ad6bb308e4ea7141a00984">  146</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a1b2ed14099ad6bb308e4ea7141a00984">Compare_ToNumber_OutOfRange</a>() {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            var value2 = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(21);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            Assert.IsFalse(value1.IsNull);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            Assert.IsFalse(value2.IsNull);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            Assert.IsFalse(value1.IsComparableTo(value2));</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            <span class="keywordtype">int</span> i = -2;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            Assert.Throws&lt;ArgumentOutOfRangeException&gt;(() =&gt; i = value1.CompareTo(value2));</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            Assert.AreEqual(-2, i);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        [Test]</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        [Category(<span class="stringliteral">&quot;Operators&quot;</span>)]</div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a6e10f2358f71394523820cd17d5d5f37">  162</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a6e10f2358f71394523820cd17d5d5f37">Equality_True</a>() {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            var value2 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            Assert.IsTrue(value1 == value2);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        }</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        [Test]</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        [Category(<span class="stringliteral">&quot;Operators&quot;</span>)]</div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a6c4215c048988da78e12783a2a2d8257">  171</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a6c4215c048988da78e12783a2a2d8257">Equality_False</a>() {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            var value2 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.False;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            Assert.IsTrue(value1 != value2);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            value2 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            Assert.IsTrue(value1 != value2);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        }</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        [Test]</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        [Category(<span class="stringliteral">&quot;Operators&quot;</span>)]</div>
<div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a90a4663505667b6d01caed0464f63a13">  184</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a90a4663505667b6d01caed0464f63a13">Equality_ToNull_True</a>() {</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            var value2 = <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Value</a>;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            Assert.IsTrue(value1 == value2);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        [Test]</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        [Category(<span class="stringliteral">&quot;Conversion&quot;</span>)]</div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a228ccea1ef762db80d7ed034a5e4a9d2">  193</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a228ccea1ef762db80d7ed034a5e4a9d2">Convert_ToString</a>() {</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            var value = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;true&quot;</span>, value.ToString());</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            value = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.False;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;false&quot;</span>, value.ToString());</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            value = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;NULL&quot;</span>, value.ToString());</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    }</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest_htm_aa451c4f7ea3b13b42d5f5256f7b74f56"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#aa451c4f7ea3b13b42d5f5256f7b74f56">Deveel.Data.Sql.Objects.SqlBooleanTest.Compare_ToBooleanNull</a></div><div class="ttdeci">void Compare_ToBooleanNull()</div><div class="ttdef"><b>Definition:</b> <a href="SqlBooleanTest_8cs_source.htm#l00085">SqlBooleanTest.cs:85</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest_htm_a46f6fbae91ffa73a10b469c7ede3bd7b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a46f6fbae91ffa73a10b469c7ede3bd7b">Deveel.Data.Sql.Objects.SqlBooleanTest.Compare_ToNumber_InRange</a></div><div class="ttdeci">void Compare_ToNumber_InRange()</div><div class="ttdef"><b>Definition:</b> <a href="SqlBooleanTest_8cs_source.htm#l00118">SqlBooleanTest.cs:118</a></div></div>
<div class="ttc" id="namespaceNUnit_htm"><div class="ttname"><a href="namespaceNUnit.htm">NUnit</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest_htm_a228ccea1ef762db80d7ed034a5e4a9d2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a228ccea1ef762db80d7ed034a5e4a9d2">Deveel.Data.Sql.Objects.SqlBooleanTest.Convert_ToString</a></div><div class="ttdeci">void Convert_ToString()</div><div class="ttdef"><b>Definition:</b> <a href="SqlBooleanTest_8cs_source.htm#l00193">SqlBooleanTest.cs:193</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm_a34389e1b9a93987d32840d009a4e08b6"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Deveel.Data.Sql.Objects.SqlNull.Value</a></div><div class="ttdeci">static readonly SqlNull Value</div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00024">SqlNull.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ac236f423532b37b3d012258d1246e320"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ac236f423532b37b3d012258d1246e320">Deveel.Data.Sql.Objects.SqlNumber.Zero</a></div><div class="ttdeci">static readonly SqlNumber Zero</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00029">SqlNumber.cs:29</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest_htm_acdcaee82be679f140bfd928bdf5a6d55"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#acdcaee82be679f140bfd928bdf5a6d55">Deveel.Data.Sql.Objects.SqlBooleanTest.Compare_ToNull</a></div><div class="ttdeci">void Compare_ToNull()</div><div class="ttdef"><b>Definition:</b> <a href="SqlBooleanTest_8cs_source.htm#l00101">SqlBooleanTest.cs:101</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm">Deveel.Data.Sql.Objects.SqlBooleanTest</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlBooleanTest_8cs_source.htm#l00024">SqlBooleanTest.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest_htm_a94f45c7bb77a20364566202be0d6cd4c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a94f45c7bb77a20364566202be0d6cd4c">Deveel.Data.Sql.Objects.SqlBooleanTest.Compare_NotEqual</a></div><div class="ttdeci">void Compare_NotEqual()</div><div class="ttdef"><b>Definition:</b> <a href="SqlBooleanTest_8cs_source.htm#l00069">SqlBooleanTest.cs:69</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ab2a04ae32fae52ab3bf7972e9003c35c"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ab2a04ae32fae52ab3bf7972e9003c35c">Deveel.Data.Sql.Objects.SqlNumber.One</a></div><div class="ttdeci">static readonly SqlNumber One</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00030">SqlNumber.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest_htm_a6e10f2358f71394523820cd17d5d5f37"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a6e10f2358f71394523820cd17d5d5f37">Deveel.Data.Sql.Objects.SqlBooleanTest.Equality_True</a></div><div class="ttdeci">void Equality_True()</div><div class="ttdef"><b>Definition:</b> <a href="SqlBooleanTest_8cs_source.htm#l00162">SqlBooleanTest.cs:162</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a5611a45679d0938ba19c3f26d7385e67"><div class="ttname"><a href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlBoolean SqlBoolean</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00026">DataObject.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest_htm_a6c4215c048988da78e12783a2a2d8257"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a6c4215c048988da78e12783a2a2d8257">Deveel.Data.Sql.Objects.SqlBooleanTest.Equality_False</a></div><div class="ttdeci">void Equality_False()</div><div class="ttdef"><b>Definition:</b> <a href="SqlBooleanTest_8cs_source.htm#l00171">SqlBooleanTest.cs:171</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest_htm_a56429ee4fe60dd6bf82c70ba11dc7fba"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a56429ee4fe60dd6bf82c70ba11dc7fba">Deveel.Data.Sql.Objects.SqlBooleanTest.CreateFromBoolean</a></div><div class="ttdeci">void CreateFromBoolean()</div><div class="ttdef"><b>Definition:</b> <a href="SqlBooleanTest_8cs_source.htm#l00039">SqlBooleanTest.cs:39</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest_htm_aca27f168b3d34d6a309e614e489e4ecb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#aca27f168b3d34d6a309e614e489e4ecb">Deveel.Data.Sql.Objects.SqlBooleanTest.Compare_Equal</a></div><div class="ttdeci">void Compare_Equal()</div><div class="ttdef"><b>Definition:</b> <a href="SqlBooleanTest_8cs_source.htm#l00053">SqlBooleanTest.cs:53</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest_htm_a1b2ed14099ad6bb308e4ea7141a00984"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a1b2ed14099ad6bb308e4ea7141a00984">Deveel.Data.Sql.Objects.SqlBooleanTest.Compare_ToNumber_OutOfRange</a></div><div class="ttdeci">void Compare_ToNumber_OutOfRange()</div><div class="ttdef"><b>Definition:</b> <a href="SqlBooleanTest_8cs_source.htm#l00146">SqlBooleanTest.cs:146</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest_htm_a617dfe59bd9c741f131a2c704598e778"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a617dfe59bd9c741f131a2c704598e778">Deveel.Data.Sql.Objects.SqlBooleanTest.CreateFromByte</a></div><div class="ttdeci">void CreateFromByte()</div><div class="ttdef"><b>Definition:</b> <a href="SqlBooleanTest_8cs_source.htm#l00026">SqlBooleanTest.cs:26</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">Deveel.Data.Sql.Objects.SqlNumber</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00024">SqlNumber.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest_htm_a90a4663505667b6d01caed0464f63a13"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a90a4663505667b6d01caed0464f63a13">Deveel.Data.Sql.Objects.SqlBooleanTest.Equality_ToNull_True</a></div><div class="ttdeci">void Equality_ToNull_True()</div><div class="ttdef"><b>Definition:</b> <a href="SqlBooleanTest_8cs_source.htm#l00184">SqlBooleanTest.cs:184</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
