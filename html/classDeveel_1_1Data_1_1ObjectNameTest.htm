<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.ObjectNameTest Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1ObjectNameTest.htm">ObjectNameTest</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classDeveel_1_1Data_1_1ObjectNameTest-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.ObjectNameTest Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acf9b6bfb71a5c2944865639d84004b58"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1ObjectNameTest.htm#acf9b6bfb71a5c2944865639d84004b58">SimpleName</a> ()</td></tr>
<tr class="separator:acf9b6bfb71a5c2944865639d84004b58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55f97dc90b1a69e9018741f83e6253f7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1ObjectNameTest.htm#a55f97dc90b1a69e9018741f83e6253f7">ComplexName</a> ()</td></tr>
<tr class="separator:a55f97dc90b1a69e9018741f83e6253f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12efb1caeec94e96531fc9e7f5fb1204"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1ObjectNameTest.htm#a12efb1caeec94e96531fc9e7f5fb1204">ComplexNameWithGlob</a> ()</td></tr>
<tr class="separator:a12efb1caeec94e96531fc9e7f5fb1204"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1a2050dcaf0f617edf78918943ad964"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1ObjectNameTest.htm#ab1a2050dcaf0f617edf78918943ad964">SimpleName_Parse</a> ()</td></tr>
<tr class="separator:ab1a2050dcaf0f617edf78918943ad964"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae935e9bc0cd160662097bec7c8239cf3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1ObjectNameTest.htm#ae935e9bc0cd160662097bec7c8239cf3">ComplexName_Parse</a> ()</td></tr>
<tr class="separator:ae935e9bc0cd160662097bec7c8239cf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0990a07ac06ba89e4ce2d7d042679789"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1ObjectNameTest.htm#a0990a07ac06ba89e4ce2d7d042679789">SimpleName_Compare</a> ()</td></tr>
<tr class="separator:a0990a07ac06ba89e4ce2d7d042679789"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62ad3e22f78d5a6dff827e1b6204f948"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1ObjectNameTest.htm#a62ad3e22f78d5a6dff827e1b6204f948">SimpleName_Equals</a> ()</td></tr>
<tr class="separator:a62ad3e22f78d5a6dff827e1b6204f948"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afae039e57acc2af1cc063165e15a8a08"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1ObjectNameTest.htm#afae039e57acc2af1cc063165e15a8a08">SimpleName_NotEquals</a> ()</td></tr>
<tr class="separator:afae039e57acc2af1cc063165e15a8a08"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="ObjectNameTest_8cs_source.htm#l00025">25</a> of file <a class="el" href="ObjectNameTest_8cs_source.htm">ObjectNameTest.cs</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a55f97dc90b1a69e9018741f83e6253f7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.ObjectNameTest.ComplexName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ObjectNameTest_8cs_source.htm#l00037">37</a> of file <a class="el" href="ObjectNameTest_8cs_source.htm">ObjectNameTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                                  {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            var objName = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(<span class="stringliteral">&quot;parent&quot;</span>), <span class="stringliteral">&quot;id&quot;</span>);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            Assert.IsNotNull(objName);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            Assert.IsNotNull(objName.Parent);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;parent&quot;</span>, objName.Parent.Name);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            Assert.IsNotNull(objName.Name);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;id&quot;</span>, objName.Name);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;parent.id&quot;</span>, objName.FullName);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            Assert.IsFalse(objName.IsGlob);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">Deveel.Data.Sql.ObjectName</a></div><div class="ttdoc">Describes the name of an object within a database. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00044">ObjectName.cs:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae935e9bc0cd160662097bec7c8239cf3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.ObjectNameTest.ComplexName_Parse </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ObjectNameTest_8cs_source.htm#l00071">71</a> of file <a class="el" href="ObjectNameTest_8cs_source.htm">ObjectNameTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                                        {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> objName = null;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            Assert.DoesNotThrow(() =&gt; objName = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a94a5079bbbd800dffcc9010cfad8c5b1">Parse</a>(<span class="stringliteral">&quot;parent.id&quot;</span>));</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            Assert.IsNotNull(objName);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            Assert.IsNotNull(objName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a6173b4969b952472379e300c454ce664">Parent</a>);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;parent&quot;</span>, objName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a6173b4969b952472379e300c454ce664">Parent</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a68683242303d4743d20210e3c2db8db1">Name</a>);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            Assert.IsNotNull(objName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a68683242303d4743d20210e3c2db8db1">Name</a>);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;id&quot;</span>, objName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a68683242303d4743d20210e3c2db8db1">Name</a>);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;parent.id&quot;</span>, objName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#adc350268eb3d99c8f8d9806eba1b2bf3">FullName</a>);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            Assert.IsFalse(objName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a9a75627c57bcca11c7074ecce6615ad3">IsGlob</a>);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a94a5079bbbd800dffcc9010cfad8c5b1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a94a5079bbbd800dffcc9010cfad8c5b1">Deveel.Data.Sql.ObjectName.Parse</a></div><div class="ttdeci">static ObjectName Parse(string s)</div><div class="ttdoc">Parses the given string into a ObjectName object. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00139">ObjectName.cs:139</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">Deveel.Data.Sql.ObjectName</a></div><div class="ttdoc">Describes the name of an object within a database. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00044">ObjectName.cs:44</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a9a75627c57bcca11c7074ecce6615ad3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a9a75627c57bcca11c7074ecce6615ad3">Deveel.Data.Sql.ObjectName.IsGlob</a></div><div class="ttdeci">bool IsGlob</div><div class="ttdoc">Indicates if this reference equivales to GlobName. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00121">ObjectName.cs:121</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_adc350268eb3d99c8f8d9806eba1b2bf3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#adc350268eb3d99c8f8d9806eba1b2bf3">Deveel.Data.Sql.ObjectName.FullName</a></div><div class="ttdeci">string FullName</div><div class="ttdoc">Gets the full reference name formatted. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00114">ObjectName.cs:114</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a6173b4969b952472379e300c454ce664"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a6173b4969b952472379e300c454ce664">Deveel.Data.Sql.ObjectName.Parent</a></div><div class="ttdeci">ObjectName Parent</div><div class="ttdoc">Gets the parent reference of the current one, if any or null if none. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00099">ObjectName.cs:99</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a68683242303d4743d20210e3c2db8db1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a68683242303d4743d20210e3c2db8db1">Deveel.Data.Sql.ObjectName.Name</a></div><div class="ttdeci">string Name</div><div class="ttdoc">Gets the name of the object being referenced. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00108">ObjectName.cs:108</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a12efb1caeec94e96531fc9e7f5fb1204"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.ObjectNameTest.ComplexNameWithGlob </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ObjectNameTest_8cs_source.htm#l00049">49</a> of file <a class="el" href="ObjectNameTest_8cs_source.htm">ObjectNameTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                          {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            var objName = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(<span class="stringliteral">&quot;parent&quot;</span>), <span class="stringliteral">&quot;*&quot;</span>);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            Assert.IsNotNull(objName);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            Assert.IsNotNull(objName.Parent);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;parent&quot;</span>, objName.Parent.Name);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            Assert.IsNotNull(objName.Name);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;*&quot;</span>, objName.Name);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;parent.*&quot;</span>, objName.FullName);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            Assert.IsTrue(objName.IsGlob);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">Deveel.Data.Sql.ObjectName</a></div><div class="ttdoc">Describes the name of an object within a database. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00044">ObjectName.cs:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="acf9b6bfb71a5c2944865639d84004b58"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.ObjectNameTest.SimpleName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ObjectNameTest_8cs_source.htm#l00027">27</a> of file <a class="el" href="ObjectNameTest_8cs_source.htm">ObjectNameTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                                 {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            var objName = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(<span class="stringliteral">&quot;id&quot;</span>);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            Assert.IsNotNull(objName);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            Assert.IsNull(objName.Parent);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;id&quot;</span>, objName.Name);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;id&quot;</span>, objName.FullName);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            Assert.IsFalse(objName.IsGlob);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">Deveel.Data.Sql.ObjectName</a></div><div class="ttdoc">Describes the name of an object within a database. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00044">ObjectName.cs:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0990a07ac06ba89e4ce2d7d042679789"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.ObjectNameTest.SimpleName_Compare </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ObjectNameTest_8cs_source.htm#l00084">84</a> of file <a class="el" href="ObjectNameTest_8cs_source.htm">ObjectNameTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                         {</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            var objName1 = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(<span class="stringliteral">&quot;id1&quot;</span>);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            var objName2 = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(<span class="stringliteral">&quot;id2&quot;</span>);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="keywordtype">int</span> i = -2;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            Assert.DoesNotThrow(() =&gt; i = objName1.CompareTo(objName2));</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            Assert.AreEqual(-1, i);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">Deveel.Data.Sql.ObjectName</a></div><div class="ttdoc">Describes the name of an object within a database. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00044">ObjectName.cs:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a62ad3e22f78d5a6dff827e1b6204f948"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.ObjectNameTest.SimpleName_Equals </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ObjectNameTest_8cs_source.htm#l00094">94</a> of file <a class="el" href="ObjectNameTest_8cs_source.htm">ObjectNameTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                        {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            var objName1 = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(<span class="stringliteral">&quot;id1&quot;</span>);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            var objName2 = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(<span class="stringliteral">&quot;id1&quot;</span>);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            Assert.IsTrue(objName1.Equals(objName2));</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">Deveel.Data.Sql.ObjectName</a></div><div class="ttdoc">Describes the name of an object within a database. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00044">ObjectName.cs:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="afae039e57acc2af1cc063165e15a8a08"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.ObjectNameTest.SimpleName_NotEquals </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ObjectNameTest_8cs_source.htm#l00101">101</a> of file <a class="el" href="ObjectNameTest_8cs_source.htm">ObjectNameTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                           {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            var objName1 = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(<span class="stringliteral">&quot;id1&quot;</span>);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            var objName2 = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(<span class="stringliteral">&quot;id2&quot;</span>);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            Assert.IsFalse(objName1.Equals(objName2));</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">Deveel.Data.Sql.ObjectName</a></div><div class="ttdoc">Describes the name of an object within a database. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00044">ObjectName.cs:44</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab1a2050dcaf0f617edf78918943ad964"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.ObjectNameTest.SimpleName_Parse </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ObjectNameTest_8cs_source.htm#l00061">61</a> of file <a class="el" href="ObjectNameTest_8cs_source.htm">ObjectNameTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                                       {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> objName = null;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            Assert.DoesNotThrow(() =&gt; objName = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a94a5079bbbd800dffcc9010cfad8c5b1">Parse</a>(<span class="stringliteral">&quot;id&quot;</span>));</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            Assert.IsNotNull(objName);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;id&quot;</span>, objName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a68683242303d4743d20210e3c2db8db1">Name</a>);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;id&quot;</span>, objName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#adc350268eb3d99c8f8d9806eba1b2bf3">FullName</a>);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            Assert.IsFalse(objName.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a9a75627c57bcca11c7074ecce6615ad3">IsGlob</a>);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a94a5079bbbd800dffcc9010cfad8c5b1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a94a5079bbbd800dffcc9010cfad8c5b1">Deveel.Data.Sql.ObjectName.Parse</a></div><div class="ttdeci">static ObjectName Parse(string s)</div><div class="ttdoc">Parses the given string into a ObjectName object. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00139">ObjectName.cs:139</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">Deveel.Data.Sql.ObjectName</a></div><div class="ttdoc">Describes the name of an object within a database. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00044">ObjectName.cs:44</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a9a75627c57bcca11c7074ecce6615ad3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a9a75627c57bcca11c7074ecce6615ad3">Deveel.Data.Sql.ObjectName.IsGlob</a></div><div class="ttdeci">bool IsGlob</div><div class="ttdoc">Indicates if this reference equivales to GlobName. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00121">ObjectName.cs:121</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_adc350268eb3d99c8f8d9806eba1b2bf3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#adc350268eb3d99c8f8d9806eba1b2bf3">Deveel.Data.Sql.ObjectName.FullName</a></div><div class="ttdeci">string FullName</div><div class="ttdoc">Gets the full reference name formatted. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00114">ObjectName.cs:114</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a68683242303d4743d20210e3c2db8db1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a68683242303d4743d20210e3c2db8db1">Deveel.Data.Sql.ObjectName.Name</a></div><div class="ttdeci">string Name</div><div class="ttdoc">Gets the name of the object being referenced. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00108">ObjectName.cs:108</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb-nunit/Deveel.Data/<a class="el" href="ObjectNameTest_8cs_source.htm">ObjectNameTest.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
