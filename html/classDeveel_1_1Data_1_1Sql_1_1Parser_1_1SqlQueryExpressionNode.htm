<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Sql.Parser.SqlQueryExpressionNode Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Parser.htm">Parser</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm">SqlQueryExpressionNode</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pac-methods">Package Functions</a> &#124;
<a href="#properties">Properties</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Sql.Parser.SqlQueryExpressionNode Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>The root node of an expression used to select a set of items from a set of sources defined, given some conditions specified.  
 <a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#details">More...</a></p>
<div class="dynheader">
Inheritance diagram for Deveel.Data.Sql.Parser.SqlQueryExpressionNode:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.png" usemap="#Deveel.Data.Sql.Parser.SqlQueryExpressionNode_map" alt=""/>
  <map id="Deveel.Data.Sql.Parser.SqlQueryExpressionNode_map" name="Deveel.Data.Sql.Parser.SqlQueryExpressionNode_map">
<area href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm" title="The default implementation of ISqlNode, that is a node in the text analysis parsing of SQL commands..." alt="Deveel.Data.Sql.Parser.SqlNode" shape="rect" coords="152,56,446,80"/>
<area href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IExpressionNode.htm" title="This interface acts like a marker that indicates if a ISqlNode represents a SQL expression. " alt="Deveel.Data.Sql.Parser.IExpressionNode" shape="rect" coords="608,56,902,80"/>
<area href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm" title="Defines the contract for nodes in an AST model for a SQL grammar analysis and parsing. " alt="Deveel.Data.Sql.Parser.ISqlNode" shape="rect" coords="0,0,294,24"/>
<area href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm" title="Defines the contract for nodes in an AST model for a SQL grammar analysis and parsing. " alt="Deveel.Data.Sql.Parser.ISqlNode" shape="rect" coords="608,0,902,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a455d9594f50ebff174bc00fa71e7bc6f"><td class="memItemLeft" align="right" valign="top">override <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a455d9594f50ebff174bc00fa71e7bc6f">OnChildNode</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="memdesc:a455d9594f50ebff174bc00fa71e7bc6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">During the initialization of the node from the parser, this method is called for every child node added to <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a6ec9ab950c57cbf1d784f794e4862f0b" title="Gets an immutable list of nodes, children of the current node. ">ChildNodes</a>   <a href="#a455d9594f50ebff174bc00fa71e7bc6f">More...</a><br /></td></tr>
<tr class="separator:a455d9594f50ebff174bc00fa71e7bc6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm">Deveel.Data.Sql.Parser.SqlNode</a></td></tr>
<tr class="memitem:aec9e95ca3cecd639219089c3c32589a7 inherit pro_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#aec9e95ca3cecd639219089c3c32589a7">OnNodeInit</a> ()</td></tr>
<tr class="memdesc:aec9e95ca3cecd639219089c3c32589a7 inherit pro_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">After the initialization of the node from the parser, this method is invoked to let the specific initialization to occur.  <a href="#aec9e95ca3cecd639219089c3c32589a7">More...</a><br /></td></tr>
<tr class="separator:aec9e95ca3cecd639219089c3c32589a7 inherit pro_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pac-methods"></a>
Package Functions</h2></td></tr>
<tr class="memitem:a4d051291ed2d199dd3b7fc71cc81daa3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a4d051291ed2d199dd3b7fc71cc81daa3">SqlQueryExpressionNode</a> ()</td></tr>
<tr class="separator:a4d051291ed2d199dd3b7fc71cc81daa3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="properties"></a>
Properties</h2></td></tr>
<tr class="memitem:aad7411fae637ffffa0e6de687b4e74db"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad7411fae637ffffa0e6de687b4e74db">IsAll</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:aad7411fae637ffffa0e6de687b4e74db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a boolean value indicating if the selection will return all columns from the sources specified in <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ad470be00dbaaf9b2a35fa2f02018fa05" title="Gets the clause defining the sources from where to query. ">FromClause</a>.  <a href="#aad7411fae637ffffa0e6de687b4e74db">More...</a><br /></td></tr>
<tr class="separator:aad7411fae637ffffa0e6de687b4e74db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9533fc7aa5d0c65b35717ae49d04ac9c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a9533fc7aa5d0c65b35717ae49d04ac9c">IsDistinct</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a9533fc7aa5d0c65b35717ae49d04ac9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a boolean value indicating if the selection will return only results that are unique.  <a href="#a9533fc7aa5d0c65b35717ae49d04ac9c">More...</a><br /></td></tr>
<tr class="separator:a9533fc7aa5d0c65b35717ae49d04ac9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc7594e9ac505b2c125bbfa5d2d69645"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlReferenceExpressionNode.htm">SqlReferenceExpressionNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#adc7594e9ac505b2c125bbfa5d2d69645">IntoClause</a><code> [get, private set]</code></td></tr>
<tr class="separator:adc7594e9ac505b2c125bbfa5d2d69645"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abadce8d7a727a15038dcf001b2005a06"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SelectItemNode.htm">SelectItemNode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#abadce8d7a727a15038dcf001b2005a06">SelectItems</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:abadce8d7a727a15038dcf001b2005a06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a read-only list of <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SelectItemNode.htm">items</a> that will be returned by the query.  <a href="#abadce8d7a727a15038dcf001b2005a06">More...</a><br /></td></tr>
<tr class="separator:abadce8d7a727a15038dcf001b2005a06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad470be00dbaaf9b2a35fa2f02018fa05"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromClauseNode.htm">FromClauseNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ad470be00dbaaf9b2a35fa2f02018fa05">FromClause</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:ad470be00dbaaf9b2a35fa2f02018fa05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the clause defining the sources from where to query.  <a href="#ad470be00dbaaf9b2a35fa2f02018fa05">More...</a><br /></td></tr>
<tr class="separator:ad470be00dbaaf9b2a35fa2f02018fa05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19229b7fe935dda0a342d5032bedc032"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IExpressionNode.htm">IExpressionNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a19229b7fe935dda0a342d5032bedc032">WhereExpression</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a19229b7fe935dda0a342d5032bedc032"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an optional clause that is used to filter the queried objects.  <a href="#a19229b7fe935dda0a342d5032bedc032">More...</a><br /></td></tr>
<tr class="separator:a19229b7fe935dda0a342d5032bedc032"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1734cefb0a5e0a1b2aeb4d78bd1aaa7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GroupByNode.htm">GroupByNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ab1734cefb0a5e0a1b2aeb4d78bd1aaa7">GroupBy</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:ab1734cefb0a5e0a1b2aeb4d78bd1aaa7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an optional clause used to group and filter the results of a query.  <a href="#ab1734cefb0a5e0a1b2aeb4d78bd1aaa7">More...</a><br /></td></tr>
<tr class="separator:ab1734cefb0a5e0a1b2aeb4d78bd1aaa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad7f26334bffc3439d10fbf94714658d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryCompositeNode.htm">QueryCompositeNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad7f26334bffc3439d10fbf94714658d">Composite</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:aad7f26334bffc3439d10fbf94714658d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an optional definition for a composition between this query and another.  <a href="#aad7f26334bffc3439d10fbf94714658d">More...</a><br /></td></tr>
<tr class="separator:aad7f26334bffc3439d10fbf94714658d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td colspan="2" onclick="javascript:toggleInherit('properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode')"><img src="closed.png" alt="-"/>&#160;Properties inherited from <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm">Deveel.Data.Sql.Parser.SqlNode</a></td></tr>
<tr class="memitem:a11e94e676bc90355237f18fb79a66e18 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a11e94e676bc90355237f18fb79a66e18">Parent</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a11e94e676bc90355237f18fb79a66e18 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the parent of the current node.  <a href="#a11e94e676bc90355237f18fb79a66e18">More...</a><br /></td></tr>
<tr class="separator:a11e94e676bc90355237f18fb79a66e18 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55229a704d755b79993de8941b60617f inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a55229a704d755b79993de8941b60617f">NodeName</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a55229a704d755b79993de8941b60617f inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of the node, as expressed in the SQL grammar.  <a href="#a55229a704d755b79993de8941b60617f">More...</a><br /></td></tr>
<tr class="separator:a55229a704d755b79993de8941b60617f inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ec9ab950c57cbf1d784f794e4862f0b inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a6ec9ab950c57cbf1d784f794e4862f0b">ChildNodes</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a6ec9ab950c57cbf1d784f794e4862f0b inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an immutable list of <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">nodes</a>, children of the current node.  <a href="#a6ec9ab950c57cbf1d784f794e4862f0b">More...</a><br /></td></tr>
<tr class="separator:a6ec9ab950c57cbf1d784f794e4862f0b inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae67da2705629e870e7183bde27289d2a inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1Token.htm">Token</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#ae67da2705629e870e7183bde27289d2a">Tokens</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:ae67da2705629e870e7183bde27289d2a inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an immutable list of <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1Token.htm" title="This is a single token within a string parsed. ">Token</a> that represent the source of this node.  <a href="#ae67da2705629e870e7183bde27289d2a">More...</a><br /></td></tr>
<tr class="separator:ae67da2705629e870e7183bde27289d2a inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7c9f9d70ef7155b8730ebb76b047890 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">string ISqlNode.&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#aa7c9f9d70ef7155b8730ebb76b047890">NodeName</a><code> [get]</code></td></tr>
<tr class="separator:aa7c9f9d70ef7155b8730ebb76b047890 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b34c1276f47c47e24c5e3edd64f5563 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> ISqlNode.&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a1b34c1276f47c47e24c5e3edd64f5563">Parent</a><code> [get]</code></td></tr>
<tr class="separator:a1b34c1276f47c47e24c5e3edd64f5563 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73a772bb00bbbee167e34fe9c89c9b2a inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> &gt; ISqlNode.&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a73a772bb00bbbee167e34fe9c89c9b2a">ChildNodes</a><code> [get]</code></td></tr>
<tr class="separator:a73a772bb00bbbee167e34fe9c89c9b2a inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7355cfc36bac41ac9c6d6d354df9e76 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1Token.htm">Token</a> &gt; ISqlNode.&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#ad7355cfc36bac41ac9c6d6d354df9e76">Tokens</a><code> [get]</code></td></tr>
<tr class="separator:ad7355cfc36bac41ac9c6d6d354df9e76 inherit properties_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td colspan="2" onclick="javascript:toggleInherit('properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode')"><img src="closed.png" alt="-"/>&#160;Properties inherited from <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">Deveel.Data.Sql.Parser.ISqlNode</a></td></tr>
<tr class="memitem:a15af4a9f55b9d03b1265f1b3f0fb10d7 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a15af4a9f55b9d03b1265f1b3f0fb10d7">NodeName</a><code> [get]</code></td></tr>
<tr class="memdesc:a15af4a9f55b9d03b1265f1b3f0fb10d7 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of the node analyzed from the parser.  <a href="#a15af4a9f55b9d03b1265f1b3f0fb10d7">More...</a><br /></td></tr>
<tr class="separator:a15af4a9f55b9d03b1265f1b3f0fb10d7 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74dd6b1ed1ef2d59697c59d61fcb16c6 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a74dd6b1ed1ef2d59697c59d61fcb16c6">Parent</a><code> [get]</code></td></tr>
<tr class="memdesc:a74dd6b1ed1ef2d59697c59d61fcb16c6 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a reference to the parent <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm" title="Defines the contract for nodes in an AST model for a SQL grammar analysis and parsing. ">ISqlNode</a>, if any.  <a href="#a74dd6b1ed1ef2d59697c59d61fcb16c6">More...</a><br /></td></tr>
<tr class="separator:a74dd6b1ed1ef2d59697c59d61fcb16c6 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a156305a37aea852103bbae1642bfd8f8 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a156305a37aea852103bbae1642bfd8f8">ChildNodes</a><code> [get]</code></td></tr>
<tr class="memdesc:a156305a37aea852103bbae1642bfd8f8 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a read-only enumeration of the children nodes, if any.  <a href="#a156305a37aea852103bbae1642bfd8f8">More...</a><br /></td></tr>
<tr class="separator:a156305a37aea852103bbae1642bfd8f8 inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d50293a0d738577d4db74fa85767ede inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1Token.htm">Token</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm#a5d50293a0d738577d4db74fa85767ede">Tokens</a><code> [get]</code></td></tr>
<tr class="memdesc:a5d50293a0d738577d4db74fa85767ede inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an enumeration of the tokens composing the this node.  <a href="#a5d50293a0d738577d4db74fa85767ede">More...</a><br /></td></tr>
<tr class="separator:a5d50293a0d738577d4db74fa85767ede inherit properties_interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a5614608df490c4b01fafb6d12f54fa7c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a5614608df490c4b01fafb6d12f54fa7c">GetWhereClause</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:a5614608df490c4b01fafb6d12f54fa7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad6980dd632e6671f8bc3800f1f61557"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad6980dd632e6671f8bc3800f1f61557">GetRestrict</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:aad6980dd632e6671f8bc3800f1f61557"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5fbb9ce52201a05227416050d361d9f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ae5fbb9ce52201a05227416050d361d9f">GetSelectSet</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:ae5fbb9ce52201a05227416050d361d9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ac3a2c76541a131926010538e0baf62"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a7ac3a2c76541a131926010538e0baf62">GetSelectItems</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> node)</td></tr>
<tr class="separator:a7ac3a2c76541a131926010538e0baf62"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm">Deveel.Data.Sql.Parser.SqlNode</a></td></tr>
<tr class="memitem:a6b123ac842be4458d9452f73262c0fbd inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a6b123ac842be4458d9452f73262c0fbd">SqlNode</a> ()</td></tr>
<tr class="separator:a6b123ac842be4458d9452f73262c0fbd inherit pub_methods_classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The root node of an expression used to select a set of items from a set of sources defined, given some conditions specified. </p>

<p>Definition at line <a class="el" href="SqlQueryExpressionNode_8cs_source.htm#l00026">26</a> of file <a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a4d051291ed2d199dd3b7fc71cc81daa3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.SqlQueryExpressionNode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">package</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlQueryExpressionNode_8cs_source.htm#l00027">27</a> of file <a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                                          {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aad6980dd632e6671f8bc3800f1f61557"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.SqlQueryExpressionNode.GetRestrict </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlQueryExpressionNode_8cs_source.htm#l00107">107</a> of file <a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                                                {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                <span class="keywordflow">if</span> (childNode is SqlKeyNode) {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                    var value = ((SqlKeyNode) childNode).Text;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                    <span class="keywordflow">if</span> (value == <span class="stringliteral">&quot;ALL&quot;</span>) {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                        <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad7411fae637ffffa0e6de687b4e74db">IsAll</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value == <span class="stringliteral">&quot;DISTINCT&quot;</span>) {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                        <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a9533fc7aa5d0c65b35717ae49d04ac9c">IsDistinct</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                    }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_aad7411fae637ffffa0e6de687b4e74db"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad7411fae637ffffa0e6de687b4e74db">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.IsAll</a></div><div class="ttdeci">bool IsAll</div><div class="ttdoc">Gets a boolean value indicating if the selection will return all columns from the sources specified i...</div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00034">SqlQueryExpressionNode.cs:34</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_a9533fc7aa5d0c65b35717ae49d04ac9c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a9533fc7aa5d0c65b35717ae49d04ac9c">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.IsDistinct</a></div><div class="ttdeci">bool IsDistinct</div><div class="ttdoc">Gets a boolean value indicating if the selection will return only results that are unique...</div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00040">SqlQueryExpressionNode.cs:40</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a7ac3a2c76541a131926010538e0baf62"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.SqlQueryExpressionNode.GetSelectItems </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlQueryExpressionNode_8cs_source.htm#l00131">131</a> of file <a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                                                   {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            var items = <span class="keyword">new</span> List&lt;SelectItemNode&gt;();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                <span class="keywordflow">if</span> (childNode is SelectItemNode)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                    items.Add((SelectItemNode)childNode);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#abadce8d7a727a15038dcf001b2005a06">SelectItems</a> = items.ToArray();</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_abadce8d7a727a15038dcf001b2005a06"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#abadce8d7a727a15038dcf001b2005a06">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.SelectItems</a></div><div class="ttdeci">IEnumerable&lt; SelectItemNode &gt; SelectItems</div><div class="ttdoc">Gets a read-only list of items that will be returned by the query. </div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00048">SqlQueryExpressionNode.cs:48</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae5fbb9ce52201a05227416050d361d9f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.SqlQueryExpressionNode.GetSelectSet </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlQueryExpressionNode_8cs_source.htm#l00120">120</a> of file <a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                                                 {</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                <span class="keywordflow">if</span> (childNode is SqlKeyNode &amp;&amp;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                    ((SqlKeyNode) childNode).Text == <span class="stringliteral">&quot;*&quot;</span>) {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad7411fae637ffffa0e6de687b4e74db">IsAll</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (childNode.NodeName == <span class="stringliteral">&quot;select_item_list&quot;</span>) {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a7ac3a2c76541a131926010538e0baf62">GetSelectItems</a>(childNode);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_aad7411fae637ffffa0e6de687b4e74db"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad7411fae637ffffa0e6de687b4e74db">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.IsAll</a></div><div class="ttdeci">bool IsAll</div><div class="ttdoc">Gets a boolean value indicating if the selection will return all columns from the sources specified i...</div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00034">SqlQueryExpressionNode.cs:34</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_a7ac3a2c76541a131926010538e0baf62"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a7ac3a2c76541a131926010538e0baf62">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.GetSelectItems</a></div><div class="ttdeci">void GetSelectItems(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00131">SqlQueryExpressionNode.cs:131</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a5614608df490c4b01fafb6d12f54fa7c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Parser.SqlQueryExpressionNode.GetWhereClause </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlQueryExpressionNode_8cs_source.htm#l00098">98</a> of file <a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                                                   {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">foreach</span> (var childNode <span class="keywordflow">in</span> node.ChildNodes) {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                <span class="keywordflow">if</span> (childNode is IExpressionNode) {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a19229b7fe935dda0a342d5032bedc032">WhereExpression</a> = childNode as IExpressionNode;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_a19229b7fe935dda0a342d5032bedc032"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a19229b7fe935dda0a342d5032bedc032">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.WhereExpression</a></div><div class="ttdeci">IExpressionNode WhereExpression</div><div class="ttdoc">Gets an optional clause that is used to filter the queried objects. </div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00058">SqlQueryExpressionNode.cs:58</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a455d9594f50ebff174bc00fa71e7bc6f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> Deveel.Data.Sql.Parser.SqlQueryExpressionNode.OnChildNode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>During the initialization of the node from the parser, this method is called for every child node added to <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a6ec9ab950c57cbf1d784f794e4862f0b" title="Gets an immutable list of nodes, children of the current node. ">ChildNodes</a>  </p>

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a49fd30b6a75efbe17f430f0a42681f3a">Deveel.Data.Sql.Parser.SqlNode</a>.</p>

<p>Definition at line <a class="el" href="SqlQueryExpressionNode_8cs_source.htm#l00074">74</a> of file <a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                                                               {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;select_restrict_opt&quot;</span>) {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad6980dd632e6671f8bc3800f1f61557">GetRestrict</a>(node);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;select_set&quot;</span>) {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ae5fbb9ce52201a05227416050d361d9f">GetSelectSet</a>(node);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;from_clause_opt&quot;</span>) {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                var clause = node.ChildNodes.FirstOrDefault();</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                <span class="keywordflow">if</span> (clause != null)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ad470be00dbaaf9b2a35fa2f02018fa05">FromClause</a> = (FromClauseNode) clause;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;where_clause_opt&quot;</span>) {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a5614608df490c4b01fafb6d12f54fa7c">GetWhereClause</a>(node);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;group_by_opt&quot;</span>) {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ab1734cefb0a5e0a1b2aeb4d78bd1aaa7">GroupBy</a> = node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a6ec9ab950c57cbf1d784f794e4862f0b">ChildNodes</a>.FirstOrDefault() as GroupByNode;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;query_composite_opt&quot;</span>) {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                var composite = node.ChildNodes.FirstOrDefault();</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                <span class="keywordflow">if</span> (composite != null)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad7f26334bffc3439d10fbf94714658d">Composite</a> = (QueryCompositeNode) composite;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (node.NodeName == <span class="stringliteral">&quot;select_into_opt&quot;</span>) {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                <span class="comment">// TODO:</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">return</span> base.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryCompositeNode.htm#a445c745126ade830c761afa393fed2e1">OnChildNode</a>(node);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode_htm_a6ec9ab950c57cbf1d784f794e4862f0b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm#a6ec9ab950c57cbf1d784f794e4862f0b">Deveel.Data.Sql.Parser.SqlNode.ChildNodes</a></div><div class="ttdeci">IEnumerable&lt; ISqlNode &gt; ChildNodes</div><div class="ttdoc">Gets an immutable list of nodes, children of the current node. </div><div class="ttdef"><b>Definition:</b> <a href="SqlNode_8cs_source.htm#l00055">SqlNode.cs:55</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_aad6980dd632e6671f8bc3800f1f61557"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad6980dd632e6671f8bc3800f1f61557">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.GetRestrict</a></div><div class="ttdeci">void GetRestrict(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00107">SqlQueryExpressionNode.cs:107</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_ae5fbb9ce52201a05227416050d361d9f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ae5fbb9ce52201a05227416050d361d9f">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.GetSelectSet</a></div><div class="ttdeci">void GetSelectSet(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00120">SqlQueryExpressionNode.cs:120</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_ab1734cefb0a5e0a1b2aeb4d78bd1aaa7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ab1734cefb0a5e0a1b2aeb4d78bd1aaa7">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.GroupBy</a></div><div class="ttdeci">GroupByNode GroupBy</div><div class="ttdoc">Gets an optional clause used to group and filter the results of a query. </div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00064">SqlQueryExpressionNode.cs:64</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryCompositeNode_htm_a445c745126ade830c761afa393fed2e1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryCompositeNode.htm#a445c745126ade830c761afa393fed2e1">Deveel.Data.Sql.Parser.QueryCompositeNode.OnChildNode</a></div><div class="ttdeci">override ISqlNode OnChildNode(ISqlNode node)</div><div class="ttdoc">During the initialization of the node from the parser, this method is called for every child node add...</div><div class="ttdef"><b>Definition:</b> <a href="QueryCompositeNode_8cs_source.htm#l00049">QueryCompositeNode.cs:49</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_a5614608df490c4b01fafb6d12f54fa7c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a5614608df490c4b01fafb6d12f54fa7c">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.GetWhereClause</a></div><div class="ttdeci">void GetWhereClause(ISqlNode node)</div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00098">SqlQueryExpressionNode.cs:98</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_ad470be00dbaaf9b2a35fa2f02018fa05"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ad470be00dbaaf9b2a35fa2f02018fa05">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.FromClause</a></div><div class="ttdeci">FromClauseNode FromClause</div><div class="ttdoc">Gets the clause defining the sources from where to query. </div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00053">SqlQueryExpressionNode.cs:53</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_aad7f26334bffc3439d10fbf94714658d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad7f26334bffc3439d10fbf94714658d">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.Composite</a></div><div class="ttdeci">QueryCompositeNode Composite</div><div class="ttdoc">Gets an optional definition for a composition between this query and another. </div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00071">SqlQueryExpressionNode.cs:71</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Property Documentation</h2>
<a class="anchor" id="aad7f26334bffc3439d10fbf94714658d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryCompositeNode.htm">QueryCompositeNode</a> Deveel.Data.Sql.Parser.SqlQueryExpressionNode.Composite</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets an optional definition for a composition between this query and another. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryCompositeNode.htm" title="Composes two queries to obtain a set that is the result of a given composition function. ">QueryCompositeNode</a></dd></dl>

<p>Definition at line <a class="el" href="SqlQueryExpressionNode_8cs_source.htm#l00071">71</a> of file <a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="ad470be00dbaaf9b2a35fa2f02018fa05"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromClauseNode.htm">FromClauseNode</a> Deveel.Data.Sql.Parser.SqlQueryExpressionNode.FromClause</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the clause defining the sources from where to query. </p>

<p>Definition at line <a class="el" href="SqlQueryExpressionNode_8cs_source.htm#l00053">53</a> of file <a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="ab1734cefb0a5e0a1b2aeb4d78bd1aaa7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GroupByNode.htm">GroupByNode</a> Deveel.Data.Sql.Parser.SqlQueryExpressionNode.GroupBy</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets an optional clause used to group and filter the results of a query. </p>

<p>Definition at line <a class="el" href="SqlQueryExpressionNode_8cs_source.htm#l00064">64</a> of file <a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="adc7594e9ac505b2c125bbfa5d2d69645"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlReferenceExpressionNode.htm">SqlReferenceExpressionNode</a> Deveel.Data.Sql.Parser.SqlQueryExpressionNode.IntoClause</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlQueryExpressionNode_8cs_source.htm#l00042">42</a> of file <a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="aad7411fae637ffffa0e6de687b4e74db"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Sql.Parser.SqlQueryExpressionNode.IsAll</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a boolean value indicating if the selection will return all columns from the sources specified in <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ad470be00dbaaf9b2a35fa2f02018fa05" title="Gets the clause defining the sources from where to query. ">FromClause</a>. </p>

<p>Definition at line <a class="el" href="SqlQueryExpressionNode_8cs_source.htm#l00034">34</a> of file <a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a9533fc7aa5d0c65b35717ae49d04ac9c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Sql.Parser.SqlQueryExpressionNode.IsDistinct</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a boolean value indicating if the selection will return only results that are unique. </p>

<p>Definition at line <a class="el" href="SqlQueryExpressionNode_8cs_source.htm#l00040">40</a> of file <a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="abadce8d7a727a15038dcf001b2005a06"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">IEnumerable&lt;<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SelectItemNode.htm">SelectItemNode</a>&gt; Deveel.Data.Sql.Parser.SqlQueryExpressionNode.SelectItems</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a read-only list of <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SelectItemNode.htm">items</a> that will be returned by the query. </p>

<p>Definition at line <a class="el" href="SqlQueryExpressionNode_8cs_source.htm#l00048">48</a> of file <a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a19229b7fe935dda0a342d5032bedc032"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IExpressionNode.htm">IExpressionNode</a> Deveel.Data.Sql.Parser.SqlQueryExpressionNode.WhereExpression</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets an optional clause that is used to filter the queried objects. </p>

<p>Definition at line <a class="el" href="SqlQueryExpressionNode_8cs_source.htm#l00058">58</a> of file <a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Parser/<a class="el" href="SqlQueryExpressionNode_8cs_source.htm">SqlQueryExpressionNode.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
