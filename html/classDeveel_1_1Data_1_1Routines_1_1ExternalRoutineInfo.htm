<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Routines.ExternalRoutineInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Routines.htm">Routines</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm">ExternalRoutineInfo</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#properties">Properties</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Routines.ExternalRoutineInfo Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa2d5e209d9eac372c8c2b3fded289dd9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#aa2d5e209d9eac372c8c2b3fded289dd9">ExternalRoutineInfo</a> (Type type, Type[] argTypes)</td></tr>
<tr class="separator:aa2d5e209d9eac372c8c2b3fded289dd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50c6278292645aef25b08d413150a0cd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a50c6278292645aef25b08d413150a0cd">ExternalRoutineInfo</a> (Type type)</td></tr>
<tr class="separator:a50c6278292645aef25b08d413150a0cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac612844a438a7d9f09bdd9c828cc80eb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#ac612844a438a7d9f09bdd9c828cc80eb">ExternalRoutineInfo</a> (Type type, string methodName)</td></tr>
<tr class="separator:ac612844a438a7d9f09bdd9c828cc80eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76c75eb27fe70c4176a4b8b2d9477357"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a76c75eb27fe70c4176a4b8b2d9477357">ExternalRoutineInfo</a> (Type type, string methodName, Type[] argTypes)</td></tr>
<tr class="separator:a76c75eb27fe70c4176a4b8b2d9477357"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44140b5c8482879664383b2101e2e712"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a44140b5c8482879664383b2101e2e712">ExternalRoutineInfo</a> (string typeString, string methodName)</td></tr>
<tr class="separator:a44140b5c8482879664383b2101e2e712"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71d43b0fdff3f59021e71718bb8637f9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a71d43b0fdff3f59021e71718bb8637f9">ExternalRoutineInfo</a> (string typeString, string methodName, string[] argNames)</td></tr>
<tr class="separator:a71d43b0fdff3f59021e71718bb8637f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab28b5da1fe2e6b0a6a873bfde789e82b"><td class="memItemLeft" align="right" valign="top">MethodInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#ab28b5da1fe2e6b0a6a873bfde789e82b">ResolveMethod</a> (TType[] paramTypes)</td></tr>
<tr class="separator:ab28b5da1fe2e6b0a6a873bfde789e82b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53d13a5754d2ac330a3b7fba708ff809"><td class="memItemLeft" align="right" valign="top">override string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a53d13a5754d2ac330a3b7fba708ff809">ToString</a> ()</td></tr>
<tr class="separator:a53d13a5754d2ac330a3b7fba708ff809"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a70051063a7cea44eaec9e4ecfb075358"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm">ExternalRoutineInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a70051063a7cea44eaec9e4ecfb075358">Parse</a> (string s)</td></tr>
<tr class="separator:a70051063a7cea44eaec9e4ecfb075358"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b9d308e41fea3348cc7f3f44440e0bc"><td class="memItemLeft" align="right" valign="top">static string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a7b9d308e41fea3348cc7f3f44440e0bc">FormatString</a> (Type type)</td></tr>
<tr class="separator:a7b9d308e41fea3348cc7f3f44440e0bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38f6bef24ddc265e4c8b0fd8993fa1a7"><td class="memItemLeft" align="right" valign="top">static string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a38f6bef24ddc265e4c8b0fd8993fa1a7">FormatString</a> (Type type, Type[] argTypes)</td></tr>
<tr class="separator:a38f6bef24ddc265e4c8b0fd8993fa1a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43dfdc8e82d0a1e8f83b63f80f1009e9"><td class="memItemLeft" align="right" valign="top">static string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a43dfdc8e82d0a1e8f83b63f80f1009e9">FormatString</a> (Type type, string methodName)</td></tr>
<tr class="separator:a43dfdc8e82d0a1e8f83b63f80f1009e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e4fd4c0412fc7486f2fb7fa4d24777d"><td class="memItemLeft" align="right" valign="top">static string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a1e4fd4c0412fc7486f2fb7fa4d24777d">FormatString</a> (Type type, string methodName, Type[] argTypes)</td></tr>
<tr class="separator:a1e4fd4c0412fc7486f2fb7fa4d24777d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="properties"></a>
Properties</h2></td></tr>
<tr class="memitem:adf3033de99aebeae34060cb722c94794"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#adf3033de99aebeae34060cb722c94794">TypeName</a><code> [get, private set]</code></td></tr>
<tr class="separator:adf3033de99aebeae34060cb722c94794"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f068caea97c8782a6a3ae75fcc09ba6"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a2f068caea97c8782a6a3ae75fcc09ba6">MethodName</a><code> [get, private set]</code></td></tr>
<tr class="separator:a2f068caea97c8782a6a3ae75fcc09ba6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12ba671b3535ab6b4246ca7f151efd25"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a12ba671b3535ab6b4246ca7f151efd25">HasMethodName</a><code> [get]</code></td></tr>
<tr class="separator:a12ba671b3535ab6b4246ca7f151efd25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34e2b5297a4f65c8324b27da59dcface"><td class="memItemLeft" align="right" valign="top">string[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a34e2b5297a4f65c8324b27da59dcface">Arguments</a><code> [get, private set]</code></td></tr>
<tr class="separator:a34e2b5297a4f65c8324b27da59dcface"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:aaad4c4aff603078b79e500533123a250"><td class="memItemLeft" align="right" valign="top">static string[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#aaad4c4aff603078b79e500533123a250">ToTypeNames</a> (Type[] argTypes)</td></tr>
<tr class="separator:aaad4c4aff603078b79e500533123a250"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85a6aa1aa69abdbf9ae8a81bcf6d4e7f"><td class="memItemLeft" align="right" valign="top">static Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a85a6aa1aa69abdbf9ae8a81bcf6d4e7f">ResolveToType</a> (string typeString)</td></tr>
<tr class="memdesc:a85a6aa1aa69abdbf9ae8a81bcf6d4e7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resolves a type specification string to a Type.  <a href="#a85a6aa1aa69abdbf9ae8a81bcf6d4e7f">More...</a><br /></td></tr>
<tr class="separator:a85a6aa1aa69abdbf9ae8a81bcf6d4e7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00025">25</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aa2d5e209d9eac372c8c2b3fded289dd9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Routines.ExternalRoutineInfo.ExternalRoutineInfo </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Type[]&#160;</td>
          <td class="paramname"><em>argTypes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00026">26</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            : <span class="keyword">this</span>(type, null, argTypes) {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a50c6278292645aef25b08d413150a0cd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Routines.ExternalRoutineInfo.ExternalRoutineInfo </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00030">30</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            : <span class="keyword">this</span>(type, <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Empty) {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac612844a438a7d9f09bdd9c828cc80eb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Routines.ExternalRoutineInfo.ExternalRoutineInfo </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>methodName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00034">34</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            : <span class="keyword">this</span>(type, methodName, <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>.EmptyTypes) {</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm_a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Deveel.Data.Sql.DbObjectType.Type</a></div><div class="ttdoc">A user-defined TYPE that holds complex objects in a database column. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a76c75eb27fe70c4176a4b8b2d9477357"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Routines.ExternalRoutineInfo.ExternalRoutineInfo </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>methodName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Type[]&#160;</td>
          <td class="paramname"><em>argTypes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00038">38</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            : <span class="keyword">this</span>(type.FullName, methodName, <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#aaad4c4aff603078b79e500533123a250">ToTypeNames</a>(argTypes)) {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_aaad4c4aff603078b79e500533123a250"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#aaad4c4aff603078b79e500533123a250">Deveel.Data.Routines.ExternalRoutineInfo.ToTypeNames</a></div><div class="ttdeci">static string[] ToTypeNames(Type[] argTypes)</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00062">ExternalRoutineInfo.cs:62</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a44140b5c8482879664383b2101e2e712"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Routines.ExternalRoutineInfo.ExternalRoutineInfo </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>typeString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>methodName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00042">42</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            : <span class="keyword">this</span>(typeString, methodName, <span class="keyword">new</span> <span class="keywordtype">string</span>[0]) {</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a71d43b0fdff3f59021e71718bb8637f9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Routines.ExternalRoutineInfo.ExternalRoutineInfo </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>typeString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>methodName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string[]&#160;</td>
          <td class="paramname"><em>argNames</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00046">46</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                                                                            {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            this.<a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#adf3033de99aebeae34060cb722c94794">TypeName</a> = typeString;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            this.<a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a2f068caea97c8782a6a3ae75fcc09ba6">MethodName</a> = methodName;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            this.<a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a34e2b5297a4f65c8324b27da59dcface">Arguments</a> = argNames;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_a34e2b5297a4f65c8324b27da59dcface"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a34e2b5297a4f65c8324b27da59dcface">Deveel.Data.Routines.ExternalRoutineInfo.Arguments</a></div><div class="ttdeci">string[] Arguments</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00060">ExternalRoutineInfo.cs:60</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_a2f068caea97c8782a6a3ae75fcc09ba6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a2f068caea97c8782a6a3ae75fcc09ba6">Deveel.Data.Routines.ExternalRoutineInfo.MethodName</a></div><div class="ttdeci">string MethodName</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00054">ExternalRoutineInfo.cs:54</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_adf3033de99aebeae34060cb722c94794"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#adf3033de99aebeae34060cb722c94794">Deveel.Data.Routines.ExternalRoutineInfo.TypeName</a></div><div class="ttdeci">string TypeName</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00052">ExternalRoutineInfo.cs:52</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a7b9d308e41fea3348cc7f3f44440e0bc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static string Deveel.Data.Routines.ExternalRoutineInfo.FormatString </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00278">278</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                                                     {</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a7b9d308e41fea3348cc7f3f44440e0bc">FormatString</a>(type, <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>.EmptyTypes);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_a7b9d308e41fea3348cc7f3f44440e0bc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a7b9d308e41fea3348cc7f3f44440e0bc">Deveel.Data.Routines.ExternalRoutineInfo.FormatString</a></div><div class="ttdeci">static string FormatString(Type type)</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00278">ExternalRoutineInfo.cs:278</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm_a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Deveel.Data.Sql.DbObjectType.Type</a></div><div class="ttdoc">A user-defined TYPE that holds complex objects in a database column. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a38f6bef24ddc265e4c8b0fd8993fa1a7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static string Deveel.Data.Routines.ExternalRoutineInfo.FormatString </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Type[]&#160;</td>
          <td class="paramname"><em>argTypes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00282">282</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                                                                      {</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a7b9d308e41fea3348cc7f3f44440e0bc">FormatString</a>(type, null, argTypes);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_a7b9d308e41fea3348cc7f3f44440e0bc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a7b9d308e41fea3348cc7f3f44440e0bc">Deveel.Data.Routines.ExternalRoutineInfo.FormatString</a></div><div class="ttdeci">static string FormatString(Type type)</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00278">ExternalRoutineInfo.cs:278</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a43dfdc8e82d0a1e8f83b63f80f1009e9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static string Deveel.Data.Routines.ExternalRoutineInfo.FormatString </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>methodName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00286">286</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                                                                        {</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a7b9d308e41fea3348cc7f3f44440e0bc">FormatString</a>(type, methodName, <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>.EmptyTypes);</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_a7b9d308e41fea3348cc7f3f44440e0bc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a7b9d308e41fea3348cc7f3f44440e0bc">Deveel.Data.Routines.ExternalRoutineInfo.FormatString</a></div><div class="ttdeci">static string FormatString(Type type)</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00278">ExternalRoutineInfo.cs:278</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm_a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Deveel.Data.Sql.DbObjectType.Type</a></div><div class="ttdoc">A user-defined TYPE that holds complex objects in a database column. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1e4fd4c0412fc7486f2fb7fa4d24777d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static string Deveel.Data.Routines.ExternalRoutineInfo.FormatString </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>methodName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Type[]&#160;</td>
          <td class="paramname"><em>argTypes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00290">290</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                                                                         {</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            var routineInfo = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#aa2d5e209d9eac372c8c2b3fded289dd9">ExternalRoutineInfo</a>(type, methodName, argTypes);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <span class="keywordflow">return</span> routineInfo.ToString();</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_aa2d5e209d9eac372c8c2b3fded289dd9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#aa2d5e209d9eac372c8c2b3fded289dd9">Deveel.Data.Routines.ExternalRoutineInfo.ExternalRoutineInfo</a></div><div class="ttdeci">ExternalRoutineInfo(Type type, Type[] argTypes)</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00026">ExternalRoutineInfo.cs:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a70051063a7cea44eaec9e4ecfb075358"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm">ExternalRoutineInfo</a> Deveel.Data.Routines.ExternalRoutineInfo.Parse </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00246">246</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                                                          {</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            <span class="comment">// Look for the first parenthese</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="keywordtype">int</span> parentheseDelim = s.IndexOf(<span class="stringliteral">&quot;(&quot;</span>, StringComparison.InvariantCulture);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            <span class="keywordflow">if</span> (parentheseDelim != -1) {</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                <span class="comment">// This represents type/method</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                <span class="keywordtype">string</span> typeMethod = s.Substring(0, parentheseDelim);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                <span class="comment">// This will be deliminated by a &#39;.&#39;</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                <span class="keywordtype">int</span> methodDelim = typeMethod.LastIndexOf(<span class="stringliteral">&quot;.&quot;</span>, StringComparison.InvariantCulture);</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                <span class="keywordflow">if</span> (methodDelim == -1)</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> FormatException(<span class="stringliteral">&quot;Incorrectly formatted method string: &quot;</span> + s);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                <span class="keywordtype">string</span> typeString = typeMethod.Substring(0, methodDelim);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                <span class="keywordtype">string</span> methodString = typeMethod.Substring(methodDelim + 1);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                <span class="comment">// Next parse the argument list</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                <span class="keywordtype">int</span> endParentheseDelim = s.LastIndexOf(<span class="stringliteral">&quot;)&quot;</span>, StringComparison.InvariantCulture);</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                <span class="keywordflow">if</span> (endParentheseDelim == -1)</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> FormatException(<span class="stringliteral">&quot;Incorrectly formatted method string: &quot;</span> + s);</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                <span class="keywordtype">string</span> argListStr = s.Substring(parentheseDelim + 1, endParentheseDelim - (parentheseDelim + 1));</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                <span class="comment">// Now parse the list of arguments</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                <span class="keywordtype">string</span>[] args = argListStr.Split(<span class="keyword">new</span>[]{<span class="charliteral">&#39;,&#39;</span>}, StringSplitOptions.RemoveEmptyEntries);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#aa2d5e209d9eac372c8c2b3fded289dd9">ExternalRoutineInfo</a>(typeString, methodString, args);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            }</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            <span class="comment">// No parenthese so we assume this is a class</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#aa2d5e209d9eac372c8c2b3fded289dd9">ExternalRoutineInfo</a>(s, null);</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_aa2d5e209d9eac372c8c2b3fded289dd9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#aa2d5e209d9eac372c8c2b3fded289dd9">Deveel.Data.Routines.ExternalRoutineInfo.ExternalRoutineInfo</a></div><div class="ttdeci">ExternalRoutineInfo(Type type, Type[] argTypes)</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00026">ExternalRoutineInfo.cs:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab28b5da1fe2e6b0a6a873bfde789e82b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">MethodInfo Deveel.Data.Routines.ExternalRoutineInfo.ResolveMethod </td>
          <td>(</td>
          <td class="paramtype">TType[]&#160;</td>
          <td class="paramname"><em>paramTypes</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00155">155</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                                                            {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="comment">// The name of the class</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a> typeName;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="comment">// The name of the invokation method in the class.</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a> methodName;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="comment">// The object specification that must be matched.  If any entry is &#39;null&#39;</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="comment">// then the argument parameter is discovered.</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>[] argTypes;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordtype">bool</span> firstProcedureConnectionIgnore;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a12ba671b3535ab6b4246ca7f151efd25">HasMethodName</a>) {</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                <span class="comment">// This means the typeString only specifies a class name, so we use</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                <span class="comment">// &#39;Invoke&#39; as the static method to call, and discover the arguments.</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                typeName = <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#adf3033de99aebeae34060cb722c94794">TypeName</a>;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                methodName = <span class="stringliteral">&quot;Invoke&quot;</span>;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                <span class="comment">// All null which means we discover the arg types dynamically</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                argTypes = <span class="keyword">new</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>[paramTypes.Length];</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <span class="comment">// ignore IProcedureConnection is first argument</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                firstProcedureConnectionIgnore = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                <span class="comment">// This means we specify a class and method name and argument</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                <span class="comment">// specification.</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                typeName = <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#adf3033de99aebeae34060cb722c94794">TypeName</a>;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                methodName = <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a2f068caea97c8782a6a3ae75fcc09ba6">MethodName</a>;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                argTypes = <span class="keyword">new</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>[<a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a34e2b5297a4f65c8324b27da59dcface">Arguments</a>.Length];</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a34e2b5297a4f65c8324b27da59dcface">Arguments</a>.Length; ++i) {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                    <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a> typeSpec = <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a34e2b5297a4f65c8324b27da59dcface">Arguments</a>[i];</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                    argTypes[i] = <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a85a6aa1aa69abdbf9ae8a81bcf6d4e7f">ResolveToType</a>(typeSpec);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                }</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                firstProcedureConnectionIgnore = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            }</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a> routineType = <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>.GetType(typeName, <span class="keyword">false</span>, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keywordflow">if</span> (routineType == null)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Procedure class not found: &quot;</span> + typeName);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="comment">// Get all the methods in this class</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            MethodInfo[] methods = routineType.GetMethods(BindingFlags.Public | BindingFlags.Static);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            MethodInfo invokeMethod = null;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="comment">// Search for the invoke method</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            <span class="keywordflow">foreach</span> (MethodInfo method <span class="keywordflow">in</span> methods) {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                <span class="keywordflow">if</span> (method.Name.Equals(methodName)) {</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                    <span class="keywordtype">bool</span> paramsMatch;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                    <span class="comment">// Get the parameters for this method</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                    ParameterInfo[] methodArgs = method.GetParameters();</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                    <span class="comment">// If no methods, and object_specification has no args then this is a</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                    <span class="comment">// match.</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                    <span class="keywordflow">if</span> (methodArgs.Length == 0 &amp;&amp; argTypes.Length == 0) {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                        paramsMatch = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                        <span class="keywordtype">int</span> searchStart = 0;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                        <span class="comment">// Is the first arugments a IProcedureConnection implementation?</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                        <span class="keywordflow">if</span> (firstProcedureConnectionIgnore &amp;&amp;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                            typeof(IProcedureConnection).IsAssignableFrom(methodArgs[0].ParameterType)) {</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                            searchStart = 1;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                        }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                        <span class="comment">// Do the number of arguments match</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                        <span class="keywordflow">if</span> (argTypes.Length == methodArgs.Length - searchStart) {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                            <span class="comment">// Do they match the specification?</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                            <span class="keywordtype">bool</span> matchSpec = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 0; n &lt; argTypes.Length &amp;&amp; matchSpec; ++n) {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                                <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a> argType = argTypes[n];</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                                <span class="keywordflow">if</span> (argType != null &amp;&amp;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                                    argType != methodArgs[n + searchStart].ParameterType) {</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                                    matchSpec = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                                }</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                            }</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                            paramsMatch = matchSpec;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                            paramsMatch = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                        }</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                    }</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                    <span class="keywordflow">if</span> (paramsMatch) {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                        <span class="keywordflow">if</span> (invokeMethod != null)</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Ambiguous public static &quot;</span> + methodName + <span class="stringliteral">&quot; methods in stored procedure class &#39;&quot;</span> + typeName + <span class="stringliteral">&quot;&#39;&quot;</span>);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                        invokeMethod = method;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                    }</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            }</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            <span class="comment">// Return the invoke method we found</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            <span class="keywordflow">return</span> invokeMethod;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_a34e2b5297a4f65c8324b27da59dcface"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a34e2b5297a4f65c8324b27da59dcface">Deveel.Data.Routines.ExternalRoutineInfo.Arguments</a></div><div class="ttdeci">string[] Arguments</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00060">ExternalRoutineInfo.cs:60</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_a12ba671b3535ab6b4246ca7f151efd25"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a12ba671b3535ab6b4246ca7f151efd25">Deveel.Data.Routines.ExternalRoutineInfo.HasMethodName</a></div><div class="ttdeci">bool HasMethodName</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00056">ExternalRoutineInfo.cs:56</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm_a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Deveel.Data.Sql.DbObjectType.Type</a></div><div class="ttdoc">A user-defined TYPE that holds complex objects in a database column. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_a2f068caea97c8782a6a3ae75fcc09ba6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a2f068caea97c8782a6a3ae75fcc09ba6">Deveel.Data.Routines.ExternalRoutineInfo.MethodName</a></div><div class="ttdeci">string MethodName</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00054">ExternalRoutineInfo.cs:54</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_a85a6aa1aa69abdbf9ae8a81bcf6d4e7f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a85a6aa1aa69abdbf9ae8a81bcf6d4e7f">Deveel.Data.Routines.ExternalRoutineInfo.ResolveToType</a></div><div class="ttdeci">static Type ResolveToType(string typeString)</div><div class="ttdoc">Resolves a type specification string to a Type. </div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00079">ExternalRoutineInfo.cs:79</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_adf3033de99aebeae34060cb722c94794"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#adf3033de99aebeae34060cb722c94794">Deveel.Data.Routines.ExternalRoutineInfo.TypeName</a></div><div class="ttdeci">string TypeName</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00052">ExternalRoutineInfo.cs:52</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a85a6aa1aa69abdbf9ae8a81bcf6d4e7f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static Type Deveel.Data.Routines.ExternalRoutineInfo.ResolveToType </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>typeString</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Resolves a type specification string to a Type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">typeString</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00079">79</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                                                             {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <span class="comment">// Trim the string</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            typeString = typeString.Trim();</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="comment">// Is this an array?  Count the number of array dimensions.</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordtype">int</span> dimensions = -1;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordtype">int</span> lastIndex = typeString.Length;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="keywordflow">while</span> (lastIndex &gt; 0) {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                ++dimensions;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                lastIndex = typeString.LastIndexOf(<span class="stringliteral">&quot;[]&quot;</span>, lastIndex, StringComparison.InvariantCulture) - 1;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="comment">// Remove the array part</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keywordtype">int</span> arrayEnd = typeString.Length - (dimensions * 2);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a> typePart = typeString.Substring(0, arrayEnd);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="comment">// Check there&#39;s no array parts in the class part</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">if</span> (typePart.IndexOf(<span class="stringliteral">&quot;[]&quot;</span>, StringComparison.InvariantCulture) != -1)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Type specification incorrectly formatted: &quot;</span> + typeString);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="comment">// Convert the specification to a .NET Type.  For example,</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="comment">// String is converted to typeof(System.String), etc.</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a> cl;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="comment">// Is there a &#39;.&#39; in the class specification?</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">if</span> (typePart.IndexOf(<span class="charliteral">&#39;.&#39;</span>) != -1) {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                <span class="comment">// Must be a specification such as &#39;System.Uri&#39; or &#39;System.Collection.IList&#39;.</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                    cl = <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>.GetType(typePart);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                } <span class="keywordflow">catch</span> (TypeLoadException) {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Type not found: &quot;</span> + typePart);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                <span class="comment">// Try for a primitive types</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typePart.Equals(<span class="stringliteral">&quot;boolean&quot;</span>) ||</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                     typePart.Equals(<span class="stringliteral">&quot;bool&quot;</span>)) {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                cl = typeof(<span class="keywordtype">bool</span>);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typePart.Equals(<span class="stringliteral">&quot;byte&quot;</span>)) {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                cl = typeof(byte);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typePart.Equals(<span class="stringliteral">&quot;short&quot;</span>)) {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                cl = typeof(<span class="keywordtype">short</span>);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typePart.Equals(<span class="stringliteral">&quot;char&quot;</span>)) {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                cl = typeof(<span class="keywordtype">char</span>);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typePart.Equals(<span class="stringliteral">&quot;int&quot;</span>)) {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                cl = typeof(<span class="keywordtype">int</span>);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typePart.Equals(<span class="stringliteral">&quot;long&quot;</span>)) {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                cl = typeof(<span class="keywordtype">long</span>);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typePart.Equals(<span class="stringliteral">&quot;float&quot;</span>)) {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                cl = typeof(<span class="keywordtype">float</span>);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typePart.Equals(<span class="stringliteral">&quot;double&quot;</span>)) {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                cl = typeof(<span class="keywordtype">double</span>);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                <span class="comment">// Not a primitive type so try resolving against System.* or some</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                <span class="comment">// key classes in Deveel.Data.*</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                <span class="keywordflow">if</span> (typePart.Equals(<span class="stringliteral">&quot;IProcedureConnection&quot;</span>)) {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                    cl = typeof(IProcedureConnection);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                    <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                        cl = <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>.GetType(<span class="stringliteral">&quot;System.&quot;</span> + typePart);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                    } <span class="keywordflow">catch</span> (TypeLoadException) {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                        <span class="comment">// No luck so give up,</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Type not found: &quot;</span> + typePart);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                    }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="comment">// Finally make into a dimension if necessary</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            <span class="keywordflow">if</span> (dimensions &gt; 0) {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                <span class="comment">// This is a little untidy way of doing this.  Perhaps a better approach</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                <span class="comment">// would be to make an array encoded string.</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                cl = <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Array</a>.CreateInstance(cl, <span class="keyword">new</span> <span class="keywordtype">int</span>[dimensions]).GetType();</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="keywordflow">return</span> cl;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm_a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Deveel.Data.Sql.DbObjectType.Type</a></div><div class="ttdoc">A user-defined TYPE that holds complex objects in a database column. </div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Deveel.Data.Types.SqlTypeCode.Array</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a53d13a5754d2ac330a3b7fba708ff809"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override string Deveel.Data.Routines.ExternalRoutineInfo.ToString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00295">295</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                                          {</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            var sb = <span class="keyword">new</span> StringBuilder(<a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#adf3033de99aebeae34060cb722c94794">TypeName</a>);</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a12ba671b3535ab6b4246ca7f151efd25">HasMethodName</a>) {</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                sb.Append(<span class="charliteral">&#39;.&#39;</span>);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                sb.Append(<a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a2f068caea97c8782a6a3ae75fcc09ba6">MethodName</a>);</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            }</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            sb.Append(<span class="charliteral">&#39;(&#39;</span>);</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a34e2b5297a4f65c8324b27da59dcface">Arguments</a> != null &amp;&amp; <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a34e2b5297a4f65c8324b27da59dcface">Arguments</a>.Length &gt; 0) {</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a34e2b5297a4f65c8324b27da59dcface">Arguments</a>.Length; i++) {</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                    sb.Append(<a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a34e2b5297a4f65c8324b27da59dcface">Arguments</a>[i]);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                    <span class="keywordflow">if</span> (i &lt; <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a34e2b5297a4f65c8324b27da59dcface">Arguments</a>.Length - 1)</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                        sb.Append(<span class="stringliteral">&quot;, &quot;</span>);</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                }</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            }</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            sb.Append(<span class="charliteral">&#39;)&#39;</span>);</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            <span class="keywordflow">return</span> sb.ToString();</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_a34e2b5297a4f65c8324b27da59dcface"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a34e2b5297a4f65c8324b27da59dcface">Deveel.Data.Routines.ExternalRoutineInfo.Arguments</a></div><div class="ttdeci">string[] Arguments</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00060">ExternalRoutineInfo.cs:60</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_a12ba671b3535ab6b4246ca7f151efd25"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a12ba671b3535ab6b4246ca7f151efd25">Deveel.Data.Routines.ExternalRoutineInfo.HasMethodName</a></div><div class="ttdeci">bool HasMethodName</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00056">ExternalRoutineInfo.cs:56</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_a2f068caea97c8782a6a3ae75fcc09ba6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#a2f068caea97c8782a6a3ae75fcc09ba6">Deveel.Data.Routines.ExternalRoutineInfo.MethodName</a></div><div class="ttdeci">string MethodName</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00054">ExternalRoutineInfo.cs:54</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo_htm_adf3033de99aebeae34060cb722c94794"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1ExternalRoutineInfo.htm#adf3033de99aebeae34060cb722c94794">Deveel.Data.Routines.ExternalRoutineInfo.TypeName</a></div><div class="ttdeci">string TypeName</div><div class="ttdef"><b>Definition:</b> <a href="ExternalRoutineInfo_8cs_source.htm#l00052">ExternalRoutineInfo.cs:52</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aaad4c4aff603078b79e500533123a250"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static string [] Deveel.Data.Routines.ExternalRoutineInfo.ToTypeNames </td>
          <td>(</td>
          <td class="paramtype">Type[]&#160;</td>
          <td class="paramname"><em>argTypes</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00062">62</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                                                             {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <span class="keywordflow">if</span> (argTypes == null || argTypes.Length == 0)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <span class="keywordtype">string</span>[0];</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            var argNames = <span class="keyword">new</span> <span class="keywordtype">string</span>[argTypes.Length];</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="keywordflow">for</span> (var i = 0; i &lt; argTypes.Length; i++) {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                argNames[i] = argTypes[i].FullName;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <span class="keywordflow">return</span> argNames;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Property Documentation</h2>
<a class="anchor" id="a34e2b5297a4f65c8324b27da59dcface"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string [] Deveel.Data.Routines.ExternalRoutineInfo.Arguments</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00060">60</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a12ba671b3535ab6b4246ca7f151efd25"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Routines.ExternalRoutineInfo.HasMethodName</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00056">56</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a2f068caea97c8782a6a3ae75fcc09ba6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string Deveel.Data.Routines.ExternalRoutineInfo.MethodName</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00054">54</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>

</div>
</div>
<a class="anchor" id="adf3033de99aebeae34060cb722c94794"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string Deveel.Data.Routines.ExternalRoutineInfo.TypeName</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="ExternalRoutineInfo_8cs_source.htm#l00052">52</a> of file <a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Routines/<a class="el" href="ExternalRoutineInfo_8cs_source.htm">ExternalRoutineInfo.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
