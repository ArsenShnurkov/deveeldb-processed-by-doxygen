<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Sql.Query.QueryPlanSerializers Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Query.htm">Query</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm">QueryPlanSerializers</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pac-static-methods">Static Package Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Sql.Query.QueryPlanSerializers Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1CacheNodePointSerializer.htm">CacheNodePointSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1CompositeNodeSerializer.htm">CompositeNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1ConstantSelectNodeSerializer.htm">ConstantSelectNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1CreateFunctionNodeSerializer.htm">CreateFunctionNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1DistinctNodeSerializer.htm">DistinctNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1EquiJoinNodeSerializer.htm">EquiJoinNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1ExhaustiveSelectNodeSerializer.htm">ExhaustiveSelectNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1FetchTableNodeSerializer.htm">FetchTableNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1FetchViewNodeSerializer.htm">FetchViewNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1GroupNodeSerializer.htm">GroupNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1JoinNodeSerializer.htm">JoinNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1LeftOuterJoinNodeSerializer.htm">LeftOuterJoinNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1LimitNodeSerializer.htm">LimitNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1LogicalUnionNodeSerializer.htm">LogicalUnionNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1MarkerNodeSerializer.htm">MarkerNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1NaturalJoinNodeSerializer.htm">NaturalJoinNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1NonCorrelatedAnyAllNodeSerializer.htm">NonCorrelatedAnyAllNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1QueryPlanNodeSerializer.htm">QueryPlanNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1QueryPlanNodeSerializerResolver.htm">QueryPlanNodeSerializerResolver</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1RageSelectNodeSerializer.htm">RageSelectNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1SimplePatternSelectNodeSerializer.htm">SimplePatternSelectNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1SimpleSelectNodeSerializer.htm">SimpleSelectNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1SingleRowTableNodeSerializer.htm">SingleRowTableNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1SortNodeSerializer.htm">SortNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1SubsetNodeSerializer.htm">SubsetNodeSerializer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a273f738a8d2d1fc146def24bd5714ec3"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a273f738a8d2d1fc146def24bd5714ec3">Serialize</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Query_1_1IQueryPlanNode.htm">IQueryPlanNode</a> queryPlan, BinaryWriter writer)</td></tr>
<tr class="separator:a273f738a8d2d1fc146def24bd5714ec3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70ee8a3d496c9e33605404ca5e6cd81b"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Query_1_1IQueryPlanNode.htm">IQueryPlanNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a70ee8a3d496c9e33605404ca5e6cd81b">Deserialize</a> (Type nodeType, Stream inputStream)</td></tr>
<tr class="separator:a70ee8a3d496c9e33605404ca5e6cd81b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aede85eabbe359ae6b665a7420402edf5"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Query_1_1IQueryPlanNode.htm">IQueryPlanNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#aede85eabbe359ae6b665a7420402edf5">Deserialize</a> (Type nodeType, BinaryReader reader)</td></tr>
<tr class="separator:aede85eabbe359ae6b665a7420402edf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a36e07afaab32ec6d7d5ccb31754c1fd8"><td class="memItemLeft" align="right" valign="top">static readonly <a class="el" href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectSerializerResolver.htm">IObjectSerializerResolver</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a36e07afaab32ec6d7d5ccb31754c1fd8">Resolver</a> = new <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1QueryPlanNodeSerializerResolver.htm">QueryPlanNodeSerializerResolver</a>()</td></tr>
<tr class="separator:a36e07afaab32ec6d7d5ccb31754c1fd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pac-static-methods"></a>
Static Package Functions</h2></td></tr>
<tr class="memitem:ae7438ef29c8b50e9c0d00bbbb62a3c2d"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#ae7438ef29c8b50e9c0d00bbbb62a3c2d">RegisterSerializers</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1ISystemContext.htm">ISystemContext</a> context)</td></tr>
<tr class="separator:ae7438ef29c8b50e9c0d00bbbb62a3c2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:afd3406ce83e0d39b7c9ee46eafb3c61e"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#afd3406ce83e0d39b7c9ee46eafb3c61e">WriteChildNode</a> (BinaryWriter writer, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Query_1_1IQueryPlanNode.htm">IQueryPlanNode</a> node)</td></tr>
<tr class="separator:afd3406ce83e0d39b7c9ee46eafb3c61e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d6b2e144b9ec2207d7cd909754756f1"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Query_1_1IQueryPlanNode.htm">IQueryPlanNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a7d6b2e144b9ec2207d7cd909754756f1">ReadChildNode</a> (BinaryReader reader)</td></tr>
<tr class="separator:a7d6b2e144b9ec2207d7cd909754756f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47617486610dcc1dbe45e5aafb7eb4c6"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a47617486610dcc1dbe45e5aafb7eb4c6">WriteArray&lt; T &gt;</a> (T[] arrary, BinaryWriter writer, Action&lt; T, BinaryWriter &gt; write)</td></tr>
<tr class="separator:a47617486610dcc1dbe45e5aafb7eb4c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dcf53ddb8ca31a6bab87863086c082e"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a6dcf53ddb8ca31a6bab87863086c082e">WriteObjectNames</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>[] names, BinaryWriter writer)</td></tr>
<tr class="separator:a6dcf53ddb8ca31a6bab87863086c082e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28eee13d2fc3ecc2a2a623b1daf1679d"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a28eee13d2fc3ecc2a2a623b1daf1679d">WriteExpressions</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>[] expressions, BinaryWriter writer)</td></tr>
<tr class="separator:a28eee13d2fc3ecc2a2a623b1daf1679d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a6792bb3fe3d32e0ede9598451e9bd8"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a4a6792bb3fe3d32e0ede9598451e9bd8">WriteStrings</a> (string[] array, BinaryWriter writer)</td></tr>
<tr class="separator:a4a6792bb3fe3d32e0ede9598451e9bd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2df06f3808308216359ebc648dff68d4"><td class="memItemLeft" align="right" valign="top">static T[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a2df06f3808308216359ebc648dff68d4">ReadArray&lt; T &gt;</a> (BinaryReader reader, Func&lt; BinaryReader, T &gt; read)</td></tr>
<tr class="separator:a2df06f3808308216359ebc648dff68d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a840e312ce48911cee8b86b1bb3921010"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a840e312ce48911cee8b86b1bb3921010">ReadObjectNames</a> (BinaryReader reader)</td></tr>
<tr class="separator:a840e312ce48911cee8b86b1bb3921010"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff127a73e7fc87dad3c4b950014cdf96"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#aff127a73e7fc87dad3c4b950014cdf96">ReadExpressions</a> (BinaryReader reader)</td></tr>
<tr class="separator:aff127a73e7fc87dad3c4b950014cdf96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6343984ed511aed2766155896f7f5c10"><td class="memItemLeft" align="right" valign="top">static string[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a6343984ed511aed2766155896f7f5c10">ReadStrings</a> (BinaryReader reader)</td></tr>
<tr class="separator:a6343984ed511aed2766155896f7f5c10"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00027">27</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a70ee8a3d496c9e33605404ca5e6cd81b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Query_1_1IQueryPlanNode.htm">IQueryPlanNode</a> Deveel.Data.Sql.Query.QueryPlanSerializers.Deserialize </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>nodeType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Stream&#160;</td>
          <td class="paramname"><em>inputStream</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00065">65</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                                                                                    {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            var seriializer = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a36e07afaab32ec6d7d5ccb31754c1fd8">Resolver</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectSerializerResolver.htm#a8081962df5781cacc3645fe0f3fcbf8c">ResolveSerializer</a>(nodeType);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="keywordflow">if</span> (seriializer == null)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;Could not find any serializer for type &#39;{0}&#39;.&quot;</span>, nodeType));</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            <span class="keywordflow">return</span> seriializer.<a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectSerializer.htm#adc597454b3159160292417b84a42d04f">Deserialize</a>(inputStream) as IQueryPlanNode;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectSerializer_htm_adc597454b3159160292417b84a42d04f"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectSerializer.htm#adc597454b3159160292417b84a42d04f">Deveel.Data.Serialization.IObjectSerializer.Deserialize</a></div><div class="ttdeci">object Deserialize(Stream inputStream)</div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectSerializerResolver_htm_a8081962df5781cacc3645fe0f3fcbf8c"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectSerializerResolver.htm#a8081962df5781cacc3645fe0f3fcbf8c">Deveel.Data.Serialization.IObjectSerializerResolver.ResolveSerializer</a></div><div class="ttdeci">IObjectSerializer ResolveSerializer(Type objectType)</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_htm_a36e07afaab32ec6d7d5ccb31754c1fd8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a36e07afaab32ec6d7d5ccb31754c1fd8">Deveel.Data.Sql.Query.QueryPlanSerializers.Resolver</a></div><div class="ttdeci">static readonly IObjectSerializerResolver Resolver</div><div class="ttdef"><b>Definition:</b> <a href="QueryPlanSerializers_8cs_source.htm#l00028">QueryPlanSerializers.cs:28</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aede85eabbe359ae6b665a7420402edf5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Query_1_1IQueryPlanNode.htm">IQueryPlanNode</a> Deveel.Data.Sql.Query.QueryPlanSerializers.Deserialize </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>nodeType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BinaryReader&#160;</td>
          <td class="paramname"><em>reader</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00073">73</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                                                                                     {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            var seriializer = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a36e07afaab32ec6d7d5ccb31754c1fd8">Resolver</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectSerializerResolver.htm#a8081962df5781cacc3645fe0f3fcbf8c">ResolveSerializer</a>(nodeType) as <a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectBinarySerializer.htm">IObjectBinarySerializer</a>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">if</span> (seriializer == null)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;Could not find any serializer for type &#39;{0}&#39;.&quot;</span>, nodeType));</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="keywordflow">return</span> (IQueryPlanNode) seriializer.<a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectBinarySerializer.htm#a3c351d77e5bd0c9e0a663de10c25a7ba">Deserialize</a>(reader);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectBinarySerializer_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectBinarySerializer.htm">Deveel.Data.Serialization.IObjectBinarySerializer</a></div><div class="ttdef"><b>Definition:</b> <a href="IObjectBinarySerializer_8cs_source.htm#l00021">IObjectBinarySerializer.cs:21</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectSerializerResolver_htm_a8081962df5781cacc3645fe0f3fcbf8c"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectSerializerResolver.htm#a8081962df5781cacc3645fe0f3fcbf8c">Deveel.Data.Serialization.IObjectSerializerResolver.ResolveSerializer</a></div><div class="ttdeci">IObjectSerializer ResolveSerializer(Type objectType)</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_htm_a36e07afaab32ec6d7d5ccb31754c1fd8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a36e07afaab32ec6d7d5ccb31754c1fd8">Deveel.Data.Sql.Query.QueryPlanSerializers.Resolver</a></div><div class="ttdeci">static readonly IObjectSerializerResolver Resolver</div><div class="ttdef"><b>Definition:</b> <a href="QueryPlanSerializers_8cs_source.htm#l00028">QueryPlanSerializers.cs:28</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectBinarySerializer_htm_a3c351d77e5bd0c9e0a663de10c25a7ba"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectBinarySerializer.htm#a3c351d77e5bd0c9e0a663de10c25a7ba">Deveel.Data.Serialization.IObjectBinarySerializer.Deserialize</a></div><div class="ttdeci">object Deserialize(BinaryReader reader)</div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2df06f3808308216359ebc648dff68d4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static T [] Deveel.Data.Sql.Query.QueryPlanSerializers.ReadArray&lt; T &gt; </td>
          <td>(</td>
          <td class="paramtype">BinaryReader&#160;</td>
          <td class="paramname"><em>reader</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Func&lt; BinaryReader, T &gt;&#160;</td>
          <td class="paramname"><em>read</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00131">131</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                                                                                         {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            var count = reader.ReadInt32();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            var list = <span class="keyword">new</span> List&lt;T&gt;(count);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; count; i++) {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                var obj = read(reader);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                list.Add(obj);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="keywordflow">return</span> list.ToArray();</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a7d6b2e144b9ec2207d7cd909754756f1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Query_1_1IQueryPlanNode.htm">IQueryPlanNode</a> Deveel.Data.Sql.Query.QueryPlanSerializers.ReadChildNode </td>
          <td>(</td>
          <td class="paramtype">BinaryReader&#160;</td>
          <td class="paramname"><em>reader</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00093">93</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                                                                         {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            var state = reader.ReadByte();</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">if</span> (state == 0)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            var typeString = reader.ReadString();</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor">#if PCL</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            var type = <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>.GetType(typeString, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            var type = <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>.GetType(typeString, <span class="keyword">true</span>, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a70ee8a3d496c9e33605404ca5e6cd81b">Deserialize</a>(type, reader);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_htm_a70ee8a3d496c9e33605404ca5e6cd81b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a70ee8a3d496c9e33605404ca5e6cd81b">Deveel.Data.Sql.Query.QueryPlanSerializers.Deserialize</a></div><div class="ttdeci">static IQueryPlanNode Deserialize(Type nodeType, Stream inputStream)</div><div class="ttdef"><b>Definition:</b> <a href="QueryPlanSerializers_8cs_source.htm#l00065">QueryPlanSerializers.cs:65</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm_a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Deveel.Data.Sql.DbObjectType.Type</a></div><div class="ttdoc">A user-defined TYPE that holds complex objects in a database column. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aff127a73e7fc87dad3c4b950014cdf96"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> [] Deveel.Data.Sql.Query.QueryPlanSerializers.ReadExpressions </td>
          <td>(</td>
          <td class="paramtype">BinaryReader&#160;</td>
          <td class="paramname"><em>reader</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00146">146</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                                                            {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="keywordflow">return</span> ReadArray(reader, binaryReader =&gt; <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a86909c6bc2276d66241df507f6fc7467">Deserialize</a>(reader));</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a86909c6bc2276d66241df507f6fc7467"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a86909c6bc2276d66241df507f6fc7467">Deveel.Data.Sql.Expressions.SqlExpression.Deserialize</a></div><div class="ttdeci">static SqlExpression Deserialize(BinaryReader reader)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00572">SqlExpression.cs:572</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">Deveel.Data.Sql.Expressions.SqlExpression</a></div><div class="ttdoc">Defines the base class for instances that represent SQL expression tree nodes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00035">SqlExpression.cs:35</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a840e312ce48911cee8b86b1bb3921010"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a> [] Deveel.Data.Sql.Query.QueryPlanSerializers.ReadObjectNames </td>
          <td>(</td>
          <td class="paramtype">BinaryReader&#160;</td>
          <td class="paramname"><em>reader</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00142">142</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                                                                         {</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <span class="keywordflow">return</span> ReadArray(reader, ObjectName.Deserialize);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6343984ed511aed2766155896f7f5c10"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static string [] Deveel.Data.Sql.Query.QueryPlanSerializers.ReadStrings </td>
          <td>(</td>
          <td class="paramtype">BinaryReader&#160;</td>
          <td class="paramname"><em>reader</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00150">150</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                                                 {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="keywordflow">return</span> ReadArray(reader, binaryReader =&gt; binaryReader.ReadString());</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae7438ef29c8b50e9c0d00bbbb62a3c2d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Sql.Query.QueryPlanSerializers.RegisterSerializers </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1ISystemContext.htm">ISystemContext</a>&#160;</td>
          <td class="paramname"><em>context</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">package</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00030">30</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                                                                         {</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            context.RegisterService&lt;CacheNodePointSerializer&gt;();</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            context.RegisterService&lt;CompositeNodeSerializer&gt;();</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            context.RegisterService&lt;ConstantSelectNodeSerializer&gt;();</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            context.RegisterService&lt;CreateFunctionNodeSerializer&gt;();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            context.RegisterService&lt;DistinctNodeSerializer&gt;();</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            context.RegisterService&lt;EquiJoinNodeSerializer&gt;();</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            context.RegisterService&lt;ExhaustiveSelectNodeSerializer&gt;();</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            context.RegisterService&lt;FetchTableNodeSerializer&gt;();</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            context.RegisterService&lt;FetchViewNodeSerializer&gt;();</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            context.RegisterService&lt;GroupNodeSerializer&gt;();</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            context.RegisterService&lt;JoinNodeSerializer&gt;();</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            context.RegisterService&lt;LeftOuterJoinNodeSerializer&gt;();</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            context.RegisterService&lt;LogicalUnionNodeSerializer&gt;();</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            context.RegisterService&lt;MarkerNodeSerializer&gt;();</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            context.RegisterService&lt;NaturalJoinNodeSerializer&gt;();</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            context.RegisterService&lt;NonCorrelatedAnyAllNodeSerializer&gt;();</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            context.RegisterService&lt;RageSelectNodeSerializer&gt;();</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            context.RegisterService&lt;SimplePatternSelectNodeSerializer&gt;();</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            context.RegisterService&lt;SimpleSelectNodeSerializer&gt;();</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            context.RegisterService&lt;SingleRowTableNodeSerializer&gt;();</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            context.RegisterService&lt;SortNodeSerializer&gt;();</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            context.RegisterService&lt;SubsetNodeSerializer&gt;();</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            context.RegisterService&lt;LimitNodeSerializer&gt;();</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a273f738a8d2d1fc146def24bd5714ec3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Sql.Query.QueryPlanSerializers.Serialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Query_1_1IQueryPlanNode.htm">IQueryPlanNode</a>&#160;</td>
          <td class="paramname"><em>queryPlan</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BinaryWriter&#160;</td>
          <td class="paramname"><em>writer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00056">56</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                                                                    {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            var nodeType = queryPlan.GetType();</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            var seriializer = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a36e07afaab32ec6d7d5ccb31754c1fd8">Resolver</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectSerializerResolver.htm#a8081962df5781cacc3645fe0f3fcbf8c">ResolveSerializer</a>(nodeType) as <a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectBinarySerializer.htm">IObjectBinarySerializer</a>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <span class="keywordflow">if</span> (seriializer == null)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;Could not find any serializer for type &#39;{0}&#39;.&quot;</span>, nodeType));</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            seriializer.<a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectBinarySerializer.htm#a8c952fd587fe7923599718d0a87bf189">Serialize</a>(queryPlan, writer);           </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectBinarySerializer_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectBinarySerializer.htm">Deveel.Data.Serialization.IObjectBinarySerializer</a></div><div class="ttdef"><b>Definition:</b> <a href="IObjectBinarySerializer_8cs_source.htm#l00021">IObjectBinarySerializer.cs:21</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectSerializerResolver_htm_a8081962df5781cacc3645fe0f3fcbf8c"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectSerializerResolver.htm#a8081962df5781cacc3645fe0f3fcbf8c">Deveel.Data.Serialization.IObjectSerializerResolver.ResolveSerializer</a></div><div class="ttdeci">IObjectSerializer ResolveSerializer(Type objectType)</div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectBinarySerializer_htm_a8c952fd587fe7923599718d0a87bf189"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectBinarySerializer.htm#a8c952fd587fe7923599718d0a87bf189">Deveel.Data.Serialization.IObjectBinarySerializer.Serialize</a></div><div class="ttdeci">void Serialize(object obj, BinaryWriter writer)</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_htm_a36e07afaab32ec6d7d5ccb31754c1fd8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a36e07afaab32ec6d7d5ccb31754c1fd8">Deveel.Data.Sql.Query.QueryPlanSerializers.Resolver</a></div><div class="ttdeci">static readonly IObjectSerializerResolver Resolver</div><div class="ttdef"><b>Definition:</b> <a href="QueryPlanSerializers_8cs_source.htm#l00028">QueryPlanSerializers.cs:28</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a47617486610dcc1dbe45e5aafb7eb4c6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Sql.Query.QueryPlanSerializers.WriteArray&lt; T &gt; </td>
          <td>(</td>
          <td class="paramtype">T[]&#160;</td>
          <td class="paramname"><em>arrary</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BinaryWriter&#160;</td>
          <td class="paramname"><em>writer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Action&lt; T, BinaryWriter &gt;&#160;</td>
          <td class="paramname"><em>write</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00108">108</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                                                                                                          {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            var count = arrary == null ? 0 : arrary.Length;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            writer.Write(count);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keywordflow">if</span> (arrary != null) {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; count; i++) {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                    write(arrary[i], writer);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="afd3406ce83e0d39b7c9ee46eafb3c61e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Sql.Query.QueryPlanSerializers.WriteChildNode </td>
          <td>(</td>
          <td class="paramtype">BinaryWriter&#160;</td>
          <td class="paramname"><em>writer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Query_1_1IQueryPlanNode.htm">IQueryPlanNode</a>&#160;</td>
          <td class="paramname"><em>node</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00081">81</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                                                                                     {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="keywordflow">if</span> (node == null) {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                writer.Write((byte) 0);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                var nodeTypeString = node.GetType().FullName;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                writer.Write((byte)1);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                writer.Write(nodeTypeString);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a273f738a8d2d1fc146def24bd5714ec3">Serialize</a>(node, writer);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_htm_a273f738a8d2d1fc146def24bd5714ec3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers.htm#a273f738a8d2d1fc146def24bd5714ec3">Deveel.Data.Sql.Query.QueryPlanSerializers.Serialize</a></div><div class="ttdeci">static void Serialize(IQueryPlanNode queryPlan, BinaryWriter writer)</div><div class="ttdef"><b>Definition:</b> <a href="QueryPlanSerializers_8cs_source.htm#l00056">QueryPlanSerializers.cs:56</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a28eee13d2fc3ecc2a2a623b1daf1679d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Sql.Query.QueryPlanSerializers.WriteExpressions </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>[]&#160;</td>
          <td class="paramname"><em>expressions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BinaryWriter&#160;</td>
          <td class="paramname"><em>writer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00123">123</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                                                                                               {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            WriteArray(expressions, writer, (expression, binaryWriter) =&gt; <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a5919df6e685bce7a769e4640a20e80c1">Serialize</a>(expression, binaryWriter));</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a5919df6e685bce7a769e4640a20e80c1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a5919df6e685bce7a769e4640a20e80c1">Deveel.Data.Sql.Expressions.SqlExpression.Serialize</a></div><div class="ttdeci">static void Serialize(SqlExpression expression, BinaryWriter writer)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00567">SqlExpression.cs:567</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">Deveel.Data.Sql.Expressions.SqlExpression</a></div><div class="ttdoc">Defines the base class for instances that represent SQL expression tree nodes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00035">SqlExpression.cs:35</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6dcf53ddb8ca31a6bab87863086c082e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Sql.Query.QueryPlanSerializers.WriteObjectNames </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>[]&#160;</td>
          <td class="paramname"><em>names</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BinaryWriter&#160;</td>
          <td class="paramname"><em>writer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00119">119</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                                                                      {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            WriteArray(names, writer, ObjectName.Serialize);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4a6792bb3fe3d32e0ede9598451e9bd8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Sql.Query.QueryPlanSerializers.WriteStrings </td>
          <td>(</td>
          <td class="paramtype">string[]&#160;</td>
          <td class="paramname"><em>array</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BinaryWriter&#160;</td>
          <td class="paramname"><em>writer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00127">127</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                                                              {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            WriteArray(array, writer, (s, binaryWriter) =&gt; binaryWriter.Write(s));</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a36e07afaab32ec6d7d5ccb31754c1fd8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly <a class="el" href="interfaceDeveel_1_1Data_1_1Serialization_1_1IObjectSerializerResolver.htm">IObjectSerializerResolver</a> Deveel.Data.Sql.Query.QueryPlanSerializers.Resolver = new <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Query_1_1QueryPlanSerializers_1_1QueryPlanNodeSerializerResolver.htm">QueryPlanNodeSerializerResolver</a>()</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="QueryPlanSerializers_8cs_source.htm#l00028">28</a> of file <a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Query/<a class="el" href="QueryPlanSerializers_8cs_source.htm">QueryPlanSerializers.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
