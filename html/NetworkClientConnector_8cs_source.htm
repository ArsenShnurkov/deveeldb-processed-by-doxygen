<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Protocol/NetworkClientConnector.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_02e926e2c318bb7407624268db028ff1.htm">Deveel.Data.Protocol</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">NetworkClientConnector.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="NetworkClientConnector_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2014 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Data;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.IO;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Net.Sockets;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Runtime.Serialization.Formatters.Binary;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Security.Cryptography;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Text;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Threading;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Client.htm">Client</a>;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Routines.htm">Routines</a>;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Protocol {</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm">   30</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm">NetworkClientConnector</a> : <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IClientConnector.htm">IClientConnector</a> {</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a80850c85ca1b63c1897e92abab59e019">   31</a></span>&#160;        <span class="keyword">private</span> readonly <span class="keywordtype">object</span> channelLock = <span class="keyword">new</span> object();</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">   33</a></span>&#160;        <span class="keyword">private</span> Thread <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">envelopeReceiver</a>;</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">   34</a></span>&#160;        <span class="keyword">private</span> List&lt;IMessageEnvelope&gt; <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">envelopes</a>;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#adeb917fd8612fb27a5c54ea67d3009c2">   36</a></span>&#160;        <span class="keyword">protected</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#adeb917fd8612fb27a5c54ea67d3009c2">NetworkClientConnector</a>() {</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            envelopeReceiver = <span class="keyword">new</span> Thread(ReceiveEnvelopes) {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                IsBackground = <span class="keyword">true</span>,</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                Name = <span class="stringliteral">&quot;DeveelDB Network Client Envelope Receiver&quot;</span>,</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                Priority = ThreadPriority.AboveNormal</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            };</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            envelopes = <span class="keyword">new</span> List&lt;IMessageEnvelope&gt;();</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        }</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ae75ff0e7b1353702a602e2236591c579">   46</a></span>&#160;        <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ae75ff0e7b1353702a602e2236591c579">~NetworkClientConnector</a>() {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            Dispose(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        }</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d50056759323133064f3ded071b0783">   50</a></span>&#160;        <span class="keyword">protected</span> <span class="keywordtype">int</span> Timeout { <span class="keyword">get</span>; set; }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ab55df0f3d3a4a1b2ccc00362965fcbba">   52</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ab55df0f3d3a4a1b2ccc00362965fcbba">Dispose</a>() {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                Dispose(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                <span class="comment">// we ignore any exception at this point</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            } <span class="keywordflow">finally</span> {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                ChangeState(<a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Disposed);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            GC.SuppressFinalize(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ab1b96ef75e1897c3aa54d30af4e61f98">   64</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ab1b96ef75e1897c3aa54d30af4e61f98">Dispose</a>(<span class="keywordtype">bool</span> disposing) {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keywordflow">if</span> (disposing) {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                    Close();</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                    <span class="keywordflow">if</span> (envelopeReceiver != null) {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                        <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                            envelopeReceiver.Abort();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                            envelopeReceiver = null;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                        } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                            <span class="keywordflow">throw</span>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                        }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                    }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                <span class="keywordflow">if</span> (InputStream != null)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    InputStream.Dispose();</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                <span class="keywordflow">if</span> (OutputStream != null)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                    OutputStream.Dispose();</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                OutputStream = null;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                InputStream = null;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                ChangeState(<a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Disposed);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79781c54de4e1d48ab86eaa8c3ecc625">   93</a></span>&#160;        <span class="keyword">private</span> Stream InputStream { <span class="keyword">get</span>; set; }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1c89ea711238208ab2d31d04ff8566a5">   95</a></span>&#160;        <span class="keyword">private</span> Stream OutputStream { <span class="keyword">get</span>; set; }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#abea409fdec279d9543cbf49a56a30390">   97</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a> CurrentState { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a36753f5ae05ed94bf981edd710e15eb0">   99</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">abstract</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a> LocalEndPoint { <span class="keyword">get</span>; }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a323a6b5ad63ed14bdfc26b259f77dc87">  101</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a> RemoteEndPoint { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7860f4ef3854220a24d0ba54edd2f31b">  103</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7860f4ef3854220a24d0ba54edd2f31b">AssertNotDisposed</a>() {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keywordflow">if</span> (CurrentState == <a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Disposed)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ObjectDisposedException(GetType().AssemblyQualifiedName);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        }</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a472fcb56aede9a2898ea913a4113fbc1">  108</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a472fcb56aede9a2898ea913a4113fbc1">AssertOpen</a>() {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">if</span> (CurrentState != <a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Open)</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keyword">protected</span> <span class="keyword">abstract</span> NetworkStream CreateNetworkStream(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a> remoteEndPoint, FileAccess access);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d57e380ab0fdfaf5e2fdd61288c6482">  115</a></span>&#160;        <span class="keyword">protected</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d57e380ab0fdfaf5e2fdd61288c6482">ChangeState</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a> newState) {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            AssertNotDisposed();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            CurrentState = newState;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        }</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a9ec0304594c2f3b4cd0eb9c770abdb0c">  120</a></span>&#160;        <span class="keyword">protected</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a9ec0304594c2f3b4cd0eb9c770abdb0c">OpenConnector</a>(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a> remoteEndPoint) {</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                RemoteEndPoint = remoteEndPoint;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                var readStream = CreateNetworkStream(remoteEndPoint, FileAccess.Read);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                var writeStream = CreateNetworkStream(remoteEndPoint, FileAccess.Write);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                InputStream = <span class="keyword">new</span> BufferedStream(readStream, 1024*3);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                OutputStream = <span class="keyword">new</span> BufferedStream(writeStream, 1024*3);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                OnConnectorOpen();</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                ChangeState(<a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Open);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                envelopeReceiver.Start();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            } <span class="keywordflow">catch</span> (Exception ex) {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                <span class="comment">//TODO: log somehwere ...</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <span class="keywordflow">throw</span>;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7eea80deb9e2aa99eb8ead84d1fd1046">  139</a></span>&#160;        <span class="keyword">protected</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7eea80deb9e2aa99eb8ead84d1fd1046">Close</a>() {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                ChangeState(<a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Closed);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                <span class="keywordflow">if</span> (envelopeReceiver != null &amp;&amp;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                    envelopeReceiver.ThreadState == ThreadState.Running) {</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                    envelopeReceiver.Join(1000);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                    envelopeReceiver = null;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                <span class="keywordflow">if</span> (InputStream != null)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                    InputStream.Close();</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <span class="keywordflow">if</span> (OutputStream != null)</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                    OutputStream.Close();</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <span class="keywordflow">throw</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a9e0aa476c97329ffc6a1dfd69fe65442">  159</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a9e0aa476c97329ffc6a1dfd69fe65442">OnAuthenticated</a>(<span class="keywordtype">string</span> username, <span class="keywordtype">long</span> timeStamp) {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="comment">// TODO: make something with username and timeStamp?</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            ChangeState(<a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Authenticated);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#af82d67b7fc818f506adf7bd2fafc0d48">  165</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#af82d67b7fc818f506adf7bd2fafc0d48">OnConnectorOpen</a>() {</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keyword">public</span> <span class="keyword">abstract</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">ConnectionEndPoint</a> MakeEndPoint(IDictionary&lt;string, object&gt; properties);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a43530d3166af568d274a66474f855ab3">  170</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">virtual</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageProcessor.htm">IMessageProcessor</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a43530d3166af568d274a66474f855ab3">CreateProcessor</a>() {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm">ClientProcessor</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ad1b1726e317a70c000b0b1bbee016c64">  174</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">virtual</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ad1b1726e317a70c000b0b1bbee016c64">CreateEnvelope</a>(IDictionary&lt;string, object&gt; metadata, <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> message) {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordtype">int</span> dispatchId = ExtractDispatchId(metadata);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            var envelope = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkEnvelope.htm">NetworkEnvelope</a>(dispatchId, message);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            envelope.IssueDate = DateTime.UtcNow;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keywordflow">return</span> envelope;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a9bd21c5c4caa2199389c859fd903bbd7">  181</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">virtual</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a9bd21c5c4caa2199389c859fd903bbd7">OnProcessServerResponse</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="keywordflow">if</span> (envelope == null)</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="keywordflow">if</span> (envelope.<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm#a27319c32adb8e8704acee172e615e249">Error</a> != null)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbException.htm">DeveelDbException</a>(envelope.<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm#a27319c32adb8e8704acee172e615e249">Error</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ServerError.htm#a7fea843ad767887dfa8436ac5b6c846e">ErrorMessage</a>, envelope.<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm#a27319c32adb8e8704acee172e615e249">Error</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ServerError.htm#a121e30c95ed370bdaa5cf44ba5beb7dd">ErrorClass</a>, envelope.<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm#a27319c32adb8e8704acee172e615e249">Error</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ServerError.htm#ab4fe174b5e642327dd2c35940d1c665d">ErrorCode</a>);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keywordflow">return</span> envelope.<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm#a5df3e9ec5531999cd0eb9ccf3c35482a">Message</a>;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a413fe41fa5f950412397e85c2d447b6f">  190</a></span>&#160;        <span class="keyword">public</span> IStreamableObjectChannel <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a413fe41fa5f950412397e85c2d447b6f">CreateObjectChannel</a>(<span class="keywordtype">long</span> objectId) {</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a434ba8149d6b8743ab6ce1f00f4f55fa">  194</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1ITriggerChannel.htm">ITriggerChannel</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a434ba8149d6b8743ab6ce1f00f4f55fa">CreateTriggerChannel</a>(<span class="keywordtype">string</span> triggerName, <span class="keywordtype">string</span> objectName, <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Triggers.htm#ab5adac9a94d949a486aea44bdce03253">TriggerEventType</a> eventType) {</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        }</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#afaade34adc7b8325729958932682066b">  198</a></span>&#160;        <span class="keyword">private</span> ICryptoTransform <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#afaade34adc7b8325729958932682066b">SelectHashAlgorithm</a>(<span class="keywordtype">string</span> name, byte[] key, byte[] iv, FileAccess access) {</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">if</span> (String.Equals(name, <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm">EncryptionAlgorithms</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm#a65ae6f5b1c2094ed2f2583034cb8ecdb">HmacMd5</a>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> HMACMD5(key);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            <span class="keywordflow">if</span> (String.Equals(name, <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm">EncryptionAlgorithms</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm#ae11d699660aacfc9bcd10ce336071d96">HmacSha256</a>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> HMACSHA256(key);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keywordflow">if</span> (String.Equals(name, <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm">EncryptionAlgorithms</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm#a8785ee588a3eb106ff81aa98f537e8f4">HmacSha512</a>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> HMACSHA512(key);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="keywordflow">if</span> (String.Equals(name, <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm">EncryptionAlgorithms</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm#abf4049d731d2f27db0bc18df21d7a875">Des</a>, StringComparison.OrdinalIgnoreCase)) {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                var des = <span class="keyword">new</span> DESCryptoServiceProvider();</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                <span class="keywordflow">if</span> (access == FileAccess.Read)</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                    <span class="keywordflow">return</span> des.CreateDecryptor(key, iv);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <span class="keywordflow">if</span> (access == FileAccess.Write)</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                    <span class="keywordflow">return</span> des.CreateEncryptor(key, iv);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <span class="keywordflow">if</span> (String.Equals(name, <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm">EncryptionAlgorithms</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm#adc7bc5dc9987641bad0421cbedff908a">TripleDes</a>, StringComparison.OrdinalIgnoreCase)) {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                var des = <span class="keyword">new</span> TripleDESCryptoServiceProvider();</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <span class="keywordflow">if</span> (access == FileAccess.Read)</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                    <span class="keywordflow">return</span> des.CreateDecryptor(key, iv);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                <span class="keywordflow">if</span> (access == FileAccess.Write)</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                    <span class="keywordflow">return</span> des.CreateEncryptor(key, iv);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4ba8c0206e15de12e79a2b6d20244ace">  224</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4ba8c0206e15de12e79a2b6d20244ace">SetEncrypton</a>(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionData.htm">EncryptionData</a> encryptionData) {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            lock (channelLock) {</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                var key = Encoding.Unicode.GetBytes(encryptionData.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionData.htm#a37621e34dcf4fce622cab41ef993a60c">Key</a>);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                var iv = Encoding.Unicode.GetBytes(encryptionData.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionData.htm#a2013e3f61f118337cb694447fbd99c57">IV</a>);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                var readHash = SelectHashAlgorithm(encryptionData.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionData.htm#a5bc3c76d51de28a637034b56a5914388">HashAlgorithm</a>, key, iv, FileAccess.Read);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                var writeHash = SelectHashAlgorithm(encryptionData.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionData.htm#a5bc3c76d51de28a637034b56a5914388">HashAlgorithm</a>, key, iv, FileAccess.Write);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                InputStream = <span class="keyword">new</span> CryptoStream(InputStream, readHash, CryptoStreamMode.Read);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                OutputStream = <span class="keyword">new</span> CryptoStream(OutputStream, writeHash, CryptoStreamMode.Write);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div>
<div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79bd8e145281a6fa8b663cdb283cdbcf">  236</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">virtual</span> byte[] <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79bd8e145281a6fa8b663cdb283cdbcf">SerializeEnvelope</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            <span class="keyword">using</span> (var stream = <span class="keyword">new</span> MemoryStream()) {</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                var formatter = <span class="keyword">new</span> BinaryFormatter();</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                formatter.Serialize(stream, envelope);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                stream.Flush();</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                <span class="keywordflow">return</span> stream.ToArray();</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            }</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        }</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div>
<div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a676093070fd4b3bbcc49230cd131ec76">  245</a></span>&#160;        <span class="keyword">protected</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a676093070fd4b3bbcc49230cd131ec76">SendEnvelope</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            lock (channelLock) {</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                var bytes = SerializeEnvelope(envelope);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                OutputStream.Write(bytes, 0, bytes.Length);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                OutputStream.Flush();</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            }</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        }</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#aa8d92abc9b081c113781d0aaddd21924">  253</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">virtual</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#aa8d92abc9b081c113781d0aaddd21924">DeserializeEnvelope</a>(byte[] bytes) {</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            <span class="keyword">using</span> (var stream = <span class="keyword">new</span> MemoryStream(bytes, <span class="keyword">false</span>)) {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                var formatter = <span class="keyword">new</span> BinaryFormatter();</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                <span class="keywordflow">return</span> (<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a>) formatter.Deserialize(stream);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            }</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        }</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div>
<div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#aede3febc63f3914e61a6c20ef0e2aa6c">  260</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#aede3febc63f3914e61a6c20ef0e2aa6c">ReceiveEnvelope</a>(<span class="keywordtype">int</span> timeout) {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            lock (channelLock) {</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                <span class="keyword">using</span> (var input = <span class="keyword">new</span> BinaryReader(InputStream)) {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                    <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                        <span class="keywordtype">int</span> commandLength = input.ReadInt32();</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                        var buf = <span class="keyword">new</span> byte[commandLength];</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                        input.Read(buf, 0, commandLength);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                        <span class="keywordflow">return</span> DeserializeEnvelope(buf);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                    } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                        <span class="comment">//TODO: log ...</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                        <span class="keywordflow">throw</span>;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                    }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                }</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            }</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        }</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d961d9411a0d0a1c7c363f55f0117cf">  276</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d961d9411a0d0a1c7c363f55f0117cf">ExtractDispatchId</a>(IDictionary&lt;string, object&gt; metadata) {</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            <span class="keywordflow">if</span> (metadata == null || metadata.Count == 0)</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            <span class="keywordtype">object</span> id;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <span class="keywordflow">if</span> (!metadata.TryGetValue(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkEnvelopeMetadataKeys.htm">NetworkEnvelopeMetadataKeys</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkEnvelopeMetadataKeys.htm#aa0544028e07c58023f787c3298315010">DispatchId</a>, out <span class="keywordtype">id</span>))</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            <span class="keywordflow">return</span> (<span class="keywordtype">int</span>) id;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        }</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div>
<div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ac179eacbb4e3b96202a1301b51f5af98">  287</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ac179eacbb4e3b96202a1301b51f5af98">ShouldReceive</a>(IDictionary&lt;string, object&gt; senderMetadata, <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            var senderId = ExtractDispatchId(senderMetadata);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            var envelopeId = ExtractDispatchId(envelope.<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm#aa67cf192421a6d857ebd703fed27861a">Metadata</a>);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <span class="keywordflow">return</span> senderId == envelopeId;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        }</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a57302c7fe968f770d53380f8f979f4db">  293</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a57302c7fe968f770d53380f8f979f4db">ReceiveResponse</a>(<span class="keywordtype">int</span> timeout, IDictionary&lt;string, object&gt; senderMetadata) {</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            DateTime timeIn = DateTime.Now;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            DateTime timeOutHigh = timeIn + <span class="keyword">new</span> TimeSpan(((<span class="keywordtype">long</span>) timeout*1000)*TimeSpan.TicksPerMillisecond);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            lock (envelopes) {</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                <span class="keywordflow">if</span> (envelopes == null)</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> DataException(<span class="stringliteral">&quot;Connection to server closed&quot;</span>);</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                <span class="keywordflow">while</span> (<span class="keyword">true</span>) {</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; envelopes.Count; ++i) {</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                        var envelope = envelopes[i];</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                        <span class="keywordflow">if</span> (ShouldReceive(senderMetadata, envelope)) {</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                            envelopes.RemoveAt(i);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                            <span class="keywordflow">return</span> envelope;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                        }</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                    }</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                    <span class="comment">// Return null if we haven&#39;t received a response input the timeout</span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                    <span class="comment">// period.</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                    <span class="keywordflow">if</span> (timeout != 0 &amp;&amp;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                        DateTime.Now &gt; timeOutHigh) {</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                        <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                    }</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                    <span class="comment">// Wait a second.</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                    <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                        Monitor.Wait(envelopes, 1000);</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                    } <span class="keywordflow">catch</span> (ThreadInterruptedException) {</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                        <span class="comment">/* ignore */</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                    }</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                } <span class="comment">// while (true)</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            }</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        }</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div>
<div class="line"><a name="l00328"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1a35100218ee2e8e2e817ae210057f6d">  328</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1a35100218ee2e8e2e817ae210057f6d">ReceiveEnvelopes</a>() {</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                <span class="keywordflow">while</span> (CurrentState != <a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Closed) {</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                    var envelope = ReceiveEnvelope(0);</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                    lock (envelopes) {</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                        envelopes.Add(envelope);</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                        Monitor.PulseAll(envelopes);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                    }</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                }</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            } <span class="keywordflow">finally</span> {</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                <span class="comment">// Invalidate this object when the thread finishes.</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                <span class="keywordtype">object</span> oldEnvelopes = envelopes;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                lock (oldEnvelopes) {</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                    envelopes = null;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                    Monitor.PulseAll(oldEnvelopes);</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                }</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            }</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        }</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#af01ff6bab219705774615245b6435ad7">  349</a></span>&#160;        <span class="keyword">private</span> List&lt;NetworkTriggerChannel&gt; <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#af01ff6bab219705774615245b6435ad7">triggerChannels</a>;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="preprocessor">        #region NetworkTriggerChannel</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div>
<div class="line"><a name="l00353"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm">  353</a></span>&#160;        <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm">NetworkTriggerChannel</a> : <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1ITriggerChannel.htm">ITriggerChannel</a> {</div>
<div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#af4545ef3bf518ffdb7fcc217b02737b8">  354</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm">NetworkClientConnector</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#af4545ef3bf518ffdb7fcc217b02737b8">connector</a>;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div>
<div class="line"><a name="l00356"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#af3dc6f4c361df62359484d4fd0d4cb8e">  356</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#af3dc6f4c361df62359484d4fd0d4cb8e">NetworkTriggerChannel</a>(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm">NetworkClientConnector</a> connector, <span class="keywordtype">string</span> triggerName, <span class="keywordtype">string</span> objectName, <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Triggers.htm#ab5adac9a94d949a486aea44bdce03253">TriggerEventType</a> eventType) {</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                this.connector = connector;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                TriggerName = triggerName;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                ObjectName = objectName;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                EventType = eventType;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            }</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div>
<div class="line"><a name="l00363"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#a5ba133019aac403dd10a9d3266a9bca3">  363</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">string</span> TriggerName { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div>
<div class="line"><a name="l00365"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#ae8864c61b0c787a99caf18c29ebbbae4">  365</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">string</span> ObjectName { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div>
<div class="line"><a name="l00367"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#a3ed7c75880de8068d32bb9886504eb6d">  367</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Triggers.htm#ab5adac9a94d949a486aea44bdce03253">TriggerEventType</a> EventType { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div>
<div class="line"><a name="l00369"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#afd0a5149b3601e8af654f798ff318632">  369</a></span>&#160;            <span class="keyword">public</span> Action&lt;TriggerEventNotification&gt; OnInvoke { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div>
<div class="line"><a name="l00371"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#a33d32baec9cc4cbd1e19e923a0974e4e">  371</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#a33d32baec9cc4cbd1e19e923a0974e4e">Dispose</a>() {</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                </div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            }</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div>
<div class="line"><a name="l00375"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#a0e0f3c5845545f4f555b85454c92cb1f">  375</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#a0e0f3c5845545f4f555b85454c92cb1f">OnTriggeInvoked</a>(Action&lt;TriggerEventNotification&gt; notification) {</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                <span class="keywordflow">if</span> (OnInvoke != null) {</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                    OnInvoke = (Action&lt;TriggerEventNotification&gt;) Delegate.Combine(OnInvoke, notification);</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                    OnInvoke = notification;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                }</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            }</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        }</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div>
<div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a85e3b709cdd2e133e5f68dfcb6d782e2">  386</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a85e3b709cdd2e133e5f68dfcb6d782e2">OnTriggerNotification</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="keywordflow">if</span> (triggerChannels == null)</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            lock (triggerChannels) {</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                <span class="keywordflow">foreach</span> (var channel <span class="keywordflow">in</span> triggerChannels) {</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                }</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            }</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        }</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div>
<div class="line"><a name="l00396"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1b58c3952b62888b7d8076afe1bdc251">  396</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1b58c3952b62888b7d8076afe1bdc251">DispatchTriggerCallbacks</a>() {</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                <span class="keywordflow">while</span> (CurrentState != <a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">ConnectorState</a>.Closed) {</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                    var notifications = <span class="keyword">new</span> List&lt;IMessageEnvelope&gt;();</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                    </div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                    lock (envelopes) {</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                        <span class="keywordflow">foreach</span> (var envelope <span class="keywordflow">in</span> envelopes) {</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                            <span class="keywordflow">if</span> (envelope.Message is <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1TriggerEventNotification.htm">TriggerEventNotification</a>) {</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                                notifications.Add(envelope);</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                            }</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                        }</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                        Monitor.PulseAll(envelopes);</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                    }</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                    <span class="keywordflow">foreach</span> (var envelope <span class="keywordflow">in</span> notifications) {</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                        OnTriggerNotification(envelope);</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                    }</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                }</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;            } <span class="keywordflow">catch</span> {</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                </div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;            }</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        }</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="preprocessor">        #region ClientProcessor</span></div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div>
<div class="line"><a name="l00422"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm">  422</a></span>&#160;        <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm">ClientProcessor</a> : <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageProcessor.htm">IMessageProcessor</a> {</div>
<div class="line"><a name="l00423"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#af330b8b964945721a03e0ea81deb8a73">  423</a></span>&#160;            <span class="keyword">private</span> readonly <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm">NetworkClientConnector</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#af330b8b964945721a03e0ea81deb8a73">connector</a>;</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div>
<div class="line"><a name="l00425"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#abfef047eb5f3d8072fb60632d08c54c2">  425</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#abfef047eb5f3d8072fb60632d08c54c2">ClientProcessor</a>(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm">NetworkClientConnector</a> connector) {</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                this.connector = connector;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            }</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div>
<div class="line"><a name="l00429"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a5eb417801b9bc41c25ac2aadf48be52e">  429</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a5eb417801b9bc41c25ac2aadf48be52e">ProcessMessage</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                var message = envelope.<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm#a5df3e9ec5531999cd0eb9ccf3c35482a">Message</a>;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> response = null;</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                <span class="keywordflow">if</span> (message is <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectRequest.htm">ConnectRequest</a>)</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                    response = RequestConnect(envelope);</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (message is <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1AuthenticateRequest.htm">AuthenticateRequest</a>)</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                    response = RequestAuthenticate(envelope);</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (message is <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1QueryExecuteRequest.htm">QueryExecuteRequest</a>)</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                    response = RequestQueryExecute(envelope);</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (message is <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1QueryResultPartRequest.htm">QueryResultPartRequest</a>)</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                    response = RequestQueryResultPart(envelope);</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (message is <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1DisposeResultRequest.htm">DisposeResultRequest</a>)</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                    response = RequestDisposeResult(envelope);</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (message is <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LargeObjectCreateRequest.htm">LargeObjectCreateRequest</a>)</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                    response = RequestCreateLargeObject(envelope);</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (message is <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1LargeObjectDisposeRequest.htm">LargeObjectDisposeRequest</a>)</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                    response = RequestDisposeLargeObject(envelope);</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (message is <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1TriggerCreateRequest.htm">TriggerCreateRequest</a>)</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                    response = RequestCreateTrigger(envelope);</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (message is <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1BeginRequest.htm">BeginRequest</a>)</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                    response = RequestBegin(envelope);</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (message is <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1CommitRequest.htm">CommitRequest</a>)</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                    response = RequestCommit(envelope);</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (message is <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1RollbackRequest.htm">RollbackRequest</a>)</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                    response = RequestRollback(envelope);</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (message is <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1PingRequest.htm">PingRequest</a>)</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                    response = Ping(envelope);</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span> (message is <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1CloseRequest.htm">CloseRequest</a>)</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                    response = RequestClose(envelope);</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                </div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                <span class="keywordflow">if</span> (response == null)</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                <span class="keywordflow">return</span> CreateResponse(envelope.<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm#aa67cf192421a6d857ebd703fed27861a">Metadata</a>, response);</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;            }</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div>
<div class="line"><a name="l00466"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a50871d56980894ec469d4912712fdc1a">  466</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a50871d56980894ec469d4912712fdc1a">Ping</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                <span class="keywordflow">return</span> Request(envelope);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;            }</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div>
<div class="line"><a name="l00470"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a40360f0986d0a24a54b3f265d060da6d">  470</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a40360f0986d0a24a54b3f265d060da6d">RequestRollback</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            }</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div>
<div class="line"><a name="l00474"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a603f948241d6d1b82a88faadfba65684">  474</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a603f948241d6d1b82a88faadfba65684">RequestCommit</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;            }</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div>
<div class="line"><a name="l00478"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a7445d02d592b1087bc4e61b0f92ae0e1">  478</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a7445d02d592b1087bc4e61b0f92ae0e1">RequestBegin</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;            }</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div>
<div class="line"><a name="l00482"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#adc8c8e2168f17a6ad875ea385a7c2245">  482</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#adc8c8e2168f17a6ad875ea385a7c2245">RequestCreateTrigger</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            }</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div>
<div class="line"><a name="l00486"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a1b701bdffb490f4dc1c42c09678045da">  486</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a1b701bdffb490f4dc1c42c09678045da">RequestDisposeLargeObject</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            }</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div>
<div class="line"><a name="l00490"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a8fa4fb9eb1b06152067e37945cc9fbda">  490</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a8fa4fb9eb1b06152067e37945cc9fbda">RequestCreateLargeObject</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            }</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div>
<div class="line"><a name="l00494"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#aa9213501a50204162032f6bd2bad3700">  494</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#aa9213501a50204162032f6bd2bad3700">RequestDisposeResult</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            }</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div>
<div class="line"><a name="l00498"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a10ce5c387c0a705f1a2c5c294baa6dfc">  498</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a10ce5c387c0a705f1a2c5c294baa6dfc">RequestQueryResultPart</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            }</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div>
<div class="line"><a name="l00502"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a8c639aafa87d3438dd707b51e721fddd">  502</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a8c639aafa87d3438dd707b51e721fddd">RequestQueryExecute</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;            }</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div>
<div class="line"><a name="l00506"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a8dd2e2be2210392830a4eed35665bca7">  506</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a8dd2e2be2210392830a4eed35665bca7">RequestAuthenticate</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                    connector.AssertOpen();</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                    var response = Request(envelope);</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                    var responseMessage = (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1AuthenticateResponse.htm">AuthenticateResponse</a>) response;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                    <span class="keywordflow">if</span> (!responseMessage.Authenticated)</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException();</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                    connector.OnAuthenticated(((<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1AuthenticateRequest.htm">AuthenticateRequest</a>)envelope.<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm#a5df3e9ec5531999cd0eb9ccf3c35482a">Message</a>).UserName, responseMessage.TimeStamp);</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                    <span class="keywordflow">return</span> response;</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                    </div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                    <span class="keywordflow">throw</span>;</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                }</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            }</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div>
<div class="line"><a name="l00523"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a9053e5797babbe8bd8f9b875bc251fba">  523</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a9053e5797babbe8bd8f9b875bc251fba">RequestClose</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                    var response = Request(envelope);</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                    var responseMessage = (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1AcknowledgeResponse.htm">AcknowledgeResponse</a>) response;</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                    <span class="keywordflow">if</span> (!responseMessage.State)</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException();</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                    connector.Close();</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                    <span class="keywordflow">return</span> response;</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                    </div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                    <span class="keywordflow">throw</span>;</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                }</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;            }</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div>
<div class="line"><a name="l00539"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#aa6d505a0515fe50e07508f65248ad8d4">  539</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#aa6d505a0515fe50e07508f65248ad8d4">Request</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                connector.SendEnvelope(envelope);</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                var response = connector.ReceiveResponse(connector.Timeout, envelope.<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm#aa67cf192421a6d857ebd703fed27861a">Metadata</a>);</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                <span class="keywordflow">return</span> connector.OnProcessServerResponse(response);</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;            }</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div>
<div class="line"><a name="l00545"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a0e14dc6874cb07cb97566927b8171d9f">  545</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a0e14dc6874cb07cb97566927b8171d9f">CreateResponse</a>(IDictionary&lt;string, object&gt; senderMetadata, <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> response) {</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                <span class="keywordflow">return</span> connector.CreateEnvelope(senderMetadata, response);</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;            }</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div>
<div class="line"><a name="l00549"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a9602698c7fb158822c1ff488c2c9f396">  549</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">IMessage</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a9602698c7fb158822c1ff488c2c9f396">RequestConnect</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">IMessageEnvelope</a> envelope) {</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                    var request = (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectRequest.htm">ConnectRequest</a>) envelope.<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm#a5df3e9ec5531999cd0eb9ccf3c35482a">Message</a>;</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                    connector.Timeout = request.Timeout;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                    connector.OpenConnector(request.RemoteEndPoint);</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                    var response = Request(envelope);</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                    var responseMessage = (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ConnectResponse.htm">ConnectResponse</a>) response;</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                    <span class="keywordflow">if</span> (!responseMessage.Opened) {</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                        connector.Close();</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException();</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                    }</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                    <span class="keywordflow">return</span> response;</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                    <span class="comment">//TODO: </span></div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                    <span class="keywordflow">throw</span>;</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                }</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;            }</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        }</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    }</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;}</div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm">Deveel.Data.Protocol.IMessageEnvelope</a></div><div class="ttdef"><b>Definition:</b> <a href="IMessageEnvelope_8cs_source.htm#l00021">IMessageEnvelope.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_a5eb417801b9bc41c25ac2aadf48be52e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a5eb417801b9bc41c25ac2aadf48be52e">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.ProcessMessage</a></div><div class="ttdeci">IMessageEnvelope ProcessMessage(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00429">NetworkClientConnector.cs:429</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a79bd8e145281a6fa8b663cdb283cdbcf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a79bd8e145281a6fa8b663cdb283cdbcf">Deveel.Data.Protocol.NetworkClientConnector.SerializeEnvelope</a></div><div class="ttdeci">virtual byte[] SerializeEnvelope(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00236">NetworkClientConnector.cs:236</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1QueryExecuteRequest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1QueryExecuteRequest.htm">Deveel.Data.Protocol.QueryExecuteRequest</a></div><div class="ttdef"><b>Definition:</b> <a href="QueryExecuteRequest_8cs_source.htm#l00022">QueryExecuteRequest.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel_htm_af4545ef3bf518ffdb7fcc217b02737b8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#af4545ef3bf518ffdb7fcc217b02737b8">Deveel.Data.Protocol.NetworkClientConnector.NetworkTriggerChannel.connector</a></div><div class="ttdeci">NetworkClientConnector connector</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00354">NetworkClientConnector.cs:354</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_adeb917fd8612fb27a5c54ea67d3009c2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#adeb917fd8612fb27a5c54ea67d3009c2">Deveel.Data.Protocol.NetworkClientConnector.NetworkClientConnector</a></div><div class="ttdeci">NetworkClientConnector()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00036">NetworkClientConnector.cs:36</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1RollbackRequest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1RollbackRequest.htm">Deveel.Data.Protocol.RollbackRequest</a></div><div class="ttdef"><b>Definition:</b> <a href="RollbackRequest_8cs_source.htm#l00020">RollbackRequest.cs:20</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_a10ce5c387c0a705f1a2c5c294baa6dfc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a10ce5c387c0a705f1a2c5c294baa6dfc">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.RequestQueryResultPart</a></div><div class="ttdeci">IMessage RequestQueryResultPart(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00498">NetworkClientConnector.cs:498</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_af82d67b7fc818f506adf7bd2fafc0d48"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#af82d67b7fc818f506adf7bd2fafc0d48">Deveel.Data.Protocol.NetworkClientConnector.OnConnectorOpen</a></div><div class="ttdeci">virtual void OnConnectorOpen()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00165">NetworkClientConnector.cs:165</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_ac179eacbb4e3b96202a1301b51f5af98"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ac179eacbb4e3b96202a1301b51f5af98">Deveel.Data.Protocol.NetworkClientConnector.ShouldReceive</a></div><div class="ttdeci">virtual bool ShouldReceive(IDictionary&lt; string, object &gt; senderMetadata, IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00287">NetworkClientConnector.cs:287</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1QueryResultPartRequest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1QueryResultPartRequest.htm">Deveel.Data.Protocol.QueryResultPartRequest</a></div><div class="ttdef"><b>Definition:</b> <a href="QueryResultPartRequest_8cs_source.htm#l00020">QueryResultPartRequest.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1AuthenticateResponse_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1AuthenticateResponse.htm">Deveel.Data.Protocol.AuthenticateResponse</a></div><div class="ttdef"><b>Definition:</b> <a href="AuthenticateResponse_8cs_source.htm#l00020">AuthenticateResponse.cs:20</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Triggers_htm_ab5adac9a94d949a486aea44bdce03253"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Triggers.htm#ab5adac9a94d949a486aea44bdce03253">Deveel.Data.Sql.Triggers.TriggerEventType</a></div><div class="ttdeci">TriggerEventType</div><div class="ttdoc">The different types of high layer trigger events. </div><div class="ttdef"><b>Definition:</b> <a href="TriggerEventType_8cs_source.htm#l00024">TriggerEventType.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms_htm_a65ae6f5b1c2094ed2f2583034cb8ecdb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm#a65ae6f5b1c2094ed2f2583034cb8ecdb">Deveel.Data.Protocol.EncryptionAlgorithms.HmacMd5</a></div><div class="ttdeci">const string HmacMd5</div><div class="ttdef"><b>Definition:</b> <a href="EncryptionAlgorithms_8cs_source.htm#l00023">EncryptionAlgorithms.cs:23</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Protocol_1_1ITriggerChannel_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Protocol_1_1ITriggerChannel.htm">Deveel.Data.Protocol.ITriggerChannel</a></div><div class="ttdef"><b>Definition:</b> <a href="ITriggerChannel_8cs_source.htm#l00020">ITriggerChannel.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1BeginRequest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1BeginRequest.htm">Deveel.Data.Protocol.BeginRequest</a></div><div class="ttdef"><b>Definition:</b> <a href="BeginRequest_8cs_source.htm#l00022">BeginRequest.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_aa8d92abc9b081c113781d0aaddd21924"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#aa8d92abc9b081c113781d0aaddd21924">Deveel.Data.Protocol.NetworkClientConnector.DeserializeEnvelope</a></div><div class="ttdeci">virtual IMessageEnvelope DeserializeEnvelope(byte[] bytes)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00253">NetworkClientConnector.cs:253</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_adc8c8e2168f17a6ad875ea385a7c2245"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#adc8c8e2168f17a6ad875ea385a7c2245">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.RequestCreateTrigger</a></div><div class="ttdeci">IMessage RequestCreateTrigger(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00482">NetworkClientConnector.cs:482</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Protocol_htm_ab83d7171dd72d60e27ed9e892e1bdafd"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Protocol.htm#ab83d7171dd72d60e27ed9e892e1bdafd">Deveel.Data.Protocol.ConnectorState</a></div><div class="ttdeci">ConnectorState</div><div class="ttdef"><b>Definition:</b> <a href="ConnectorState_8cs_source.htm#l00020">ConnectorState.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a4d57e380ab0fdfaf5e2fdd61288c6482"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d57e380ab0fdfaf5e2fdd61288c6482">Deveel.Data.Protocol.NetworkClientConnector.ChangeState</a></div><div class="ttdeci">void ChangeState(ConnectorState newState)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00115">NetworkClientConnector.cs:115</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Protocol_1_1IClientConnector_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Protocol_1_1IClientConnector.htm">Deveel.Data.Protocol.IClientConnector</a></div><div class="ttdef"><b>Definition:</b> <a href="IClientConnector_8cs_source.htm#l00021">IClientConnector.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ConnectionEndPoint.htm">Deveel.Data.Protocol.ConnectionEndPoint</a></div><div class="ttdef"><b>Definition:</b> <a href="ConnectionEndPoint_8cs_source.htm#l00020">ConnectionEndPoint.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel_htm_a0e0f3c5845545f4f555b85454c92cb1f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#a0e0f3c5845545f4f555b85454c92cb1f">Deveel.Data.Protocol.NetworkClientConnector.NetworkTriggerChannel.OnTriggeInvoked</a></div><div class="ttdeci">void OnTriggeInvoked(Action&lt; TriggerEventNotification &gt; notification)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00375">NetworkClientConnector.cs:375</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms_htm_ae11d699660aacfc9bcd10ce336071d96"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm#ae11d699660aacfc9bcd10ce336071d96">Deveel.Data.Protocol.EncryptionAlgorithms.HmacSha256</a></div><div class="ttdeci">const string HmacSha256</div><div class="ttdef"><b>Definition:</b> <a href="EncryptionAlgorithms_8cs_source.htm#l00021">EncryptionAlgorithms.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1AcknowledgeResponse_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1AcknowledgeResponse.htm">Deveel.Data.Protocol.AcknowledgeResponse</a></div><div class="ttdef"><b>Definition:</b> <a href="AcknowledgeResponse_8cs_source.htm#l00020">AcknowledgeResponse.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_a603f948241d6d1b82a88faadfba65684"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a603f948241d6d1b82a88faadfba65684">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.RequestCommit</a></div><div class="ttdeci">IMessage RequestCommit(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00474">NetworkClientConnector.cs:474</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1EncryptionData_htm_a5bc3c76d51de28a637034b56a5914388"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionData.htm#a5bc3c76d51de28a637034b56a5914388">Deveel.Data.Protocol.EncryptionData.HashAlgorithm</a></div><div class="ttdeci">string HashAlgorithm</div><div class="ttdef"><b>Definition:</b> <a href="EncryptionData_8cs_source.htm#l00031">EncryptionData.cs:31</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel_htm_a33d32baec9cc4cbd1e19e923a0974e4e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#a33d32baec9cc4cbd1e19e923a0974e4e">Deveel.Data.Protocol.NetworkClientConnector.NetworkTriggerChannel.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00371">NetworkClientConnector.cs:371</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a9ec0304594c2f3b4cd0eb9c770abdb0c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a9ec0304594c2f3b4cd0eb9c770abdb0c">Deveel.Data.Protocol.NetworkClientConnector.OpenConnector</a></div><div class="ttdeci">void OpenConnector(ConnectionEndPoint remoteEndPoint)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00120">NetworkClientConnector.cs:120</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_af330b8b964945721a03e0ea81deb8a73"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#af330b8b964945721a03e0ea81deb8a73">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.connector</a></div><div class="ttdeci">readonly NetworkClientConnector connector</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00423">NetworkClientConnector.cs:423</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_aede3febc63f3914e61a6c20ef0e2aa6c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#aede3febc63f3914e61a6c20ef0e2aa6c">Deveel.Data.Protocol.NetworkClientConnector.ReceiveEnvelope</a></div><div class="ttdeci">IMessageEnvelope ReceiveEnvelope(int timeout)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00260">NetworkClientConnector.cs:260</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_a1b701bdffb490f4dc1c42c09678045da"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a1b701bdffb490f4dc1c42c09678045da">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.RequestDisposeLargeObject</a></div><div class="ttdeci">IMessage RequestDisposeLargeObject(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00486">NetworkClientConnector.cs:486</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope_htm_a27319c32adb8e8704acee172e615e249"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm#a27319c32adb8e8704acee172e615e249">Deveel.Data.Protocol.IMessageEnvelope.Error</a></div><div class="ttdeci">ServerError Error</div><div class="ttdef"><b>Definition:</b> <a href="IMessageEnvelope_8cs_source.htm#l00026">IMessageEnvelope.cs:26</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope_htm_aa67cf192421a6d857ebd703fed27861a"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm#aa67cf192421a6d857ebd703fed27861a">Deveel.Data.Protocol.IMessageEnvelope.Metadata</a></div><div class="ttdeci">IDictionary&lt; string, object &gt; Metadata</div><div class="ttdef"><b>Definition:</b> <a href="IMessageEnvelope_8cs_source.htm#l00022">IMessageEnvelope.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a1b58c3952b62888b7d8076afe1bdc251"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1b58c3952b62888b7d8076afe1bdc251">Deveel.Data.Protocol.NetworkClientConnector.DispatchTriggerCallbacks</a></div><div class="ttdeci">void DispatchTriggerCallbacks()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00396">NetworkClientConnector.cs:396</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LargeObjectDisposeRequest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LargeObjectDisposeRequest.htm">Deveel.Data.Protocol.LargeObjectDisposeRequest</a></div><div class="ttdef"><b>Definition:</b> <a href="LargeObjectDisposeRequest_8cs_source.htm#l00020">LargeObjectDisposeRequest.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ServerError_htm_ab4fe174b5e642327dd2c35940d1c665d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ServerError.htm#ab4fe174b5e642327dd2c35940d1c665d">Deveel.Data.Protocol.ServerError.ErrorCode</a></div><div class="ttdeci">int ErrorCode</div><div class="ttdef"><b>Definition:</b> <a href="ServerError_8cs_source.htm#l00029">ServerError.cs:29</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_a8c639aafa87d3438dd707b51e721fddd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a8c639aafa87d3438dd707b51e721fddd">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.RequestQueryExecute</a></div><div class="ttdeci">IMessage RequestQueryExecute(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00502">NetworkClientConnector.cs:502</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms_htm_a8785ee588a3eb106ff81aa98f537e8f4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm#a8785ee588a3eb106ff81aa98f537e8f4">Deveel.Data.Protocol.EncryptionAlgorithms.HmacSha512</a></div><div class="ttdeci">const string HmacSha512</div><div class="ttdef"><b>Definition:</b> <a href="EncryptionAlgorithms_8cs_source.htm#l00022">EncryptionAlgorithms.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1PingRequest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1PingRequest.htm">Deveel.Data.Protocol.PingRequest</a></div><div class="ttdef"><b>Definition:</b> <a href="PingRequest_8cs_source.htm#l00020">PingRequest.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_ab1b96ef75e1897c3aa54d30af4e61f98"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ab1b96ef75e1897c3aa54d30af4e61f98">Deveel.Data.Protocol.NetworkClientConnector.Dispose</a></div><div class="ttdeci">virtual void Dispose(bool disposing)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00064">NetworkClientConnector.cs:64</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a7a68a80eab1fe15f3507f064fbef343a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7a68a80eab1fe15f3507f064fbef343a">Deveel.Data.Protocol.NetworkClientConnector.envelopeReceiver</a></div><div class="ttdeci">Thread envelopeReceiver</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00033">NetworkClientConnector.cs:33</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_a50871d56980894ec469d4912712fdc1a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a50871d56980894ec469d4912712fdc1a">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.Ping</a></div><div class="ttdeci">IMessage Ping(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00466">NetworkClientConnector.cs:466</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a472fcb56aede9a2898ea913a4113fbc1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a472fcb56aede9a2898ea913a4113fbc1">Deveel.Data.Protocol.NetworkClientConnector.AssertOpen</a></div><div class="ttdeci">void AssertOpen()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00108">NetworkClientConnector.cs:108</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a4d961d9411a0d0a1c7c363f55f0117cf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4d961d9411a0d0a1c7c363f55f0117cf">Deveel.Data.Protocol.NetworkClientConnector.ExtractDispatchId</a></div><div class="ttdeci">static int ExtractDispatchId(IDictionary&lt; string, object &gt; metadata)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00276">NetworkClientConnector.cs:276</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a7860f4ef3854220a24d0ba54edd2f31b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7860f4ef3854220a24d0ba54edd2f31b">Deveel.Data.Protocol.NetworkClientConnector.AssertNotDisposed</a></div><div class="ttdeci">void AssertNotDisposed()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00103">NetworkClientConnector.cs:103</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a7eea80deb9e2aa99eb8ead84d1fd1046"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a7eea80deb9e2aa99eb8ead84d1fd1046">Deveel.Data.Protocol.NetworkClientConnector.Close</a></div><div class="ttdeci">void Close()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00139">NetworkClientConnector.cs:139</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessage.htm">Deveel.Data.Protocol.IMessage</a></div><div class="ttdef"><b>Definition:</b> <a href="IMessage_8cs_source.htm#l00020">IMessage.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbException_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbException.htm">Deveel.Data.Client.DeveelDbException</a></div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbException_8cs_source.htm#l00022">DeveelDbException.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm">Deveel.Data.Protocol.NetworkClientConnector.NetworkTriggerChannel</a></div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00353">NetworkClientConnector.cs:353</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel_htm_af3dc6f4c361df62359484d4fd0d4cb8e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1NetworkTriggerChannel.htm#af3dc6f4c361df62359484d4fd0d4cb8e">Deveel.Data.Protocol.NetworkClientConnector.NetworkTriggerChannel.NetworkTriggerChannel</a></div><div class="ttdeci">NetworkTriggerChannel(NetworkClientConnector connector, string triggerName, string objectName, TriggerEventType eventType)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00356">NetworkClientConnector.cs:356</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Client_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Client.htm">Deveel.Data.Client</a></div><div class="ttdef"><b>Definition:</b> <a href="ConnectionClient_8cs_source.htm#l00029">ConnectionClient.cs:29</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1EncryptionData_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionData.htm">Deveel.Data.Protocol.EncryptionData</a></div><div class="ttdef"><b>Definition:</b> <a href="EncryptionData_8cs_source.htm#l00020">EncryptionData.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_a9053e5797babbe8bd8f9b875bc251fba"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a9053e5797babbe8bd8f9b875bc251fba">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.RequestClose</a></div><div class="ttdeci">IMessage RequestClose(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00523">NetworkClientConnector.cs:523</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm">Deveel.Data.Protocol.NetworkClientConnector</a></div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00030">NetworkClientConnector.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1TriggerCreateRequest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1TriggerCreateRequest.htm">Deveel.Data.Protocol.TriggerCreateRequest</a></div><div class="ttdef"><b>Definition:</b> <a href="TriggerCreateRequest_8cs_source.htm#l00022">TriggerCreateRequest.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm">Deveel.Data.Protocol.EncryptionAlgorithms</a></div><div class="ttdef"><b>Definition:</b> <a href="EncryptionAlgorithms_8cs_source.htm#l00020">EncryptionAlgorithms.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_afaade34adc7b8325729958932682066b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#afaade34adc7b8325729958932682066b">Deveel.Data.Protocol.NetworkClientConnector.SelectHashAlgorithm</a></div><div class="ttdeci">ICryptoTransform SelectHashAlgorithm(string name, byte[] key, byte[] iv, FileAccess access)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00198">NetworkClientConnector.cs:198</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1CommitRequest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1CommitRequest.htm">Deveel.Data.Protocol.CommitRequest</a></div><div class="ttdef"><b>Definition:</b> <a href="CommitRequest_8cs_source.htm#l00020">CommitRequest.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1LargeObjectCreateRequest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1LargeObjectCreateRequest.htm">Deveel.Data.Protocol.LargeObjectCreateRequest</a></div><div class="ttdef"><b>Definition:</b> <a href="LargeObjectCreateRequest_8cs_source.htm#l00020">LargeObjectCreateRequest.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_ad1b1726e317a70c000b0b1bbee016c64"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ad1b1726e317a70c000b0b1bbee016c64">Deveel.Data.Protocol.NetworkClientConnector.CreateEnvelope</a></div><div class="ttdeci">virtual IMessageEnvelope CreateEnvelope(IDictionary&lt; string, object &gt; metadata, IMessage message)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00174">NetworkClientConnector.cs:174</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_aa9213501a50204162032f6bd2bad3700"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#aa9213501a50204162032f6bd2bad3700">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.RequestDisposeResult</a></div><div class="ttdeci">IMessage RequestDisposeResult(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00494">NetworkClientConnector.cs:494</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a1a35100218ee2e8e2e817ae210057f6d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a1a35100218ee2e8e2e817ae210057f6d">Deveel.Data.Protocol.NetworkClientConnector.ReceiveEnvelopes</a></div><div class="ttdeci">void ReceiveEnvelopes()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00328">NetworkClientConnector.cs:328</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkEnvelope_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkEnvelope.htm">Deveel.Data.Protocol.NetworkEnvelope</a></div><div class="ttdef"><b>Definition:</b> <a href="NetworkEnvelope_8cs_source.htm#l00022">NetworkEnvelope.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_a9602698c7fb158822c1ff488c2c9f396"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a9602698c7fb158822c1ff488c2c9f396">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.RequestConnect</a></div><div class="ttdeci">IMessage RequestConnect(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00549">NetworkClientConnector.cs:549</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_a7445d02d592b1087bc4e61b0f92ae0e1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a7445d02d592b1087bc4e61b0f92ae0e1">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.RequestBegin</a></div><div class="ttdeci">IMessage RequestBegin(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00478">NetworkClientConnector.cs:478</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a9bd21c5c4caa2199389c859fd903bbd7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a9bd21c5c4caa2199389c859fd903bbd7">Deveel.Data.Protocol.NetworkClientConnector.OnProcessServerResponse</a></div><div class="ttdeci">virtual IMessage OnProcessServerResponse(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00181">NetworkClientConnector.cs:181</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1EncryptionData_htm_a37621e34dcf4fce622cab41ef993a60c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionData.htm#a37621e34dcf4fce622cab41ef993a60c">Deveel.Data.Protocol.EncryptionData.Key</a></div><div class="ttdeci">string Key</div><div class="ttdef"><b>Definition:</b> <a href="EncryptionData_8cs_source.htm#l00033">EncryptionData.cs:33</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a57302c7fe968f770d53380f8f979f4db"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a57302c7fe968f770d53380f8f979f4db">Deveel.Data.Protocol.NetworkClientConnector.ReceiveResponse</a></div><div class="ttdeci">IMessageEnvelope ReceiveResponse(int timeout, IDictionary&lt; string, object &gt; senderMetadata)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00293">NetworkClientConnector.cs:293</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Routines_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Routines.htm">Deveel.Data.Routines</a></div><div class="ttdef"><b>Definition:</b> <a href="AggregateFunction_8cs_source.htm#l00024">AggregateFunction.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_a40360f0986d0a24a54b3f265d060da6d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a40360f0986d0a24a54b3f265d060da6d">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.RequestRollback</a></div><div class="ttdeci">IMessage RequestRollback(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00470">NetworkClientConnector.cs:470</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ConnectResponse_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ConnectResponse.htm">Deveel.Data.Protocol.ConnectResponse</a></div><div class="ttdef"><b>Definition:</b> <a href="ConnectResponse_8cs_source.htm#l00020">ConnectResponse.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor</a></div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00422">NetworkClientConnector.cs:422</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_af01ff6bab219705774615245b6435ad7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#af01ff6bab219705774615245b6435ad7">Deveel.Data.Protocol.NetworkClientConnector.triggerChannels</a></div><div class="ttdeci">List&lt; NetworkTriggerChannel &gt; triggerChannels</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00349">NetworkClientConnector.cs:349</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1DisposeResultRequest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1DisposeResultRequest.htm">Deveel.Data.Protocol.DisposeResultRequest</a></div><div class="ttdef"><b>Definition:</b> <a href="DisposeResultRequest_8cs_source.htm#l00020">DisposeResultRequest.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ServerError_htm_a7fea843ad767887dfa8436ac5b6c846e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ServerError.htm#a7fea843ad767887dfa8436ac5b6c846e">Deveel.Data.Protocol.ServerError.ErrorMessage</a></div><div class="ttdeci">string ErrorMessage</div><div class="ttdef"><b>Definition:</b> <a href="ServerError_8cs_source.htm#l00031">ServerError.cs:31</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a43530d3166af568d274a66474f855ab3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a43530d3166af568d274a66474f855ab3">Deveel.Data.Protocol.NetworkClientConnector.CreateProcessor</a></div><div class="ttdeci">virtual IMessageProcessor CreateProcessor()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00170">NetworkClientConnector.cs:170</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_a0e14dc6874cb07cb97566927b8171d9f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a0e14dc6874cb07cb97566927b8171d9f">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.CreateResponse</a></div><div class="ttdeci">IMessageEnvelope CreateResponse(IDictionary&lt; string, object &gt; senderMetadata, IMessage response)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00545">NetworkClientConnector.cs:545</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1TriggerEventNotification_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1TriggerEventNotification.htm">Deveel.Data.Protocol.TriggerEventNotification</a></div><div class="ttdef"><b>Definition:</b> <a href="TriggerEventNotification_8cs_source.htm#l00022">TriggerEventNotification.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a9e0aa476c97329ffc6a1dfd69fe65442"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a9e0aa476c97329ffc6a1dfd69fe65442">Deveel.Data.Protocol.NetworkClientConnector.OnAuthenticated</a></div><div class="ttdeci">virtual void OnAuthenticated(string username, long timeStamp)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00159">NetworkClientConnector.cs:159</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_aa6d505a0515fe50e07508f65248ad8d4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#aa6d505a0515fe50e07508f65248ad8d4">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.Request</a></div><div class="ttdeci">IMessage Request(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00539">NetworkClientConnector.cs:539</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1CloseRequest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1CloseRequest.htm">Deveel.Data.Protocol.CloseRequest</a></div><div class="ttdef"><b>Definition:</b> <a href="CloseRequest_8cs_source.htm#l00020">CloseRequest.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a6f9a3e1611f3a8369be61ce13dd99d18"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a6f9a3e1611f3a8369be61ce13dd99d18">Deveel.Data.Protocol.NetworkClientConnector.envelopes</a></div><div class="ttdeci">List&lt; IMessageEnvelope &gt; envelopes</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00034">NetworkClientConnector.cs:34</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ServerError_htm_a121e30c95ed370bdaa5cf44ba5beb7dd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ServerError.htm#a121e30c95ed370bdaa5cf44ba5beb7dd">Deveel.Data.Protocol.ServerError.ErrorClass</a></div><div class="ttdeci">int ErrorClass</div><div class="ttdef"><b>Definition:</b> <a href="ServerError_8cs_source.htm#l00027">ServerError.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_abfef047eb5f3d8072fb60632d08c54c2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#abfef047eb5f3d8072fb60632d08c54c2">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.ClientProcessor</a></div><div class="ttdeci">ClientProcessor(NetworkClientConnector connector)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00425">NetworkClientConnector.cs:425</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_ab55df0f3d3a4a1b2ccc00362965fcbba"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ab55df0f3d3a4a1b2ccc00362965fcbba">Deveel.Data.Protocol.NetworkClientConnector.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00052">NetworkClientConnector.cs:52</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1EncryptionData_htm_a2013e3f61f118337cb694447fbd99c57"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionData.htm#a2013e3f61f118337cb694447fbd99c57">Deveel.Data.Protocol.EncryptionData.IV</a></div><div class="ttdeci">string IV</div><div class="ttdef"><b>Definition:</b> <a href="EncryptionData_8cs_source.htm#l00035">EncryptionData.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a413fe41fa5f950412397e85c2d447b6f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a413fe41fa5f950412397e85c2d447b6f">Deveel.Data.Protocol.NetworkClientConnector.CreateObjectChannel</a></div><div class="ttdeci">IStreamableObjectChannel CreateObjectChannel(long objectId)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00190">NetworkClientConnector.cs:190</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms_htm_abf4049d731d2f27db0bc18df21d7a875"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm#abf4049d731d2f27db0bc18df21d7a875">Deveel.Data.Protocol.EncryptionAlgorithms.Des</a></div><div class="ttdeci">const string Des</div><div class="ttdef"><b>Definition:</b> <a href="EncryptionAlgorithms_8cs_source.htm#l00025">EncryptionAlgorithms.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms_htm_adc7bc5dc9987641bad0421cbedff908a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1EncryptionAlgorithms.htm#adc7bc5dc9987641bad0421cbedff908a">Deveel.Data.Protocol.EncryptionAlgorithms.TripleDes</a></div><div class="ttdeci">const string TripleDes</div><div class="ttdef"><b>Definition:</b> <a href="EncryptionAlgorithms_8cs_source.htm#l00024">EncryptionAlgorithms.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a676093070fd4b3bbcc49230cd131ec76"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a676093070fd4b3bbcc49230cd131ec76">Deveel.Data.Protocol.NetworkClientConnector.SendEnvelope</a></div><div class="ttdeci">void SendEnvelope(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00245">NetworkClientConnector.cs:245</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope_htm_a5df3e9ec5531999cd0eb9ccf3c35482a"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageEnvelope.htm#a5df3e9ec5531999cd0eb9ccf3c35482a">Deveel.Data.Protocol.IMessageEnvelope.Message</a></div><div class="ttdeci">IMessage Message</div><div class="ttdef"><b>Definition:</b> <a href="IMessageEnvelope_8cs_source.htm#l00024">IMessageEnvelope.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a434ba8149d6b8743ab6ce1f00f4f55fa"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a434ba8149d6b8743ab6ce1f00f4f55fa">Deveel.Data.Protocol.NetworkClientConnector.CreateTriggerChannel</a></div><div class="ttdeci">ITriggerChannel CreateTriggerChannel(string triggerName, string objectName, TriggerEventType eventType)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00194">NetworkClientConnector.cs:194</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageProcessor_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Protocol_1_1IMessageProcessor.htm">Deveel.Data.Protocol.IMessageProcessor</a></div><div class="ttdef"><b>Definition:</b> <a href="IMessageProcessor_8cs_source.htm#l00020">IMessageProcessor.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkEnvelopeMetadataKeys_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkEnvelopeMetadataKeys.htm">Deveel.Data.Protocol.NetworkEnvelopeMetadataKeys</a></div><div class="ttdef"><b>Definition:</b> <a href="NetworkEnvelopeMetadataKeys_8cs_source.htm#l00004">NetworkEnvelopeMetadataKeys.cs:4</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ConnectRequest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ConnectRequest.htm">Deveel.Data.Protocol.ConnectRequest</a></div><div class="ttdef"><b>Definition:</b> <a href="ConnectRequest_8cs_source.htm#l00022">ConnectRequest.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_ae75ff0e7b1353702a602e2236591c579"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#ae75ff0e7b1353702a602e2236591c579">Deveel.Data.Protocol.NetworkClientConnector.~NetworkClientConnector</a></div><div class="ttdeci">~NetworkClientConnector()</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00046">NetworkClientConnector.cs:46</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1AuthenticateRequest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1AuthenticateRequest.htm">Deveel.Data.Protocol.AuthenticateRequest</a></div><div class="ttdef"><b>Definition:</b> <a href="AuthenticateRequest_8cs_source.htm#l00020">AuthenticateRequest.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_a8dd2e2be2210392830a4eed35665bca7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a8dd2e2be2210392830a4eed35665bca7">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.RequestAuthenticate</a></div><div class="ttdeci">IMessage RequestAuthenticate(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00506">NetworkClientConnector.cs:506</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a85e3b709cdd2e133e5f68dfcb6d782e2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a85e3b709cdd2e133e5f68dfcb6d782e2">Deveel.Data.Protocol.NetworkClientConnector.OnTriggerNotification</a></div><div class="ttdeci">virtual void OnTriggerNotification(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00386">NetworkClientConnector.cs:386</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkEnvelopeMetadataKeys_htm_aa0544028e07c58023f787c3298315010"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkEnvelopeMetadataKeys.htm#aa0544028e07c58023f787c3298315010">Deveel.Data.Protocol.NetworkEnvelopeMetadataKeys.DispatchId</a></div><div class="ttdeci">const string DispatchId</div><div class="ttdef"><b>Definition:</b> <a href="NetworkEnvelopeMetadataKeys_8cs_source.htm#l00005">NetworkEnvelopeMetadataKeys.cs:5</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_htm_a4ba8c0206e15de12e79a2b6d20244ace"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector.htm#a4ba8c0206e15de12e79a2b6d20244ace">Deveel.Data.Protocol.NetworkClientConnector.SetEncrypton</a></div><div class="ttdeci">void SetEncrypton(EncryptionData encryptionData)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00224">NetworkClientConnector.cs:224</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor_htm_a8fa4fb9eb1b06152067e37945cc9fbda"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1NetworkClientConnector_1_1ClientProcessor.htm#a8fa4fb9eb1b06152067e37945cc9fbda">Deveel.Data.Protocol.NetworkClientConnector.ClientProcessor.RequestCreateLargeObject</a></div><div class="ttdeci">IMessage RequestCreateLargeObject(IMessageEnvelope envelope)</div><div class="ttdef"><b>Definition:</b> <a href="NetworkClientConnector_8cs_source.htm#l00490">NetworkClientConnector.cs:490</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
