<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Expressions/FromTable.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_161bcb964f33d2739bc0895ad1af1730.htm">Deveel.Data.Sql.Expressions</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">FromTable.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="FromTable_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Serialization.htm">Serialization</a>;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Sql.Expressions {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    [<a class="code" href="namespaceDeveel_1_1Data_1_1Transactions.htm#a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b">Serializable</a>]</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm">   27</a></span>&#160;    <span class="keyword">public</span> sealed <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm">FromTable</a> : <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IPreparable.htm">IPreparable</a>, <a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">ISerializable</a> {</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a23d6fc91fdd5191ccf6b7f5f88cdaa3b">   33</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a23d6fc91fdd5191ccf6b7f5f88cdaa3b">FromTable</a>(<span class="keywordtype">string</span> tableName, <span class="keywordtype">string</span> tableAlias)</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            : this(tableName, null, tableAlias) {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <span class="keywordflow">if</span> (String.IsNullOrEmpty(tableName))</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;tableName&quot;</span>);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        }</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#ac834ae5c1f4244516837d8808c900d64">   43</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#ac834ae5c1f4244516837d8808c900d64">FromTable</a>(<span class="keywordtype">string</span> tableName)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            : this(tableName, null) {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        }</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a57ed5218e800f62662b3995840177f1d">   51</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a57ed5218e800f62662b3995840177f1d">FromTable</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">SqlQueryExpression</a> query) </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            : this(query, null) {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a7ff8b07cc9d41fc8c7517ec593331bb4">   60</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a7ff8b07cc9d41fc8c7517ec593331bb4">FromTable</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">SqlQueryExpression</a> query, <span class="keywordtype">string</span> tableAlias)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            : this(null, query, tableAlias) {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keywordflow">if</span> (query == null)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;query&quot;</span>);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#aa2cdd9016b04681548a73d205e087cf9">   66</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#aa2cdd9016b04681548a73d205e087cf9">FromTable</a>(<span class="keywordtype">string</span> tableName, <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">SqlQueryExpression</a> query, <span class="keywordtype">string</span> alias) {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            Name = tableName;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            SubQuery = query;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            Alias = alias;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            IsSubQuery = query != null;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        }</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#aaf2f8c4e8577d0e3e624135cd3bfb573">   73</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#aaf2f8c4e8577d0e3e624135cd3bfb573">FromTable</a>(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">ObjectData</a> data) {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            Name = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a828a888ad7250283e9f596f6da5fe97f">GetString</a>(<span class="stringliteral">&quot;Name&quot;</span>);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            SubQuery = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a86f3d523b9ae1357b275ed330178ecb0">GetValue</a>&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">SqlQueryExpression</a>&gt;(<span class="stringliteral">&quot;SubQuery&quot;</span>);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            Alias = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a828a888ad7250283e9f596f6da5fe97f">GetString</a>(<span class="stringliteral">&quot;Alias&quot;</span>);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            IsSubQuery = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a6cd0166825e1ce7fa9baa77c540fe0e9">HasValue</a>(<span class="stringliteral">&quot;SubQuery&quot;</span>);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        }</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#aa3691eea39085c610e9a947f71160ea0">   83</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> Name { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a3402df31bb4671f3999e201a8c8a397a">   88</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> Alias { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a19507dcd0e0d597525296f493252d6ff">   93</a></span>&#160;        <span class="keyword">internal</span> <span class="keywordtype">string</span> UniqueKey { <span class="keyword">get</span>; set; }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a46eef1be3743c19d6fd90a79a56864cc">   98</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> IsSubQuery { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a2af16b5e75009470cc2711fce64d7d41">  103</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">SqlQueryExpression</a> SubQuery { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a63d8b3debeeaf1ff34184771dbc4466f">  105</a></span>&#160;        <span class="keywordtype">object</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IPreparable.htm">IPreparable</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IPreparable.htm#a1592c7ed49e8e0c4b62d126ea8fcfbfd">Prepare</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IExpressionPreparer.htm">IExpressionPreparer</a> preparer) {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            var subQuery = SubQuery;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keywordflow">if</span> (subQuery != null)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                subQuery = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">SqlQueryExpression</a>) subQuery.Prepare(preparer);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm">FromTable</a>(Name, subQuery, Alias);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a9707e8aa7d8451bc06faef28c6774a3b">  113</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">ISerializable</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm#acd5831980e3c1969437ba5c9d838669e">GetData</a>(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a> data) {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;Name&quot;</span>, Name);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;SubQuery&quot;</span>, SubQuery);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;Alias&quot;</span>, Alias);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="comment">//public static void Serialize(FromTable table, BinaryWriter writer) {</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="comment">//  if (table.IsSubQuery) {</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="comment">//      writer.Write((byte) 2);</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="comment">//      SqlExpression.Serialize(table.SubQuery, writer);</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="comment">//  } else {</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="comment">//      writer.Write((byte)1);</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="comment">//      writer.Write(table.Name);</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="comment">//  }</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="comment">//  bool hasAlias = !String.IsNullOrEmpty(table.Alias);</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="comment">//  if (hasAlias) {</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="comment">//      writer.Write((byte) 1);</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="comment">//      writer.Write(table.Alias);</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="comment">//  } else {</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="comment">//      writer.Write((byte)0);</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="comment">//  }</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="comment">//  bool hasUniqueKey = !String.IsNullOrEmpty(table.UniqueKey);</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="comment">//  if (hasUniqueKey) {</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="comment">//      writer.Write((byte) 1);</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="comment">//      writer.Write(table.UniqueKey);</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="comment">//  } else {</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="comment">//      writer.Write((byte)0);</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="comment">//  }</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="comment">//}</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="comment">//public static FromTable Deserialize(BinaryReader reader) {</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="comment">//  string name = null;</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="comment">//  SqlQueryExpression query = null;</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="comment">//  var type = reader.ReadByte();</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="comment">//  if (type == 1) {</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="comment">//      name = reader.ReadString();</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="comment">//  } else if (type == 2) {</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="comment">//      query = (SqlQueryExpression) SqlExpression.Deserialize(reader);</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="comment">//  } else {</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="comment">//      throw new FormatException();</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="comment">//  }</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="comment">//  string alias = null;</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="comment">//  var hasAlias = reader.ReadByte() == 1;</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="comment">//  if (hasAlias)</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="comment">//      alias = reader.ReadString();</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="comment">//  FromTable table;</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="comment">//  if (type == 1) {</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="comment">//      table = new FromTable(name, alias);</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="comment">//  } else {</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="comment">//      table = new FromTable(query, alias);</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="comment">//  }</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="comment">//  var hasUniqueKey = reader.ReadByte() == 1;</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="comment">//  if (hasUniqueKey)</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="comment">//      table.UniqueKey = reader.ReadString();</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="comment">//  return table;</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="comment">//}</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Serialization_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Serialization.htm">Deveel.Data.Serialization</a></div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00024">BinarySerializer.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable_htm_ac834ae5c1f4244516837d8808c900d64"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#ac834ae5c1f4244516837d8808c900d64">Deveel.Data.Sql.Expressions.FromTable.FromTable</a></div><div class="ttdeci">FromTable(string tableName)</div><div class="ttdoc">A simple table definition (not aliased). </div><div class="ttdef"><b>Definition:</b> <a href="FromTable_8cs_source.htm#l00043">FromTable.cs:43</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable_htm_acd5831980e3c1969437ba5c9d838669e"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm#acd5831980e3c1969437ba5c9d838669e">Deveel.Data.Serialization.ISerializable.GetData</a></div><div class="ttdeci">void GetData(SerializeData data)</div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable_htm_a23d6fc91fdd5191ccf6b7f5f88cdaa3b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a23d6fc91fdd5191ccf6b7f5f88cdaa3b">Deveel.Data.Sql.Expressions.FromTable.FromTable</a></div><div class="ttdeci">FromTable(string tableName, string tableAlias)</div><div class="ttdoc">Constructs a table that is aliased under a different name. </div><div class="ttdef"><b>Definition:</b> <a href="FromTable_8cs_source.htm#l00033">FromTable.cs:33</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable_htm_aaf2f8c4e8577d0e3e624135cd3bfb573"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#aaf2f8c4e8577d0e3e624135cd3bfb573">Deveel.Data.Sql.Expressions.FromTable.FromTable</a></div><div class="ttdeci">FromTable(ObjectData data)</div><div class="ttdef"><b>Definition:</b> <a href="FromTable_8cs_source.htm#l00073">FromTable.cs:73</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm_a2a09ed1c661f92b60b0b38398fb7ced1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">Deveel.Data.Serialization.SerializeData.SetValue</a></div><div class="ttdeci">void SetValue(string key, Type type, object value)</div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00035">SerializeData.cs:35</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">Deveel.Data.Serialization.ISerializable</a></div><div class="ttdef"><b>Definition:</b> <a href="ISerializable_8cs_source.htm#l00020">ISerializable.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">Deveel.Data.Serialization.SerializeData</a></div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00021">SerializeData.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable_htm_a7ff8b07cc9d41fc8c7517ec593331bb4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a7ff8b07cc9d41fc8c7517ec593331bb4">Deveel.Data.Sql.Expressions.FromTable.FromTable</a></div><div class="ttdeci">FromTable(SqlQueryExpression query, string tableAlias)</div><div class="ttdoc">A table that is a sub-query and given an aliased name. </div><div class="ttdef"><b>Definition:</b> <a href="FromTable_8cs_source.htm#l00060">FromTable.cs:60</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">Deveel.Data.Serialization.ObjectData</a></div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00022">ObjectData.cs:22</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IExpressionPreparer_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IExpressionPreparer.htm">Deveel.Data.Sql.Expressions.IExpressionPreparer</a></div><div class="ttdoc">An interface used to prepare a SqlExpression object. </div><div class="ttdef"><b>Definition:</b> <a href="IExpressionPreparer_8cs_source.htm#l00027">IExpressionPreparer.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable_htm_aa2cdd9016b04681548a73d205e087cf9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#aa2cdd9016b04681548a73d205e087cf9">Deveel.Data.Sql.Expressions.FromTable.FromTable</a></div><div class="ttdeci">FromTable(string tableName, SqlQueryExpression query, string alias)</div><div class="ttdef"><b>Definition:</b> <a href="FromTable_8cs_source.htm#l00066">FromTable.cs:66</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IPreparable_htm_a1592c7ed49e8e0c4b62d126ea8fcfbfd"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IPreparable.htm#a1592c7ed49e8e0c4b62d126ea8fcfbfd">Deveel.Data.Sql.Expressions.IPreparable.Prepare</a></div><div class="ttdeci">object Prepare(IExpressionPreparer preparer)</div><div class="ttdoc">Converts the underlying value of this instance into an object that can be evaluated by an expression...</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a86f3d523b9ae1357b275ed330178ecb0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a86f3d523b9ae1357b275ed330178ecb0">Deveel.Data.Serialization.ObjectData.GetValue</a></div><div class="ttdeci">object GetValue(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00048">ObjectData.cs:48</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm">Deveel.Data.Sql.Expressions.FromTable</a></div><div class="ttdoc">Describes a single table declaration in the from clause of a table expression (SELECT). </div><div class="ttdef"><b>Definition:</b> <a href="FromTable_8cs_source.htm#l00027">FromTable.cs:27</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Transactions_htm_a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Transactions.htm#a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b">Deveel.Data.Transactions.IsolationLevel.Serializable</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">Deveel.Data.Sql.Expressions.SqlQueryExpression</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpression_8cs_source.htm#l00025">SqlQueryExpression.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a6cd0166825e1ce7fa9baa77c540fe0e9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a6cd0166825e1ce7fa9baa77c540fe0e9">Deveel.Data.Serialization.ObjectData.HasValue</a></div><div class="ttdeci">bool HasValue(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00041">ObjectData.cs:41</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable_htm_a57ed5218e800f62662b3995840177f1d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a57ed5218e800f62662b3995840177f1d">Deveel.Data.Sql.Expressions.FromTable.FromTable</a></div><div class="ttdeci">FromTable(SqlQueryExpression query)</div><div class="ttdoc">A table that is a sub-query with no alias set. </div><div class="ttdef"><b>Definition:</b> <a href="FromTable_8cs_source.htm#l00051">FromTable.cs:51</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IPreparable_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IPreparable.htm">Deveel.Data.Sql.Expressions.IPreparable</a></div><div class="ttdoc">A contract for objects that participate to a SqlExpression.Prepare phase of an expression evaluation...</div><div class="ttdef"><b>Definition:</b> <a href="IPreparable_8cs_source.htm#l00030">IPreparable.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a828a888ad7250283e9f596f6da5fe97f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a828a888ad7250283e9f596f6da5fe97f">Deveel.Data.Serialization.ObjectData.GetString</a></div><div class="ttdeci">string GetString(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00101">ObjectData.cs:101</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
