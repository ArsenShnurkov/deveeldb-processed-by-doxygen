<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Store/InMemoryStore.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_0766e9ed020ad325b7865972be4cac40.htm">Deveel.Data.Store</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">InMemoryStore.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="InMemoryStore_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.IO;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Threading;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Store {</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm">   27</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm">InMemoryStore</a> : <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm">IStore</a> {</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a96b0aa5daa85a6ba8d5e1adcb3a15eb9">   28</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm">InMemoryBlock</a> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a96b0aa5daa85a6ba8d5e1adcb3a15eb9">fixedAreaBlock</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a10be0f1180f0b960ea28291f2430ef1c">   29</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm">InMemoryBlock</a>[] <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a10be0f1180f0b960ea28291f2430ef1c">areaMap</a>;</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a7a699e33eca39f7a104060ffc69fc983">   30</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a7a699e33eca39f7a104060ffc69fc983">uniqueIdKey</a>;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a48c28031bd809fa324c2e22b77ad0bd1">   32</a></span>&#160;        <span class="keyword">internal</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a48c28031bd809fa324c2e22b77ad0bd1">InMemoryStore</a>(<span class="keywordtype">string</span> name, <span class="keywordtype">int</span> hashSize) {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            Name = name;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            areaMap = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm">InMemoryBlock</a>[hashSize];</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            uniqueIdKey = 0;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        }</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a8d034bcbc64380572e74d2f0689a25a0">   38</a></span>&#160;        <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a8d034bcbc64380572e74d2f0689a25a0">~InMemoryStore</a>() {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            Dispose(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        }</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a19f0c586014b8994de468299c2b9c6ed">   45</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> Name { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#ae7020d7eba49204357b613cc08ec87da">   47</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm">InMemoryBlock</a> FixedAreaBlock {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            <span class="keyword">get</span> {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                    <span class="keywordflow">if</span> (fixedAreaBlock == null)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                        fixedAreaBlock = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm">InMemoryBlock</a>(-1, 64);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                    <span class="keywordflow">return</span> fixedAreaBlock;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                }</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a8a8520318e73749479e37241d894f49b">   58</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a8a8520318e73749479e37241d894f49b">Dispose</a>(<span class="keywordtype">bool</span> disposing) {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <span class="keywordflow">if</span> (disposing) {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                fixedAreaBlock = null;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                areaMap = null;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a513e5dfde10dcda69cd32e308656308e">   65</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a513e5dfde10dcda69cd32e308656308e">Dispose</a>() {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            Dispose(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            GC.SuppressFinalize(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a213bf3aa85a57c8d15e4f4d8c68e686e">   70</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm">InMemoryBlock</a> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a213bf3aa85a57c8d15e4f4d8c68e686e">GetBlock</a>(<span class="keywordtype">long</span> pointer) {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <span class="keywordflow">if</span> (pointer == -1)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                <span class="keywordflow">return</span> FixedAreaBlock;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <span class="keywordflow">return</span> GetAreaBlock(pointer);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a9ed0c6365c676af648122d57cbd18e20">   77</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm">InMemoryBlock</a> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a9ed0c6365c676af648122d57cbd18e20">GetAreaBlock</a>(<span class="keywordtype">long</span> pointer) {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                <span class="comment">// Find the pointer in the hash</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                var hashPos = (int)(pointer % areaMap.Length);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm">InMemoryBlock</a> prev = null;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                var block = areaMap[hashPos];</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                <span class="comment">// Search for this pointer</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                <span class="keywordflow">while</span> (block != null &amp;&amp; block.Id != pointer) {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                    prev = block;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                    block = block.<a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#aa4619bc9a77f9cf442e3021f7a124fdd">Next</a>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                <span class="keywordflow">if</span> (block == null)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;Pointer &quot;</span> + pointer + <span class="stringliteral">&quot; is invalid.&quot;</span>);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                <span class="comment">// Move the element to the start of the list.</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                <span class="keywordflow">if</span> (prev != null) {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                    prev.<a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#aa4619bc9a77f9cf442e3021f7a124fdd">Next</a> = block.<a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#aa4619bc9a77f9cf442e3021f7a124fdd">Next</a>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                    block.<a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#aa4619bc9a77f9cf442e3021f7a124fdd">Next</a> = areaMap[hashPos];</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                    areaMap[hashPos] = block;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                <span class="keywordflow">return</span> block;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a171e16ed931309141e1bc25b61854092">  105</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a171e16ed931309141e1bc25b61854092">CreateArea</a>(<span class="keywordtype">long</span> size) {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">if</span> (size &gt; Int32.MaxValue)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;&#39;size&#39; is too large.&quot;</span>);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                <span class="comment">// Generate a unique id for this area.</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                <span class="keywordtype">long</span> <span class="keywordtype">id</span> = uniqueIdKey;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                ++uniqueIdKey;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                <span class="comment">// Create the element.</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                var element = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm">InMemoryBlock</a>(<span class="keywordtype">id</span>, (<span class="keywordtype">int</span>)size);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                <span class="comment">// The position in the hash map</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                <span class="keywordtype">int</span> hashPos = (int)(<span class="keywordtype">id</span> % areaMap.Length);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                <span class="comment">// Add to the chain</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                element.Next = areaMap[hashPos];</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                areaMap[hashPos] = element;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                <span class="keywordflow">return</span> element.<a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#a6d665bd56eac3cfd363d45a5303f782f">GetArea</a>(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a2c9522b5eb2e543eb03eeca331f25ccc">  129</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a2c9522b5eb2e543eb03eeca331f25ccc">DeleteArea</a>(<span class="keywordtype">long</span> <span class="keywordtype">id</span>) {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                <span class="comment">// Find the pointer in the hash</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                var hashPos = (int)(<span class="keywordtype">id</span> % areaMap.Length);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm">InMemoryBlock</a> prev = null;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm">InMemoryBlock</a> block = areaMap[hashPos];</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                <span class="comment">// Search for this pointer</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                <span class="keywordflow">while</span> (block != null &amp;&amp; block.<a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#a3f8e1345dc7ea6791ddd6862afbc0cda">Id</a> != <span class="keywordtype">id</span>) {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                    prev = block;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                    block = block.<a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#aa4619bc9a77f9cf442e3021f7a124fdd">Next</a>;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                <span class="comment">// If not found</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                <span class="keywordflow">if</span> (block == null)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;Area ID &quot;</span> + <span class="keywordtype">id</span> + <span class="stringliteral">&quot; is invalid.&quot;</span>);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                <span class="comment">// Remove</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                <span class="keywordflow">if</span> (prev == null) {</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                    areaMap[hashPos] = block.<a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#aa4619bc9a77f9cf442e3021f7a124fdd">Next</a>;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                    prev.<a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#aa4619bc9a77f9cf442e3021f7a124fdd">Next</a> = block.<a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#aa4619bc9a77f9cf442e3021f7a124fdd">Next</a>;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                <span class="comment">// Garbage collector should do the rest...</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        }</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#aea1253e1f6478ad1f9f9854c680d41b7">  158</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#aea1253e1f6478ad1f9f9854c680d41b7">GetArea</a>(<span class="keywordtype">long</span> <span class="keywordtype">id</span>, <span class="keywordtype">bool</span> readOnly) {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">return</span> GetBlock(<span class="keywordtype">id</span>).GetArea(readOnly);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#af9df820ecfe6b04a60f0f5e9eb005bb7">  163</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#af9df820ecfe6b04a60f0f5e9eb005bb7">Lock</a>() {</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a9b8d0f5d67f2084123b186eaf3a09267">  167</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a9b8d0f5d67f2084123b186eaf3a09267">Unlock</a>() {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        }</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#adcaa4f3de3703bb2da250e9d650c2b58">  171</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#adcaa4f3de3703bb2da250e9d650c2b58">CheckPoint</a>() {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#ad55390750cdab79ec658e74c20f38b24">  175</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> ClosedClean {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        }</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div>
<div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a2af5d3a64d2226853ad18ca5a5a9559c">  180</a></span>&#160;        <span class="keyword">public</span> IEnumerable&lt;long&gt; <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a2af5d3a64d2226853ad18ca5a5a9559c">GetAllAreas</a>() {</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor">        #region InMemoryBlock</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm">  186</a></span>&#160;        <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm">InMemoryBlock</a> {</div>
<div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#a900f7f65f7479305e0dd6ebc4fe36f62">  187</a></span>&#160;            <span class="keyword">private</span> readonly byte[] <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#a900f7f65f7479305e0dd6ebc4fe36f62">block</a>;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#a28dff117aa510d4b9c84708162fed80f">  189</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#a28dff117aa510d4b9c84708162fed80f">InMemoryBlock</a>(<span class="keywordtype">long</span> <span class="keywordtype">id</span>, <span class="keywordtype">int</span> size) {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                Id = id;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                block = <span class="keyword">new</span> byte[size];</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#a3f8e1345dc7ea6791ddd6862afbc0cda">  194</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">long</span> Id { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#aa4619bc9a77f9cf442e3021f7a124fdd">  196</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm">InMemoryBlock</a> Next { <span class="keyword">get</span>; set; }</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#a6d665bd56eac3cfd363d45a5303f782f">  198</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#a6d665bd56eac3cfd363d45a5303f782f">GetArea</a>(<span class="keywordtype">bool</span> readOnly) {</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm">InMemoryArea</a>(Id, readOnly, block, 0, block.Length);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="preprocessor">        #region InMemoryArea</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm">  207</a></span>&#160;        <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm">InMemoryArea</a> : <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> {</div>
<div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#afe264d318d0da38e27e9b34e65b76faf">  208</a></span>&#160;            <span class="keyword">private</span> readonly byte[] <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#afe264d318d0da38e27e9b34e65b76faf">data</a>;</div>
<div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a7fc04afe3fda7c1964952e42ca3ab7cd">  209</a></span>&#160;            <span class="keyword">private</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a7fc04afe3fda7c1964952e42ca3ab7cd">position</a>;</div>
<div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a9d42a14554b560bc2f264ea576f450bb">  210</a></span>&#160;            <span class="keyword">private</span> readonly <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a9d42a14554b560bc2f264ea576f450bb">startPosition</a>;</div>
<div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#aaefeea2693d178f7bcf140cd7f8f12b0">  211</a></span>&#160;            <span class="keyword">private</span> readonly <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#aaefeea2693d178f7bcf140cd7f8f12b0">endPosition</a>;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a8f1d5eb3f9969b694865b2ecc4e22a56">  213</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a8f1d5eb3f9969b694865b2ecc4e22a56">InMemoryArea</a>(<span class="keywordtype">long</span> <span class="keywordtype">id</span>, <span class="keywordtype">bool</span> readOnly, byte[] data, <span class="keywordtype">int</span> offset, <span class="keywordtype">int</span> length) {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                this.data = data;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                Length = length;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                position = startPosition = offset;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                endPosition = offset + length;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                Id = id;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                IsReadOnly = readOnly;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a0fda7f4f5d52899c6dc5770e437af62c">  224</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">long</span> Id { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a475f5bab18451ebb4f007356db10c352">  226</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">bool</span> IsReadOnly { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div>
<div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#adf5b3cb3a10a5e6cb02d30300e25c264">  228</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">long</span> Position {</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                <span class="keyword">get</span> { <span class="keywordflow">return</span> position; }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                set {</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                    var actPosition = startPosition + value;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                    <span class="keywordflow">if</span> (actPosition &lt; 0 || actPosition &gt;= endPosition)</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;Moved position out of bounds.&quot;</span>);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                    position = actPosition;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                }</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            }</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a98cf985b31cb365560f86d2b61509365">  239</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">int</span> Capacity {</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                <span class="keyword">get</span> { <span class="keywordflow">return</span> endPosition - startPosition; }</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            }</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div>
<div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a8051a98b5ccd59b328cbc9f98acef654">  243</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">int</span> Length { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div>
<div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#abdad410de1f712a413af4a65520f9c98">  245</a></span>&#160;            <span class="keyword">private</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#abdad410de1f712a413af4a65520f9c98">CheckPositionBounds</a>(<span class="keywordtype">int</span> diff) {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                var newPos = position + diff;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                <span class="keywordflow">if</span> (newPos &gt; endPosition)</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(String.Format(<span class="stringliteral">&quot;Attempt to read out of bounds: from {0} to {1} (position {2} to {3})&quot;</span>,</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                        startPosition, endPosition, position, newPos));</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                var oldPos = position;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                position = newPos;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                <span class="keywordflow">return</span> oldPos;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            }</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a31909a8fbc9f605e1d610836f528dac8">  256</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a31909a8fbc9f605e1d610836f528dac8">CopyTo</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> destArea, <span class="keywordtype">int</span> size) {</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                <span class="keyword">const</span> <span class="keywordtype">int</span> bufferSize = 2048;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                byte[] buf = <span class="keyword">new</span> byte[bufferSize];</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                <span class="keywordtype">int</span> toCopy = <a class="code" href="namespaceSystem.htm">System</a>.Math.Min(size, bufferSize);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                <span class="keywordflow">while</span> (toCopy &gt; 0) {</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                    Read(buf, 0, toCopy);</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                    destArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a9591ccb271edb5ce2714e766d9979069">Write</a>(buf, 0, toCopy);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                    size -= toCopy;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                    toCopy = <a class="code" href="namespaceSystem.htm">System</a>.Math.Min(size, bufferSize);</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                }</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            }</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div>
<div class="line"><a name="l00269"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#ace6b6be4f5f8ebb413f355b8a9eb0c36">  269</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#ace6b6be4f5f8ebb413f355b8a9eb0c36">Read</a>(byte[] buffer, <span class="keywordtype">int</span> offset, <span class="keywordtype">int</span> length) {</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="preprocessor">#if PCL</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                Array.Copy(data, (<span class="keywordtype">int</span>)CheckPositionBounds(length), buffer, offset, length);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                Array.Copy(data, CheckPositionBounds(length), buffer, offset, length);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                <span class="keywordflow">return</span> length;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            }</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div>
<div class="line"><a name="l00278"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#ac59ad94d6b1a650aa12dbd6008a22e34">  278</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#ac59ad94d6b1a650aa12dbd6008a22e34">Write</a>(byte[] buffer, <span class="keywordtype">int</span> offset, <span class="keywordtype">int</span> length) {</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="preprocessor">#if PCL</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                Array.Copy(buffer, offset, data, (<span class="keywordtype">int</span>) CheckPositionBounds(length), length);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                Array.Copy(buffer, offset, data, CheckPositionBounds(length), length);</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#ac3d329e2140ba1987aac617beb6014f4">  286</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#ac3d329e2140ba1987aac617beb6014f4">Flush</a>() {</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            }</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        }</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    }</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock_htm_a3f8e1345dc7ea6791ddd6862afbc0cda"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#a3f8e1345dc7ea6791ddd6862afbc0cda">Deveel.Data.Store.InMemoryStore.InMemoryBlock.Id</a></div><div class="ttdeci">long Id</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00194">InMemoryStore.cs:194</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_a96b0aa5daa85a6ba8d5e1adcb3a15eb9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a96b0aa5daa85a6ba8d5e1adcb3a15eb9">Deveel.Data.Store.InMemoryStore.fixedAreaBlock</a></div><div class="ttdeci">InMemoryBlock fixedAreaBlock</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00028">InMemoryStore.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_a9ed0c6365c676af648122d57cbd18e20"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a9ed0c6365c676af648122d57cbd18e20">Deveel.Data.Store.InMemoryStore.GetAreaBlock</a></div><div class="ttdeci">InMemoryBlock GetAreaBlock(long pointer)</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00077">InMemoryStore.cs:77</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_a2c9522b5eb2e543eb03eeca331f25ccc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a2c9522b5eb2e543eb03eeca331f25ccc">Deveel.Data.Store.InMemoryStore.DeleteArea</a></div><div class="ttdeci">void DeleteArea(long id)</div><div class="ttdoc">Deletes an area that was previously allocated by the CreateArea method by the area id...</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00129">InMemoryStore.cs:129</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_a7a699e33eca39f7a104060ffc69fc983"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a7a699e33eca39f7a104060ffc69fc983">Deveel.Data.Store.InMemoryStore.uniqueIdKey</a></div><div class="ttdeci">long uniqueIdKey</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00030">InMemoryStore.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea_htm_a9d42a14554b560bc2f264ea576f450bb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a9d42a14554b560bc2f264ea576f450bb">Deveel.Data.Store.InMemoryStore.InMemoryArea.startPosition</a></div><div class="ttdeci">readonly int startPosition</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00210">InMemoryStore.cs:210</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_a8d034bcbc64380572e74d2f0689a25a0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a8d034bcbc64380572e74d2f0689a25a0">Deveel.Data.Store.InMemoryStore.~InMemoryStore</a></div><div class="ttdeci">~InMemoryStore()</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00038">InMemoryStore.cs:38</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IArea_htm_a9591ccb271edb5ce2714e766d9979069"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a9591ccb271edb5ce2714e766d9979069">Deveel.Data.Store.IArea.Write</a></div><div class="ttdeci">void Write(byte[] buffer, int offset, int length)</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm">Deveel.Data.Store.InMemoryStore</a></div><div class="ttdoc">An implementation of IStore that persists data in the application memory. </div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00027">InMemoryStore.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_adcaa4f3de3703bb2da250e9d650c2b58"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#adcaa4f3de3703bb2da250e9d650c2b58">Deveel.Data.Store.InMemoryStore.CheckPoint</a></div><div class="ttdeci">void CheckPoint()</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00171">InMemoryStore.cs:171</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_a171e16ed931309141e1bc25b61854092"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a171e16ed931309141e1bc25b61854092">Deveel.Data.Store.InMemoryStore.CreateArea</a></div><div class="ttdeci">IArea CreateArea(long size)</div><div class="ttdoc">Allocates a block of memory in the store of the specified size and returns an IArea object that can b...</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00105">InMemoryStore.cs:105</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_a48c28031bd809fa324c2e22b77ad0bd1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a48c28031bd809fa324c2e22b77ad0bd1">Deveel.Data.Store.InMemoryStore.InMemoryStore</a></div><div class="ttdeci">InMemoryStore(string name, int hashSize)</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00032">InMemoryStore.cs:32</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_a8a8520318e73749479e37241d894f49b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a8a8520318e73749479e37241d894f49b">Deveel.Data.Store.InMemoryStore.Dispose</a></div><div class="ttdeci">void Dispose(bool disposing)</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00058">InMemoryStore.cs:58</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_af9df820ecfe6b04a60f0f5e9eb005bb7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#af9df820ecfe6b04a60f0f5e9eb005bb7">Deveel.Data.Store.InMemoryStore.Lock</a></div><div class="ttdeci">void Lock()</div><div class="ttdoc">This method is called before the start of a sequence of Write commands between consistant states of s...</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00163">InMemoryStore.cs:163</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea_htm_a7fc04afe3fda7c1964952e42ca3ab7cd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a7fc04afe3fda7c1964952e42ca3ab7cd">Deveel.Data.Store.InMemoryStore.InMemoryArea.position</a></div><div class="ttdeci">long position</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00209">InMemoryStore.cs:209</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm">Deveel.Data.Store.InMemoryStore.InMemoryBlock</a></div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00186">InMemoryStore.cs:186</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_a9b8d0f5d67f2084123b186eaf3a09267"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a9b8d0f5d67f2084123b186eaf3a09267">Deveel.Data.Store.InMemoryStore.Unlock</a></div><div class="ttdeci">void Unlock()</div><div class="ttdoc">This method is called after the end of a sequence of Write commands between consistant states of some...</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00167">InMemoryStore.cs:167</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm">Deveel.Data.Store.InMemoryStore.InMemoryArea</a></div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00207">InMemoryStore.cs:207</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea_htm_ace6b6be4f5f8ebb413f355b8a9eb0c36"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#ace6b6be4f5f8ebb413f355b8a9eb0c36">Deveel.Data.Store.InMemoryStore.InMemoryArea.Read</a></div><div class="ttdeci">int Read(byte[] buffer, int offset, int length)</div><div class="ttdoc">Reads an array of bytes from the underlying IArea and advances the position by length ...</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00269">InMemoryStore.cs:269</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea_htm_abdad410de1f712a413af4a65520f9c98"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#abdad410de1f712a413af4a65520f9c98">Deveel.Data.Store.InMemoryStore.InMemoryArea.CheckPositionBounds</a></div><div class="ttdeci">long CheckPositionBounds(int diff)</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00245">InMemoryStore.cs:245</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IArea_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">Deveel.Data.Store.IArea</a></div><div class="ttdoc">An interface for access the contents of an area of a store. </div><div class="ttdef"><b>Definition:</b> <a href="IArea_8cs_source.htm#l00023">IArea.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea_htm_aaefeea2693d178f7bcf140cd7f8f12b0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#aaefeea2693d178f7bcf140cd7f8f12b0">Deveel.Data.Store.InMemoryStore.InMemoryArea.endPosition</a></div><div class="ttdeci">readonly int endPosition</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00211">InMemoryStore.cs:211</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea_htm_ac3d329e2140ba1987aac617beb6014f4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#ac3d329e2140ba1987aac617beb6014f4">Deveel.Data.Store.InMemoryStore.InMemoryArea.Flush</a></div><div class="ttdeci">void Flush()</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00286">InMemoryStore.cs:286</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_aea1253e1f6478ad1f9f9854c680d41b7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#aea1253e1f6478ad1f9f9854c680d41b7">Deveel.Data.Store.InMemoryStore.GetArea</a></div><div class="ttdeci">IArea GetArea(long id, bool readOnly)</div><div class="ttdoc">Returns an object that allows for the contents of an area (represented by the id  parameter) to be Re...</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00158">InMemoryStore.cs:158</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_a213bf3aa85a57c8d15e4f4d8c68e686e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a213bf3aa85a57c8d15e4f4d8c68e686e">Deveel.Data.Store.InMemoryStore.GetBlock</a></div><div class="ttdeci">InMemoryBlock GetBlock(long pointer)</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00070">InMemoryStore.cs:70</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_a2af5d3a64d2226853ad18ca5a5a9559c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a2af5d3a64d2226853ad18ca5a5a9559c">Deveel.Data.Store.InMemoryStore.GetAllAreas</a></div><div class="ttdeci">IEnumerable&lt; long &gt; GetAllAreas()</div><div class="ttdoc">Returns a complete list of pointers to all areas in the Store as long objects sorted from lowest poin...</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00180">InMemoryStore.cs:180</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea_htm_a8f1d5eb3f9969b694865b2ecc4e22a56"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a8f1d5eb3f9969b694865b2ecc4e22a56">Deveel.Data.Store.InMemoryStore.InMemoryArea.InMemoryArea</a></div><div class="ttdeci">InMemoryArea(long id, bool readOnly, byte[] data, int offset, int length)</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00213">InMemoryStore.cs:213</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock_htm_a6d665bd56eac3cfd363d45a5303f782f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#a6d665bd56eac3cfd363d45a5303f782f">Deveel.Data.Store.InMemoryStore.InMemoryBlock.GetArea</a></div><div class="ttdeci">IArea GetArea(bool readOnly)</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00198">InMemoryStore.cs:198</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea_htm_ac59ad94d6b1a650aa12dbd6008a22e34"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#ac59ad94d6b1a650aa12dbd6008a22e34">Deveel.Data.Store.InMemoryStore.InMemoryArea.Write</a></div><div class="ttdeci">void Write(byte[] buffer, int offset, int length)</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00278">InMemoryStore.cs:278</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock_htm_aa4619bc9a77f9cf442e3021f7a124fdd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#aa4619bc9a77f9cf442e3021f7a124fdd">Deveel.Data.Store.InMemoryStore.InMemoryBlock.Next</a></div><div class="ttdeci">InMemoryBlock Next</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00196">InMemoryStore.cs:196</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock_htm_a28dff117aa510d4b9c84708162fed80f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#a28dff117aa510d4b9c84708162fed80f">Deveel.Data.Store.InMemoryStore.InMemoryBlock.InMemoryBlock</a></div><div class="ttdeci">InMemoryBlock(long id, int size)</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00189">InMemoryStore.cs:189</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_a513e5dfde10dcda69cd32e308656308e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a513e5dfde10dcda69cd32e308656308e">Deveel.Data.Store.InMemoryStore.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00065">InMemoryStore.cs:65</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea_htm_afe264d318d0da38e27e9b34e65b76faf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#afe264d318d0da38e27e9b34e65b76faf">Deveel.Data.Store.InMemoryStore.InMemoryArea.data</a></div><div class="ttdeci">readonly byte[] data</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00208">InMemoryStore.cs:208</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IStore_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm">Deveel.Data.Store.IStore</a></div><div class="ttdoc">A store is a resource where areas can be allocated and freed to store information (a memory allocator...</div><div class="ttdef"><b>Definition:</b> <a href="IStore_8cs_source.htm#l00056">IStore.cs:56</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea_htm_a31909a8fbc9f605e1d610836f528dac8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryArea.htm#a31909a8fbc9f605e1d610836f528dac8">Deveel.Data.Store.InMemoryStore.InMemoryArea.CopyTo</a></div><div class="ttdeci">void CopyTo(IArea destArea, int size)</div><div class="ttdoc">Copies the given amount of bytes from the current position of the this area to another one...</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00256">InMemoryStore.cs:256</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock_htm_a900f7f65f7479305e0dd6ebc4fe36f62"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_1_1InMemoryBlock.htm#a900f7f65f7479305e0dd6ebc4fe36f62">Deveel.Data.Store.InMemoryStore.InMemoryBlock.block</a></div><div class="ttdeci">readonly byte[] block</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00187">InMemoryStore.cs:187</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1InMemoryStore_htm_a10be0f1180f0b960ea28291f2430ef1c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a10be0f1180f0b960ea28291f2430ef1c">Deveel.Data.Store.InMemoryStore.areaMap</a></div><div class="ttdeci">InMemoryBlock[] areaMap</div><div class="ttdef"><b>Definition:</b> <a href="InMemoryStore_8cs_source.htm#l00029">InMemoryStore.cs:29</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
