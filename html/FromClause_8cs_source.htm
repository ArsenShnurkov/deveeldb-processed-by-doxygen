<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Expressions/FromClause.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_161bcb964f33d2739bc0895ad1af1730.htm">Deveel.Data.Sql.Expressions</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">FromClause.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="FromClause_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Globalization;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.IO;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Serialization.htm">Serialization</a>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Sql.Expressions {</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    [<a class="code" href="namespaceDeveel_1_1Data_1_1Transactions.htm#a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b">Serializable</a>]</div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm">   32</a></span>&#160;    <span class="keyword">public</span> sealed <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm">FromClause</a> : <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IPreparable.htm">IPreparable</a>, <a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">ISerializable</a> {</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a4d6b22811985f54893562829f7ebcaad">   33</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a4d6b22811985f54893562829f7ebcaad">FromClause</a>() {</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            fromTables = <span class="keyword">new</span> List&lt;FromTable&gt;();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            joinParts = <span class="keyword">new</span> List&lt;JoinPart&gt;();</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            tableNames = <span class="keyword">new</span> List&lt;string&gt;();</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        }</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#aacb0bc0b8c89e7118fd4d28812259177">   39</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#aacb0bc0b8c89e7118fd4d28812259177">FromClause</a>(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">ObjectData</a> data) {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            var tableNames = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a86f3d523b9ae1357b275ed330178ecb0">GetValue</a>&lt;<span class="keywordtype">string</span>[]&gt;(<span class="stringliteral">&quot;TableNames&quot;</span>);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            var fromTables = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a86f3d523b9ae1357b275ed330178ecb0">GetValue</a>&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm">FromTable</a>[]&gt;(<span class="stringliteral">&quot;FromTables&quot;</span>);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            var joinParts = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a86f3d523b9ae1357b275ed330178ecb0">GetValue</a>&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1JoinPart.htm">JoinPart</a>[]&gt;(<span class="stringliteral">&quot;JoinParts&quot;</span>);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            this.tableNames = <span class="keyword">new</span> List&lt;string&gt;();</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            this.fromTables = <span class="keyword">new</span> List&lt;FromTable&gt;();</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            this.joinParts = <span class="keyword">new</span> List&lt;JoinPart&gt;();</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            <span class="keywordflow">if</span> (tableNames != null)</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                this.tableNames.AddRange(tableNames);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            <span class="keywordflow">if</span> (fromTables != null)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                this.fromTables.AddRange(fromTables);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <span class="keywordflow">if</span> (joinParts != null)</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                this.joinParts.AddRange(joinParts);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        }</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a83c8ed636c4e0b8250a8bb48960a22e6">   56</a></span>&#160;        <span class="keyword">private</span> readonly List&lt;string&gt; <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a83c8ed636c4e0b8250a8bb48960a22e6">tableNames</a>;</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a1afa43838de7f2107cdbffd6da1e674d">   57</a></span>&#160;        <span class="keyword">private</span> readonly List&lt;FromTable&gt; <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a1afa43838de7f2107cdbffd6da1e674d">fromTables</a>;</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a0c32c495a9f74c3fd52b9cb5736a5a64">   58</a></span>&#160;        <span class="keyword">private</span> readonly List&lt;JoinPart&gt; <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a0c32c495a9f74c3fd52b9cb5736a5a64">joinParts</a>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a10421840ae03409fb19d4f283cb625d6">   63</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a10421840ae03409fb19d4f283cb625d6">tableKey</a>;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a2d1f59d1df455c8a1afb21f058a1d6be">   68</a></span>&#160;        <span class="keyword">public</span> IEnumerable&lt;FromTable&gt; AllTables {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> fromTables.ToArray(); }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a3f197c41de7265a3483cffa5aaaeac59">   75</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> JoinPartCount {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> joinParts.Count; }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#ae53982f811f1819af7144d168c85b7f2">   79</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> IsEmpty {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> fromTables.Count == 0; }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a193feb77fddc83128f29d02c9f6097f1">   83</a></span>&#160;        <span class="keyword">private</span> String <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a193feb77fddc83128f29d02c9f6097f1">CreateNewKey</a>() {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            ++tableKey;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">return</span> tableKey.ToString(CultureInfo.InvariantCulture);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a82c6e260b655b2aba403aaff5255cfe3">   93</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a82c6e260b655b2aba403aaff5255cfe3">AddTable</a>(<span class="keywordtype">string</span> alias, <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm">FromTable</a> table) {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">if</span> (table == null) </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;table&quot;</span>);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">if</span> (!String.IsNullOrEmpty(alias)) {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                <span class="keywordflow">if</span> (tableNames.Contains(alias))</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(String.Format(<span class="stringliteral">&quot;Duplicated table name {0} is FROM clause.&quot;</span>, alias));</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                tableNames.Add(alias);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="comment">// Create a new unique key for this table</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <span class="keywordtype">string</span> key = CreateNewKey();</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            table.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a19507dcd0e0d597525296f493252d6ff">UniqueKey</a> = key;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            fromTables.Add(table);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a4fc364f031d6f4d012e5f9f5a7d4885d">  116</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a4fc364f031d6f4d012e5f9f5a7d4885d">AddTable</a>(<span class="keywordtype">string</span> alias, <span class="keywordtype">string</span> tableName) {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            AddTable(alias, <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm">FromTable</a>(tableName, alias));</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        }</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a923544d8431510588147bc973f4c6424">  125</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a923544d8431510588147bc973f4c6424">AddTable</a>(<span class="keywordtype">string</span> tableName) {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            AddTable(null, tableName);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#ae15ef55de3bf671faa9d37804621ad2c">  134</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#ae15ef55de3bf671faa9d37804621ad2c">AddSubQuery</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">SqlQueryExpression</a> subQuery) {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            AddSubQuery(null, subQuery);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#ab2b15fd91ebc5f22abe835dc607cbb0e">  145</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#ab2b15fd91ebc5f22abe835dc607cbb0e">AddSubQuery</a>(<span class="keywordtype">string</span> alias, <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">SqlQueryExpression</a> subQuery) {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            AddTable(alias, <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm">FromTable</a>(subQuery, alias));</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a5539305f5692f0f373b31ba5737b974f">  154</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a5539305f5692f0f373b31ba5737b974f">Join</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">JoinType</a> joinType, <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> onExpression) {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            var lastTable = fromTables[fromTables.Count - 1];</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="keywordflow">if</span> (lastTable.IsSubQuery) {</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                var subQuery = lastTable.SubQuery;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                joinParts.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1JoinPart.htm">JoinPart</a>(joinType, subQuery, onExpression));</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                var tableName = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a94a5079bbbd800dffcc9010cfad8c5b1">Parse</a>(lastTable.Name);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                joinParts.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1JoinPart.htm">JoinPart</a>(joinType, tableName, onExpression));</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#aa2ae4f23d44b1184b9983d253107b158">  174</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1JoinPart.htm">JoinPart</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#aa2ae4f23d44b1184b9983d253107b158">GetJoinPart</a>(<span class="keywordtype">int</span> offset) {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordflow">return</span> joinParts[offset];</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a95a518df75b54824546994eb63915389">  178</a></span>&#160;        <span class="keywordtype">object</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IPreparable.htm">IPreparable</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IPreparable.htm#a1592c7ed49e8e0c4b62d126ea8fcfbfd">Prepare</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IExpressionPreparer.htm">IExpressionPreparer</a> preparer) {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            var clause = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm">FromClause</a>();</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="comment">// Prepare expressions in the JoiningSet first</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="keywordtype">int</span> size = joinParts.Count;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; size; ++i) {</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                var part = joinParts[i];</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                var exp = part.OnExpression;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                <span class="keywordflow">if</span> (exp != null) {</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                    exp = exp.Prepare(preparer);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                    <span class="keywordflow">if</span> (part.SubQuery != null) {</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                        part = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1JoinPart.htm">JoinPart</a>(part.JoinType, part.SubQuery,  exp);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                        part = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1JoinPart.htm">JoinPart</a>(part.JoinType, part.TableName, exp);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                    }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                clause.joinParts.Add(part);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            }</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <span class="comment">// Prepare the StatementTree sub-queries in the from tables</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; fromTables.Count; i++) {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                var table = fromTables[i];</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                var preparedTable = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm">FromTable</a>) ((<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IPreparable.htm">IPreparable</a>) table).Prepare(preparer);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                var tableAlias = tableNames[i];</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                clause.tableNames.Insert(i, tableAlias);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                clause.fromTables.Insert(i, preparedTable);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            }</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <span class="keywordflow">return</span> clause;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        }</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#ae27b4d14f5596c7c407cbac5edfbecee">  210</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">ISerializable</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm#acd5831980e3c1969437ba5c9d838669e">GetData</a>(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a> data) {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keywordflow">if</span> (tableNames != null)</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;TableNames&quot;</span>, tableNames.ToArray());</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <span class="keywordflow">if</span> (fromTables != null)</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;FromTables&quot;</span>, fromTables.ToArray());</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keywordflow">if</span> (joinParts != null)</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;JoinParts&quot;</span>, joinParts.ToArray());</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        }</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="comment">//public static void Serialize(FromClause clause, BinaryWriter writer) {</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="comment">//  var tableNamesCount = clause.tableNames.Count;</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="comment">//  writer.Write(tableNamesCount);</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="comment">//  for (int i = 0; i &lt; tableNamesCount; i++) {</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="comment">//      writer.Write(clause.tableNames[0]);</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="comment">//  }</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="comment">//  var tableCount = clause.fromTables.Count;</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="comment">//  writer.Write(tableCount);</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="comment">//  for (int i = 0; i &lt; tableCount; i++) {</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="comment">//      FromTable.Serialize(clause.fromTables[i], writer);</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="comment">//  }</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="comment">//  var joinCount = clause.joinParts.Count;</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="comment">//  writer.Write(joinCount);</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="comment">//  for (int i = 0; i &lt; joinCount; i++) {</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="comment">//      JoinPart.Serialize(clause.joinParts[i], writer);</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="comment">//  }</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="comment">//}</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="comment">//public static FromClause Deserialize(BinaryReader reader) {</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="comment">//  var fromClause = new FromClause();</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="comment">//  var tableNameCount = reader.ReadInt32();</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="comment">//  for (int i = 0; i &lt; tableNameCount; i++) {</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="comment">//      fromClause.tableNames.Add(reader.ReadString());</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="comment">//  }</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="comment">//  var tableCount = reader.ReadInt32();</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="comment">//  for (int i = 0; i &lt; tableCount; i++) {</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="comment">//      fromClause.fromTables.Add(FromTable.Deserialize(reader));</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="comment">//  }</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="comment">//  var joinCount = reader.ReadInt32();</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="comment">//  for (int i = 0; i &lt; joinCount; i++) {</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="comment">//      fromClause.joinParts.Add(JoinPart.Deserialize(reader));</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="comment">//  }</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <span class="comment">//  return fromClause;</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <span class="comment">//}</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    }</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;}</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Serialization_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Serialization.htm">Deveel.Data.Serialization</a></div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00024">BinarySerializer.cs:24</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable_htm_acd5831980e3c1969437ba5c9d838669e"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm#acd5831980e3c1969437ba5c9d838669e">Deveel.Data.Serialization.ISerializable.GetData</a></div><div class="ttdeci">void GetData(SerializeData data)</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a94a5079bbbd800dffcc9010cfad8c5b1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a94a5079bbbd800dffcc9010cfad8c5b1">Deveel.Data.Sql.ObjectName.Parse</a></div><div class="ttdeci">static ObjectName Parse(string s)</div><div class="ttdoc">Parses the given string into a ObjectName object. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00139">ObjectName.cs:139</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_a4d6b22811985f54893562829f7ebcaad"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a4d6b22811985f54893562829f7ebcaad">Deveel.Data.Sql.Expressions.FromClause.FromClause</a></div><div class="ttdeci">FromClause()</div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00033">FromClause.cs:33</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions_htm_adb07f7a341b1eda61ff53ddf48cfec81"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">Deveel.Data.Sql.Expressions.JoinType</a></div><div class="ttdeci">JoinType</div><div class="ttdoc">Enumerates the kind of group join in a selection query. </div><div class="ttdef"><b>Definition:</b> <a href="JoinType_8cs_source.htm#l00023">JoinType.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_a82c6e260b655b2aba403aaff5255cfe3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a82c6e260b655b2aba403aaff5255cfe3">Deveel.Data.Sql.Expressions.FromClause.AddTable</a></div><div class="ttdeci">void AddTable(string alias, FromTable table)</div><div class="ttdoc">Adds a table as source to the query with a given alias. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00093">FromClause.cs:93</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_a0c32c495a9f74c3fd52b9cb5736a5a64"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a0c32c495a9f74c3fd52b9cb5736a5a64">Deveel.Data.Sql.Expressions.FromClause.joinParts</a></div><div class="ttdeci">readonly List&lt; JoinPart &gt; joinParts</div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00058">FromClause.cs:58</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_a5539305f5692f0f373b31ba5737b974f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a5539305f5692f0f373b31ba5737b974f">Deveel.Data.Sql.Expressions.FromClause.Join</a></div><div class="ttdeci">void Join(JoinType joinType, SqlExpression onExpression)</div><div class="ttdoc">Sets a join between the last added table and the one that preceeds it. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00154">FromClause.cs:154</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm_a2a09ed1c661f92b60b0b38398fb7ced1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">Deveel.Data.Serialization.SerializeData.SetValue</a></div><div class="ttdeci">void SetValue(string key, Type type, object value)</div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00035">SerializeData.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">Deveel.Data.Sql.ObjectName</a></div><div class="ttdoc">Describes the name of an object within a database. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00044">ObjectName.cs:44</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_aa2ae4f23d44b1184b9983d253107b158"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#aa2ae4f23d44b1184b9983d253107b158">Deveel.Data.Sql.Expressions.FromClause.GetJoinPart</a></div><div class="ttdeci">JoinPart GetJoinPart(int offset)</div><div class="ttdoc">Gets the descriptor of the join at the given offset. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00174">FromClause.cs:174</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">Deveel.Data.Serialization.ISerializable</a></div><div class="ttdef"><b>Definition:</b> <a href="ISerializable_8cs_source.htm#l00020">ISerializable.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_a83c8ed636c4e0b8250a8bb48960a22e6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a83c8ed636c4e0b8250a8bb48960a22e6">Deveel.Data.Sql.Expressions.FromClause.tableNames</a></div><div class="ttdeci">readonly List&lt; string &gt; tableNames</div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00056">FromClause.cs:56</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_a10421840ae03409fb19d4f283cb625d6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a10421840ae03409fb19d4f283cb625d6">Deveel.Data.Sql.Expressions.FromClause.tableKey</a></div><div class="ttdeci">int tableKey</div><div class="ttdoc">An id used for making unique names for anonymous inner selects. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00063">FromClause.cs:63</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">Deveel.Data.Serialization.SerializeData</a></div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00021">SerializeData.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_ae15ef55de3bf671faa9d37804621ad2c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#ae15ef55de3bf671faa9d37804621ad2c">Deveel.Data.Sql.Expressions.FromClause.AddSubQuery</a></div><div class="ttdeci">void AddSubQuery(SqlQueryExpression subQuery)</div><div class="ttdoc">Adds a sub-query expression as source of the query. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00134">FromClause.cs:134</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">Deveel.Data.Serialization.ObjectData</a></div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00022">ObjectData.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm">Deveel.Data.Sql.Expressions.FromClause</a></div><div class="ttdoc">A container for the FROM clause of a select statement. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00032">FromClause.cs:32</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_a193feb77fddc83128f29d02c9f6097f1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a193feb77fddc83128f29d02c9f6097f1">Deveel.Data.Sql.Expressions.FromClause.CreateNewKey</a></div><div class="ttdeci">String CreateNewKey()</div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00083">FromClause.cs:83</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IExpressionPreparer_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IExpressionPreparer.htm">Deveel.Data.Sql.Expressions.IExpressionPreparer</a></div><div class="ttdoc">An interface used to prepare a SqlExpression object. </div><div class="ttdef"><b>Definition:</b> <a href="IExpressionPreparer_8cs_source.htm#l00027">IExpressionPreparer.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable_htm_a19507dcd0e0d597525296f493252d6ff"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm#a19507dcd0e0d597525296f493252d6ff">Deveel.Data.Sql.Expressions.FromTable.UniqueKey</a></div><div class="ttdeci">string UniqueKey</div><div class="ttdoc">Gets or sets the unique key. </div><div class="ttdef"><b>Definition:</b> <a href="FromTable_8cs_source.htm#l00093">FromTable.cs:93</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_aacb0bc0b8c89e7118fd4d28812259177"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#aacb0bc0b8c89e7118fd4d28812259177">Deveel.Data.Sql.Expressions.FromClause.FromClause</a></div><div class="ttdeci">FromClause(ObjectData data)</div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00039">FromClause.cs:39</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1JoinPart_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1JoinPart.htm">Deveel.Data.Sql.Expressions.JoinPart</a></div><div class="ttdef"><b>Definition:</b> <a href="JoinPart_8cs_source.htm#l00024">JoinPart.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_a1afa43838de7f2107cdbffd6da1e674d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a1afa43838de7f2107cdbffd6da1e674d">Deveel.Data.Sql.Expressions.FromClause.fromTables</a></div><div class="ttdeci">readonly List&lt; FromTable &gt; fromTables</div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00057">FromClause.cs:57</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IPreparable_htm_a1592c7ed49e8e0c4b62d126ea8fcfbfd"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IPreparable.htm#a1592c7ed49e8e0c4b62d126ea8fcfbfd">Deveel.Data.Sql.Expressions.IPreparable.Prepare</a></div><div class="ttdeci">object Prepare(IExpressionPreparer preparer)</div><div class="ttdoc">Converts the underlying value of this instance into an object that can be evaluated by an expression...</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_a4fc364f031d6f4d012e5f9f5a7d4885d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a4fc364f031d6f4d012e5f9f5a7d4885d">Deveel.Data.Sql.Expressions.FromClause.AddTable</a></div><div class="ttdeci">void AddTable(string alias, string tableName)</div><div class="ttdoc">Adds a simple table reference as the source of the query with a given alias. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00116">FromClause.cs:116</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_a923544d8431510588147bc973f4c6424"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a923544d8431510588147bc973f4c6424">Deveel.Data.Sql.Expressions.FromClause.AddTable</a></div><div class="ttdeci">void AddTable(string tableName)</div><div class="ttdoc">Adds a simple table reference as the source of the query. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00125">FromClause.cs:125</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a86f3d523b9ae1357b275ed330178ecb0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a86f3d523b9ae1357b275ed330178ecb0">Deveel.Data.Serialization.ObjectData.GetValue</a></div><div class="ttdeci">object GetValue(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00048">ObjectData.cs:48</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromTable.htm">Deveel.Data.Sql.Expressions.FromTable</a></div><div class="ttdoc">Describes a single table declaration in the from clause of a table expression (SELECT). </div><div class="ttdef"><b>Definition:</b> <a href="FromTable_8cs_source.htm#l00027">FromTable.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">Deveel.Data.Sql.Expressions.SqlExpression</a></div><div class="ttdoc">Defines the base class for instances that represent SQL expression tree nodes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00035">SqlExpression.cs:35</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Transactions_htm_a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Transactions.htm#a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b">Deveel.Data.Transactions.IsolationLevel.Serializable</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_ab2b15fd91ebc5f22abe835dc607cbb0e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#ab2b15fd91ebc5f22abe835dc607cbb0e">Deveel.Data.Sql.Expressions.FromClause.AddSubQuery</a></div><div class="ttdeci">void AddSubQuery(string alias, SqlQueryExpression subQuery)</div><div class="ttdoc">Adds a sub-query expression as source of the query. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00145">FromClause.cs:145</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">Deveel.Data.Sql.Expressions.SqlQueryExpression</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpression_8cs_source.htm#l00025">SqlQueryExpression.cs:25</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IPreparable_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Expressions_1_1IPreparable.htm">Deveel.Data.Sql.Expressions.IPreparable</a></div><div class="ttdoc">A contract for objects that participate to a SqlExpression.Prepare phase of an expression evaluation...</div><div class="ttdef"><b>Definition:</b> <a href="IPreparable_8cs_source.htm#l00030">IPreparable.cs:30</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
