<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Client/DeveelDbConnectionStringBuilder.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_09905981a05eb5ad6849100d535d3ae0.htm">Deveel.Data.Client</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">DeveelDbConnectionStringBuilder.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="DeveelDbConnectionStringBuilder_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.ComponentModel;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Data.Common;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Globalization;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a>;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Client {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    [DefaultProperty(<span class="stringliteral">&quot;DataSource&quot;</span>)]</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm">   28</a></span>&#160;    <span class="keyword">public</span> sealed <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm">DeveelDbConnectionStringBuilder</a> : DbConnectionStringBuilder {</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aee145e3655b06b610cfa304f5aa8938f">   29</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aee145e3655b06b610cfa304f5aa8938f">DeveelDbConnectionStringBuilder</a>(<span class="keywordtype">string</span> connectionString) {</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            InitToDefault();</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            ConnectionString = connectionString;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        }</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a3a5c35453ee81c41592e2b6bc312fa44">   34</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a3a5c35453ee81c41592e2b6bc312fa44">DeveelDbConnectionStringBuilder</a>()</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            : this(String.Empty) {</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        }</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#add3ca3feafa2c66f9b7d7a66d2e3dd26">   38</a></span>&#160;        <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#add3ca3feafa2c66f9b7d7a66d2e3dd26">DeveelDbConnectionStringBuilder</a>() {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            defaults = <span class="keyword">new</span> Dictionary&lt;string, object&gt;();</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            defaults.Add(HostKey, DefaultHost);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            defaults.Add(PortKey, DefaultPort);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            defaults.Add(DatabaseKey, DefaultDatabase);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            defaults.Add(UserNameKey, DefaultUserName);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            defaults.Add(PasswordKey, DefaultPassword);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            defaults.Add(SchemaKey, DefaultSchema);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            defaults.Add(PathKey, DefaultPath);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            defaults.Add(CreateKey, DefaultCreate);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            defaults.Add(BootOrCreateKey, DefaultBootOrCreate);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            defaults.Add(ParameterStyleKey, DefaultParameterStyle);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            defaults.Add(VerboseColumnNamesKey, DefaultVerboseColumnName);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            defaults.Add(PersistSecurityInfoKey, DefaultPersistSecurityInfo);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            defaults.Add(RowCacheSizeKey, DefaultRowCacheSize);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            defaults.Add(MaxCacheSizeKey, DefaultMaxCacheSize);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            defaults.Add(FetchSizeKey, DefaultFetchSize);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            defaults.Add(MaxFetchSizeKey, DefaultMaxFetchSize);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            defaults.Add(AutoCommitKey, DefaultAutoCommit);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            defaults.Add(QueryTimeoutKey, DefaultQueryTimeout);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            keymaps = <span class="keyword">new</span> Dictionary&lt;string, string&gt;(StringComparer.InvariantCultureIgnoreCase);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            keymaps[HostKey.ToUpper()] = HostKey;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            keymaps[<span class="stringliteral">&quot;ADDRESS&quot;</span>] = HostKey;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            keymaps[<span class="stringliteral">&quot;SERVER&quot;</span>] = HostKey;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            keymaps[PortKey.ToUpper()] = PortKey;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            keymaps[DatabaseKey.ToUpper()] = DatabaseKey;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            keymaps[<span class="stringliteral">&quot;CATALOG&quot;</span>] = DatabaseKey;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            keymaps[<span class="stringliteral">&quot;INITIAL CATALOG&quot;</span>] = DatabaseKey;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            keymaps[<span class="stringliteral">&quot;DB&quot;</span>] = DatabaseKey;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            keymaps[SchemaKey.ToUpper()] = SchemaKey;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            keymaps[<span class="stringliteral">&quot;DEFAULT SCHEMA&quot;</span>] = SchemaKey;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            keymaps[PathKey.ToUpper()] = PathKey;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            keymaps[<span class="stringliteral">&quot;DATA PATH&quot;</span>] = PathKey;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            keymaps[<span class="stringliteral">&quot;DATABASE PATH&quot;</span>] = PathKey;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            keymaps[<span class="stringliteral">&quot;DATAPATH&quot;</span>] = PathKey;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            keymaps[<span class="stringliteral">&quot;DATABASEPATH&quot;</span>] = PathKey;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            keymaps[CreateKey.ToUpper()] = CreateKey;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            keymaps[BootOrCreateKey] = BootOrCreateKey;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            keymaps[<span class="stringliteral">&quot;BOOT OR CREATE&quot;</span>] = BootOrCreateKey;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            keymaps[<span class="stringliteral">&quot;CREATE OR BOOT&quot;</span>] = BootOrCreateKey;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            keymaps[<span class="stringliteral">&quot;CREATEORBOOT&quot;</span>] = BootOrCreateKey;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            keymaps[CreateKey.ToUpper()] = CreateKey;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            keymaps[<span class="stringliteral">&quot;CREATE DATABASE&quot;</span>] = CreateKey;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            keymaps[UserNameKey.ToUpper()] = UserNameKey;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            keymaps[<span class="stringliteral">&quot;USER&quot;</span>] = UserNameKey;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            keymaps[<span class="stringliteral">&quot;USER NAME&quot;</span>] = UserNameKey;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            keymaps[<span class="stringliteral">&quot;USER ID&quot;</span>] = UserNameKey;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            keymaps[<span class="stringliteral">&quot;USERID&quot;</span>] = UserNameKey;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            keymaps[<span class="stringliteral">&quot;UID&quot;</span>] = UserNameKey;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            keymaps[PasswordKey.ToUpper()] = PasswordKey;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            keymaps[<span class="stringliteral">&quot;PASS&quot;</span>] = PasswordKey;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            keymaps[<span class="stringliteral">&quot;PWD&quot;</span>] = PasswordKey;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            keymaps[<span class="stringliteral">&quot;SECRET&quot;</span>] = PasswordKey;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            keymaps[ParameterStyleKey.ToUpper()] = ParameterStyleKey;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            keymaps[<span class="stringliteral">&quot;PARAMSTYLE&quot;</span>] = ParameterStyleKey;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            keymaps[<span class="stringliteral">&quot;PARAMETER STYLE&quot;</span>] = ParameterStyleKey;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            keymaps[<span class="stringliteral">&quot;USEPARMAMETER&quot;</span>] = ParameterStyleKey;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            keymaps[<span class="stringliteral">&quot;USE PARAMETER&quot;</span>] = ParameterStyleKey;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            keymaps[VerboseColumnNamesKey.ToUpper()] = VerboseColumnNamesKey;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            keymaps[<span class="stringliteral">&quot;VERBOSE COLUMNS&quot;</span>] = VerboseColumnNamesKey;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            keymaps[<span class="stringliteral">&quot;VERBOSE COLUMN NAMES&quot;</span>] = VerboseColumnNamesKey;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            keymaps[<span class="stringliteral">&quot;VERBOSECOLUMNS&quot;</span>] = VerboseColumnNamesKey;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            keymaps[<span class="stringliteral">&quot;COLUMNS VERBOSE&quot;</span>] = VerboseColumnNamesKey;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            keymaps[PersistSecurityInfoKey.ToUpper()] = PersistSecurityInfoKey;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            keymaps[<span class="stringliteral">&quot;PERSIST SECURITY INFO&quot;</span>] = PersistSecurityInfoKey;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            keymaps[RowCacheSizeKey.ToUpper()] = RowCacheSizeKey;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            keymaps[<span class="stringliteral">&quot;ROW CACHE SIZE&quot;</span>] = RowCacheSizeKey;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            keymaps[<span class="stringliteral">&quot;CACHE SIZE&quot;</span>] = RowCacheSizeKey;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            keymaps[MaxCacheSizeKey.ToUpper()] = MaxCacheSizeKey;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            keymaps[<span class="stringliteral">&quot;MAX CACHE SIZE&quot;</span>] = MaxCacheSizeKey;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            keymaps[<span class="stringliteral">&quot;MAX CACHE&quot;</span>] = MaxCacheSizeKey;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            keymaps[QueryTimeoutKey.ToUpper()] = QueryTimeoutKey;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            keymaps[<span class="stringliteral">&quot;QUERY TIMEOUT&quot;</span>] = QueryTimeoutKey;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            keymaps[IgnoreIdentifiersCaseKey.ToUpper()] = IgnoreIdentifiersCaseKey;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            keymaps[<span class="stringliteral">&quot;IGNORE CASE&quot;</span>] = IgnoreIdentifiersCaseKey;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            keymaps[<span class="stringliteral">&quot;IGNORE ID CASE&quot;</span>] = IgnoreIdentifiersCaseKey;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            keymaps[<span class="stringliteral">&quot;ID CASE IGNORED&quot;</span>] = IgnoreIdentifiersCaseKey;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            keymaps[StrictGetValueKey.ToUpper()] = StrictGetValueKey;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            keymaps[<span class="stringliteral">&quot;STRICT&quot;</span>] = StrictGetValueKey;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            keymaps[<span class="stringliteral">&quot;STRICT GETVALUE&quot;</span>] = StrictGetValueKey;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            keymaps[<span class="stringliteral">&quot;STRICT VALUE&quot;</span>] = StrictGetValueKey;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            keymaps[<span class="stringliteral">&quot;STRICTVALUE&quot;</span>] = StrictGetValueKey;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            keymaps[FetchSizeKey.ToUpper()] = FetchSizeKey;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            keymaps[<span class="stringliteral">&quot;FETCH SIZE&quot;</span>] = FetchSizeKey;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            keymaps[<span class="stringliteral">&quot;ROW COUNT&quot;</span>] = FetchSizeKey;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            keymaps[<span class="stringliteral">&quot;ROWCOUNT&quot;</span>] = FetchSizeKey;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            keymaps[MaxFetchSizeKey.ToUpper()] = MaxFetchSizeKey;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            keymaps[<span class="stringliteral">&quot;MAX FETCH SIZE&quot;</span>] = MaxFetchSizeKey;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            keymaps[<span class="stringliteral">&quot;MAXFETCHSIZE&quot;</span>] = MaxFetchSizeKey;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            keymaps[<span class="stringliteral">&quot;MAX ROW COUNT&quot;</span>] = MaxFetchSizeKey;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            keymaps[<span class="stringliteral">&quot;MAX ROWCOUNT&quot;</span>] = MaxFetchSizeKey;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            keymaps[<span class="stringliteral">&quot;MAXROWCOUNT&quot;</span>] = MaxFetchSizeKey;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            keymaps[AutoCommitKey.ToUpper()] = AutoCommitKey;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            keymaps[<span class="stringliteral">&quot;AUTOCOMMIT&quot;</span>] = AutoCommitKey;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            keymaps[<span class="stringliteral">&quot;AUTO-COMMIT&quot;</span>] = AutoCommitKey;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            keymaps[<span class="stringliteral">&quot;AUTO_COMMIT&quot;</span>] = AutoCommitKey;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            keymaps[<span class="stringliteral">&quot;AUTO COMMIT&quot;</span>] = AutoCommitKey;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            keymaps[<span class="stringliteral">&quot;COMMIT AUTO&quot;</span>] = AutoCommitKey;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            keymaps[<span class="stringliteral">&quot;COMMIT_AUTO&quot;</span>] = AutoCommitKey;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            keymaps[<span class="stringliteral">&quot;COMMITAUTO&quot;</span>] = AutoCommitKey;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            keymaps[<span class="stringliteral">&quot;COMMIT-AUTO&quot;</span>] = AutoCommitKey;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            keymaps[<span class="stringliteral">&quot;COMMIT&quot;</span>] = AutoCommitKey;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a80ab11c17fd1fd716e3e561bfdfc7aaa">  143</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> HostKey = <span class="stringliteral">&quot;Host&quot;</span>;</div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a3173a3d271fd031f5da06509a320462d">  144</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> PortKey = <span class="stringliteral">&quot;Port&quot;</span>;</div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ac4242e7d285ec3a3d9c41327fa7f89c3">  145</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> DatabaseKey = <span class="stringliteral">&quot;Database&quot;</span>;</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a125cccd0b73aa694efa748cb902c894a">  146</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> UserNameKey = <span class="stringliteral">&quot;UserName&quot;</span>;</div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a8d2a19837e3320466c46f77e7df515c1">  147</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> PasswordKey = <span class="stringliteral">&quot;Password&quot;</span>;</div>
<div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a5c192df20dfa6c4b44ffa25d83ea6173">  148</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> SchemaKey = <span class="stringliteral">&quot;Schema&quot;</span>;</div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ade0afb4aeb1b988724da6b3df8ffd447">  149</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> PathKey = <span class="stringliteral">&quot;Path&quot;</span>;</div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a1c42a8a87faaca53728c8affdf38bfbd">  150</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> CreateKey = <span class="stringliteral">&quot;Create&quot;</span>;</div>
<div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a98434d8e102ff056c434f72e4da0cee5">  151</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> BootOrCreateKey = <span class="stringliteral">&quot;BootOrCreate&quot;</span>;</div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#abc34f1b67b375e57f3944c1bac85586f">  152</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> ParameterStyleKey = <span class="stringliteral">&quot;ParameterStyle&quot;</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#af4deefbe221f5e04fd7ebaeaaf925e01">  153</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> VerboseColumnNamesKey = <span class="stringliteral">&quot;VerboseColumnNames&quot;</span>;</div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a5636f60fa8a8629ecab4febe215d2f4e">  154</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> PersistSecurityInfoKey = <span class="stringliteral">&quot;PersistSecurityInfo&quot;</span>;</div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#adf7b0e7dd8041ba1869b37abc7c681a4">  155</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> RowCacheSizeKey = <span class="stringliteral">&quot;RowCacheSize&quot;</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#afef45716ac1f62d704f93fb6983a02e5">  156</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> MaxCacheSizeKey = <span class="stringliteral">&quot;MaxCacheSize&quot;</span>;</div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#af7f5b57091600c553caacb33d38e012c">  157</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> QueryTimeoutKey = <span class="stringliteral">&quot;QueryTimeout&quot;</span>;</div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a12761abdc3c89437c1049377b20fe955">  158</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> IgnoreIdentifiersCaseKey = <span class="stringliteral">&quot;IgnoreIdentifiersCase&quot;</span>;</div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a55d6c309237997abeca4b273fd183567">  159</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> StrictGetValueKey = <span class="stringliteral">&quot;StrictGetValue&quot;</span>;</div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a291348ff1439598167c346f863cf83ef">  160</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> FetchSizeKey = <span class="stringliteral">&quot;FetchSize&quot;</span>;</div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a1a15eb1242504a22f16b2fef453fb6e7">  161</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> MaxFetchSizeKey = <span class="stringliteral">&quot;MaxFetchSize&quot;</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a78867fc16f6d2b4708a161265ba5ee32">  162</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> AutoCommitKey = <span class="stringliteral">&quot;AutoCommit&quot;</span>;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a188a705e1afbacdd4cdebd4f678bf793">  164</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> DefaultHost = <span class="stringliteral">&quot;localhost&quot;</span>;</div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a10b6eb89616aeef89a21274b3e8de5ea">  165</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">int</span> DefaultPort = 9157;</div>
<div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a8b7f9b9452c3690eec41a13b63552c58">  166</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> DefaultDatabase = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ab0ff63a4454e036bda91e444cd84c9dd">  167</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> DefaultUserName = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aa82e82b9dab07c9107840fd94454afbb">  168</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> DefaultPassword = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a3031ced460d7d842b82f3d79a4a0bd24">  169</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> DefaultSchema = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#adef739b6bd76fe9a3da43c2a40378b86">  170</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">string</span> DefaultPath = <span class="stringliteral">&quot;.&quot;</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a959ac6ffb50d879d728c2a161d6401f1">  171</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">bool</span> DefaultCreate = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a1b792e6508dc0511681ae461323e7303">  172</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">bool</span> DefaultBootOrCreate = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ad767d086cc7a1f436a75868488e31ae3">  173</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a3f41adf2ae023b6ec661173e43611b42">QueryParameterStyle</a> DefaultParameterStyle = <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a3f41adf2ae023b6ec661173e43611b42">QueryParameterStyle</a>.Marker;</div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a1b76f44511da9e98de5298e62f1de392">  174</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">bool</span> DefaultVerboseColumnName = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a1f13f2566cf0a41a118f7247f8e45ce8">  175</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">bool</span> DefaultPersistSecurityInfo = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a0697d55497435923fd8b1a4a6d97517f">  176</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">int</span> DefaultRowCacheSize = 1024;</div>
<div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a0445d5effb8b15308320731702b36189">  177</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">int</span> DefaultMaxCacheSize = 1024 * 40;</div>
<div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ae235939c9dd322a9eb28ffc12e32d12c">  178</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">int</span> DefaultQueryTimeout = Int32.MaxValue;</div>
<div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a91339ecc714484a1ea576c30e4b3c734">  179</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">bool</span> DefaultIgnoreIdentifiersCase = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a7a2bfe32444fbe6428112939a27b8443">  180</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">bool</span> DefaultStrictGetValue = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a1843e631f1541d669da9de6b70315906">  181</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">int</span> DefaultMaxFetchSize = 512;</div>
<div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ae209719cc69e57ad370d4f3b9b47eb0e">  182</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">int</span> DefaultFetchSize = 32;</div>
<div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a79b29bb2af7bffedc6a55cf03da15b12">  183</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">bool</span> DefaultAutoCommit = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ab2ccaebfba22b1e7a4b21b8525d71570">  185</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> readonly Dictionary&lt;string, object&gt; <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ab2ccaebfba22b1e7a4b21b8525d71570">defaults</a>;</div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a293800519c8c6984e91b0d8370bb1ebd">  186</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> readonly Dictionary&lt;string, string&gt; <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a293800519c8c6984e91b0d8370bb1ebd">keymaps</a>;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a51634db071137eb5930969d260e82d9e">  188</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">string</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a51634db071137eb5930969d260e82d9e">host</a>;</div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aa0a493f997d9339278df8833790ee348">  189</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aa0a493f997d9339278df8833790ee348">port</a>;</div>
<div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a5700e280d0eabb3740217baeae4a144f">  190</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">string</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a5700e280d0eabb3740217baeae4a144f">database</a>;</div>
<div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a92be85f0dbd478321a19c6e9dd7dbb68">  191</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">string</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a92be85f0dbd478321a19c6e9dd7dbb68">userName</a>;</div>
<div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a24e4539f0c071fae9194a984f1225165">  192</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">string</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a24e4539f0c071fae9194a984f1225165">password</a>;</div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ad959305ccc0ff62baed5124d387ead89">  193</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">string</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ad959305ccc0ff62baed5124d387ead89">schema</a>;</div>
<div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a529c5ccf510d6353fbd369d7ed9bf6ae">  194</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">string</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a529c5ccf510d6353fbd369d7ed9bf6ae">path</a>;</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a08028850644d39484818b893ee9196bd">  195</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a08028850644d39484818b893ee9196bd">verboseColumnNames</a>;</div>
<div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a141a9dd2668464c4f15f56b634ab0186">  196</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a3f41adf2ae023b6ec661173e43611b42">QueryParameterStyle</a> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a141a9dd2668464c4f15f56b634ab0186">paramStyle</a>;</div>
<div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a21445d20feddac413845eb59034c7b6e">  197</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a21445d20feddac413845eb59034c7b6e">persistSecurityInfo</a>;</div>
<div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a1c70a4fd60c5f7f00f6f35285e9f890e">  198</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a1c70a4fd60c5f7f00f6f35285e9f890e">rowCacheSize</a>;</div>
<div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ad809f0ac00c6d3552e8d5839307cf1cf">  199</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ad809f0ac00c6d3552e8d5839307cf1cf">maxCacheSize</a>;</div>
<div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a3079ee76845359fca8a8bbfde8e4d2b6">  200</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a3079ee76845359fca8a8bbfde8e4d2b6">queryTimeout</a>;</div>
<div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a537b2077f96407d99b0c75e64792ee8c">  201</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a537b2077f96407d99b0c75e64792ee8c">ignoreCase</a>;</div>
<div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a583d0721886c351a12025f877475cd61">  202</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a583d0721886c351a12025f877475cd61">create</a>;</div>
<div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aa63bb75347ed67d83f5b09397cbed017">  203</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aa63bb75347ed67d83f5b09397cbed017">bootOrCreate</a>;</div>
<div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a1e33ba41f1ec19dec80b907e3a06b75a">  204</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a1e33ba41f1ec19dec80b907e3a06b75a">strictGetValue</a>;</div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a32c4c2a5fbd267f7d08fc74d3e0c3aaf">  205</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a32c4c2a5fbd267f7d08fc74d3e0c3aaf">fetchSize</a>;</div>
<div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#afbf6b9218e653cd4b570a34be771c389">  206</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#afbf6b9218e653cd4b570a34be771c389">maxFetchSize</a>;</div>
<div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ada37ff529bedf88e84532281b550fe0f">  207</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ada37ff529bedf88e84532281b550fe0f">autoCommit</a>;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div>
<div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ad8e459889bcc6ec672ef0831ad773f7e">  209</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> IsFixedSize {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a2193633a5047577c81ccfe42df56fa79">  213</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">object</span> <span class="keyword">this</span>[<span class="keywordtype">string</span> keyword] {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="keyword">get</span> {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                keyword = MappKey(keyword);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                <span class="keywordflow">if</span> (base.ContainsKey(keyword))</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                    <span class="keywordflow">return</span> base[keyword];</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                <span class="keywordflow">return</span> defaults[keyword];</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            set { SetValue(keyword, value); }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        }</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aa3a243df6273b7c6b1057c596026be33">  223</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> ICollection Keys {</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <span class="keyword">get</span> {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                var keys = <span class="keyword">new</span> List&lt;string&gt; {</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                    HostKey,</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                    PortKey,</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                    DatabaseKey,</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                    SchemaKey,</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                    PathKey,</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                    UserNameKey,</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                    PasswordKey,</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                    PersistSecurityInfoKey,</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                    VerboseColumnNamesKey,</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                    ParameterStyleKey,</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                    RowCacheSizeKey,</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                    MaxCacheSizeKey,</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                    QueryTimeoutKey,</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                    IgnoreIdentifiersCaseKey,</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                    CreateKey,</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                    BootOrCreateKey,</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                    StrictGetValueKey,</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                    FetchSizeKey,</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                    MaxFetchSizeKey,</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                    AutoCommitKey</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                };</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                <span class="keywordflow">return</span> keys.AsReadOnly();</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            }</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        }</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a08dcfa45c79b75f8e1f5bf8ddbb1a669">  251</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> ICollection Values {</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <span class="keyword">get</span> {</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                var list = <span class="keyword">new</span> List&lt;object&gt; {</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                    host,</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                    port,</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                    database,</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                    schema,</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                    path,</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                    userName,</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                    password,</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                    persistSecurityInfo,</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                    verboseColumnNames,</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                    paramStyle,</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                    rowCacheSize,</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                    maxCacheSize,</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                    queryTimeout,</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                    ignoreCase,</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                    create,</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                    bootOrCreate,</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                    strictGetValue,</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                    fetchSize,</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                    maxFetchSize,</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                    autoCommit</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                };</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                <span class="keywordflow">return</span> list.AsReadOnly();</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            }</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        }</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Data Source&quot;</span>)]</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00281"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a80f5d3d0a16151efce6034bd0fdecc54">  281</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> DataSource {</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            <span class="keyword">get</span> {</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                <span class="keywordtype">string</span> dataSource = Host;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                <span class="keywordflow">if</span> (Port &gt; 0 &amp;&amp; Port != DefaultPort)</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                    dataSource += <span class="stringliteral">&quot;:&quot;</span> + Port;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                <span class="keywordflow">return</span> dataSource;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            }</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            set {</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                <span class="keywordflow">if</span> (value == null)</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;value&quot;</span>);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                base[<span class="stringliteral">&quot;Data Source&quot;</span>] = value;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                <span class="keywordtype">int</span> index = value.IndexOf(<span class="charliteral">&#39;:&#39;</span>);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                <span class="keywordflow">if</span> (index != -1) {</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                    Port = Int32.Parse(value.Substring(index));</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                    value = value.Substring(0, index);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                }</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                Host = value;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            }</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        }</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Host Address&quot;</span>)]</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00307"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#adc5382307110aa627b2a5ba1844be733">  307</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> Host {</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> host; }</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            set {</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                host = value;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                base[HostKey] = value;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            }</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        }</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Server Port&quot;</span>)]</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00317"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a28c0dc015568d0cd1c8ffb294d64065f">  317</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> Port {</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> port; }</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            set {</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                port = value;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                base[PortKey] = value;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            }</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        }</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Database Name&quot;</span>)]</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#accb20d2b4ce83e42c620b376e9eb929f">  327</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> <a class="code" href="classDeveel_1_1Data_1_1Database.htm">Database</a> {</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> database; }</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            set {</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                base[DatabaseKey] = value;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                database = value;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            }</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        }</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Schema&quot;</span>)]</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00337"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ac31d910a4ac9ad03175c74b6b74546a8">  337</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02a7146a60667b422e69fd050fe1df6859a">Schema</a> {</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> schema; }</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            set {</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                base[SchemaKey] = value;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                schema = value;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            }</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        }</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        [DisplayName(<span class="stringliteral">&quot;User Name&quot;</span>)]</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00347"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#acaeb1c63acdc8cc8805bfcab593e0d29">  347</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> UserName {</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> userName; }</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            set {</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                base[UserNameKey] = value;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                userName = value;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            }</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        }</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        [DisplayName(<span class="stringliteral">&quot;User Password&quot;</span>)]</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        [PasswordPropertyText(<span class="keyword">true</span>)]</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00358"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a97ee90138009858b630fb57ccf4a57d3">  358</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> Password {</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> password; }</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            set {</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                base[PasswordKey] = value;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                password = value;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            }</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        }</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Persist Security Info&quot;</span>)]</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00368"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a23a26413e39f54111f4c6bf6bbbc05d7">  368</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> PersistSecurityInfo {</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> persistSecurityInfo; }</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            set {</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                base[PersistSecurityInfoKey] = value;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                persistSecurityInfo = value;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            }</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        }</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Verbose Column Names&quot;</span>)]</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00378"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ae2dec9d27294ddcd7f742e24a31af872">  378</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> VerboseColumnNames {</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> verboseColumnNames; }</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            set {</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                base[VerboseColumnNamesKey] = value;</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                verboseColumnNames = value;</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            }</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        }</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Parameter Style&quot;</span>)]</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00388"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#adbdfe14f9ebd48888c9df46c6ce28209">  388</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a3f41adf2ae023b6ec661173e43611b42">QueryParameterStyle</a> ParameterStyle {</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> paramStyle; }</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            set {</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                base[ParameterStyleKey] = value;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                paramStyle = value;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            }</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;        }</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Data Path&quot;</span>)]</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a748059d095393826bea1454c175faf34">  398</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> Path {</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> path; }</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            set {</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                base[PathKey] = value;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                path = value;</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            }</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        }</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Row Cache Size&quot;</span>)]</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00408"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a43ba449e5cc26e511c01522948d4978c">  408</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> RowCacheSize {</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> rowCacheSize; }</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            set {</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                base[RowCacheSizeKey] = value;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                rowCacheSize = value;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;            }</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        }</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Max Cache Size&quot;</span>)]</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00418"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a4587c0dcc6af28b766b76786b08e85ad">  418</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> MaxCacheSize {</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> maxCacheSize; }</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            set {</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                base[MaxCacheSizeKey] = value;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                maxCacheSize = value;</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;            }</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        }</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Query Timeout&quot;</span>)]</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00428"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a91bc087b2356926ee1068c6a78dd2593">  428</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> QueryTimeout {</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> queryTimeout; }</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            set {</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                base[QueryTimeoutKey] = value;</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                queryTimeout = value;</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;            }</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        }</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Ignore Identifiers Case&quot;</span>)]</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00438"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a8acf5a423121a03ffd94694df9d2a37b">  438</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> IgnoreIdentifiersCase {</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> ignoreCase; }</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;            set {</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                base[IgnoreIdentifiersCaseKey] = value;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                ignoreCase = value;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            }</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        }</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Create New Database&quot;</span>)]</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00448"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a19532a1ddd288b5c2e278a8bd699b1ec">  448</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> Create {</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> create; }</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            set {</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                base[CreateKey] = value;</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                create = value;</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;            }</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        }</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Boot/Create Database&quot;</span>)]</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00458"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ac0f7f788feed43ef912a41ca7b1a2cf6">  458</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> BootOrCreate {</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> bootOrCreate; }</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;            set {</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                base[BootOrCreateKey] = value;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                bootOrCreate = value;</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;            }</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        }</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Strict GetValue&quot;</span>)]</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00468"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a82e62d09e3941ad2d11686e2800bf275">  468</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> StrictGetValue {</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> strictGetValue; }</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;            set {</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                base[StrictGetValueKey] = value;</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                strictGetValue = value;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;            }</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        }</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Fetch Size&quot;</span>)]</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00478"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a37c11cdef923eab9540094cc4765aa08">  478</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> FetchSize {</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> fetchSize; }</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;            set {</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                base[FetchSizeKey] = value;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                fetchSize = value;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;            }</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        }</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Max Fetch Size&quot;</span>)]</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00488"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#abea3ec55999d2fb4ef007b4e67f28803">  488</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> MaxFetchSize {</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> maxFetchSize; }</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            set {</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                base[MaxFetchSizeKey] = value;</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                maxFetchSize = value;</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            }</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        }</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        [DisplayName(<span class="stringliteral">&quot;Auto-Commit&quot;</span>)]</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        [RefreshProperties(RefreshProperties.All)]</div>
<div class="line"><a name="l00498"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a6f09429854211873e1bd54861df14ec6">  498</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> AutoCommit {</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> autoCommit; }</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            set {</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                base[AutoCommitKey] = value;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                autoCommit = value;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            }</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        }</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div>
<div class="line"><a name="l00506"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aa737e4e3f46824b4c102a09120740e3c">  506</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aa737e4e3f46824b4c102a09120740e3c">InitToDefault</a>() {</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            host = DefaultHost;</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            port = DefaultPort;</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            database = DefaultDatabase;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;            userName = DefaultUserName;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            password = DefaultPassword;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;            schema = DefaultSchema;</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            path = DefaultPath;</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            paramStyle = DefaultParameterStyle;</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            verboseColumnNames = DefaultVerboseColumnName;</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;            persistSecurityInfo = DefaultPersistSecurityInfo;</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;            rowCacheSize = DefaultRowCacheSize;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;            maxCacheSize = DefaultMaxCacheSize;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;            queryTimeout = DefaultQueryTimeout;</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            ignoreCase = DefaultIgnoreIdentifiersCase;</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;            create = DefaultCreate;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            bootOrCreate = DefaultBootOrCreate;</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;            strictGetValue = DefaultStrictGetValue;</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            fetchSize = DefaultFetchSize;</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            maxFetchSize = DefaultMaxFetchSize;</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            autoCommit = DefaultAutoCommit;</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        }</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div>
<div class="line"><a name="l00529"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a0b091661780acd995229d6d61935a205">  529</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a0b091661780acd995229d6d61935a205">SetValue</a>(<span class="keywordtype">string</span> key, <span class="keywordtype">object</span> value) {</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;            <span class="keywordflow">if</span> (key == null)</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;key&quot;</span>);</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;            key = MappKey(key);</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;            <span class="keywordflow">switch</span> (key) {</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                <span class="keywordflow">case</span> HostKey: {</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                        <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                            host = DefaultHost;</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                            base.Remove(key);</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                            Host = value.ToString();</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                        }</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                    }</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                <span class="keywordflow">case</span> PortKey:</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                        port = DefaultPort;</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                        Port = ToInt32(value);</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                    }</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                <span class="keywordflow">case</span> DatabaseKey:</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                        database = DefaultDatabase;</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                        <a class="code" href="classDeveel_1_1Data_1_1Database.htm">Database</a> = value.ToString();</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                    }</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                <span class="keywordflow">case</span> SchemaKey:</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                        schema = DefaultSchema;</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                        <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02a7146a60667b422e69fd050fe1df6859a">Schema</a> = value.ToString();</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                    }</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                <span class="keywordflow">case</span> PathKey:</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                        path = DefaultPath;</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                        Path = value.ToString();</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                    }</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                <span class="keywordflow">case</span> UserNameKey:</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                        userName = DefaultUserName;</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                        UserName = value.ToString();</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;                    }</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                <span class="keywordflow">case</span> PasswordKey:</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                        password = DefaultPassword;</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                        Password = value.ToString();</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                    }</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                <span class="keywordflow">case</span> PersistSecurityInfoKey:</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                        persistSecurityInfo = DefaultPersistSecurityInfo;</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                        PersistSecurityInfo = ToBoolean(value);</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                    }</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                <span class="keywordflow">case</span> VerboseColumnNamesKey:</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                        verboseColumnNames = DefaultVerboseColumnName;</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                        VerboseColumnNames = ToBoolean(value);</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                    }</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                <span class="keywordflow">case</span> ParameterStyleKey:</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;                        paramStyle = DefaultParameterStyle;</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;                    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value is <span class="keywordtype">string</span>) {</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;                        ParameterStyle = (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a3f41adf2ae023b6ec661173e43611b42">QueryParameterStyle</a>)Enum.Parse(typeof(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a3f41adf2ae023b6ec661173e43611b42">QueryParameterStyle</a>), (<span class="keywordtype">string</span>)value, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;                    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value is <span class="keywordtype">int</span> ||</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;                               value is <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a3f41adf2ae023b6ec661173e43611b42">QueryParameterStyle</a>) {</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                        ParameterStyle = (<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a3f41adf2ae023b6ec661173e43611b42">QueryParameterStyle</a>)value;</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;                    }</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;                <span class="keywordflow">case</span> RowCacheSizeKey:</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;                        rowCacheSize = DefaultRowCacheSize;</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;                        RowCacheSize = ToInt32(value);</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;                    }</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;                <span class="keywordflow">case</span> MaxCacheSizeKey:</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                        maxCacheSize = DefaultMaxCacheSize;</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;                        MaxCacheSize = ToInt32(value);</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;                    }</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;                <span class="keywordflow">case</span> QueryTimeoutKey:</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                        queryTimeout = DefaultQueryTimeout;</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;                        QueryTimeout = ToInt32(value);</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;                    }</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                <span class="keywordflow">case</span> IgnoreIdentifiersCaseKey:</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                        ignoreCase = DefaultIgnoreIdentifiersCase;</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                        IgnoreIdentifiersCase = ToBoolean(value);</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                    }</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;                <span class="keywordflow">case</span> CreateKey:</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;                        create = DefaultCreate;</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;                        Create = ToBoolean(value);</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;                    }</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;                <span class="keywordflow">case</span> BootOrCreateKey:</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;                        bootOrCreate = DefaultBootOrCreate;</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;                        BootOrCreate = ToBoolean(value);</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;                    }</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;                <span class="keywordflow">case</span> StrictGetValueKey:</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;                        strictGetValue = DefaultStrictGetValue;</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;                        base.Remove(key);</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;                        StrictGetValue = ToBoolean(value);</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;                    }</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                <span class="keywordflow">case</span> <span class="stringliteral">&quot;DataSource&quot;</span>:</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;                        <span class="keywordtype">string</span> s = value.ToString();</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;                        <span class="keywordtype">int</span> index = s.IndexOf(<span class="charliteral">&#39;:&#39;</span>);</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                        <span class="keywordflow">if</span> (index != -1) {</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;                            <span class="keywordtype">string</span> sPort = s.Substring(index + 1);</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;                            Host = s.Substring(0, index);</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;                            Port = Int32.Parse(sPort);</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;                        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;                            Host = s;</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;                        }</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;                    }</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;                <span class="keywordflow">case</span> FetchSizeKey:</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;                        fetchSize = DefaultFetchSize;</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;                        base.Remove(FetchSizeKey);</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;                        FetchSize = ToInt32(value);</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;                    }</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;                <span class="keywordflow">case</span> MaxFetchSizeKey:</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;                        maxFetchSize = DefaultMaxFetchSize;</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;                        base.Remove(MaxFetchSizeKey);</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;                        MaxFetchSize = ToInt32(value);</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;                    }</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;                <span class="keywordflow">case</span> AutoCommitKey:</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;                    <span class="keywordflow">if</span> (value == null) {</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;                        autoCommit = DefaultAutoCommit;</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;                        base.Remove(AutoCommitKey);</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;                        AutoCommit = ToBoolean(value);</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;                    }</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;                    <span class="comment">//TODO: support additional parameters for Boot/Create process...</span></div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<span class="stringliteral">&quot;Key &#39;&quot;</span> + key + <span class="stringliteral">&quot;&#39; is not recognized.&quot;</span>, <span class="stringliteral">&quot;key&quot;</span>);</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;            }</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;        }</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;</div>
<div class="line"><a name="l00721"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ace2f864de300f8423f51814ff00ff708">  721</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">string</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ace2f864de300f8423f51814ff00ff708">MappKey</a>(<span class="keywordtype">string</span> key) {</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;            <span class="comment">// this is a special case for DataSource key, that is atipical</span></div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;            <span class="keywordflow">if</span> (String.Equals(key, <span class="stringliteral">&quot;DataSource&quot;</span>, StringComparison.InvariantCultureIgnoreCase))</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;DataSource&quot;</span>;</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;            <span class="keywordtype">string</span> outKey;</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;            <span class="keywordflow">if</span> (!keymaps.TryGetValue(key, out outKey))</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<span class="stringliteral">&quot;The connection string keyword is not supported: &quot;</span> + key);</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;            <span class="keywordflow">return</span> outKey;</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        }</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;</div>
<div class="line"><a name="l00732"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aa24eccb309dd6e7ea92929625b863a71">  732</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aa24eccb309dd6e7ea92929625b863a71">ToBoolean</a>(<span class="keywordtype">object</span> value) {</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;            <span class="keywordflow">if</span> (value == null)</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;            <span class="keywordflow">if</span> (value is <span class="keywordtype">bool</span>)</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;                <span class="keywordflow">return</span> (<span class="keywordtype">bool</span>)value;</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;</div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;            <span class="keywordflow">if</span> (value is <span class="keywordtype">string</span>) {</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;                <span class="keywordtype">string</span> s = value.ToString().ToUpper();</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                <span class="keywordflow">if</span> (s == <span class="stringliteral">&quot;YES&quot;</span> || s == <span class="stringliteral">&quot;ENABLED&quot;</span> ||</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                    s == <span class="stringliteral">&quot;TRUE&quot;</span> || s == <span class="stringliteral">&quot;ON&quot;</span>)</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;                <span class="keywordflow">if</span> (s == <span class="stringliteral">&quot;NO&quot;</span> || s == <span class="stringliteral">&quot;DISABLED&quot;</span> ||</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;                    s == <span class="stringliteral">&quot;FALSE&quot;</span> || s == <span class="stringliteral">&quot;OFF&quot;</span>)</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;            }</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;            <span class="keywordflow">if</span> (value is IConvertible)</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;                <span class="keywordflow">return</span> (value as IConvertible).ToBoolean(CultureInfo.InvariantCulture);</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;        }</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;</div>
<div class="line"><a name="l00755"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a1b5e6a2ba1b48b29a055f6eb12877388">  755</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a1b5e6a2ba1b48b29a055f6eb12877388">ToInt32</a>(<span class="keywordtype">object</span> value) {</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;            <span class="keywordflow">if</span> (value == null)</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;            <span class="keywordflow">if</span> (value is <span class="keywordtype">int</span>)</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                <span class="keywordflow">return</span> (<span class="keywordtype">int</span>)value;</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;            <span class="keywordflow">if</span> (value is <span class="keywordtype">string</span>) {</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;                <span class="keywordtype">string</span> s = value.ToString();</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                <span class="keywordflow">return</span> Int32.Parse(s, CultureInfo.InvariantCulture);</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;            }</div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;            <span class="keywordflow">if</span> (value is IConvertible)</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;                <span class="keywordflow">return</span> (value as IConvertible).ToInt32(CultureInfo.InvariantCulture);</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;        }</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;</div>
<div class="line"><a name="l00773"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a28de57d50d930eb713be2840a52ccd40">  773</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a28de57d50d930eb713be2840a52ccd40">Clear</a>() {</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;            base.Clear();</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;            InitToDefault();</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;        }</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;</div>
<div class="line"><a name="l00778"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aaaac15bac00d63bc89d18bd19fa3b77a">  778</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aaaac15bac00d63bc89d18bd19fa3b77a">ContainsKey</a>(<span class="keywordtype">string</span> keyword) {</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;            keyword = keyword.ToUpper().Trim();</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;            <span class="keywordflow">if</span> (!keymaps.ContainsKey(keyword))</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;            <span class="keywordflow">return</span> base.ContainsKey(keymaps[keyword]);</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;        }</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;</div>
<div class="line"><a name="l00785"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a97cd0b15d1792c1ab919126601810c3a">  785</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a97cd0b15d1792c1ab919126601810c3a">Remove</a>(<span class="keywordtype">string</span> keyword) {</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;            <span class="keywordflow">if</span> (!ContainsKey(keyword))</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;            <span class="keyword">this</span>[keyword] = null;</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;        }</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;</div>
<div class="line"><a name="l00793"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a084ce552be757dc72d52b4a5578d3230">  793</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a084ce552be757dc72d52b4a5578d3230">ShouldSerialize</a>(<span class="keywordtype">string</span> keyword) {</div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;            <span class="keywordflow">if</span> (!ContainsKey(keyword))</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;            keyword = keyword.ToUpper().Trim();</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;            <span class="keywordtype">string</span> key = keymaps[keyword];</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;            <span class="keywordflow">if</span> (persistSecurityInfo &amp;&amp; key == PasswordKey)</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;            <span class="keywordflow">return</span> base.ShouldSerialize(key);</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;        }</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;</div>
<div class="line"><a name="l00805"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a75c9d5b41a441c89c297747e5770ecde">  805</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a75c9d5b41a441c89c297747e5770ecde">TryGetValue</a>(<span class="keywordtype">string</span> keyword, out <span class="keywordtype">object</span> value) {</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;            <span class="keywordflow">if</span> (!ContainsKey(keyword)) {</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;                value = null;</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;            }</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;            <span class="keywordflow">return</span> base.TryGetValue(keymaps[keyword.ToUpper().Trim()], out value);</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;        }</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;    }</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a3a5c35453ee81c41592e2b6bc312fa44"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a3a5c35453ee81c41592e2b6bc312fa44">Deveel.Data.Client.DeveelDbConnectionStringBuilder.DeveelDbConnectionStringBuilder</a></div><div class="ttdeci">DeveelDbConnectionStringBuilder()</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00034">DeveelDbConnectionStringBuilder.cs:34</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a583d0721886c351a12025f877475cd61"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a583d0721886c351a12025f877475cd61">Deveel.Data.Client.DeveelDbConnectionStringBuilder.create</a></div><div class="ttdeci">bool create</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00202">DeveelDbConnectionStringBuilder.cs:202</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a28de57d50d930eb713be2840a52ccd40"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a28de57d50d930eb713be2840a52ccd40">Deveel.Data.Client.DeveelDbConnectionStringBuilder.Clear</a></div><div class="ttdeci">override void Clear()</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00773">DeveelDbConnectionStringBuilder.cs:773</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_add3ca3feafa2c66f9b7d7a66d2e3dd26"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#add3ca3feafa2c66f9b7d7a66d2e3dd26">Deveel.Data.Client.DeveelDbConnectionStringBuilder.DeveelDbConnectionStringBuilder</a></div><div class="ttdeci">static DeveelDbConnectionStringBuilder()</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00038">DeveelDbConnectionStringBuilder.cs:38</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_ad809f0ac00c6d3552e8d5839307cf1cf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ad809f0ac00c6d3552e8d5839307cf1cf">Deveel.Data.Client.DeveelDbConnectionStringBuilder.maxCacheSize</a></div><div class="ttdeci">int maxCacheSize</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00199">DeveelDbConnectionStringBuilder.cs:199</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a21445d20feddac413845eb59034c7b6e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a21445d20feddac413845eb59034c7b6e">Deveel.Data.Client.DeveelDbConnectionStringBuilder.persistSecurityInfo</a></div><div class="ttdeci">bool persistSecurityInfo</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00197">DeveelDbConnectionStringBuilder.cs:197</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a08028850644d39484818b893ee9196bd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a08028850644d39484818b893ee9196bd">Deveel.Data.Client.DeveelDbConnectionStringBuilder.verboseColumnNames</a></div><div class="ttdeci">bool verboseColumnNames</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00195">DeveelDbConnectionStringBuilder.cs:195</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a0b091661780acd995229d6d61935a205"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a0b091661780acd995229d6d61935a205">Deveel.Data.Client.DeveelDbConnectionStringBuilder.SetValue</a></div><div class="ttdeci">void SetValue(string key, object value)</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00529">DeveelDbConnectionStringBuilder.cs:529</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_aaaac15bac00d63bc89d18bd19fa3b77a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aaaac15bac00d63bc89d18bd19fa3b77a">Deveel.Data.Client.DeveelDbConnectionStringBuilder.ContainsKey</a></div><div class="ttdeci">override bool ContainsKey(string keyword)</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00778">DeveelDbConnectionStringBuilder.cs:778</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_ad959305ccc0ff62baed5124d387ead89"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ad959305ccc0ff62baed5124d387ead89">Deveel.Data.Client.DeveelDbConnectionStringBuilder.schema</a></div><div class="ttdeci">string schema</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00193">DeveelDbConnectionStringBuilder.cs:193</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a32c4c2a5fbd267f7d08fc74d3e0c3aaf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a32c4c2a5fbd267f7d08fc74d3e0c3aaf">Deveel.Data.Client.DeveelDbConnectionStringBuilder.fetchSize</a></div><div class="ttdeci">int fetchSize</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00205">DeveelDbConnectionStringBuilder.cs:205</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm">Deveel.Data.Client.DeveelDbConnectionStringBuilder</a></div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00028">DeveelDbConnectionStringBuilder.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a3079ee76845359fca8a8bbfde8e4d2b6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a3079ee76845359fca8a8bbfde8e4d2b6">Deveel.Data.Client.DeveelDbConnectionStringBuilder.queryTimeout</a></div><div class="ttdeci">int queryTimeout</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00200">DeveelDbConnectionStringBuilder.cs:200</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Database_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Database.htm">Deveel.Data.Database</a></div><div class="ttdoc">The default implementation of a database in a system. </div><div class="ttdef"><b>Definition:</b> <a href="Database_8cs_source.htm#l00038">Database.cs:38</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_aa24eccb309dd6e7ea92929625b863a71"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aa24eccb309dd6e7ea92929625b863a71">Deveel.Data.Client.DeveelDbConnectionStringBuilder.ToBoolean</a></div><div class="ttdeci">static bool ToBoolean(object value)</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00732">DeveelDbConnectionStringBuilder.cs:732</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a5700e280d0eabb3740217baeae4a144f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a5700e280d0eabb3740217baeae4a144f">Deveel.Data.Client.DeveelDbConnectionStringBuilder.database</a></div><div class="ttdeci">string database</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00190">DeveelDbConnectionStringBuilder.cs:190</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a92be85f0dbd478321a19c6e9dd7dbb68"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a92be85f0dbd478321a19c6e9dd7dbb68">Deveel.Data.Client.DeveelDbConnectionStringBuilder.userName</a></div><div class="ttdeci">string userName</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00191">DeveelDbConnectionStringBuilder.cs:191</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a1b5e6a2ba1b48b29a055f6eb12877388"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a1b5e6a2ba1b48b29a055f6eb12877388">Deveel.Data.Client.DeveelDbConnectionStringBuilder.ToInt32</a></div><div class="ttdeci">static int ToInt32(object value)</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00755">DeveelDbConnectionStringBuilder.cs:755</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_aa737e4e3f46824b4c102a09120740e3c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aa737e4e3f46824b4c102a09120740e3c">Deveel.Data.Client.DeveelDbConnectionStringBuilder.InitToDefault</a></div><div class="ttdeci">void InitToDefault()</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00506">DeveelDbConnectionStringBuilder.cs:506</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a51634db071137eb5930969d260e82d9e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a51634db071137eb5930969d260e82d9e">Deveel.Data.Client.DeveelDbConnectionStringBuilder.host</a></div><div class="ttdeci">string host</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00188">DeveelDbConnectionStringBuilder.cs:188</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_aa0a493f997d9339278df8833790ee348"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aa0a493f997d9339278df8833790ee348">Deveel.Data.Client.DeveelDbConnectionStringBuilder.port</a></div><div class="ttdeci">int port</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00189">DeveelDbConnectionStringBuilder.cs:189</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_ab2ccaebfba22b1e7a4b21b8525d71570"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ab2ccaebfba22b1e7a4b21b8525d71570">Deveel.Data.Client.DeveelDbConnectionStringBuilder.defaults</a></div><div class="ttdeci">static readonly Dictionary&lt; string, object &gt; defaults</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00185">DeveelDbConnectionStringBuilder.cs:185</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a529c5ccf510d6353fbd369d7ed9bf6ae"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a529c5ccf510d6353fbd369d7ed9bf6ae">Deveel.Data.Client.DeveelDbConnectionStringBuilder.path</a></div><div class="ttdeci">string path</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00194">DeveelDbConnectionStringBuilder.cs:194</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_afbf6b9218e653cd4b570a34be771c389"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#afbf6b9218e653cd4b570a34be771c389">Deveel.Data.Client.DeveelDbConnectionStringBuilder.maxFetchSize</a></div><div class="ttdeci">int maxFetchSize</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00206">DeveelDbConnectionStringBuilder.cs:206</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a084ce552be757dc72d52b4a5578d3230"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a084ce552be757dc72d52b4a5578d3230">Deveel.Data.Client.DeveelDbConnectionStringBuilder.ShouldSerialize</a></div><div class="ttdeci">override bool ShouldSerialize(string keyword)</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00793">DeveelDbConnectionStringBuilder.cs:793</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm_a3f41adf2ae023b6ec661173e43611b42"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm#a3f41adf2ae023b6ec661173e43611b42">Deveel.Data.Sql.QueryParameterStyle</a></div><div class="ttdeci">QueryParameterStyle</div><div class="ttdoc">In a SQL query object, this is the form of parameters passed from the client side to the server side...</div><div class="ttdef"><b>Definition:</b> <a href="QueryParameterStyle_8cs_source.htm#l00027">QueryParameterStyle.cs:27</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm_a782e8984e5e4a6718cff0c8da0777d02a7146a60667b422e69fd050fe1df6859a"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02a7146a60667b422e69fd050fe1df6859a">Deveel.Data.Sql.DbObjectType.Schema</a></div><div class="ttdoc">A SCHEMA object, that is a named container of multiple types of objects (eg. TABLE, PROCEDURE, VIEW, etc.). </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a1e33ba41f1ec19dec80b907e3a06b75a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a1e33ba41f1ec19dec80b907e3a06b75a">Deveel.Data.Client.DeveelDbConnectionStringBuilder.strictGetValue</a></div><div class="ttdeci">bool strictGetValue</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00204">DeveelDbConnectionStringBuilder.cs:204</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a75c9d5b41a441c89c297747e5770ecde"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a75c9d5b41a441c89c297747e5770ecde">Deveel.Data.Client.DeveelDbConnectionStringBuilder.TryGetValue</a></div><div class="ttdeci">override bool TryGetValue(string keyword, out object value)</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00805">DeveelDbConnectionStringBuilder.cs:805</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a141a9dd2668464c4f15f56b634ab0186"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a141a9dd2668464c4f15f56b634ab0186">Deveel.Data.Client.DeveelDbConnectionStringBuilder.paramStyle</a></div><div class="ttdeci">QueryParameterStyle paramStyle</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00196">DeveelDbConnectionStringBuilder.cs:196</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_ada37ff529bedf88e84532281b550fe0f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ada37ff529bedf88e84532281b550fe0f">Deveel.Data.Client.DeveelDbConnectionStringBuilder.autoCommit</a></div><div class="ttdeci">bool autoCommit</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00207">DeveelDbConnectionStringBuilder.cs:207</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_aee145e3655b06b610cfa304f5aa8938f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aee145e3655b06b610cfa304f5aa8938f">Deveel.Data.Client.DeveelDbConnectionStringBuilder.DeveelDbConnectionStringBuilder</a></div><div class="ttdeci">DeveelDbConnectionStringBuilder(string connectionString)</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00029">DeveelDbConnectionStringBuilder.cs:29</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_aa63bb75347ed67d83f5b09397cbed017"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#aa63bb75347ed67d83f5b09397cbed017">Deveel.Data.Client.DeveelDbConnectionStringBuilder.bootOrCreate</a></div><div class="ttdeci">bool bootOrCreate</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00203">DeveelDbConnectionStringBuilder.cs:203</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a97cd0b15d1792c1ab919126601810c3a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a97cd0b15d1792c1ab919126601810c3a">Deveel.Data.Client.DeveelDbConnectionStringBuilder.Remove</a></div><div class="ttdeci">override bool Remove(string keyword)</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00785">DeveelDbConnectionStringBuilder.cs:785</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a1c70a4fd60c5f7f00f6f35285e9f890e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a1c70a4fd60c5f7f00f6f35285e9f890e">Deveel.Data.Client.DeveelDbConnectionStringBuilder.rowCacheSize</a></div><div class="ttdeci">int rowCacheSize</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00198">DeveelDbConnectionStringBuilder.cs:198</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a293800519c8c6984e91b0d8370bb1ebd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a293800519c8c6984e91b0d8370bb1ebd">Deveel.Data.Client.DeveelDbConnectionStringBuilder.keymaps</a></div><div class="ttdeci">static readonly Dictionary&lt; string, string &gt; keymaps</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00186">DeveelDbConnectionStringBuilder.cs:186</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm">Deveel.Data.Sql</a></div><div class="ttdef"><b>Definition:</b> <a href="CellId_8cs_source.htm#l00022">CellId.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a537b2077f96407d99b0c75e64792ee8c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a537b2077f96407d99b0c75e64792ee8c">Deveel.Data.Client.DeveelDbConnectionStringBuilder.ignoreCase</a></div><div class="ttdeci">bool ignoreCase</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00201">DeveelDbConnectionStringBuilder.cs:201</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_ace2f864de300f8423f51814ff00ff708"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#ace2f864de300f8423f51814ff00ff708">Deveel.Data.Client.DeveelDbConnectionStringBuilder.MappKey</a></div><div class="ttdeci">string MappKey(string key)</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00721">DeveelDbConnectionStringBuilder.cs:721</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder_htm_a24e4539f0c071fae9194a984f1225165"><div class="ttname"><a href="classDeveel_1_1Data_1_1Client_1_1DeveelDbConnectionStringBuilder.htm#a24e4539f0c071fae9194a984f1225165">Deveel.Data.Client.DeveelDbConnectionStringBuilder.password</a></div><div class="ttdeci">string password</div><div class="ttdef"><b>Definition:</b> <a href="DeveelDbConnectionStringBuilder_8cs_source.htm#l00192">DeveelDbConnectionStringBuilder.cs:192</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
