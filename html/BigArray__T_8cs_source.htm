<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Util/BigArray_T.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_6756c90673132daa25f33a7157eea2eb.htm">Deveel.Data.Util</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">BigArray_T.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="BigArray__T_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Threading;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Util {</div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm">   23</a></span>&#160;    <span class="keyword">public</span> sealed <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm">BigArray</a>&lt;T&gt; : <a class="code" href="interfaceDeveel_1_1Data_1_1Util_1_1IBigList.htm">IBigList</a>&lt;T&gt;, IDisposable {</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a273e1c88b18e89c7d8bfa26bc5df4d42">   24</a></span>&#160;        <span class="keyword">internal</span> <span class="keyword">static</span> readonly IEqualityComparer&lt;T&gt; _comparer = EqualityComparer&lt;T&gt;.Default;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#af75308b2818bf727d21e96c606f773cd">   26</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> readonly T[][] _emptyArray = <span class="keyword">new</span> T[0][];</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ae3f1ac65edc6e89e4d10c9db0ac38bc2">   28</a></span>&#160;        <span class="keyword">private</span> readonly <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ae3f1ac65edc6e89e4d10c9db0ac38bc2">_blockLength</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a96f79ba69459c71c7bc633015cfe1099">   29</a></span>&#160;        <span class="keyword">private</span> readonly T <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a96f79ba69459c71c7bc633015cfe1099">_defaultValue</a>;</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a4ce7a7a169b56d951664b471a381ddee">   30</a></span>&#160;        <span class="keyword">private</span> T[][] <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a4ce7a7a169b56d951664b471a381ddee">_firstArray</a>;</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ac92fb7acfa775efb7b862cb5a177618c">   31</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ac92fb7acfa775efb7b862cb5a177618c">_lastBlockLength</a>;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a8f4a8ed91f1589c7827b87143b79072b">   33</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a8f4a8ed91f1589c7827b87143b79072b">BigArray</a>(<span class="keywordtype">long</span> length) </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            : this(length, default(T)) {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a0d771962ccbbe12b51dbe1a68913b1cc">   37</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a0d771962ccbbe12b51dbe1a68913b1cc">BigArray</a>(<span class="keywordtype">long</span> length, T defaultValue) </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            : this(length, defaultValue, <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm">BigArray</a>.DefaultBlockLength) {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        }</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a0c404e579a57ca0c95c2723271c118c6">   41</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a0c404e579a57ca0c95c2723271c118c6">BigArray</a>(<span class="keywordtype">long</span> length, <span class="keywordtype">int</span> blockLength) </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            : this(length, default(T), blockLength) {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        }</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ada636f05610fbf3656c61808902d597e">   45</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ada636f05610fbf3656c61808902d597e">BigArray</a>(<span class="keywordtype">long</span> length, T defaultValue, <span class="keywordtype">int</span> blockLength) {</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            <span class="keywordflow">if</span> (blockLength &lt; 1024 * 1024)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="stringliteral">&quot;blockSize&quot;</span>);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            _defaultValue = defaultValue;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            _blockLength = blockLength;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            _length = length;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="keywordflow">if</span> (length == 0) {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                _firstArray = _emptyArray;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <span class="keywordtype">int</span> numBlocks;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <span class="keywordtype">int</span> lastBlockSize;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            checked {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                numBlocks = (int)(length / blockLength);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                lastBlockSize = (int)(length % blockLength);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                <span class="keywordflow">if</span> (lastBlockSize &gt; 0)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                    numBlocks++;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                    lastBlockSize = blockLength;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            _lastBlockLength = lastBlockSize;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            _firstArray = <span class="keyword">new</span> T[numBlocks][];</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ab09fdc5386bd1adb32b7422f2a7287ac">   75</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ab09fdc5386bd1adb32b7422f2a7287ac">Dispose</a>() {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            _firstArray = null;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#aade7da4ee3d91d332a4c748d3c104bf5">   79</a></span>&#160;        <span class="keyword">internal</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#aade7da4ee3d91d332a4c748d3c104bf5">_length</a>;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a5a4479455756b627990fde7bef3439ba">   81</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">long</span> Length {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> _length; }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#abb3a5bc1d89a90b5ee367746e2308a5d">   85</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> BlockLength {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> _blockLength; }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#affa70a4f6e67feee0f69a51fa9a9e4de">   89</a></span>&#160;        <span class="keywordtype">long</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Util_1_1IBigList.htm">IBigList&lt;T&gt;</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Util_1_1IBigList.htm#acece0c1f5a7c8e3c3f6ad23ea1cbddd3">BigCount</a> {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> Length; }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#aa22147a8e036939331cadaaddafa20e1">   93</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Util_1_1IBigList.htm">IBigList&lt;T&gt;</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Util_1_1IBigList.htm#ae4929f73da24659b55464a0ec5bdc791">Insert</a>(<span class="keywordtype">long</span> offset, T item) {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#acc110bdbe4269e2f2f711f45992a7a59">   97</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Util_1_1IBigList.htm">IBigList&lt;T&gt;</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Util_1_1IBigList.htm#ad7961d07f26a8aa8c128b6bf05e9fbc7">RemoveAt</a>(<span class="keywordtype">long</span> index) {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ada23171505069fba3b64ed30996a7052">  101</a></span>&#160;        <span class="keyword">public</span> T <span class="keyword">this</span>[<span class="keywordtype">long</span> index] {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keyword">get</span> {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                var block = _firstArray[index / _blockLength];</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <span class="keywordflow">if</span> (block == null)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                    <span class="keywordflow">return</span> _defaultValue;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                <span class="keywordflow">return</span> block[index % _blockLength];</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            set {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                <span class="keywordtype">long</span> blockIndex = index / _blockLength;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                var block = _firstArray[blockIndex];</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                <span class="keywordflow">if</span> (block == null) {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                    <span class="keywordflow">if</span> (_comparer.Equals(value, _defaultValue))</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                    <span class="keywordflow">if</span> (blockIndex == _firstArray.Length - 1)</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                        block = <span class="keyword">new</span> T[_lastBlockLength];</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                        block = <span class="keyword">new</span> T[_blockLength];</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                    <span class="keywordflow">if</span> (!_comparer.Equals(<span class="keywordflow">default</span>(T), _defaultValue))</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; block.Length; i++)</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                            block[i] = _defaultValue;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                    _firstArray[blockIndex] = block;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                block[index % _blockLength] = value;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#aeeaf0090eca24a8021e318941b1f0b74">  133</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#aeeaf0090eca24a8021e318941b1f0b74">Resize</a>(<span class="keywordtype">long</span> newLength) {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="keywordflow">if</span> (newLength &lt; 0)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="stringliteral">&quot;newLength&quot;</span>, <span class="stringliteral">&quot;newLength can&#39;t be negative.&quot;</span>);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="keywordflow">if</span> (newLength == 0) {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                _firstArray = _emptyArray;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                _lastBlockLength = 0;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                _length = 0;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordtype">int</span> numBlocks;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            <span class="keywordtype">int</span> lastBlockSize;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            checked {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                numBlocks = (int)(newLength / _blockLength);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                lastBlockSize = (int)(newLength % _blockLength);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                <span class="keywordflow">if</span> (lastBlockSize &gt; 0)</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                    numBlocks++;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                <span class="keywordflow">else</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                    lastBlockSize = _blockLength;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            _lastBlockLength = lastBlockSize;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            T[][] newArray = _firstArray;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">if</span> (numBlocks != _firstArray.Length) {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                <span class="keywordtype">int</span> minBlocks = <a class="code" href="namespaceSystem.htm">System</a>.Math.Min(numBlocks, _firstArray.Length);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                newArray = <span class="keyword">new</span> T[numBlocks][];</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; minBlocks; i++)</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                    newArray[i] = _firstArray[i];</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            var block = newArray[numBlocks - 1];</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keywordflow">if</span> (block != null) {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                <span class="keywordtype">int</span> oldLength = block.Length;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                Array.Resize(ref block, _lastBlockLength);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                newArray[numBlocks - 1] = block;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <span class="keywordflow">if</span> (!_comparer.Equals(<span class="keywordflow">default</span>(T), _defaultValue))</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = oldLength; i &lt; _lastBlockLength; i++)</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                        block[i] = _defaultValue;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <span class="keywordflow">if</span> (_firstArray.Length &gt; 0 &amp;&amp; newLength &gt; _length &amp;&amp; newArray.Length != _firstArray.Length) {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                <span class="keywordtype">int</span> oldLastBlockIndex = _firstArray.Length - 1;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                <span class="keywordflow">if</span> (newArray[oldLastBlockIndex] != null)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                    Array.Resize(ref newArray[oldLastBlockIndex], _blockLength);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            }</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            _firstArray = newArray;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            _length = newLength;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        }</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a2aaff37fa0255ba348718c599a7ab7fd">  187</a></span>&#160;        <span class="keywordtype">void</span> ICollection&lt;T&gt;.Add(T item) {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ae77861bbfc6bedb768708ca03f2ea03d">  191</a></span>&#160;        <span class="keywordtype">void</span> ICollection&lt;T&gt;.Clear() {</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#af22146e0869cfd949836820d2a451ed9">  195</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#af22146e0869cfd949836820d2a451ed9">Contains</a>(T item) {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keywordflow">return</span> IndexOf(item) != -1;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        }</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div>
<div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a23e386cefba17972ea797286a903607e">  199</a></span>&#160;        <span class="keywordtype">void</span> ICollection&lt;T&gt;.CopyTo(T[] array, <span class="keywordtype">int</span> arrayIndex) {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div>
<div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#adb9e5f1496059f7930b81f7b05754a42">  203</a></span>&#160;        <span class="keywordtype">bool</span> ICollection&lt;T&gt;.Remove(T item) {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        }</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a1dd0e8ed7cc82f469a47b5700974ca9c">  207</a></span>&#160;        <span class="keywordtype">int</span> ICollection&lt;T&gt;.Count {</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> (<span class="keywordtype">int</span>) Length; }</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        }</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div>
<div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a69caba9cbac1de51cbfd8b5a444210ff">  211</a></span>&#160;        <span class="keywordtype">bool</span> ICollection&lt;T&gt;.IsReadOnly {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        }</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div>
<div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a65703822e580e39d9cca940eaf53b581">  215</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a65703822e580e39d9cca940eaf53b581">Contains</a>(T item, <span class="keywordtype">long</span> startIndex, <span class="keywordtype">long</span> count) {</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keywordflow">return</span> IndexOf(item, startIndex, count) != -1;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        }</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a575c1f15ef9b674695020c544a9dba0c">  219</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a575c1f15ef9b674695020c544a9dba0c">IndexOf</a>(T item) {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keywordflow">return</span> IndexOf(item, 0, _length);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        }</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a34c811ffcb4d8c81e1aa04a2475e6d06">  223</a></span>&#160;        <span class="keywordtype">void</span> IList&lt;T&gt;.Insert(<span class="keywordtype">int</span> index, T item) {</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        }</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div>
<div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a79555e9dc60ed0084b010d3a6019a4c9">  227</a></span>&#160;        <span class="keywordtype">void</span> IList&lt;T&gt;.RemoveAt(<span class="keywordtype">int</span> index) {</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div>
<div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#aa20c9525d74a1d2802c5eac3d8092782">  231</a></span>&#160;        T IList&lt;T&gt;.this[<span class="keywordtype">int</span> index] {</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> <span class="keyword">this</span>[index]; }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            set { <span class="keyword">this</span>[index] = value; }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div>
<div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a929f96e2674e55fc1f320f0bfa9a13e7">  236</a></span>&#160;        <span class="keywordtype">int</span> IList&lt;T&gt;.IndexOf(T item) {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            <span class="keywordflow">return</span> (<span class="keywordtype">int</span>) IndexOf(item);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        }</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#abc6203ba1385d2f5529fa81781e31b17">  240</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#abc6203ba1385d2f5529fa81781e31b17">IndexOf</a>(T item, <span class="keywordtype">long</span> startIndex, <span class="keywordtype">long</span> count) {</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            <span class="keywordflow">if</span> (startIndex &lt; 0 || startIndex &gt; _length)</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="stringliteral">&quot;startIndex&quot;</span>);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            <span class="keywordflow">if</span> (count == 0)</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            <span class="keywordtype">long</span> end = startIndex + count;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="keywordflow">if</span> (count &lt; 0 || end &gt; _length)</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="stringliteral">&quot;count&quot;</span>);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            <span class="keywordtype">long</span> blockIndex = startIndex / _blockLength;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <span class="keywordtype">long</span> positionInBlock = startIndex % _blockLength;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            T[] block = _firstArray[blockIndex];</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            <span class="keywordtype">long</span> position = startIndex;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            <span class="keywordflow">while</span> (<span class="keyword">true</span>) {</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                <span class="keywordflow">if</span> (block == null) {</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                    position += _blockLength - positionInBlock;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                    <span class="keywordflow">if</span> (position &gt;= end)</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                    blockIndex++;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                    positionInBlock = 0;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                    block = _firstArray[blockIndex];</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                    <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                }</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                <span class="keywordflow">if</span> (_comparer.Equals(block[positionInBlock], item))</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                    <span class="keywordflow">return</span> position;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                position++;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                <span class="keywordflow">if</span> (position &gt;= end)</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                    <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                <span class="keywordflow">if</span> (positionInBlock &gt; block.Length) {</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                    blockIndex++;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                    positionInBlock = 0;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                    block = _firstArray[blockIndex];</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                }</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        }</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div>
<div class="line"><a name="l00285"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a6c57bc33429a1b8dbd19f760a88a000b">  285</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a6c57bc33429a1b8dbd19f760a88a000b">BinarySearch</a>(T item) {</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            <span class="keywordflow">return</span> _BinarySearch(item, 0, _length, Comparer&lt;T&gt;.Default.Compare);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        }</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div>
<div class="line"><a name="l00289"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a6713bcc60cbde5e06ee2213a4d3ddf70">  289</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a6713bcc60cbde5e06ee2213a4d3ddf70">BinarySearch</a>(T item, Comparison&lt;T&gt; comparer) {</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <span class="keywordflow">if</span> (comparer == null)</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                comparer = Comparer&lt;T&gt;.Default.Compare;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            <span class="keywordflow">return</span> _BinarySearch(item, 0, _length, comparer);</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        }</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00296"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ab2d58ab5281adad43d66ee94de23a403">  296</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ab2d58ab5281adad43d66ee94de23a403">BinarySearch</a>(T item, <span class="keywordtype">long</span> startIndex, <span class="keywordtype">long</span> count, Comparison&lt;T&gt; comparer = null) {</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            <span class="keywordflow">if</span> (startIndex &lt; 0 || startIndex &gt; _length)</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="stringliteral">&quot;startIndex&quot;</span>);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            <span class="keywordflow">if</span> (count == 0)</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                <span class="keywordflow">return</span> ~startIndex;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <span class="keywordtype">long</span> end = startIndex + count;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <span class="keywordflow">if</span> (count &lt; 0 || end &gt; _length)</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="stringliteral">&quot;count&quot;</span>);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            <span class="keywordflow">if</span> (comparer == null)</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                comparer = Comparer&lt;T&gt;.Default.Compare;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            <span class="keywordflow">return</span> _BinarySearch(item, startIndex, count, comparer);</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        }</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div>
<div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a75b86d3e3fc56bff1875674d8e25c16f">  313</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a75b86d3e3fc56bff1875674d8e25c16f">_BinarySearch</a>(T item, <span class="keywordtype">long</span> startIndex, <span class="keywordtype">long</span> count, Comparison&lt;T&gt; comparer) {</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            <span class="keywordflow">while</span> (<span class="keyword">true</span>) {</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                <span class="keywordflow">if</span> (count == 0)</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                    <span class="keywordflow">return</span> ~startIndex;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                <span class="keywordtype">long</span> middle = count / 2;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                <span class="keywordtype">long</span> position = startIndex + middle;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                <span class="keywordtype">int</span> comparison = comparer(item, <span class="keyword">this</span>[position]);</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                <span class="keywordflow">if</span> (comparison == 0)</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                    <span class="keywordflow">return</span> position;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                <span class="keywordflow">if</span> (comparison &lt; 0) {</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                    count = middle;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                    middle++;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                    startIndex += middle;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                    count -= middle;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                }</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;            }</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        }</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div>
<div class="line"><a name="l00334"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ae068350652e9f520155b59c6209c3fbe">  334</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ae068350652e9f520155b59c6209c3fbe">Sort</a>(Comparison&lt;T&gt; comparer = null) {</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            <span class="keywordflow">if</span> (comparer == null)</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                comparer = Comparer&lt;T&gt;.Default.Compare;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            var parallelSort = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm">BigArrayParallelSort</a>();</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            _Sort(parallelSort, 0, _length, comparer);</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            parallelSort.Wait();</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        }</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ab70e2133c398a49b4aa829e7c2d4fadc">  345</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ab70e2133c398a49b4aa829e7c2d4fadc">Sort</a>(<span class="keywordtype">long</span> startIndex, <span class="keywordtype">long</span> count, Comparison&lt;T&gt; comparer) {</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <span class="keywordflow">if</span> (startIndex &lt; 0 || startIndex &gt; _length)</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="stringliteral">&quot;startIndex&quot;</span>);</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            <span class="keywordflow">if</span> (count == 0)</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            <span class="keywordtype">long</span> end = startIndex + count;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            <span class="keywordflow">if</span> (count &lt; 0 || end &gt; _length)</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="stringliteral">&quot;count&quot;</span>);</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            <span class="keywordflow">if</span> (comparer == null)</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                comparer = Comparer&lt;T&gt;.Default.Compare;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            var parallelSort = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm">BigArrayParallelSort</a>();</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            _Sort(parallelSort, startIndex, count, comparer);</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            parallelSort.Wait();</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        }</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div>
<div class="line"><a name="l00366"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a0391465ae4dbf738acaff97c26965967">  366</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a0391465ae4dbf738acaff97c26965967">_Sort</a>(<a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm">BigArrayParallelSort</a> parallelSort, <span class="keywordtype">long</span> startIndex, <span class="keywordtype">long</span> count, Comparison&lt;T&gt; comparer) {</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordflow">if</span> (count &lt;= 1)</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            <span class="keywordtype">long</span> pivotOffset = _Partition(startIndex, count, comparer);</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            <span class="comment">// if we don&#39;t have more than 10k items, we don&#39;t need to try to run in parallel.</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            <span class="keywordflow">if</span> (parallelSort == null || count &lt; 10000)</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                _Sort(parallelSort, startIndex, pivotOffset, comparer);</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                <span class="comment">// before putting another task to the threadpool, we verify if the amount of parallel</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                <span class="comment">// work is not exceeding the number of CPUs.</span></div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                <span class="comment">// Even if the threadpool can be bigger than the number of CPUs, sorting is a no-wait</span></div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                <span class="comment">// operation and so putting an extra work to do will only increase the number of task</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                <span class="comment">// switches.</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                <span class="keywordtype">int</span> parallelCount = Interlocked.Increment(ref <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm">BigArrayParallelSort</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#a3a896fec419d99eb87c30f90141ff963">ParallelSortCount</a>);</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                <span class="keywordflow">if</span> (parallelCount &gt;= Environment.ProcessorCount) {</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                    <span class="comment">// we have too many threads in parallel</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                    <span class="comment">// (note that the first thread never stops, that&#39;s why I used &gt;= operator).</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                    Interlocked.Decrement(ref <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm">BigArrayParallelSort</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#a3a896fec419d99eb87c30f90141ff963">ParallelSortCount</a>);</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                    <span class="comment">// do a normal sub-sort.</span></div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                    _Sort(parallelSort, startIndex, pivotOffset, comparer);</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                    <span class="keywordtype">bool</span> shouldProcessNormally = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                    <span class="comment">// ok, we have the right to process in parallel, so let&#39;s start by saying we</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                    <span class="comment">// are processing in parallel.</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                    Interlocked.Increment(ref parallelSort.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#aac3f7b216e4ecb1b794e69478742cd9a">ExecutingCount</a>);</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                    <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                        ThreadPool.QueueUserWorkItem</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                        (</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                            (x) =&gt; {</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                                <span class="comment">// ok, finally we can sort. But, if an exception is thrown, we should redirect it to the</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                                <span class="comment">// main thread.</span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                                    _Sort(parallelSort, startIndex, pivotOffset, comparer);</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                                } <span class="keywordflow">catch</span> (Exception exception) {</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                                    <span class="comment">// here we store the exception.</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                                    lock (parallelSort) {</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                                        var exceptions = parallelSort.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#aae757f04acd21d2fa59471d070782b11">Exceptions</a>;</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                                        <span class="keywordflow">if</span> (exceptions == null) {</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                                            exceptions = <span class="keyword">new</span> List&lt;Exception&gt;();</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                                            parallelSort.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#aae757f04acd21d2fa59471d070782b11">Exceptions</a> = exceptions;</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                                        }</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                                        exceptions.Add(exception);</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                                    }</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                                } <span class="keywordflow">finally</span> {</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                                    <span class="comment">// Independent if we had an exception or not, we should decrement</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                                    <span class="comment">// both counters.</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                                    Interlocked.Decrement(ref <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm">BigArrayParallelSort</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#a3a896fec419d99eb87c30f90141ff963">ParallelSortCount</a>);</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                                    <span class="keywordtype">int</span> parallelRemaining = Interlocked.Decrement(ref parallelSort.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#aac3f7b216e4ecb1b794e69478742cd9a">ExecutingCount</a>);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                                    <span class="comment">// if we were the last parallel thread, we must notify the main thread if it is waiting</span></div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                                    <span class="comment">// for us.</span></div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                                    <span class="keywordflow">if</span> (parallelRemaining == 0)</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                                        lock (parallelSort)</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                                            Monitor.Pulse(parallelSort);</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                                }</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                            }</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                        );</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                    } <span class="keywordflow">catch</span> {</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                        <span class="comment">// if an exception was thrown trying to call the thread pool, we simple reduce the</span></div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                        <span class="comment">// count number and do the sort normally.</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                        <span class="comment">// The sort is out of the catch in case an Abort is done.</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                        Interlocked.Decrement(ref parallelSort.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#aac3f7b216e4ecb1b794e69478742cd9a">ExecutingCount</a>);</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                        Interlocked.Decrement(ref <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm">BigArrayParallelSort</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#a3a896fec419d99eb87c30f90141ff963">ParallelSortCount</a>);</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                        shouldProcessNormally = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                    }</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                    <span class="keywordflow">if</span> (shouldProcessNormally)</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                        _Sort(parallelSort, startIndex, pivotOffset, comparer);</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                }</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;            }</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            _Sort(parallelSort, startIndex + pivotOffset + 1, count - pivotOffset - 1, comparer);</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        }</div>
<div class="line"><a name="l00445"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a338413db3766bb30975be8f224e5e603">  445</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a338413db3766bb30975be8f224e5e603">_Partition</a>(<span class="keywordtype">long</span> startIndex, <span class="keywordtype">long</span> count, Comparison&lt;T&gt; comparer) {</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            <span class="keywordtype">long</span> pivotIndex = startIndex + count / 2;</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;            T pivotValue = <span class="keyword">this</span>[pivotIndex];</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            <span class="keywordtype">long</span> right = startIndex + count - 1;</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            <span class="keywordflow">if</span> (pivotIndex != right)</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                <span class="keyword">this</span>[pivotIndex] = <span class="keyword">this</span>[right];</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;            <span class="keywordtype">long</span> storeIndex = startIndex;</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">long</span> index = startIndex; index &lt; right; index++) {</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                T valueAtIndex = <span class="keyword">this</span>[index];</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                <span class="keywordflow">if</span> (comparer(valueAtIndex, pivotValue) &gt;= 0)</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                    <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                <span class="keywordflow">if</span> (index != storeIndex) {</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                    <span class="keyword">this</span>[index] = <span class="keyword">this</span>[storeIndex];</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                    <span class="keyword">this</span>[storeIndex] = valueAtIndex;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                }</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                storeIndex++;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;            }</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;            <span class="keywordflow">if</span> (right != storeIndex)</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                <span class="keyword">this</span>[right] = <span class="keyword">this</span>[storeIndex];</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;            <span class="keyword">this</span>[storeIndex] = pivotValue;</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;            <span class="keywordflow">return</span> storeIndex - startIndex;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        }</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div>
<div class="line"><a name="l00475"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ade61f6ce94f40c422e8364555fe2f7c9">  475</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ade61f6ce94f40c422e8364555fe2f7c9">Swap</a>(<span class="keywordtype">long</span> position1, <span class="keywordtype">long</span> position2) {</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;            <span class="keywordflow">if</span> (position1 &lt; 0 || position1 &gt;= _length)</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="stringliteral">&quot;position1&quot;</span>);</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            <span class="keywordflow">if</span> (position2 &lt; 0 || position2 &gt;= _length)</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="stringliteral">&quot;position2&quot;</span>);</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            <span class="keywordflow">if</span> (position1 == position2)</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;            T value1 = <span class="keyword">this</span>[position1];</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;            <span class="keyword">this</span>[position1] = <span class="keyword">this</span>[position2];</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;            <span class="keyword">this</span>[position2] = value1;</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        }</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div>
<div class="line"><a name="l00490"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#abd4bbbdf612ad4e30a2f42ad7620bd92">  490</a></span>&#160;        <span class="keyword">public</span> IEnumerator&lt;T&gt; <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#abd4bbbdf612ad4e30a2f42ad7620bd92">GetEnumerator</a>() {</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            <span class="keywordtype">int</span> lastBlockIndex = _firstArray.Length - 1;</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt;= lastBlockIndex; i++) {</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                var block = _firstArray[i];</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                <span class="keywordflow">if</span> (block == null) {</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                    <span class="keywordtype">int</span> numberOfFakes;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                    <span class="keywordflow">if</span> (i == lastBlockIndex)</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                        numberOfFakes = _lastBlockLength;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;                        numberOfFakes = _blockLength;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; numberOfFakes; j++)</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                        yield <span class="keywordflow">return</span> _defaultValue;</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                    <span class="keywordflow">foreach</span> (var value <span class="keywordflow">in</span> block)</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                        yield <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                }</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            }</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;        }</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="preprocessor">        #region BigArrayParallelSort</span></div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div>
<div class="line"><a name="l00513"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm">  513</a></span>&#160;        <span class="keyword">private</span> sealed <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm">BigArrayParallelSort</a> {</div>
<div class="line"><a name="l00514"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#a3a896fec419d99eb87c30f90141ff963">  514</a></span>&#160;            <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#a3a896fec419d99eb87c30f90141ff963">ParallelSortCount</a>;</div>
<div class="line"><a name="l00515"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#aac3f7b216e4ecb1b794e69478742cd9a">  515</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#aac3f7b216e4ecb1b794e69478742cd9a">ExecutingCount</a>;</div>
<div class="line"><a name="l00516"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#aae757f04acd21d2fa59471d070782b11">  516</a></span>&#160;            <span class="keyword">public</span> List&lt;Exception&gt; <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#aae757f04acd21d2fa59471d070782b11">Exceptions</a>;</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;</div>
<div class="line"><a name="l00518"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#aca4d92058fd538777010620d184da524">  518</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#aca4d92058fd538777010620d184da524">Wait</a>() {</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                lock (<span class="keyword">this</span>)</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                    <span class="keywordflow">while</span> (ExecutingCount &gt; 0)</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                        Monitor.Wait(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                <span class="comment">// TODO: An improvement is to have an aggregate exception like for 4.5</span></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                <span class="keywordflow">if</span> (Exceptions != null)</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                    <span class="keywordflow">throw</span> Exceptions[0];</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            }</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        }</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div>
<div class="line"><a name="l00531"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ac6f8b4429f7b6f3651101a2b5669d107">  531</a></span>&#160;        IEnumerator IEnumerable.GetEnumerator() {</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            <span class="keywordflow">return</span> GetEnumerator();</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        }</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    }</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_af22146e0869cfd949836820d2a451ed9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#af22146e0869cfd949836820d2a451ed9">Deveel.Data.Util.BigArray.Contains</a></div><div class="ttdeci">bool Contains(T item)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00195">BigArray_T.cs:195</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_a65703822e580e39d9cca940eaf53b581"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a65703822e580e39d9cca940eaf53b581">Deveel.Data.Util.BigArray.Contains</a></div><div class="ttdeci">bool Contains(T item, long startIndex, long count)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00215">BigArray_T.cs:215</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_aade7da4ee3d91d332a4c748d3c104bf5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#aade7da4ee3d91d332a4c748d3c104bf5">Deveel.Data.Util.BigArray._length</a></div><div class="ttdeci">long _length</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00079">BigArray_T.cs:79</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Util_1_1IBigList_htm_ae4929f73da24659b55464a0ec5bdc791"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Util_1_1IBigList.htm#ae4929f73da24659b55464a0ec5bdc791">Deveel.Data.Util.IBigList.Insert</a></div><div class="ttdeci">void Insert(long index, T item)</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_a8f4a8ed91f1589c7827b87143b79072b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a8f4a8ed91f1589c7827b87143b79072b">Deveel.Data.Util.BigArray.BigArray</a></div><div class="ttdeci">BigArray(long length)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00033">BigArray_T.cs:33</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_ac92fb7acfa775efb7b862cb5a177618c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ac92fb7acfa775efb7b862cb5a177618c">Deveel.Data.Util.BigArray._lastBlockLength</a></div><div class="ttdeci">int _lastBlockLength</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00031">BigArray_T.cs:31</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_a338413db3766bb30975be8f224e5e603"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a338413db3766bb30975be8f224e5e603">Deveel.Data.Util.BigArray._Partition</a></div><div class="ttdeci">long _Partition(long startIndex, long count, Comparison&lt; T &gt; comparer)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00445">BigArray_T.cs:445</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort_htm_aca4d92058fd538777010620d184da524"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#aca4d92058fd538777010620d184da524">Deveel.Data.Util.BigArray.BigArrayParallelSort.Wait</a></div><div class="ttdeci">void Wait()</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00518">BigArray_T.cs:518</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_abc6203ba1385d2f5529fa81781e31b17"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#abc6203ba1385d2f5529fa81781e31b17">Deveel.Data.Util.BigArray.IndexOf</a></div><div class="ttdeci">long IndexOf(T item, long startIndex, long count)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00240">BigArray_T.cs:240</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_ae3f1ac65edc6e89e4d10c9db0ac38bc2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ae3f1ac65edc6e89e4d10c9db0ac38bc2">Deveel.Data.Util.BigArray._blockLength</a></div><div class="ttdeci">readonly int _blockLength</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00028">BigArray_T.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_ada636f05610fbf3656c61808902d597e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ada636f05610fbf3656c61808902d597e">Deveel.Data.Util.BigArray.BigArray</a></div><div class="ttdeci">BigArray(long length, T defaultValue, int blockLength)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00045">BigArray_T.cs:45</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Util_1_1IBigList_htm_ad7961d07f26a8aa8c128b6bf05e9fbc7"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Util_1_1IBigList.htm#ad7961d07f26a8aa8c128b6bf05e9fbc7">Deveel.Data.Util.IBigList.RemoveAt</a></div><div class="ttdeci">void RemoveAt(long index)</div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Util_1_1IBigList_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Util_1_1IBigList.htm">Deveel.Data.Util.IBigList</a></div><div class="ttdef"><b>Definition:</b> <a href="IBigList_8cs_source.htm#l00021">IBigList.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort_htm_aae757f04acd21d2fa59471d070782b11"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#aae757f04acd21d2fa59471d070782b11">Deveel.Data.Util.BigArray.BigArrayParallelSort.Exceptions</a></div><div class="ttdeci">List&lt; Exception &gt; Exceptions</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00516">BigArray_T.cs:516</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm">Deveel.Data.Util.BigArray</a></div><div class="ttdef"><b>Definition:</b> <a href="BigArray_8cs_source.htm#l00020">BigArray.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_ab09fdc5386bd1adb32b7422f2a7287ac"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ab09fdc5386bd1adb32b7422f2a7287ac">Deveel.Data.Util.BigArray.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00075">BigArray_T.cs:75</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_a96f79ba69459c71c7bc633015cfe1099"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a96f79ba69459c71c7bc633015cfe1099">Deveel.Data.Util.BigArray._defaultValue</a></div><div class="ttdeci">readonly T _defaultValue</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00029">BigArray_T.cs:29</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_a6713bcc60cbde5e06ee2213a4d3ddf70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a6713bcc60cbde5e06ee2213a4d3ddf70">Deveel.Data.Util.BigArray.BinarySearch</a></div><div class="ttdeci">long BinarySearch(T item, Comparison&lt; T &gt; comparer)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00289">BigArray_T.cs:289</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_ab2d58ab5281adad43d66ee94de23a403"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ab2d58ab5281adad43d66ee94de23a403">Deveel.Data.Util.BigArray.BinarySearch</a></div><div class="ttdeci">long BinarySearch(T item, long startIndex, long count, Comparison&lt; T &gt; comparer=null)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00296">BigArray_T.cs:296</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_ab70e2133c398a49b4aa829e7c2d4fadc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ab70e2133c398a49b4aa829e7c2d4fadc">Deveel.Data.Util.BigArray.Sort</a></div><div class="ttdeci">void Sort(long startIndex, long count, Comparison&lt; T &gt; comparer)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00345">BigArray_T.cs:345</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_abd4bbbdf612ad4e30a2f42ad7620bd92"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#abd4bbbdf612ad4e30a2f42ad7620bd92">Deveel.Data.Util.BigArray.GetEnumerator</a></div><div class="ttdeci">IEnumerator&lt; T &gt; GetEnumerator()</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00490">BigArray_T.cs:490</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_a0c404e579a57ca0c95c2723271c118c6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a0c404e579a57ca0c95c2723271c118c6">Deveel.Data.Util.BigArray.BigArray</a></div><div class="ttdeci">BigArray(long length, int blockLength)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00041">BigArray_T.cs:41</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_aeeaf0090eca24a8021e318941b1f0b74"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#aeeaf0090eca24a8021e318941b1f0b74">Deveel.Data.Util.BigArray.Resize</a></div><div class="ttdeci">void Resize(long newLength)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00133">BigArray_T.cs:133</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_a0391465ae4dbf738acaff97c26965967"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a0391465ae4dbf738acaff97c26965967">Deveel.Data.Util.BigArray._Sort</a></div><div class="ttdeci">void _Sort(BigArrayParallelSort parallelSort, long startIndex, long count, Comparison&lt; T &gt; comparer)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00366">BigArray_T.cs:366</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_ae068350652e9f520155b59c6209c3fbe"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ae068350652e9f520155b59c6209c3fbe">Deveel.Data.Util.BigArray.Sort</a></div><div class="ttdeci">void Sort(Comparison&lt; T &gt; comparer=null)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00334">BigArray_T.cs:334</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort_htm_a3a896fec419d99eb87c30f90141ff963"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#a3a896fec419d99eb87c30f90141ff963">Deveel.Data.Util.BigArray.BigArrayParallelSort.ParallelSortCount</a></div><div class="ttdeci">static int ParallelSortCount</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00514">BigArray_T.cs:514</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm">Deveel.Data.Util.BigArray.BigArrayParallelSort</a></div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00513">BigArray_T.cs:513</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Util_1_1IBigList_htm_acece0c1f5a7c8e3c3f6ad23ea1cbddd3"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Util_1_1IBigList.htm#acece0c1f5a7c8e3c3f6ad23ea1cbddd3">Deveel.Data.Util.IBigList.BigCount</a></div><div class="ttdeci">long BigCount</div><div class="ttdef"><b>Definition:</b> <a href="IBigList_8cs_source.htm#l00024">IBigList.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_a4ce7a7a169b56d951664b471a381ddee"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a4ce7a7a169b56d951664b471a381ddee">Deveel.Data.Util.BigArray._firstArray</a></div><div class="ttdeci">T[][] _firstArray</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00030">BigArray_T.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_a575c1f15ef9b674695020c544a9dba0c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a575c1f15ef9b674695020c544a9dba0c">Deveel.Data.Util.BigArray.IndexOf</a></div><div class="ttdeci">long IndexOf(T item)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00219">BigArray_T.cs:219</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_a6c57bc33429a1b8dbd19f760a88a000b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a6c57bc33429a1b8dbd19f760a88a000b">Deveel.Data.Util.BigArray.BinarySearch</a></div><div class="ttdeci">long BinarySearch(T item)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00285">BigArray_T.cs:285</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_ade61f6ce94f40c422e8364555fe2f7c9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#ade61f6ce94f40c422e8364555fe2f7c9">Deveel.Data.Util.BigArray.Swap</a></div><div class="ttdeci">void Swap(long position1, long position2)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00475">BigArray_T.cs:475</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort_htm_aac3f7b216e4ecb1b794e69478742cd9a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray_1_1BigArrayParallelSort.htm#aac3f7b216e4ecb1b794e69478742cd9a">Deveel.Data.Util.BigArray.BigArrayParallelSort.ExecutingCount</a></div><div class="ttdeci">int ExecutingCount</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00515">BigArray_T.cs:515</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_a0d771962ccbbe12b51dbe1a68913b1cc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a0d771962ccbbe12b51dbe1a68913b1cc">Deveel.Data.Util.BigArray.BigArray</a></div><div class="ttdeci">BigArray(long length, T defaultValue)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00037">BigArray_T.cs:37</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1BigArray_htm_a75b86d3e3fc56bff1875674d8e25c16f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1BigArray.htm#a75b86d3e3fc56bff1875674d8e25c16f">Deveel.Data.Util.BigArray._BinarySearch</a></div><div class="ttdeci">long _BinarySearch(T item, long startIndex, long count, Comparison&lt; T &gt; comparer)</div><div class="ttdef"><b>Definition:</b> <a href="BigArray__T_8cs_source.htm#l00313">BigArray_T.cs:313</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
