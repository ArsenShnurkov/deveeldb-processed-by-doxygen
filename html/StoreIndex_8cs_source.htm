<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Index/StoreIndex.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_da8e3e59386dbd04e303b49ee54c7b55.htm">Deveel.Data.Index</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">StoreIndex.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="StoreIndex_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.IO;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Store.htm">Store</a>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Util.htm">Util</a>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Index {</div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm">   25</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm">StoreIndex</a> : <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm">BlockIndex</a>&lt;int&gt;, <a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndex.htm">IIndex</a>, IDisposable {</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a05e067e2622da7fe49e9ad82f329b2ae">   26</a></span>&#160;        <span class="keyword">private</span> List&lt;IMappedBlock&gt; <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a05e067e2622da7fe49e9ad82f329b2ae">deletedBlocks</a>;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a10d023326d607f77502d0ac331bfa724">   28</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a10d023326d607f77502d0ac331bfa724">disposed</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#aeae0eeee27212163126529e827b00bfe">   30</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#aeae0eeee27212163126529e827b00bfe">StoreIndex</a>(<a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">IndexSetStore</a> indexSetStore, <span class="keywordtype">int</span> indexNumber, <span class="keywordtype">int</span> maxBlockSize, IEnumerable&lt;<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm">IIndexBlock&lt;int&gt;</a>&gt; blocks)</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            : base(blocks) {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">IndexSetStore</a> = indexSetStore;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            IndexNumber = indexNumber;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            MaxBlockSize = maxBlockSize;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            deletedBlocks = <span class="keyword">new</span> List&lt;IMappedBlock&gt;();</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        }</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#adcceb70fbe4130d61d5ae93f37db4680">   40</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> IndexNumber { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a720eb53690f7bf7d51636febdf9d1099">   42</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> MaxBlockSize { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#ac4461039c9539d1e0d5fd4b71efc0b7c">   44</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">IndexSetStore</a> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">IndexSetStore</a> { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a8e146419843c07dcee26fc97552a8581">   46</a></span>&#160;        <span class="keyword">public</span> IEnumerable&lt;IIndexBlock&lt;int&gt;&gt; AllBlocks {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> Blocks.ToArray(); }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        }</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a4d2c7313fd1710f6a7ef6ff77e0e6a19">   50</a></span>&#160;        <span class="keyword">public</span> IEnumerable&lt;IMappedBlock&gt; DeletedBlocks {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> deletedBlocks.ToArray(); }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a560c568680fa2fbee18cf735f75e84c9">   54</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a560c568680fa2fbee18cf735f75e84c9">AssertNotDisposed</a>() {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordflow">if</span> (disposed)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ObjectDisposedException(GetType().FullName);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a603c9ab8913d267be00b5bcb7bc185ae">   59</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm">IIndexBlock&lt;int&gt;</a> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a603c9ab8913d267be00b5bcb7bc185ae">NewBlock</a>() {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            AssertNotDisposed();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm">MappedBlock</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a1116ae50abd9b7c4c54239c3f62f9ef5">   65</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">override</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a1116ae50abd9b7c4c54239c3f62f9ef5">OnDeleteBlock</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm">IIndexBlock&lt;int&gt;</a> block) {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            deletedBlocks.Add((<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IMappedBlock.htm">IMappedBlock</a>) block);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a46ccd8bd4606ddec623049fddbd9657d">   69</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a46ccd8bd4606ddec623049fddbd9657d">Dispose</a>() {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            Dispose(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            GC.SuppressFinalize(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a0a15ba4309a9d87d68bbf53096ca9968">   74</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a0a15ba4309a9d87d68bbf53096ca9968">Dispose</a>(<span class="keywordtype">bool</span> disposing) {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">if</span> (!disposed) {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                <span class="keywordflow">if</span> (disposing) {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                    <span class="keywordflow">if</span> (deletedBlocks != null)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                        deletedBlocks.Clear();</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">IndexSetStore</a> = null;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                deletedBlocks = null;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                disposed = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a0d3a9066bc6e766bab6de97efbbf8632">   87</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IMappedBlock.htm">IMappedBlock</a> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a0d3a9066bc6e766bab6de97efbbf8632">NewMappedBlock</a>(<a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">IndexSetStore</a> indexSetStore, <span class="keywordtype">long</span> firstEntry, <span class="keywordtype">long</span> lastEntry, <span class="keywordtype">long</span> blockPointer,</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="keywordtype">int</span> size, byte compactType, <span class="keywordtype">int</span> blockSize) {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm">MappedBlock</a>(indexSetStore, firstEntry, lastEntry, blockPointer, size, compactType, blockSize);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor">        #region MappedBlock</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm">   94</a></span>&#160;        <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm">MappedBlock</a> : <a class="code" href="classDeveel_1_1Data_1_1Block.htm">Block</a>, <a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IMappedBlock.htm">IMappedBlock</a>, IDisposable {</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#ae19a19dd760fc8db0511ddb1541b3422">   95</a></span>&#160;            <span class="keyword">private</span> readonly <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#ae19a19dd760fc8db0511ddb1541b3422">maxBlockSize</a>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#ab920fa231ebd8bbacd34c2a68cfe9898">   97</a></span>&#160;            <span class="keyword">private</span> <span class="keywordtype">object</span> blockLock = <span class="keyword">new</span> object();</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#af2667cc596a67295d69a16c47c729202">   98</a></span>&#160;            <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#af2667cc596a67295d69a16c47c729202">mutableBlock</a>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a5c0681e5f66c96980989d71f4416dd22">  101</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">IndexSetStore</a> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">IndexSetStore</a> { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a8bff6b97838d47f799c30d710fdbca8f">  103</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm">IStore</a> Store {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <span class="keyword">get</span> { <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">IndexSetStore</a>.<a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a5f8bccb1ace339b0795116bdc166c6c2">Store</a>; }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a7b6682fae9448cdd0c65538bf3e8af09">  107</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a7b6682fae9448cdd0c65538bf3e8af09">MappedBlock</a>(<a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm">StoreIndex</a> index)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                : base(index.MaxBlockSize) {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">IndexSetStore</a> = index.<a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#ac4461039c9539d1e0d5fd4b71efc0b7c">IndexSetStore</a>;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                maxBlockSize = index.<a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a720eb53690f7bf7d51636febdf9d1099">MaxBlockSize</a>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                BlockPointer = -1;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            }</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#ab2a4f5ef08f0f24622718feb704f1704">  114</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#ab2a4f5ef08f0f24622718feb704f1704">MappedBlock</a>(<a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">IndexSetStore</a> indexSetStore, <span class="keywordtype">long</span> firstEntry, <span class="keywordtype">long</span> lastEntry, <span class="keywordtype">long</span> blockPointer, <span class="keywordtype">int</span> size, byte compactType, <span class="keywordtype">int</span> maxBlockSize) {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">IndexSetStore</a> = indexSetStore;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                FirstEntry = firstEntry;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                LastEntry = lastEntry;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                BlockPointer = blockPointer;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                CompactType = compactType;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                this.maxBlockSize = maxBlockSize;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                Count = size;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                BaseArray = null;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a827d177fb5aca9d4fbd80420e8bf7079">  126</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">long</span> FirstEntry { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a2182015024fcbd13402aa6ec9fd321e2">  128</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">long</span> LastEntry { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a8a041b49a3b70003e5bd958e22f31e5f">  130</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">long</span> BlockPointer { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#af9800ccda7f8d31f7c5fe8892927bcc5">  132</a></span>&#160;            <span class="keyword">public</span> byte CompactType { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a846a0cd973cc977961a9f22031019cbb">  134</a></span>&#160;            <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">int</span> Top {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <span class="keyword">get</span> {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                    <span class="keywordflow">if</span> (Count == 0)</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;No first int in block.&quot;</span>);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                    lock (blockLock) {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                        <span class="keywordflow">return</span> BaseArray == null ? (int)LastEntry : BaseArray[Count - 1];</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                    }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a317a613442507d5c4f90b7753258acd2">  145</a></span>&#160;            <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">int</span> Bottom {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                <span class="keyword">get</span> {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                    <span class="keywordflow">if</span> (Count == 0)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;No first int in block.&quot;</span>);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                    lock (blockLock) {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                        <span class="keywordflow">return</span> BaseArray == null ? (int)FirstEntry : BaseArray[0];</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                    }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a3eb0995718ff6c2e947458e8c9765523">  156</a></span>&#160;            <span class="keyword">protected</span> <span class="keyword">override</span> <span class="keywordtype">int</span> ArrayLength {</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                <span class="keyword">get</span> { <span class="keywordflow">return</span> maxBlockSize; }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#aab7d5c9d698b69067ddf6cf7669139b7">  160</a></span>&#160;            <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#aab7d5c9d698b69067ddf6cf7669139b7">PrepareMutate</a>(<span class="keywordtype">bool</span> readOnly) {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                <span class="comment">// If list is to be mutable</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                <span class="keywordflow">if</span> (!readOnly &amp;&amp; !mutableBlock) {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                    BaseArray = (<span class="keywordtype">int</span>[])BaseArray.Clone();</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                    mutableBlock = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a1a66468e44f9924d050691ab29cd1224">  168</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a1a66468e44f9924d050691ab29cd1224">CopyTo</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm">IStore</a> destStore) {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                <span class="comment">// The number of bytes per entry</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                <span class="keywordtype">int</span> entrySize = CompactType;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                <span class="comment">// The total size of the entry.</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <span class="keywordtype">int</span> areaSize = (Count * entrySize);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                <span class="comment">// Allocate the destination area</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                var dest = destStore.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm#a2789b6b01534def9ff8e1d910dc08450">CreateArea</a>(areaSize);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                <span class="keywordtype">long</span> destOffset = dest.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a76ca6f78f4cdec5b070871c02cebdcc3">Id</a>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                Store.GetArea(BlockPointer).CopyTo(dest, areaSize);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                dest.Flush();</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                <span class="keywordflow">return</span> destOffset;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            }</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a479e793b57727036e65274a76af418d5">  183</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a479e793b57727036e65274a76af418d5">Flush</a>() {</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                <span class="comment">// Convert the int[] array to a byte[] array.</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                <span class="comment">// First determine how we compact this int array into a byte array.  If</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                <span class="comment">// all the values are &lt; 32768 then we store as shorts</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                <span class="keywordtype">long</span> largestVal = 0;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; Count; ++i) {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                    <span class="keywordtype">long</span> v = BaseArray[i];</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                    <span class="keywordflow">if</span> (<a class="code" href="namespaceSystem.htm">System</a>.Math.Abs(v) &gt; <a class="code" href="namespaceSystem.htm">System</a>.Math.Abs(largestVal)) {</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                        largestVal = v;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                    }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                }</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <span class="keywordtype">long</span> lv = largestVal;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                <span class="keywordflow">if</span> (lv &gt;&gt; 7 == 0 || lv &gt;&gt; 7 == -1) {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                    CompactType = 1;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (lv &gt;&gt; 15 == 0 || lv &gt;&gt; 15 == -1) {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                    CompactType = 2;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (lv &gt;&gt; 23 == 0 || lv &gt;&gt; 23 == -1) {</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                    CompactType = 3;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                }</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                    <span class="comment">// NOTE: in the future we&#39;ll want to determine if we are going to store</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                    <span class="comment">//   as an int or long array.</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                  <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                    CompactType = 4;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                }</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <span class="comment">// The number of bytes per entry</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                <span class="keywordtype">int</span> entrySize = CompactType;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                <span class="comment">// The total size of the entry.</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                <span class="keywordtype">int</span> areaSize = (Count * entrySize);</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <span class="comment">// Allocate an array to buffer the block to</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                byte[] arr = <span class="keyword">new</span> byte[areaSize];</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                <span class="comment">// Fill the array</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                <span class="keywordtype">int</span> p = 0;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; Count; ++i) {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                    <span class="keywordtype">int</span> v = BaseArray[i];</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = entrySize - 1; n &gt;= 0; --n) {</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                        <span class="comment">//TODO: check this...</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                        arr[p] = (byte)(<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ac15fb9eaac6b962d377bdd300b8c0a2e">URShift</a>(v, (n * 8)) &amp; 0x0FF);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                        ++p;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                    }</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                }</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                <span class="comment">// Create an area to store this</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                var a = Store.CreateArea(areaSize);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                BlockPointer = a.Id;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                a.Write(arr, 0, areaSize);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                a.Flush();</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                <span class="comment">// Once written, the block is invalidated</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                blockLock = null;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                <span class="keywordflow">return</span> BlockPointer;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#ac33f238f9647a966409e1ea1e2333a83">  241</a></span>&#160;            <span class="keyword">protected</span> <span class="keyword">override</span> <span class="keywordtype">int</span>[] <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#ac33f238f9647a966409e1ea1e2333a83">GetArray</a>(<span class="keywordtype">bool</span> readOnly) {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                <span class="comment">// We must synchronize this entire block because otherwise we could</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                <span class="comment">// return a partially loaded array.</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                lock (blockLock) {</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                    <span class="keywordflow">if</span> (BaseArray != null) {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                        PrepareMutate(readOnly);</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                        <span class="keywordflow">return</span> BaseArray;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                    }</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                    <span class="comment">// Create the int array</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                    BaseArray = <span class="keyword">new</span> <span class="keywordtype">int</span>[maxBlockSize];</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                    <span class="comment">// The number of bytes per entry</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                    <span class="keywordtype">int</span> entrySize = CompactType;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                    <span class="comment">// The total size of the entry.</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                    <span class="keywordtype">int</span> areaSize = (Count * entrySize);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                    <span class="comment">// Read in the byte array</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                    byte[] buf = <span class="keyword">new</span> byte[areaSize];</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                    <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                        Store.GetArea(BlockPointer).Read(buf, 0, areaSize);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                    } <span class="keywordflow">catch</span> (IOException e) {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;IO Error: &quot;</span> + e.Message);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                    }</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                    <span class="comment">// Uncompact it into the int array</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                    <span class="keywordtype">int</span> p = 0;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; Count; ++i) {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                        <span class="keywordtype">int</span> v = (((int)buf[p]) &lt;&lt; ((entrySize - 1) * 8));</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                        ++p;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = entrySize - 2; n &gt;= 0; --n) {</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                            v = v | ((((int)buf[p]) &amp; 0x0FF) &lt;&lt; (n * 8));</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                            ++p;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                        }</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                        BaseArray[i] = v;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                    }</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                    mutableBlock = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                    PrepareMutate(readOnly);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                    <span class="keywordflow">return</span> BaseArray;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                }</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a15b1e4a36f424629d4af637354a1560c">  284</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a15b1e4a36f424629d4af637354a1560c">Dispose</a>() {</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">IndexSetStore</a> = null;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        }</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    }</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_htm_a603c9ab8913d267be00b5bcb7bc185ae"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a603c9ab8913d267be00b5bcb7bc185ae">Deveel.Data.Index.StoreIndex.NewBlock</a></div><div class="ttdeci">override IIndexBlock&lt; int &gt; NewBlock()</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00059">StoreIndex.cs:59</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IStore_htm_a2789b6b01534def9ff8e1d910dc08450"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm#a2789b6b01534def9ff8e1d910dc08450">Deveel.Data.Store.IStore.CreateArea</a></div><div class="ttdeci">IArea CreateArea(long size)</div><div class="ttdoc">Allocates a block of memory in the store of the specified size and returns an IArea object that can b...</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_a5f8bccb1ace339b0795116bdc166c6c2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a5f8bccb1ace339b0795116bdc166c6c2">Deveel.Data.Index.IndexSetStore.Store</a></div><div class="ttdeci">IStore Store</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00043">IndexSetStore.cs:43</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_htm_a720eb53690f7bf7d51636febdf9d1099"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a720eb53690f7bf7d51636febdf9d1099">Deveel.Data.Index.StoreIndex.MaxBlockSize</a></div><div class="ttdeci">int MaxBlockSize</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00042">StoreIndex.cs:42</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock_htm_a7b6682fae9448cdd0c65538bf3e8af09"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a7b6682fae9448cdd0c65538bf3e8af09">Deveel.Data.Index.StoreIndex.MappedBlock.MappedBlock</a></div><div class="ttdeci">MappedBlock(StoreIndex index)</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00107">StoreIndex.cs:107</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_htm_a560c568680fa2fbee18cf735f75e84c9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a560c568680fa2fbee18cf735f75e84c9">Deveel.Data.Index.StoreIndex.AssertNotDisposed</a></div><div class="ttdeci">void AssertNotDisposed()</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00054">StoreIndex.cs:54</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">Deveel.Data.Index.IndexSetStore</a></div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00027">IndexSetStore.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_htm_a46ccd8bd4606ddec623049fddbd9657d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a46ccd8bd4606ddec623049fddbd9657d">Deveel.Data.Index.StoreIndex.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00069">StoreIndex.cs:69</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock_htm_af2667cc596a67295d69a16c47c729202"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#af2667cc596a67295d69a16c47c729202">Deveel.Data.Index.StoreIndex.MappedBlock.mutableBlock</a></div><div class="ttdeci">bool mutableBlock</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00098">StoreIndex.cs:98</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Block_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Block.htm">Deveel.Data.Block</a></div><div class="ttdef"><b>Definition:</b> <a href="Block_8cs_source.htm#l00023">Block.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_htm_a0d3a9066bc6e766bab6de97efbbf8632"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a0d3a9066bc6e766bab6de97efbbf8632">Deveel.Data.Index.StoreIndex.NewMappedBlock</a></div><div class="ttdeci">static IMappedBlock NewMappedBlock(IndexSetStore indexSetStore, long firstEntry, long lastEntry, long blockPointer, int size, byte compactType, int blockSize)</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00087">StoreIndex.cs:87</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_htm_a10d023326d607f77502d0ac331bfa724"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a10d023326d607f77502d0ac331bfa724">Deveel.Data.Index.StoreIndex.disposed</a></div><div class="ttdeci">bool disposed</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00028">StoreIndex.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock_htm_ac33f238f9647a966409e1ea1e2333a83"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#ac33f238f9647a966409e1ea1e2333a83">Deveel.Data.Index.StoreIndex.MappedBlock.GetArray</a></div><div class="ttdeci">override int[] GetArray(bool readOnly)</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00241">StoreIndex.cs:241</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_htm_ac4461039c9539d1e0d5fd4b71efc0b7c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#ac4461039c9539d1e0d5fd4b71efc0b7c">Deveel.Data.Index.StoreIndex.IndexSetStore</a></div><div class="ttdeci">IndexSetStore IndexSetStore</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00044">StoreIndex.cs:44</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm">Deveel.Data.Index.StoreIndex.MappedBlock</a></div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00094">StoreIndex.cs:94</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_htm_a1116ae50abd9b7c4c54239c3f62f9ef5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a1116ae50abd9b7c4c54239c3f62f9ef5">Deveel.Data.Index.StoreIndex.OnDeleteBlock</a></div><div class="ttdeci">override void OnDeleteBlock(IIndexBlock&lt; int &gt; block)</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00065">StoreIndex.cs:65</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_htm_a0a15ba4309a9d87d68bbf53096ca9968"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a0a15ba4309a9d87d68bbf53096ca9968">Deveel.Data.Index.StoreIndex.Dispose</a></div><div class="ttdeci">void Dispose(bool disposing)</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00074">StoreIndex.cs:74</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock_htm_ab2a4f5ef08f0f24622718feb704f1704"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#ab2a4f5ef08f0f24622718feb704f1704">Deveel.Data.Index.StoreIndex.MappedBlock.MappedBlock</a></div><div class="ttdeci">MappedBlock(IndexSetStore indexSetStore, long firstEntry, long lastEntry, long blockPointer, int size, byte compactType, int maxBlockSize)</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00114">StoreIndex.cs:114</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm">Deveel.Data.Index.StoreIndex</a></div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00025">StoreIndex.cs:25</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm">Deveel.Data.Index.IIndexBlock&lt; int &gt;</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_ac15fb9eaac6b962d377bdd300b8c0a2e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ac15fb9eaac6b962d377bdd300b8c0a2e">Deveel.Data.Util.ByteBuffer.URShift</a></div><div class="ttdeci">static int URShift(int number, int bits)</div><div class="ttdoc">Operates a shift on the given integer by the number of bits specified. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00277">ByteBuffer.cs:277</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Index_1_1IIndex_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Index_1_1IIndex.htm">Deveel.Data.Index.IIndex</a></div><div class="ttdoc">An interface for querying and accessing an index of primitive integers. </div><div class="ttdef"><b>Definition:</b> <a href="IIndex_8cs_source.htm#l00037">IIndex.cs:37</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">Deveel.Data.Util.ByteBuffer</a></div><div class="ttdoc">A wrapper for an array of byte. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00027">ByteBuffer.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_htm_a05e067e2622da7fe49e9ad82f329b2ae"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#a05e067e2622da7fe49e9ad82f329b2ae">Deveel.Data.Index.StoreIndex.deletedBlocks</a></div><div class="ttdeci">List&lt; IMappedBlock &gt; deletedBlocks</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00026">StoreIndex.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock_htm_a15b1e4a36f424629d4af637354a1560c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a15b1e4a36f424629d4af637354a1560c">Deveel.Data.Index.StoreIndex.MappedBlock.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00284">StoreIndex.cs:284</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm">Deveel.Data.Index.BlockIndex</a></div><div class="ttdoc">An implementation of BlockIndexBase<T> that stores all values in blocks that are entirely stored in m...</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00030">BlockIndex_T.cs:30</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Store_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Store.htm">Deveel.Data.Store</a></div><div class="ttdef"><b>Definition:</b> <a href="AreaExtensions_8cs_source.htm#l00019">AreaExtensions.cs:19</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock_htm_ae19a19dd760fc8db0511ddb1541b3422"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#ae19a19dd760fc8db0511ddb1541b3422">Deveel.Data.Index.StoreIndex.MappedBlock.maxBlockSize</a></div><div class="ttdeci">readonly int maxBlockSize</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00095">StoreIndex.cs:95</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock_htm_aab7d5c9d698b69067ddf6cf7669139b7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#aab7d5c9d698b69067ddf6cf7669139b7">Deveel.Data.Index.StoreIndex.MappedBlock.PrepareMutate</a></div><div class="ttdeci">void PrepareMutate(bool readOnly)</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00160">StoreIndex.cs:160</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IArea_htm_a76ca6f78f4cdec5b070871c02cebdcc3"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a76ca6f78f4cdec5b070871c02cebdcc3">Deveel.Data.Store.IArea.Id</a></div><div class="ttdeci">long Id</div><div class="ttdoc">Returns the unique identifier that represents this area. </div><div class="ttdef"><b>Definition:</b> <a href="IArea_8cs_source.htm#l00031">IArea.cs:31</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Index_1_1IMappedBlock_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Index_1_1IMappedBlock.htm">Deveel.Data.Index.IMappedBlock</a></div><div class="ttdef"><b>Definition:</b> <a href="IMappedBlock_8cs_source.htm#l00022">IMappedBlock.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock_htm_a479e793b57727036e65274a76af418d5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a479e793b57727036e65274a76af418d5">Deveel.Data.Index.StoreIndex.MappedBlock.Flush</a></div><div class="ttdeci">long Flush()</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00183">StoreIndex.cs:183</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IStore_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm">Deveel.Data.Store.IStore</a></div><div class="ttdoc">A store is a resource where areas can be allocated and freed to store information (a memory allocator...</div><div class="ttdef"><b>Definition:</b> <a href="IStore_8cs_source.htm#l00056">IStore.cs:56</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Util_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Util.htm">Deveel.Data.Util</a></div><div class="ttdef"><b>Definition:</b> <a href="BigArray_8cs_source.htm#l00019">BigArray.cs:19</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_htm_aeae0eeee27212163126529e827b00bfe"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex.htm#aeae0eeee27212163126529e827b00bfe">Deveel.Data.Index.StoreIndex.StoreIndex</a></div><div class="ttdeci">StoreIndex(IndexSetStore indexSetStore, int indexNumber, int maxBlockSize, IEnumerable&lt; IIndexBlock&lt; int &gt;&gt; blocks)</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00030">StoreIndex.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock_htm_a1a66468e44f9924d050691ab29cd1224"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1StoreIndex_1_1MappedBlock.htm#a1a66468e44f9924d050691ab29cd1224">Deveel.Data.Index.StoreIndex.MappedBlock.CopyTo</a></div><div class="ttdeci">long CopyTo(IStore destStore)</div><div class="ttdef"><b>Definition:</b> <a href="StoreIndex_8cs_source.htm#l00168">StoreIndex.cs:168</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
