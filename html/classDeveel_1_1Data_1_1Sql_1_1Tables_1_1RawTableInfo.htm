<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Sql.Tables.RawTableInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Tables.htm">Tables</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm">RawTableInfo</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Sql.Tables.RawTableInfo Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_1_1RawRowItem.htm">RawRowItem</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_1_1RawTableItem.htm">RawTableItem</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aea750df9ac3b1417f9cd6cee260a6105"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#aea750df9ac3b1417f9cd6cee260a6105">RawTableInfo</a> ()</td></tr>
<tr class="separator:aea750df9ac3b1417f9cd6cee260a6105"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8a9cdd2b3afda34ca11709ff4561e87"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#af8a9cdd2b3afda34ca11709ff4561e87">Add</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IRootTable.htm">IRootTable</a> table, IList&lt; int &gt; rowSet)</td></tr>
<tr class="separator:af8a9cdd2b3afda34ca11709ff4561e87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9555de572ef4f1e226ca64d82fbb38e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1ITable.htm">ITable</a>[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ae9555de572ef4f1e226ca64d82fbb38e">GetTables</a> ()</td></tr>
<tr class="separator:ae9555de572ef4f1e226ca64d82fbb38e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae58770cf022d9a4e86e5643d15538c0d"><td class="memItemLeft" align="right" valign="top">IList&lt; int &gt;[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ae58770cf022d9a4e86e5643d15538c0d">GetRows</a> ()</td></tr>
<tr class="separator:ae58770cf022d9a4e86e5643d15538c0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7a84c04fe8d4db7fe22cad1995b8cc8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm">RawTableInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#aa7a84c04fe8d4db7fe22cad1995b8cc8">Union</a> (<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm">RawTableInfo</a> info)</td></tr>
<tr class="separator:aa7a84c04fe8d4db7fe22cad1995b8cc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade0990a1ecacf1dfdf94403ff94a9ff5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm">RawTableInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ade0990a1ecacf1dfdf94403ff94a9ff5">RemoveDuplicates</a> ()</td></tr>
<tr class="separator:ade0990a1ecacf1dfdf94403ff94a9ff5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:aace977ec059ec1ffaddc4de9004d9227"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#aace977ec059ec1ffaddc4de9004d9227">RawTableInfo</a> (IEnumerable&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_1_1RawTableItem.htm">RawTableItem</a> &gt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a>)</td></tr>
<tr class="separator:aace977ec059ec1ffaddc4de9004d9227"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae647e76a5e4569eb811cac2aba4e3166"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_1_1RawTableItem.htm">RawTableItem</a>[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ae647e76a5e4569eb811cac2aba4e3166">GetSortedItems</a> ()</td></tr>
<tr class="separator:ae647e76a5e4569eb811cac2aba4e3166"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:ab57a2fa93d0418c57ff62767c83deb34"><td class="memItemLeft" align="right" valign="top">readonly List&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_1_1RawTableItem.htm">RawTableItem</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a></td></tr>
<tr class="separator:ab57a2fa93d0418c57ff62767c83deb34"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="RawTableInfo_8cs_source.htm#l00022">22</a> of file <a class="el" href="RawTableInfo_8cs_source.htm">RawTableInfo.cs</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aea750df9ac3b1417f9cd6cee260a6105"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Sql.Tables.RawTableInfo.RawTableInfo </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="RawTableInfo_8cs_source.htm#l00025">25</a> of file <a class="el" href="RawTableInfo_8cs_source.htm">RawTableInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                              {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a> = <span class="keyword">new</span> List&lt;RawTableItem&gt;();</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_htm_ab57a2fa93d0418c57ff62767c83deb34"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">Deveel.Data.Sql.Tables.RawTableInfo.tableItems</a></div><div class="ttdeci">readonly List&lt; RawTableItem &gt; tableItems</div><div class="ttdef"><b>Definition:</b> <a href="RawTableInfo_8cs_source.htm#l00023">RawTableInfo.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aace977ec059ec1ffaddc4de9004d9227"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Sql.Tables.RawTableInfo.RawTableInfo </td>
          <td>(</td>
          <td class="paramtype">IEnumerable&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_1_1RawTableItem.htm">RawTableItem</a> &gt;&#160;</td>
          <td class="paramname"><em>tableItems</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="RawTableInfo_8cs_source.htm#l00029">29</a> of file <a class="el" href="RawTableInfo_8cs_source.htm">RawTableInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            : <span class="keyword">this</span>() {</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            this.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a>.AddRange(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a>);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_htm_ab57a2fa93d0418c57ff62767c83deb34"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">Deveel.Data.Sql.Tables.RawTableInfo.tableItems</a></div><div class="ttdeci">readonly List&lt; RawTableItem &gt; tableItems</div><div class="ttdef"><b>Definition:</b> <a href="RawTableInfo_8cs_source.htm#l00023">RawTableInfo.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="af8a9cdd2b3afda34ca11709ff4561e87"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Tables.RawTableInfo.Add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IRootTable.htm">IRootTable</a>&#160;</td>
          <td class="paramname"><em>table</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IList&lt; int &gt;&#160;</td>
          <td class="paramname"><em>rowSet</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="RawTableInfo_8cs_source.htm#l00034">34</a> of file <a class="el" href="RawTableInfo_8cs_source.htm">RawTableInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                                             {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a>.Add(<span class="keyword">new</span> RawTableItem(table, rowSet));</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_htm_ab57a2fa93d0418c57ff62767c83deb34"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">Deveel.Data.Sql.Tables.RawTableInfo.tableItems</a></div><div class="ttdeci">readonly List&lt; RawTableItem &gt; tableItems</div><div class="ttdef"><b>Definition:</b> <a href="RawTableInfo_8cs_source.htm#l00023">RawTableInfo.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae58770cf022d9a4e86e5643d15538c0d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">IList&lt;int&gt; [] Deveel.Data.Sql.Tables.RawTableInfo.GetRows </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="RawTableInfo_8cs_source.htm#l00042">42</a> of file <a class="el" href="RawTableInfo_8cs_source.htm">RawTableInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                                      {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a>.Select(x =&gt; x.Rows).ToArray();</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_htm_ab57a2fa93d0418c57ff62767c83deb34"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">Deveel.Data.Sql.Tables.RawTableInfo.tableItems</a></div><div class="ttdeci">readonly List&lt; RawTableItem &gt; tableItems</div><div class="ttdef"><b>Definition:</b> <a href="RawTableInfo_8cs_source.htm#l00023">RawTableInfo.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae647e76a5e4569eb811cac2aba4e3166"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_1_1RawTableItem.htm">RawTableItem</a> [] Deveel.Data.Sql.Tables.RawTableInfo.GetSortedItems </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="RawTableInfo_8cs_source.htm#l00046">46</a> of file <a class="el" href="RawTableInfo_8cs_source.htm">RawTableInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                                {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            var list = <span class="keyword">new</span> RawTableItem[<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a>.Count];</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a>.CopyTo(list);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Array</a>.Sort(list);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            <span class="keywordflow">return</span> list;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_htm_ab57a2fa93d0418c57ff62767c83deb34"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">Deveel.Data.Sql.Tables.RawTableInfo.tableItems</a></div><div class="ttdeci">readonly List&lt; RawTableItem &gt; tableItems</div><div class="ttdef"><b>Definition:</b> <a href="RawTableInfo_8cs_source.htm#l00023">RawTableInfo.cs:23</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Deveel.Data.Types.SqlTypeCode.Array</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae9555de572ef4f1e226ca64d82fbb38e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1ITable.htm">ITable</a> [] Deveel.Data.Sql.Tables.RawTableInfo.GetTables </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="RawTableInfo_8cs_source.htm#l00038">38</a> of file <a class="el" href="RawTableInfo_8cs_source.htm">RawTableInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                                    {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a>.Select(x =&gt; x.Table).Cast&lt;ITable&gt;().ToArray();</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_htm_ab57a2fa93d0418c57ff62767c83deb34"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">Deveel.Data.Sql.Tables.RawTableInfo.tableItems</a></div><div class="ttdeci">readonly List&lt; RawTableItem &gt; tableItems</div><div class="ttdef"><b>Definition:</b> <a href="RawTableInfo_8cs_source.htm#l00023">RawTableInfo.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ade0990a1ecacf1dfdf94403ff94a9ff5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm">RawTableInfo</a> Deveel.Data.Sql.Tables.RawTableInfo.RemoveDuplicates </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="RawTableInfo_8cs_source.htm#l00166">166</a> of file <a class="el" href="RawTableInfo_8cs_source.htm">RawTableInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                                               {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="comment">// If no tables in duplicate then return</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a>.Count == 0)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#aea750df9ac3b1417f9cd6cee260a6105">RawTableInfo</a>();</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            <span class="comment">// Get the length of the first row set in the first table.  We assume that</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="comment">// the row set length is identical across each table in the Vector.</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            var elen = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a>[0];</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            <span class="keywordtype">int</span> len = elen.Rows.Count;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <span class="keywordflow">if</span> (len == 0)</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#aea750df9ac3b1417f9cd6cee260a6105">RawTableInfo</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a>.ToArray());</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            <span class="comment">// Create a new row element to sort.</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            var elems = <span class="keyword">new</span> RawRowItem[len];</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keywordtype">int</span> width = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a>.Count;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <span class="comment">// Create an array of RawTableElement so we can quickly access the data</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            var rdup = <span class="keyword">new</span> RawTableItem[width];</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a>.CopyTo(rdup);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="comment">// Run through the data building up a new RawTableElement[] array with</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="comment">// the information in every raw span.</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; len; ++i) {</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                var itemRows = <span class="keyword">new</span> <span class="keywordtype">int</span>[width];</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 0; n &lt; width; ++n) {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                    itemRows[n] = rdup[n].Rows[i];</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                }</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                elems[i] = <span class="keyword">new</span> RawRowItem(itemRows);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            }</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            <span class="comment">// Now &#39;elems&#39; it an array of individual RawRowItem objects which</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            <span class="comment">// represent each individual row in the table.</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="comment">// Now sort and remove duplicates to make up a new set.</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Array</a>.Sort(elems);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            var resultTables = <span class="keyword">new</span> List&lt;RawTableItem&gt;();</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            <span class="comment">// Make a new set of RawTableElement[] objects</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            var items = rdup;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="comment">// Set up the &#39;raw_info&#39; vector with the new RawTableElement[] removing</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="comment">// any duplicate rows.</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; width; ++i) {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                items[i].Rows.Clear();</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            RawRowItem previous = null;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 0; n &lt; len; ++n) {</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                var current = elems[n];</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                <span class="comment">// Check that the current element in the set is not a duplicate of the</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                <span class="comment">// previous.</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                <span class="keywordflow">if</span> (previous == null || previous.CompareTo(current) != 0) {</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; width; ++i) {</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                        items[i].Rows.Add(current.RowValues[i]);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                    }</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                    previous = current;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; width; ++i) {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                resultTables.Add(items[i]);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            }</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#aea750df9ac3b1417f9cd6cee260a6105">RawTableInfo</a>(resultTables.ToArray());</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_htm_ab57a2fa93d0418c57ff62767c83deb34"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">Deveel.Data.Sql.Tables.RawTableInfo.tableItems</a></div><div class="ttdeci">readonly List&lt; RawTableItem &gt; tableItems</div><div class="ttdef"><b>Definition:</b> <a href="RawTableInfo_8cs_source.htm#l00023">RawTableInfo.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_htm_aea750df9ac3b1417f9cd6cee260a6105"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#aea750df9ac3b1417f9cd6cee260a6105">Deveel.Data.Sql.Tables.RawTableInfo.RawTableInfo</a></div><div class="ttdeci">RawTableInfo()</div><div class="ttdef"><b>Definition:</b> <a href="RawTableInfo_8cs_source.htm#l00025">RawTableInfo.cs:25</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Deveel.Data.Types.SqlTypeCode.Array</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa7a84c04fe8d4db7fe22cad1995b8cc8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm">RawTableInfo</a> Deveel.Data.Sql.Tables.RawTableInfo.Union </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm">RawTableInfo</a>&#160;</td>
          <td class="paramname"><em>info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="RawTableInfo_8cs_source.htm#l00053">53</a> of file <a class="el" href="RawTableInfo_8cs_source.htm">RawTableInfo.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                                                     {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="comment">// Number of Table &#39;columns&#39;</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <span class="keywordtype">int</span> colCount = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">tableItems</a>.Count;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            var merge1 = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ae647e76a5e4569eb811cac2aba4e3166">GetSortedItems</a>();</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            var merge2 = info.GetSortedItems();</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keywordtype">int</span> size1 = -1;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keywordtype">int</span> size2 = -1;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="comment">// First check number of tables in each merge is correct.</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <span class="keywordflow">if</span> (merge1.Length != merge2.Length)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Incorrect format in table union&quot;</span>);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            <span class="comment">// Check each table in the merge1 set has identical length row_sets</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; merge1.Length; ++i) {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                <span class="keywordflow">if</span> (size1 == -1) {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                    size1 = merge1[i].Rows.Count;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    <span class="keywordflow">if</span> (size1 != merge1[i].Rows.Count)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Incorrect format in table union&quot;</span>);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            }</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <span class="comment">// Check each table in the merge2 set has identical length row_sets</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; merge2.Length; ++i) {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                <span class="comment">// Check the tables in merge2 are identical to the tables in merge1</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                <span class="keywordflow">if</span> (!merge2[i].<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02a51c45b795d5d18a3e4e0c37e8b20a141">Table</a>.TypeEquals(merge1[i].Table))</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Incorrect format in table union&quot;</span>);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                <span class="keywordflow">if</span> (size2 == -1) {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                    size2 = merge2[i].Rows.Count;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                    <span class="keywordflow">if</span> (size2 != merge2[i].Rows.Count)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Incorrect format in table union&quot;</span>);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="comment">// If size1 or size2 are -1 then we have a corrupt table.  (It will be</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="comment">// 0 for an empty table).</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">if</span> (size1 == -1 || size2 == -1)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Incorrect format in table union&quot;</span>);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="comment">// We don&#39;t need information in &#39;raw_info&#39; vector anymore so clear it.</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="comment">// This may help garbage collection.</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            var resultItems = <span class="keyword">new</span> List&lt;RawTableItem&gt;();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="comment">// Merge the two together into a new list of RawRowElement[]</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordtype">int</span> mergeSize = size1 + size2;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            var elems = <span class="keyword">new</span> RawRowItem[mergeSize];</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordtype">int</span> elemsIndex = 0;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; size1; ++i) {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                var itemRows = <span class="keyword">new</span> <span class="keywordtype">int</span>[colCount];</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 0; n &lt; colCount; ++n) {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                    itemRows[n] = merge1[n].Rows[i];</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                elems[elemsIndex] = <span class="keyword">new</span> RawRowItem(itemRows);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                ++elemsIndex;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; size2; ++i) {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                var itemRows = <span class="keyword">new</span> <span class="keywordtype">int</span>[colCount];</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 0; n &lt; colCount; ++n) {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                    itemRows[n] = merge2[n].Rows[i];</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                elems[elemsIndex] = <span class="keyword">new</span> RawRowItem(itemRows);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                ++elemsIndex;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            }</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="comment">// Now sort the row elements into order.</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Array</a>.Sort(elems);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="comment">// Remove any duplicate rows.</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; colCount; ++i) {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                merge1[i].Rows.Clear();</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            RawRowItem previous = null;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 0; n &lt; mergeSize; ++n) {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                var current = elems[n];</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <span class="comment">// Check that the current element in the set is not a duplicate of the</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                <span class="comment">// previous.</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <span class="keywordflow">if</span> (previous == null || previous.CompareTo(current) != 0) {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; colCount; ++i) {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                        merge1[i].Rows.Add(current.RowValues[i]);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                    }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                    previous = current;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; colCount; ++i) {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                resultItems.Add(merge1[i]);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#aea750df9ac3b1417f9cd6cee260a6105">RawTableInfo</a>(resultItems.ToArray());</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_htm_ab57a2fa93d0418c57ff62767c83deb34"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ab57a2fa93d0418c57ff62767c83deb34">Deveel.Data.Sql.Tables.RawTableInfo.tableItems</a></div><div class="ttdeci">readonly List&lt; RawTableItem &gt; tableItems</div><div class="ttdef"><b>Definition:</b> <a href="RawTableInfo_8cs_source.htm#l00023">RawTableInfo.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_htm_aea750df9ac3b1417f9cd6cee260a6105"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#aea750df9ac3b1417f9cd6cee260a6105">Deveel.Data.Sql.Tables.RawTableInfo.RawTableInfo</a></div><div class="ttdeci">RawTableInfo()</div><div class="ttdef"><b>Definition:</b> <a href="RawTableInfo_8cs_source.htm#l00025">RawTableInfo.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_htm_ae647e76a5e4569eb811cac2aba4e3166"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo.htm#ae647e76a5e4569eb811cac2aba4e3166">Deveel.Data.Sql.Tables.RawTableInfo.GetSortedItems</a></div><div class="ttdeci">RawTableItem[] GetSortedItems()</div><div class="ttdef"><b>Definition:</b> <a href="RawTableInfo_8cs_source.htm#l00046">RawTableInfo.cs:46</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Deveel.Data.Types.SqlTypeCode.Array</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm_a782e8984e5e4a6718cff0c8da0777d02a51c45b795d5d18a3e4e0c37e8b20a141"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02a51c45b795d5d18a3e4e0c37e8b20a141">Deveel.Data.Sql.DbObjectType.Table</a></div><div class="ttdoc">A TABLE object in a database. </div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="ab57a2fa93d0418c57ff62767c83deb34"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly List&lt;<a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1RawTableInfo_1_1RawTableItem.htm">RawTableItem</a>&gt; Deveel.Data.Sql.Tables.RawTableInfo.tableItems</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="RawTableInfo_8cs_source.htm#l00023">23</a> of file <a class="el" href="RawTableInfo_8cs_source.htm">RawTableInfo.cs</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Tables/<a class="el" href="RawTableInfo_8cs_source.htm">RawTableInfo.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
