<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Parser/ExpressionBuilder.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_f0ea0b9ea9aae2e0e9b9dfca26eb78a8.htm">Deveel.Data.Sql.Parser</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ExpressionBuilder.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ExpressionBuilder_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Linq;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm">Expressions</a>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm">Objects</a>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Tables.htm">Tables</a>;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Sql.Parser {</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm">   26</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm">ExpressionBuilder</a> {</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">   27</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Build</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IExpressionNode.htm">IExpressionNode</a> node) {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            <span class="keywordflow">if</span> (node is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlVariableRefExpressionNode.htm">SqlVariableRefExpressionNode</a>)</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                <span class="keywordflow">return</span> VisitVariableRefExpression((SqlVariableRefExpressionNode) node);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            <span class="keywordflow">if</span> (node is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlExpressionTupleNode.htm">SqlExpressionTupleNode</a>)</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                <span class="keywordflow">return</span> VisitTupleExpression((SqlExpressionTupleNode) node);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <span class="keywordflow">if</span> (node is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm">SqlQueryExpressionNode</a>)</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                <span class="keywordflow">return</span> VisitQueryExpression((SqlQueryExpressionNode) node);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            <span class="keywordflow">if</span> (node is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlCaseExpressionNode.htm">SqlCaseExpressionNode</a>)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                <span class="keywordflow">return</span> VisitCaseExpression((SqlCaseExpressionNode) node);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <span class="keywordflow">if</span> (node is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlConstantExpressionNode.htm">SqlConstantExpressionNode</a>)</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                <span class="keywordflow">return</span> VisitConstantExpression((SqlConstantExpressionNode) node);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            <span class="keywordflow">if</span> (node is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlFunctionCallExpressionNode.htm">SqlFunctionCallExpressionNode</a>)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                <span class="keywordflow">return</span> VisitFunctionCall((SqlFunctionCallExpressionNode) node);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <span class="keywordflow">if</span> (node is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlReferenceExpressionNode.htm">SqlReferenceExpressionNode</a>)</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                <span class="keywordflow">return</span> VisitReferenceExpression((SqlReferenceExpressionNode) node);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            <span class="keywordflow">if</span> (node is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm">SqlBinaryExpressionNode</a>)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                <span class="keywordflow">return</span> VisitBinaryExpression((SqlBinaryExpressionNode) node);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            <span class="keywordflow">if</span> (node is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlUnaryExpressionNode.htm">SqlUnaryExpressionNode</a>)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                <span class="keywordflow">return</span> VisitUnaryExpression((SqlUnaryExpressionNode) node);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            <span class="keywordflow">if</span> (node is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode.htm">SqlBetweenExpressionNode</a>)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                <span class="keywordflow">return</span> VisitBetweenExpression((SqlBetweenExpressionNode) node);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a4b8fca0349dd8ec2ff489ab0f6058e57">   52</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a4b8fca0349dd8ec2ff489ab0f6058e57">VisitVariableRefExpression</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlVariableRefExpressionNode.htm">SqlVariableRefExpressionNode</a> node) {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ad70966bc00c62ca478374e07d8fb895b">VariableReference</a>(node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlVariableRefExpressionNode.htm#ae3208a1683ec041b762d88046eaa4bfe">Variable</a>);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        }</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ada34a553b42bf992671bf261127212cb">   56</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ada34a553b42bf992671bf261127212cb">VisitTupleExpression</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlExpressionTupleNode.htm">SqlExpressionTupleNode</a> node) {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a39a249665c09f3eb9a52a7adc6c2ff6a">Tuple</a>(node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlExpressionTupleNode.htm#a3b0f3994b6bcc68901d5ba795939affd">Expressions</a>.Select(Build).ToArray());</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a2f7897cf019eeeec668e2a6acc0c8d0a">   60</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a2f7897cf019eeeec668e2a6acc0c8d0a">VisitQueryExpression</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm">SqlQueryExpressionNode</a> node) {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            var selectColumns = GetSelectColumns(node);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            var exp = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">SqlQueryExpression</a>(selectColumns);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordflow">if</span> (node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ad470be00dbaaf9b2a35fa2f02018fa05">FromClause</a> != null) {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                SetFromClause(exp.FromClause, node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ad470be00dbaaf9b2a35fa2f02018fa05">FromClause</a>);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            <span class="keywordflow">if</span> (node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a19229b7fe935dda0a342d5032bedc032">WhereExpression</a> != null) {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                exp.WhereExpression = Build(node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a19229b7fe935dda0a342d5032bedc032">WhereExpression</a>);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keywordflow">if</span> (node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ab1734cefb0a5e0a1b2aeb4d78bd1aaa7">GroupBy</a> != null) {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                var groupBy = <span class="keyword">new</span> List&lt;SqlExpression&gt;();</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                <span class="keywordflow">if</span> (node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ab1734cefb0a5e0a1b2aeb4d78bd1aaa7">GroupBy</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GroupByNode.htm#a2836289b96c08adc680ccbf8b2b13153">GroupExpressions</a> != null)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    groupBy.AddRange(node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ab1734cefb0a5e0a1b2aeb4d78bd1aaa7">GroupBy</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GroupByNode.htm#a2836289b96c08adc680ccbf8b2b13153">GroupExpressions</a>.Select(Build));</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                exp.GroupBy = groupBy.ToList();</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                var having = node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ab1734cefb0a5e0a1b2aeb4d78bd1aaa7">GroupBy</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GroupByNode.htm#a56aa6049b3fd8c104d7460603e75fdaa">HavingExpression</a>;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="keywordflow">if</span> (having != null)</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                    exp.HavingExpression = Build(having);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">if</span> (node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad7f26334bffc3439d10fbf94714658d">Composite</a> != null) {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                var compositeExp = Build(node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad7f26334bffc3439d10fbf94714658d">Composite</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryCompositeNode.htm#ace1a0f1f22627df9910f45923fc41ed3">QueryExpression</a>);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                exp.NextComposite = compositeExp as <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">SqlQueryExpression</a>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                exp.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm#ac7cbbc395bfc2dffe1a492c0cafaf062">IsCompositeAll</a> = node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad7f26334bffc3439d10fbf94714658d">Composite</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryCompositeNode.htm#ad233ed6a2a26c3a8d36b5ed28a2b81c2">IsAll</a>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                exp.CompositeFunction = GetCompositeFunction(node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad7f26334bffc3439d10fbf94714658d">Composite</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryCompositeNode.htm#a4713adf3d38a8c9d986b5d0250ea868f">CompositeFunction</a>);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keywordflow">return</span> exp;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a5a2aa67765ef6439df4c9362e30be804">   95</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a43a8483ef91b1611fe44f265383656b1">CompositeFunction</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a5a2aa67765ef6439df4c9362e30be804">GetCompositeFunction</a>(<span class="keywordtype">string</span> s) {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">if</span> (String.Equals(s, <span class="stringliteral">&quot;UNION&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a43a8483ef91b1611fe44f265383656b1">CompositeFunction</a>.Union;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            if (String.Equals(s, <span class="stringliteral">&quot;EXCEPT&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a43a8483ef91b1611fe44f265383656b1">CompositeFunction</a>.Except;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            if (String.Equals(s, <span class="stringliteral">&quot;INTERSECT&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a43a8483ef91b1611fe44f265383656b1">CompositeFunction</a>.Intersect;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(String.Format(<span class="stringliteral">&quot;Composite function {0} is invalid.&quot;</span>, s));</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ac3929f3d580d0e3c75f30630cf479712">  106</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ac3929f3d580d0e3c75f30630cf479712">SetFromTableInClause</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm">FromClause</a> clause, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IFromSourceNode.htm">IFromSourceNode</a> source, <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode.htm">JoinNode</a> join) {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            AddSourceToClause(clause, source);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">if</span> (join != null) {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                var joinType = <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">JoinType</a>.Inner;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                <span class="keywordflow">if</span> (!String.IsNullOrEmpty(join.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode.htm#ab05d2c0599f9a925e4399b6beb639268">JoinType</a>))</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                    joinType = GetJoinType(join.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode.htm#ab05d2c0599f9a925e4399b6beb639268">JoinType</a>);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> onExpression = null;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                <span class="keywordflow">if</span> (join.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode.htm#a09425cdae3309a81cb37e6fb0222fd26">OnExpression</a> != null)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                    onExpression = Build(join.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode.htm#a09425cdae3309a81cb37e6fb0222fd26">OnExpression</a>);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                clause.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a5539305f5692f0f373b31ba5737b974f">Join</a>(joinType, onExpression);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                SetFromTableInClause(clause, join.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode.htm#a94777d764dcd1b0f0ee011ab12a29c76">Source</a>, join.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode.htm#afea6b8c6ddedbc7a287c4d1a8a38ba7b">NextJoin</a>);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a5e82449d0a4488fb015460319d08801f">  124</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a5e82449d0a4488fb015460319d08801f">AddSourceToClause</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm">FromClause</a> clause, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IFromSourceNode.htm">IFromSourceNode</a> source) {</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <span class="keywordtype">string</span> alias = null;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">if</span> (source.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IFromSourceNode.htm#a1636a470ad3df63a1c0e3a3964846dd8">Alias</a> != null)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                alias = source.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IFromSourceNode.htm#a1636a470ad3df63a1c0e3a3964846dd8">Alias</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1IdentifierNode.htm#accf90e8962b2589e3c9776e8855c5370">Text</a>;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordflow">if</span> (source is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromTableSourceNode.htm">FromTableSourceNode</a>) {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                var tableSource = (FromTableSourceNode)source;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                clause.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a82c6e260b655b2aba403aaff5255cfe3">AddTable</a>(alias, tableSource.TableName.Name);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (source is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromQuerySourceNode.htm">FromQuerySourceNode</a>) {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                var querySource = (FromQuerySourceNode)source;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                var queryExpression = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">SqlQueryExpression</a>) Build(querySource.Query);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                clause.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#ae15ef55de3bf671faa9d37804621ad2c">AddSubQuery</a>(alias, queryExpression);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a82f187b53f76eb66f1737f3be20b26d7">  139</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">JoinType</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a82f187b53f76eb66f1737f3be20b26d7">GetJoinType</a>(<span class="keywordtype">string</span> typeName) {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="keywordflow">if</span> (String.Equals(typeName, <span class="stringliteral">&quot;INNER&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                String.Equals(typeName, <span class="stringliteral">&quot;INNER JOIN&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                String.Equals(typeName, <span class="stringliteral">&quot;,&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">JoinType</a>.Inner;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            if (String.Equals(typeName, <span class="stringliteral">&quot;LEFT OUTER&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                String.Equals(typeName, <span class="stringliteral">&quot;LFT OUTER JOIN&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                String.Equals(typeName, <span class="stringliteral">&quot;LEFT&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                String.Equals(typeName, <span class="stringliteral">&quot;LFT JOIN&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">JoinType</a>.Left;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            if (String.Equals(typeName, <span class="stringliteral">&quot;RIGHT OUTER&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                String.Equals(typeName, <span class="stringliteral">&quot;RIGHT OUTER JOIN&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                String.Equals(typeName, <span class="stringliteral">&quot;RIGHT&quot;</span>, StringComparison.OrdinalIgnoreCase) ||</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                String.Equals(typeName, <span class="stringliteral">&quot;RIGHT JOIN&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">JoinType</a>.Right;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">JoinType</a>.None;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ae156d20cfeacf58f17be212fff1e8dd8">  158</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ae156d20cfeacf58f17be212fff1e8dd8">SetFromClause</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm">FromClause</a> clause, <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromClauseNode.htm">FromClauseNode</a> node) {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            SetFromTableInClause(clause, node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromClauseNode.htm#a674e57666a006e8013a935911e1a3421">Source</a>, node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromClauseNode.htm#acbfb8700a90e3a0fbd7e56713b65627a">Join</a>);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a8740fdd085bf4075243cfaffd4b48a33">  162</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> IEnumerable&lt;SelectColumn&gt; <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a8740fdd085bf4075243cfaffd4b48a33">GetSelectColumns</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm">SqlQueryExpressionNode</a> node) {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">if</span> (node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad7411fae637ffffa0e6de687b4e74db">IsAll</a>) {</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span>[] {<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SelectColumn.htm">SelectColumn</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ae3792af713778beb017f2ed55e219e86">Reference</a>(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>(<span class="stringliteral">&quot;*&quot;</span>)))};</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            var items = <span class="keyword">new</span> List&lt;SelectColumn&gt;();</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keywordflow">foreach</span> (var item <span class="keywordflow">in</span> node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#abadce8d7a727a15038dcf001b2005a06">SelectItems</a>) {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> exp;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                <span class="keywordflow">if</span> (item.Name != null) {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                    exp = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ae3792af713778beb017f2ed55e219e86">Reference</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a94a5079bbbd800dffcc9010cfad8c5b1">Parse</a>(item.Name.Name));</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (item.Expression != null) {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                    exp = Build(item.Expression);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException();</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                <span class="keywordtype">string</span> alias = null;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                <span class="keywordflow">if</span> (item.Alias != null)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                    alias = item.Alias.Text;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                items.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SelectColumn.htm">SelectColumn</a>(exp, alias));</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <span class="keywordflow">return</span> items.ToArray();</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aec6126d6fa502f1c14f684dc238cf3de">  188</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aec6126d6fa502f1c14f684dc238cf3de">VisitCaseExpression</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlCaseExpressionNode.htm">SqlCaseExpressionNode</a> expressionNode) {</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div>
<div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a8e950a554c604a3dd8b2206aef88ffa8">  192</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a8e950a554c604a3dd8b2206aef88ffa8">VisitConstantExpression</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlConstantExpressionNode.htm">SqlConstantExpressionNode</a> expressionNode) {</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            var sqlValue = expressionNode.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlConstantExpressionNode.htm#a8727840699159312d2b7316a77fd4543">Value</a>;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a> obj;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">if</span> (sqlValue is <a class="code" href="namespaceSqlString.htm">SqlString</a>) {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                obj = <a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>.<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm#a7c7678b1d7ecea444953e695f6c2c711">VarChar</a>((SqlString) sqlValue);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (sqlValue is <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>) {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                obj = <a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>.<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm#ac879565bbf7572459c4a2e289fe4feb1">Boolean</a>((SqlBoolean) sqlValue);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (sqlValue is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                obj = <a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>.<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm#ab7a0cc04985bf71a052b6e67fdc38407">Number</a>((SqlNumber) sqlValue);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (sqlValue is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>) { </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                obj = <a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>.<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm#ac5fb2a3cb95aa4344150cfa377ab95b2">Null</a>();</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<span class="stringliteral">&quot;Constant value not supported.&quot;</span>);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            }</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a78749d3e57bb42c82189114d3c0887c8">Constant</a>(obj);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        }</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a75b7fbda8ff8139acd1df3407537de4d">  210</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a75b7fbda8ff8139acd1df3407537de4d">VisitReferenceExpression</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlReferenceExpressionNode.htm">SqlReferenceExpressionNode</a> node) {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ae3792af713778beb017f2ed55e219e86">Reference</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">ObjectName</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a94a5079bbbd800dffcc9010cfad8c5b1">Parse</a>(node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlReferenceExpressionNode.htm#afae7b716a20d01cc69b3d8fee336dcac">Reference</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ObjectNameNode.htm#a3f7d9dc76ef174ce0203f564c0fbd287">Name</a>));</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aa1d7779eb8a8066b7295d92a32926dd6">  214</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aa1d7779eb8a8066b7295d92a32926dd6">VisitFunctionCall</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlFunctionCallExpressionNode.htm">SqlFunctionCallExpressionNode</a> node) {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            var args = <span class="keyword">new</span> List&lt;SqlExpression&gt;();</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keywordflow">if</span> (node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlFunctionCallExpressionNode.htm#ac41e73dcabd65012d2d0bd512e51c418">Arguments</a> != null)</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                args.AddRange(node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlFunctionCallExpressionNode.htm#ac41e73dcabd65012d2d0bd512e51c418">Arguments</a>.Select(Build));</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a36c8e682aa362e44b316c8797f3f9564">FunctionCall</a>(node.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlFunctionCallExpressionNode.htm#a1da57e06e77e67d823f9c1df92a0b2a2">FunctionName</a>, args.ToArray());</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a3f457a5ac917694e1fc3405cce523457">  222</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a3f457a5ac917694e1fc3405cce523457">VisitBetweenExpression</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode.htm">SqlBetweenExpressionNode</a> expressionNode) {</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            var testExp = Build(expressionNode.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode.htm#abb530bce1dc1230326126446261a9c40">Expression</a>);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            var minValue = Build(expressionNode.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode.htm#a2f456571a597f9e27d32f794f3c9ef58">MinValue</a>);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            var maxValue = Build(expressionNode.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode.htm#a9da6b0f6910d7097b7ed4b5e9b30e2d2">MaxValue</a>);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            var smallerExp = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a19507f51f60edc055a06d588a1515a4d">SmallerOrEqualThan</a>(testExp, maxValue);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            var greaterExp = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a6160a8dfa2206e5bba032be177e5b769">GreaterOrEqualThan</a>(testExp, minValue);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> exp = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a190b32bbe269e178bb69866170e55441">And</a>(smallerExp, greaterExp);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            <span class="keywordflow">if</span> (expressionNode.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode.htm#a02facf3efd19e4d31f3eb99b6cadaa38">Not</a>)</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                exp = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a1924d618a9bedd91fac16177086af7a4">Not</a>(exp);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            <span class="keywordflow">return</span> exp;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        }</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div>
<div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a193abdb690da82103291812dff537615">  238</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a193abdb690da82103291812dff537615">VisitBinaryExpression</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm">SqlBinaryExpressionNode</a> expressionNode) {</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            var left = Build(expressionNode.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a4aae1dcafdcb9dee95f9cd9e3581343c">Left</a>);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            var right = Build(expressionNode.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a1a6812fb666f5f41018308524e45b442">Right</a>);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            var op = expressionNode.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#ad5125dcee1ece1c77801f0e597a70a94">Operator</a>;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            var expType = GetBinaryExpressionType(op);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ad5bd15eb16058f78c184625a44fffde8">Binary</a>(left, expType, right);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        }</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div>
<div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a6c50824c8850b0a8c4f0e6ca70d447cc">  248</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a6c50824c8850b0a8c4f0e6ca70d447cc">GetBinaryExpressionType</a>(<span class="keywordtype">string</span> op) {</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;+&quot;</span> ||</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                op == <span class="stringliteral">&quot;||&quot;</span>)</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Add;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;-&quot;</span>)</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Subtract;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;*&quot;</span>)</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Multiply;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;/&quot;</span>)</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Divide;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;%&quot;</span> ||</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                String.Equals(op, <span class="stringliteral">&quot;MOD&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Modulo;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            if (op == <span class="stringliteral">&quot;=&quot;</span>)</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Equal;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;&lt;&gt;&quot;</span>)</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.NotEqual;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;&gt;&quot;</span>)</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.GreaterThan;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;&gt;=&quot;</span>)</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.GreaterOrEqualThan;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;&lt;&quot;</span>)</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.SmallerThan;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;&lt;=&quot;</span>)</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.SmallerOrEqualThan;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <span class="keywordflow">if</span> (String.Equals(op, <span class="stringliteral">&quot;LIKE&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Like;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            if (String.Equals(op, <span class="stringliteral">&quot;NOT LIKE&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.NotLike;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            if (String.Equals(op, <span class="stringliteral">&quot;IS&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Is;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            if (String.Equals(op, <span class="stringliteral">&quot;IS NOT&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.IsNot;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            if (String.Equals(op, <span class="stringliteral">&quot;AND&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.And;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            if (String.Equals(op, <span class="stringliteral">&quot;OR&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Or;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            if (String.Equals(op, <span class="stringliteral">&quot;IN&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.AnyEqual;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            if (String.Equals(op, <span class="stringliteral">&quot;NOT IN&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.AllNotEqual;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(String.Format(<span class="stringliteral">&quot;The operator {0} is not a binary one.&quot;</span>, op));</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        }</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00296"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aa6037e0d8ca8c53ee2935290e7b79263">  296</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aa6037e0d8ca8c53ee2935290e7b79263">VisitUnaryExpression</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlUnaryExpressionNode.htm">SqlUnaryExpressionNode</a> expressionNode) {</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            var expressionType = GetUnaryExpressionType(expressionNode.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlUnaryExpressionNode.htm#a2b1ea7262c98a79419bf08c5ff31dff2">Operator</a>);</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            var operand = Build(expressionNode.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlUnaryExpressionNode.htm#a34c517c6084b8c6cc259ddc593633cdc">Operand</a>);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a018364702d4130a75ffe5a1d046e8f29">Unary</a>(expressionType, operand);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        }</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ac776eec4423e04c1fb294232c6fb7f88">  303</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ac776eec4423e04c1fb294232c6fb7f88">GetUnaryExpressionType</a>(<span class="keywordtype">string</span> op) {</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;+&quot;</span>)</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.UnaryPlus;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <span class="keywordflow">if</span> (op == <span class="stringliteral">&quot;-&quot;</span>)</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Negate;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            <span class="keywordflow">if</span> (String.Equals(op, <span class="stringliteral">&quot;NOT&quot;</span>, StringComparison.OrdinalIgnoreCase))</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">SqlExpressionType</a>.Not;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(String.Format(<span class="stringliteral">&quot;The operator {0} is not a unary one.&quot;</span>, op));</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        }</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    }</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_ac776eec4423e04c1fb294232c6fb7f88"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ac776eec4423e04c1fb294232c6fb7f88">Deveel.Data.Sql.Parser.ExpressionBuilder.GetUnaryExpressionType</a></div><div class="ttdeci">static SqlExpressionType GetUnaryExpressionType(string op)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00303">ExpressionBuilder.cs:303</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryCompositeNode_htm_a4713adf3d38a8c9d986b5d0250ea868f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryCompositeNode.htm#a4713adf3d38a8c9d986b5d0250ea868f">Deveel.Data.Sql.Parser.QueryCompositeNode.CompositeFunction</a></div><div class="ttdeci">string CompositeFunction</div><div class="ttdoc">Gets the function used to compose the two queries. </div><div class="ttdef"><b>Definition:</b> <a href="QueryCompositeNode_8cs_source.htm#l00035">QueryCompositeNode.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a82f187b53f76eb66f1737f3be20b26d7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a82f187b53f76eb66f1737f3be20b26d7">Deveel.Data.Sql.Parser.ExpressionBuilder.GetJoinType</a></div><div class="ttdeci">static JoinType GetJoinType(string typeName)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00139">ExpressionBuilder.cs:139</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm_a94a5079bbbd800dffcc9010cfad8c5b1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm#a94a5079bbbd800dffcc9010cfad8c5b1">Deveel.Data.Sql.ObjectName.Parse</a></div><div class="ttdeci">static ObjectName Parse(string s)</div><div class="ttdoc">Parses the given string into a ObjectName object. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00139">ObjectName.cs:139</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_aad7411fae637ffffa0e6de687b4e74db"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad7411fae637ffffa0e6de687b4e74db">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.IsAll</a></div><div class="ttdeci">bool IsAll</div><div class="ttdoc">Gets a boolean value indicating if the selection will return all columns from the sources specified i...</div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00034">SqlQueryExpressionNode.cs:34</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlUnaryExpressionNode_htm_a34c517c6084b8c6cc259ddc593633cdc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlUnaryExpressionNode.htm#a34c517c6084b8c6cc259ddc593633cdc">Deveel.Data.Sql.Parser.SqlUnaryExpressionNode.Operand</a></div><div class="ttdeci">IExpressionNode Operand</div><div class="ttdoc">Gets the argument of the operator. </div><div class="ttdef"><b>Definition:</b> <a href="SqlUnaryExpressionNode_8cs_source.htm#l00037">SqlUnaryExpressionNode.cs:37</a></div></div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a190b32bbe269e178bb69866170e55441"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a190b32bbe269e178bb69866170e55441">Deveel.Data.Sql.Expressions.SqlExpression.And</a></div><div class="ttdeci">static SqlBinaryExpression And(SqlExpression left, SqlExpression right)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00393">SqlExpression.cs:393</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a19507f51f60edc055a06d588a1515a4d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a19507f51f60edc055a06d588a1515a4d">Deveel.Data.Sql.Expressions.SqlExpression.SmallerOrEqualThan</a></div><div class="ttdeci">static SqlBinaryExpression SmallerOrEqualThan(SqlExpression left, SqlExpression right)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00369">SqlExpression.cs:369</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode_htm_a1a6812fb666f5f41018308524e45b442"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a1a6812fb666f5f41018308524e45b442">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.Right</a></div><div class="ttdeci">IExpressionNode Right</div><div class="ttdoc">Gets the right side argument of the expression. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBinaryExpressionNode_8cs_source.htm#l00036">SqlBinaryExpressionNode.cs:36</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a8e950a554c604a3dd8b2206aef88ffa8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a8e950a554c604a3dd8b2206aef88ffa8">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitConstantExpression</a></div><div class="ttdeci">static SqlExpression VisitConstantExpression(SqlConstantExpressionNode expressionNode)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00192">ExpressionBuilder.cs:192</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions_htm_adb07f7a341b1eda61ff53ddf48cfec81"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#adb07f7a341b1eda61ff53ddf48cfec81">Deveel.Data.Sql.Expressions.JoinType</a></div><div class="ttdeci">JoinType</div><div class="ttdoc">Enumerates the kind of group join in a selection query. </div><div class="ttdef"><b>Definition:</b> <a href="JoinType_8cs_source.htm#l00023">JoinType.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a3f457a5ac917694e1fc3405cce523457"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a3f457a5ac917694e1fc3405cce523457">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitBetweenExpression</a></div><div class="ttdeci">static SqlExpression VisitBetweenExpression(SqlBetweenExpressionNode expressionNode)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00222">ExpressionBuilder.cs:222</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromClauseNode_htm_acbfb8700a90e3a0fbd7e56713b65627a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromClauseNode.htm#acbfb8700a90e3a0fbd7e56713b65627a">Deveel.Data.Sql.Parser.FromClauseNode.Join</a></div><div class="ttdeci">JoinNode Join</div><div class="ttdef"><b>Definition:</b> <a href="FromClauseNode_8cs_source.htm#l00036">FromClauseNode.cs:36</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a8740fdd085bf4075243cfaffd4b48a33"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a8740fdd085bf4075243cfaffd4b48a33">Deveel.Data.Sql.Parser.ExpressionBuilder.GetSelectColumns</a></div><div class="ttdeci">static IEnumerable&lt; SelectColumn &gt; GetSelectColumns(SqlQueryExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00162">ExpressionBuilder.cs:162</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_a82c6e260b655b2aba403aaff5255cfe3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a82c6e260b655b2aba403aaff5255cfe3">Deveel.Data.Sql.Expressions.FromClause.AddTable</a></div><div class="ttdeci">void AddTable(string alias, FromTable table)</div><div class="ttdoc">Adds a table as source to the query with a given alias. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00093">FromClause.cs:93</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a5a2aa67765ef6439df4c9362e30be804"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a5a2aa67765ef6439df4c9362e30be804">Deveel.Data.Sql.Parser.ExpressionBuilder.GetCompositeFunction</a></div><div class="ttdeci">static CompositeFunction GetCompositeFunction(string s)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00095">ExpressionBuilder.cs:95</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode_htm_afea6b8c6ddedbc7a287c4d1a8a38ba7b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode.htm#afea6b8c6ddedbc7a287c4d1a8a38ba7b">Deveel.Data.Sql.Parser.JoinNode.NextJoin</a></div><div class="ttdeci">JoinNode NextJoin</div><div class="ttdef"><b>Definition:</b> <a href="Deveel_8Data_8Sql_8Parser_2JoinNode_8cs_source.htm#l00059">JoinNode.cs:59</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlUnaryExpressionNode_htm_a2b1ea7262c98a79419bf08c5ff31dff2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlUnaryExpressionNode.htm#a2b1ea7262c98a79419bf08c5ff31dff2">Deveel.Data.Sql.Parser.SqlUnaryExpressionNode.Operator</a></div><div class="ttdeci">string Operator</div><div class="ttdoc">Gets the string representation of the operator. </div><div class="ttdef"><b>Definition:</b> <a href="SqlUnaryExpressionNode_8cs_source.htm#l00032">SqlUnaryExpressionNode.cs:32</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1DataObject_htm_ab7a0cc04985bf71a052b6e67fdc38407"><div class="ttname"><a href="classDeveel_1_1Data_1_1DataObject.htm#ab7a0cc04985bf71a052b6e67fdc38407">Deveel.Data.DataObject.Number</a></div><div class="ttdeci">static DataObject Number(SqlNumber value)</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00552">DataObject.cs:552</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a17c231e2e2feab8bf0b534130086d072"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a17c231e2e2feab8bf0b534130086d072">Deveel.Data.Sql.Parser.ExpressionBuilder.Build</a></div><div class="ttdeci">static SqlExpression Build(IExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00027">ExpressionBuilder.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_a5539305f5692f0f373b31ba5737b974f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#a5539305f5692f0f373b31ba5737b974f">Deveel.Data.Sql.Expressions.FromClause.Join</a></div><div class="ttdeci">void Join(JoinType joinType, SqlExpression onExpression)</div><div class="ttdoc">Sets a join between the last added table and the one that preceeds it. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00154">FromClause.cs:154</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1DataObject_htm_ac5fb2a3cb95aa4344150cfa377ab95b2"><div class="ttname"><a href="classDeveel_1_1Data_1_1DataObject.htm#ac5fb2a3cb95aa4344150cfa377ab95b2">Deveel.Data.DataObject.Null</a></div><div class="ttdeci">static DataObject Null(SqlType type)</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00630">DataObject.cs:630</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode_htm_a2f456571a597f9e27d32f794f3c9ef58"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode.htm#a2f456571a597f9e27d32f794f3c9ef58">Deveel.Data.Sql.Parser.SqlBetweenExpressionNode.MinValue</a></div><div class="ttdeci">IExpressionNode MinValue</div><div class="ttdoc">Gets the minimum value (inclusive) that Expression must be to evaluate to true. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBetweenExpressionNode_8cs_source.htm#l00040">SqlBetweenExpressionNode.cs:40</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a39a249665c09f3eb9a52a7adc6c2ff6a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a39a249665c09f3eb9a52a7adc6c2ff6a">Deveel.Data.Sql.Expressions.SqlExpression.Tuple</a></div><div class="ttdeci">static SqlTupleExpression Tuple(SqlExpression[] expressions)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00553">SqlExpression.cs:553</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlUnaryExpressionNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlUnaryExpressionNode.htm">Deveel.Data.Sql.Parser.SqlUnaryExpressionNode</a></div><div class="ttdoc">An expression that encapsulates a unary operator for a given operand. </div><div class="ttdef"><b>Definition:</b> <a href="SqlUnaryExpressionNode_8cs_source.htm#l00025">SqlUnaryExpressionNode.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode.htm">Deveel.Data.Sql.Parser.SqlBetweenExpressionNode</a></div><div class="ttdoc">An SQL BETWEEN expression node that evaluates to true if the Expression given is between MinValue (in...</div><div class="ttdef"><b>Definition:</b> <a href="SqlBetweenExpressionNode_8cs_source.htm#l00026">SqlBetweenExpressionNode.cs:26</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Objects_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm">Deveel.Data.Sql.Objects</a></div><div class="ttdef"><b>Definition:</b> <a href="IObjectRef_8cs_source.htm#l00021">IObjectRef.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_ad70966bc00c62ca478374e07d8fb895b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ad70966bc00c62ca478374e07d8fb895b">Deveel.Data.Sql.Expressions.SqlExpression.VariableReference</a></div><div class="ttdeci">static SqlVariableReferenceExpression VariableReference(string varName)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00288">SqlExpression.cs:288</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1ObjectName_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1ObjectName.htm">Deveel.Data.Sql.ObjectName</a></div><div class="ttdoc">Describes the name of an object within a database. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectName_8cs_source.htm#l00044">ObjectName.cs:44</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm">Deveel.Data.Sql.Parser.ExpressionBuilder</a></div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00026">ExpressionBuilder.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromClauseNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromClauseNode.htm">Deveel.Data.Sql.Parser.FromClauseNode</a></div><div class="ttdoc">The node in an SQL query that defines the sources from which to retrieve the data queried...</div><div class="ttdef"><b>Definition:</b> <a href="FromClauseNode_8cs_source.htm#l00026">FromClauseNode.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlReferenceExpressionNode_htm_afae7b716a20d01cc69b3d8fee336dcac"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlReferenceExpressionNode.htm#afae7b716a20d01cc69b3d8fee336dcac">Deveel.Data.Sql.Parser.SqlReferenceExpressionNode.Reference</a></div><div class="ttdeci">ObjectNameNode Reference</div><div class="ttdoc">Gets the full name of the object references. </div><div class="ttdef"><b>Definition:</b> <a href="SqlReferenceExpressionNode_8cs_source.htm#l00031">SqlReferenceExpressionNode.cs:31</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression_htm_ac7cbbc395bfc2dffe1a492c0cafaf062"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm#ac7cbbc395bfc2dffe1a492c0cafaf062">Deveel.Data.Sql.Expressions.SqlQueryExpression.IsCompositeAll</a></div><div class="ttdeci">bool IsCompositeAll</div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpression_8cs_source.htm#l00073">SqlQueryExpression.cs:73</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode_htm_a94777d764dcd1b0f0ee011ab12a29c76"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode.htm#a94777d764dcd1b0f0ee011ab12a29c76">Deveel.Data.Sql.Parser.JoinNode.Source</a></div><div class="ttdeci">IFromSourceNode Source</div><div class="ttdef"><b>Definition:</b> <a href="Deveel_8Data_8Sql_8Parser_2JoinNode_8cs_source.htm#l00033">JoinNode.cs:33</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1DataObject_htm_ac879565bbf7572459c4a2e289fe4feb1"><div class="ttname"><a href="classDeveel_1_1Data_1_1DataObject.htm#ac879565bbf7572459c4a2e289fe4feb1">Deveel.Data.DataObject.Boolean</a></div><div class="ttdeci">static DataObject Boolean(SqlBoolean value)</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00544">DataObject.cs:544</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromQuerySourceNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromQuerySourceNode.htm">Deveel.Data.Sql.Parser.FromQuerySourceNode</a></div><div class="ttdoc">A node in the grammar tree that defines a sub-query in a FROM clause. </div><div class="ttdef"><b>Definition:</b> <a href="FromQuerySourceNode_8cs_source.htm#l00026">FromQuerySourceNode.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_aa1d7779eb8a8066b7295d92a32926dd6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aa1d7779eb8a8066b7295d92a32926dd6">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitFunctionCall</a></div><div class="ttdeci">static SqlExpression VisitFunctionCall(SqlFunctionCallExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00214">ExpressionBuilder.cs:214</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a1924d618a9bedd91fac16177086af7a4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a1924d618a9bedd91fac16177086af7a4">Deveel.Data.Sql.Expressions.SqlExpression.Not</a></div><div class="ttdeci">static SqlUnaryExpression Not(SqlExpression operand)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00534">SqlExpression.cs:534</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_aa6037e0d8ca8c53ee2935290e7b79263"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aa6037e0d8ca8c53ee2935290e7b79263">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitUnaryExpression</a></div><div class="ttdeci">static SqlExpression VisitUnaryExpression(SqlUnaryExpressionNode expressionNode)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00296">ExpressionBuilder.cs:296</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlConstantExpressionNode_htm_a8727840699159312d2b7316a77fd4543"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlConstantExpressionNode.htm#a8727840699159312d2b7316a77fd4543">Deveel.Data.Sql.Parser.SqlConstantExpressionNode.Value</a></div><div class="ttdeci">ISqlObject Value</div><div class="ttdoc">Gets an immutable instance of ISqlObject that represents the constant value. </div><div class="ttdef"><b>Definition:</b> <a href="SqlConstantExpressionNode_8cs_source.htm#l00034">SqlConstantExpressionNode.cs:34</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions_htm_a2cdcdc86afbc2d50cb1ec8e389598b4a"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm#a2cdcdc86afbc2d50cb1ec8e389598b4a">Deveel.Data.Sql.Expressions.SqlExpressionType</a></div><div class="ttdeci">SqlExpressionType</div><div class="ttdoc">All the possible type of SqlExpression supported </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpressionType_8cs_source.htm#l00023">SqlExpressionType.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlExpressionTupleNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlExpressionTupleNode.htm">Deveel.Data.Sql.Parser.SqlExpressionTupleNode</a></div><div class="ttdoc">An expression containing a set of other expressions. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpressionTupleNode_8cs_source.htm#l00024">SqlExpressionTupleNode.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlFunctionCallExpressionNode_htm_a1da57e06e77e67d823f9c1df92a0b2a2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlFunctionCallExpressionNode.htm#a1da57e06e77e67d823f9c1df92a0b2a2">Deveel.Data.Sql.Parser.SqlFunctionCallExpressionNode.FunctionName</a></div><div class="ttdeci">string FunctionName</div><div class="ttdoc">Gets the name of the function to be invoked. </div><div class="ttdef"><b>Definition:</b> <a href="SqlFunctionCallExpressionNode_8cs_source.htm#l00028">SqlFunctionCallExpressionNode.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a75b7fbda8ff8139acd1df3407537de4d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a75b7fbda8ff8139acd1df3407537de4d">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitReferenceExpression</a></div><div class="ttdeci">static SqlExpression VisitReferenceExpression(SqlReferenceExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00210">ExpressionBuilder.cs:210</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromTableSourceNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromTableSourceNode.htm">Deveel.Data.Sql.Parser.FromTableSourceNode</a></div><div class="ttdoc">Represents the node that is a database table as source of a query. </div><div class="ttdef"><b>Definition:</b> <a href="FromTableSourceNode_8cs_source.htm#l00025">FromTableSourceNode.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm_ae15ef55de3bf671faa9d37804621ad2c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm#ae15ef55de3bf671faa9d37804621ad2c">Deveel.Data.Sql.Expressions.FromClause.AddSubQuery</a></div><div class="ttdeci">void AddSubQuery(SqlQueryExpression subQuery)</div><div class="ttdoc">Adds a sub-query expression as source of the query. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00134">FromClause.cs:134</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_ada34a553b42bf992671bf261127212cb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ada34a553b42bf992671bf261127212cb">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitTupleExpression</a></div><div class="ttdeci">static SqlExpression VisitTupleExpression(SqlExpressionTupleNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00056">ExpressionBuilder.cs:56</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm">Deveel.Data.Sql.Parser.SqlQueryExpressionNode</a></div><div class="ttdoc">The root node of an expression used to select a set of items from a set of sources defined...</div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00026">SqlQueryExpressionNode.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlReferenceExpressionNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlReferenceExpressionNode.htm">Deveel.Data.Sql.Parser.SqlReferenceExpressionNode</a></div><div class="ttdoc">An expression node that references an object within the database context (such as a table...</div><div class="ttdef"><b>Definition:</b> <a href="SqlReferenceExpressionNode_8cs_source.htm#l00024">SqlReferenceExpressionNode.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlFunctionCallExpressionNode_htm_ac41e73dcabd65012d2d0bd512e51c418"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlFunctionCallExpressionNode.htm#ac41e73dcabd65012d2d0bd512e51c418">Deveel.Data.Sql.Parser.SqlFunctionCallExpressionNode.Arguments</a></div><div class="ttdeci">IEnumerable&lt; IExpressionNode &gt; Arguments</div><div class="ttdoc">Gets an optional read-only list of arguments to be passed to the function invoked. </div><div class="ttdef"><b>Definition:</b> <a href="SqlFunctionCallExpressionNode_8cs_source.htm#l00034">SqlFunctionCallExpressionNode.cs:34</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_aec6126d6fa502f1c14f684dc238cf3de"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#aec6126d6fa502f1c14f684dc238cf3de">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitCaseExpression</a></div><div class="ttdeci">static SqlExpression VisitCaseExpression(SqlCaseExpressionNode expressionNode)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00188">ExpressionBuilder.cs:188</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1FromClause.htm">Deveel.Data.Sql.Expressions.FromClause</a></div><div class="ttdoc">A container for the FROM clause of a select statement. </div><div class="ttdef"><b>Definition:</b> <a href="FromClause_8cs_source.htm#l00032">FromClause.cs:32</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Tables_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Tables.htm">Deveel.Data.Sql.Tables</a></div><div class="ttdef"><b>Definition:</b> <a href="BaseDataTable_8cs_source.htm#l00025">BaseDataTable.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a5e82449d0a4488fb015460319d08801f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a5e82449d0a4488fb015460319d08801f">Deveel.Data.Sql.Parser.ExpressionBuilder.AddSourceToClause</a></div><div class="ttdeci">static void AddSourceToClause(FromClause clause, IFromSourceNode source)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00124">ExpressionBuilder.cs:124</a></div></div>
<div class="ttc" id="namespaceSqlString_htm"><div class="ttname"><a href="namespaceSqlString.htm">SqlString</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a4b8fca0349dd8ec2ff489ab0f6058e57"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a4b8fca0349dd8ec2ff489ab0f6058e57">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitVariableRefExpression</a></div><div class="ttdeci">static SqlExpression VisitVariableRefExpression(SqlVariableRefExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00052">ExpressionBuilder.cs:52</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryCompositeNode_htm_ace1a0f1f22627df9910f45923fc41ed3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryCompositeNode.htm#ace1a0f1f22627df9910f45923fc41ed3">Deveel.Data.Sql.Parser.QueryCompositeNode.QueryExpression</a></div><div class="ttdeci">SqlQueryExpressionNode QueryExpression</div><div class="ttdoc">Gets the other query to compose the results. </div><div class="ttdef"><b>Definition:</b> <a href="QueryCompositeNode_8cs_source.htm#l00046">QueryCompositeNode.cs:46</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GroupByNode_htm_a56aa6049b3fd8c104d7460603e75fdaa"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GroupByNode.htm#a56aa6049b3fd8c104d7460603e75fdaa">Deveel.Data.Sql.Parser.GroupByNode.HavingExpression</a></div><div class="ttdeci">IExpressionNode HavingExpression</div><div class="ttdoc">Gets the HAVING expression used to filter the grouped results. </div><div class="ttdef"><b>Definition:</b> <a href="GroupByNode_8cs_source.htm#l00037">GroupByNode.cs:37</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1DataObject_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1DataObject.htm">Deveel.Data.DataObject</a></div><div class="ttdoc">Represents a dynamic object that encapsulates a defined SqlType and a compatible constant ISqlObject ...</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00035">DataObject.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_abadce8d7a727a15038dcf001b2005a06"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#abadce8d7a727a15038dcf001b2005a06">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.SelectItems</a></div><div class="ttdeci">IEnumerable&lt; SelectItemNode &gt; SelectItems</div><div class="ttdoc">Gets a read-only list of items that will be returned by the query. </div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00048">SqlQueryExpressionNode.cs:48</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SelectColumn_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SelectColumn.htm">Deveel.Data.Sql.Expressions.SelectColumn</a></div><div class="ttdoc">Represents a column selected to be in the output of a select statement. </div><div class="ttdef"><b>Definition:</b> <a href="SelectColumn_8cs_source.htm#l00031">SelectColumn.cs:31</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlVariableRefExpressionNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlVariableRefExpressionNode.htm">Deveel.Data.Sql.Parser.SqlVariableRefExpressionNode</a></div><div class="ttdoc">References a variable within a SQL execution context. </div><div class="ttdef"><b>Definition:</b> <a href="SqlVariableRefExpressionNode_8cs_source.htm#l00023">SqlVariableRefExpressionNode.cs:23</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IFromSourceNode_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IFromSourceNode.htm">Deveel.Data.Sql.Parser.IFromSourceNode</a></div><div class="ttdoc">Defines the base contract of the source of a query. </div><div class="ttdef"><b>Definition:</b> <a href="IFromSourceNode_8cs_source.htm#l00028">IFromSourceNode.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ObjectNameNode_htm_a3f7d9dc76ef174ce0203f564c0fbd287"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ObjectNameNode.htm#a3f7d9dc76ef174ce0203f564c0fbd287">Deveel.Data.Sql.Parser.ObjectNameNode.Name</a></div><div class="ttdeci">string Name</div><div class="ttdoc">The full object name as composed from the input SQL string analyzed. </div><div class="ttdef"><b>Definition:</b> <a href="ObjectNameNode_8cs_source.htm#l00040">ObjectNameNode.cs:40</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GroupByNode_htm_a2836289b96c08adc680ccbf8b2b13153"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1GroupByNode.htm#a2836289b96c08adc680ccbf8b2b13153">Deveel.Data.Sql.Parser.GroupByNode.GroupExpressions</a></div><div class="ttdeci">IEnumerable&lt; IExpressionNode &gt; GroupExpressions</div><div class="ttdoc">Gets the expression node to group the results. </div><div class="ttdef"><b>Definition:</b> <a href="GroupByNode_8cs_source.htm#l00032">GroupByNode.cs:32</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1IdentifierNode_htm_accf90e8962b2589e3c9776e8855c5370"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1IdentifierNode.htm#accf90e8962b2589e3c9776e8855c5370">Deveel.Data.Sql.Parser.IdentifierNode.Text</a></div><div class="ttdeci">string Text</div><div class="ttdoc">Gets the textual content of the identifier. </div><div class="ttdef"><b>Definition:</b> <a href="IdentifierNode_8cs_source.htm#l00035">IdentifierNode.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlVariableRefExpressionNode_htm_ae3208a1683ec041b762d88046eaa4bfe"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlVariableRefExpressionNode.htm#ae3208a1683ec041b762d88046eaa4bfe">Deveel.Data.Sql.Parser.SqlVariableRefExpressionNode.Variable</a></div><div class="ttdeci">string Variable</div><div class="ttdoc">Gets the name of the variable to reference. </div><div class="ttdef"><b>Definition:</b> <a href="SqlVariableRefExpressionNode_8cs_source.htm#l00030">SqlVariableRefExpressionNode.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a193abdb690da82103291812dff537615"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a193abdb690da82103291812dff537615">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitBinaryExpression</a></div><div class="ttdeci">static SqlExpression VisitBinaryExpression(SqlBinaryExpressionNode expressionNode)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00238">ExpressionBuilder.cs:238</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1DataObject_htm_a7c7678b1d7ecea444953e695f6c2c711"><div class="ttname"><a href="classDeveel_1_1Data_1_1DataObject.htm#a7c7678b1d7ecea444953e695f6c2c711">Deveel.Data.DataObject.VarChar</a></div><div class="ttdeci">static DataObject VarChar(string s)</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00622">DataObject.cs:622</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode.htm">Deveel.Data.Sql.Parser.JoinNode</a></div><div class="ttdoc">A node describing the JOIN between two sources within a query. </div><div class="ttdef"><b>Definition:</b> <a href="Deveel_8Data_8Sql_8Parser_2JoinNode_8cs_source.htm#l00029">JoinNode.cs:29</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_ae156d20cfeacf58f17be212fff1e8dd8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ae156d20cfeacf58f17be212fff1e8dd8">Deveel.Data.Sql.Parser.ExpressionBuilder.SetFromClause</a></div><div class="ttdeci">static void SetFromClause(FromClause clause, FromClauseNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00158">ExpressionBuilder.cs:158</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromClauseNode_htm_a674e57666a006e8013a935911e1a3421"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1FromClauseNode.htm#a674e57666a006e8013a935911e1a3421">Deveel.Data.Sql.Parser.FromClauseNode.Source</a></div><div class="ttdeci">IFromSourceNode Source</div><div class="ttdoc">Gets a read-only list of sources for the query. </div><div class="ttdef"><b>Definition:</b> <a href="FromClauseNode_8cs_source.htm#l00034">FromClauseNode.cs:34</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryCompositeNode_htm_ad233ed6a2a26c3a8d36b5ed28a2b81c2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1QueryCompositeNode.htm#ad233ed6a2a26c3a8d36b5ed28a2b81c2">Deveel.Data.Sql.Parser.QueryCompositeNode.IsAll</a></div><div class="ttdeci">bool IsAll</div><div class="ttdoc">Gets a boolean value indicating whether the composition will be done on all records. </div><div class="ttdef"><b>Definition:</b> <a href="QueryCompositeNode_8cs_source.htm#l00041">QueryCompositeNode.cs:41</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_ae3792af713778beb017f2ed55e219e86"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ae3792af713778beb017f2ed55e219e86">Deveel.Data.Sql.Expressions.SqlExpression.Reference</a></div><div class="ttdeci">static SqlReferenceExpression Reference(ObjectName objectName)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00284">SqlExpression.cs:284</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_ab1734cefb0a5e0a1b2aeb4d78bd1aaa7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ab1734cefb0a5e0a1b2aeb4d78bd1aaa7">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.GroupBy</a></div><div class="ttdeci">GroupByNode GroupBy</div><div class="ttdoc">Gets an optional clause used to group and filter the results of a query. </div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00064">SqlQueryExpressionNode.cs:64</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IFromSourceNode_htm_a1636a470ad3df63a1c0e3a3964846dd8"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IFromSourceNode.htm#a1636a470ad3df63a1c0e3a3964846dd8">Deveel.Data.Sql.Parser.IFromSourceNode.Alias</a></div><div class="ttdeci">IdentifierNode Alias</div><div class="ttdoc">Gets an alias that uniquely identifies the source within a query context. </div><div class="ttdef"><b>Definition:</b> <a href="IFromSourceNode_8cs_source.htm#l00037">IFromSourceNode.cs:37</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_a19229b7fe935dda0a342d5032bedc032"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#a19229b7fe935dda0a342d5032bedc032">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.WhereExpression</a></div><div class="ttdeci">IExpressionNode WhereExpression</div><div class="ttdoc">Gets an optional clause that is used to filter the queried objects. </div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00058">SqlQueryExpressionNode.cs:58</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode_htm_a4aae1dcafdcb9dee95f9cd9e3581343c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#a4aae1dcafdcb9dee95f9cd9e3581343c">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.Left</a></div><div class="ttdeci">IExpressionNode Left</div><div class="ttdoc">Gets the left side argument of the expression. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBinaryExpressionNode_8cs_source.htm#l00031">SqlBinaryExpressionNode.cs:31</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode_htm_ab05d2c0599f9a925e4399b6beb639268"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode.htm#ab05d2c0599f9a925e4399b6beb639268">Deveel.Data.Sql.Parser.JoinNode.JoinType</a></div><div class="ttdeci">string JoinType</div><div class="ttdoc">Gets the type of join, as a string that will be operated between the two sources </div><div class="ttdef"><b>Definition:</b> <a href="Deveel_8Data_8Sql_8Parser_2JoinNode_8cs_source.htm#l00057">JoinNode.cs:57</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode_htm_a9da6b0f6910d7097b7ed4b5e9b30e2d2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode.htm#a9da6b0f6910d7097b7ed4b5e9b30e2d2">Deveel.Data.Sql.Parser.SqlBetweenExpressionNode.MaxValue</a></div><div class="ttdeci">IExpressionNode MaxValue</div><div class="ttdoc">Gets the maximum value (inclusive) that Expression must be to evaluate to true. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBetweenExpressionNode_8cs_source.htm#l00046">SqlBetweenExpressionNode.cs:46</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode_htm_a09425cdae3309a81cb37e6fb0222fd26"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1JoinNode.htm#a09425cdae3309a81cb37e6fb0222fd26">Deveel.Data.Sql.Parser.JoinNode.OnExpression</a></div><div class="ttdeci">IExpressionNode OnExpression</div><div class="ttdoc">Gets the expression used as condition for creating the joined group in a query. </div><div class="ttdef"><b>Definition:</b> <a href="Deveel_8Data_8Sql_8Parser_2JoinNode_8cs_source.htm#l00043">JoinNode.cs:43</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm_a43a8483ef91b1611fe44f265383656b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm#a43a8483ef91b1611fe44f265383656b1">Deveel.Data.Sql.CompositeFunction</a></div><div class="ttdeci">CompositeFunction</div><div class="ttdoc">The kind of composite function in a CompositeTable. </div><div class="ttdef"><b>Definition:</b> <a href="CompositeFunction_8cs_source.htm#l00025">CompositeFunction.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_ad5bd15eb16058f78c184625a44fffde8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#ad5bd15eb16058f78c184625a44fffde8">Deveel.Data.Sql.Expressions.SqlExpression.Binary</a></div><div class="ttdeci">static SqlBinaryExpression Binary(SqlExpression left, SqlExpressionType expressionType, SqlExpression right)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00304">SqlExpression.cs:304</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a6c50824c8850b0a8c4f0e6ca70d447cc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a6c50824c8850b0a8c4f0e6ca70d447cc">Deveel.Data.Sql.Parser.ExpressionBuilder.GetBinaryExpressionType</a></div><div class="ttdeci">static SqlExpressionType GetBinaryExpressionType(string op)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00248">ExpressionBuilder.cs:248</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">Deveel.Data.Sql.Expressions.SqlExpression</a></div><div class="ttdoc">Defines the base class for instances that represent SQL expression tree nodes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00035">SqlExpression.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlConstantExpressionNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlConstantExpressionNode.htm">Deveel.Data.Sql.Parser.SqlConstantExpressionNode</a></div><div class="ttdoc">An node that represents a constant value set within a context of an SQL command. </div><div class="ttdef"><b>Definition:</b> <a href="SqlConstantExpressionNode_8cs_source.htm#l00026">SqlConstantExpressionNode.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a78749d3e57bb42c82189114d3c0887c8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a78749d3e57bb42c82189114d3c0887c8">Deveel.Data.Sql.Expressions.SqlExpression.Constant</a></div><div class="ttdeci">static SqlConstantExpression Constant(object value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00256">SqlExpression.cs:256</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_ac3929f3d580d0e3c75f30630cf479712"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#ac3929f3d580d0e3c75f30630cf479712">Deveel.Data.Sql.Parser.ExpressionBuilder.SetFromTableInClause</a></div><div class="ttdeci">static void SetFromTableInClause(FromClause clause, IFromSourceNode source, JoinNode join)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00106">ExpressionBuilder.cs:106</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode_htm_ad5125dcee1ece1c77801f0e597a70a94"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm#ad5125dcee1ece1c77801f0e597a70a94">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode.Operator</a></div><div class="ttdeci">string Operator</div><div class="ttdoc">Gets the binary operator that will be used to evaluate the final result. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBinaryExpressionNode_8cs_source.htm#l00054">SqlBinaryExpressionNode.cs:54</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode_htm_abb530bce1dc1230326126446261a9c40"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode.htm#abb530bce1dc1230326126446261a9c40">Deveel.Data.Sql.Parser.SqlBetweenExpressionNode.Expression</a></div><div class="ttdeci">IExpressionNode Expression</div><div class="ttdoc">Gets the expression to be tested against MinValue and MaxValue. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBetweenExpressionNode_8cs_source.htm#l00034">SqlBetweenExpressionNode.cs:34</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a36c8e682aa362e44b316c8797f3f9564"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a36c8e682aa362e44b316c8797f3f9564">Deveel.Data.Sql.Expressions.SqlExpression.FunctionCall</a></div><div class="ttdeci">static SqlFunctionCallExpression FunctionCall(ObjectName functionName)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00268">SqlExpression.cs:268</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm">Deveel.Data.Sql</a></div><div class="ttdef"><b>Definition:</b> <a href="CellId_8cs_source.htm#l00022">CellId.cs:22</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm">Deveel.Data.Sql.Expressions</a></div><div class="ttdef"><b>Definition:</b> <a href="AggregateChecker_8cs_source.htm#l00022">AggregateChecker.cs:22</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">Deveel.Data.Sql.Objects.SqlNumber</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00024">SqlNumber.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder_htm_a2f7897cf019eeeec668e2a6acc0c8d0a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1ExpressionBuilder.htm#a2f7897cf019eeeec668e2a6acc0c8d0a">Deveel.Data.Sql.Parser.ExpressionBuilder.VisitQueryExpression</a></div><div class="ttdeci">static SqlExpression VisitQueryExpression(SqlQueryExpressionNode node)</div><div class="ttdef"><b>Definition:</b> <a href="ExpressionBuilder_8cs_source.htm#l00060">ExpressionBuilder.cs:60</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IExpressionNode_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1IExpressionNode.htm">Deveel.Data.Sql.Parser.IExpressionNode</a></div><div class="ttdoc">This interface acts like a marker that indicates if a ISqlNode represents a SQL expression. </div><div class="ttdef"><b>Definition:</b> <a href="IExpressionNode_8cs_source.htm#l00024">IExpressionNode.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlQueryExpression.htm">Deveel.Data.Sql.Expressions.SqlQueryExpression</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpression_8cs_source.htm#l00025">SqlQueryExpression.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBinaryExpressionNode.htm">Deveel.Data.Sql.Parser.SqlBinaryExpressionNode</a></div><div class="ttdoc">Represents an expression that evaluates between two other expressions. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBinaryExpressionNode_8cs_source.htm#l00025">SqlBinaryExpressionNode.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlExpressionTupleNode_htm_a3b0f3994b6bcc68901d5ba795939affd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlExpressionTupleNode.htm#a3b0f3994b6bcc68901d5ba795939affd">Deveel.Data.Sql.Parser.SqlExpressionTupleNode.Expressions</a></div><div class="ttdeci">IEnumerable&lt; IExpressionNode &gt; Expressions</div><div class="ttdoc">Gets a read-only list of expression that are contained within this tuple. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpressionTupleNode_8cs_source.htm#l00036">SqlExpressionTupleNode.cs:36</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlFunctionCallExpressionNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlFunctionCallExpressionNode.htm">Deveel.Data.Sql.Parser.SqlFunctionCallExpressionNode</a></div><div class="ttdoc">A node in a SQL command tree that is used to request a function. </div><div class="ttdef"><b>Definition:</b> <a href="SqlFunctionCallExpressionNode_8cs_source.htm#l00024">SqlFunctionCallExpressionNode.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a018364702d4130a75ffe5a1d046e8f29"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a018364702d4130a75ffe5a1d046e8f29">Deveel.Data.Sql.Expressions.SqlExpression.Unary</a></div><div class="ttdeci">static SqlUnaryExpression Unary(SqlExpressionType expressionType, SqlExpression operand)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00523">SqlExpression.cs:523</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a6160a8dfa2206e5bba032be177e5b769"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a6160a8dfa2206e5bba032be177e5b769">Deveel.Data.Sql.Expressions.SqlExpression.GreaterOrEqualThan</a></div><div class="ttdeci">static SqlBinaryExpression GreaterOrEqualThan(SqlExpression left, SqlExpression right)</div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00373">SqlExpression.cs:373</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode_htm_a02facf3efd19e4d31f3eb99b6cadaa38"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlBetweenExpressionNode.htm#a02facf3efd19e4d31f3eb99b6cadaa38">Deveel.Data.Sql.Parser.SqlBetweenExpressionNode.Not</a></div><div class="ttdeci">bool Not</div><div class="ttdef"><b>Definition:</b> <a href="SqlBetweenExpressionNode_8cs_source.htm#l00048">SqlBetweenExpressionNode.cs:48</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_ad470be00dbaaf9b2a35fa2f02018fa05"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#ad470be00dbaaf9b2a35fa2f02018fa05">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.FromClause</a></div><div class="ttdeci">FromClauseNode FromClause</div><div class="ttdoc">Gets the clause defining the sources from where to query. </div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00053">SqlQueryExpressionNode.cs:53</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode_htm_aad7f26334bffc3439d10fbf94714658d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlQueryExpressionNode.htm#aad7f26334bffc3439d10fbf94714658d">Deveel.Data.Sql.Parser.SqlQueryExpressionNode.Composite</a></div><div class="ttdeci">QueryCompositeNode Composite</div><div class="ttdoc">Gets an optional definition for a composition between this query and another. </div><div class="ttdef"><b>Definition:</b> <a href="SqlQueryExpressionNode_8cs_source.htm#l00071">SqlQueryExpressionNode.cs:71</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlCaseExpressionNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlCaseExpressionNode.htm">Deveel.Data.Sql.Parser.SqlCaseExpressionNode</a></div><div class="ttdoc">An SQL node describing an in-line CASE conditional expression. </div><div class="ttdef"><b>Definition:</b> <a href="SqlCaseExpressionNode_8cs_source.htm#l00025">SqlCaseExpressionNode.cs:25</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
