<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Protocol/Processor.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_02e926e2c318bb7407624268db028ff1.htm">Deveel.Data.Protocol</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Processor.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="Processor_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2014 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Data;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.IO;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Reflection;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Text;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Client.htm">Client</a>;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Configuration.htm">Configuration</a>;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Control.htm">Control</a>;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.DbSystem;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a>;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Util.htm">Util</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Diagnostics.htm">Diagnostics</a>;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Protocol {</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm">   41</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm">Processor</a> : IDisposable {</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a51b9ec0741da951c4e5616320fb70a65">   45</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">int</span> ServerVersion = 1;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a85fe40529d554001986ead6dc4ee0ddb">   50</a></span>&#160;        <span class="keyword">private</span> ClientConnectionState <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a85fe40529d554001986ead6dc4ee0ddb">state</a>;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a4685987f382736d486d9a8f5cc72eb73">   55</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a4685987f382736d486d9a8f5cc72eb73">authenticationTries</a>;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab08c677faf5509b36ebeb272dbdea2d5">   57</a></span>&#160;        <span class="keyword">private</span> readonly <span class="keywordtype">string</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab08c677faf5509b36ebeb272dbdea2d5">hostString</a>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">   59</a></span>&#160;        <span class="keyword">private</span> readonly DbController <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">controller</a>;</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a87f6a6465602be448530fb2ade194f2b">   60</a></span>&#160;        <span class="keyword">private</span> readonly Dictionary&lt;string, DatabaseInterface&gt; <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a87f6a6465602be448530fb2ade194f2b">dbInterfaces</a>;</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">   61</a></span>&#160;        <span class="keyword">private</span> DatabaseInterface <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">dbInterface</a>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a2e8068c3832a73b39a5d2c10a9da55ba">   63</a></span>&#160;        <span class="keyword">protected</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a2e8068c3832a73b39a5d2c10a9da55ba">Processor</a>(DbController controller, <span class="keywordtype">string</span> hostString) {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            this.hostString = hostString;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            dbInterfaces = <span class="keyword">new</span> Dictionary&lt;string, DatabaseInterface&gt;();</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            this.controller = controller;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            state = 0;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            authenticationTries = 0;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            dbCallback = OnDatabaseEvent;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0eb22af9caca9751b3837adbe7a3b129">   72</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0eb22af9caca9751b3837adbe7a3b129">OnDatabaseEvent</a>(<span class="keywordtype">int</span> eventType, String eventMessage) {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                <span class="comment">// Format the call back and send the event.</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                MemoryStream bout = <span class="keyword">new</span> MemoryStream();</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                BinaryWriter dout = <span class="keyword">new</span> BinaryWriter(bout, Encoding.Unicode);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                dout.Write(eventType);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                dout.Write(eventMessage);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                SendEvent(bout.ToArray());</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            } <span class="keywordflow">catch</span> (IOException e) {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                controller.Logger.Error(<span class="keyword">this</span>, <span class="stringliteral">&quot;IO Error: &quot;</span> + e.Message);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                controller.Logger.Error(<span class="keyword">this</span>, e);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0129fb04066c23a1f1b42a4218b42ab3">   90</a></span>&#160;        <span class="keyword">private</span> readonly <a class="code" href="namespaceDeveel_1_1Data_1_1Protocol.htm#afb4421f156bc5f10909c84bbf205a03c">DatabaseEventCallback</a> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0129fb04066c23a1f1b42a4218b42ab3">dbCallback</a>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab26b468a6fee9411d7278b546b06befd">   92</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab26b468a6fee9411d7278b546b06befd">ChangeDatabaseInterface</a>(IDbConfig config, <span class="keywordtype">string</span> databaseName) {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keywordflow">if</span> (!controller.DatabaseExists(config, databaseName))</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            DatabaseInterface dbi;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">if</span> (!dbInterfaces.TryGetValue(databaseName, out dbi)) {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                dbi = <span class="keyword">new</span> DatabaseInterface(controller, databaseName, hostString);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                dbInterfaces[databaseName] = dbi;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            }</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Database.htm">Database</a> = controller.GetDatabase(databaseName);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            dbInterface = dbi;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a648a81dc9cad14071959026995a4bb99">  115</a></span>&#160;        <span class="keyword">protected</span> byte[] <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a648a81dc9cad14071959026995a4bb99">ProcessCommand</a>(byte[] command) {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keywordflow">if</span> (state == ClientConnectionState.Closed) {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                <span class="comment">// State 0 means we looking for the header...</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                BinaryReader reader = <span class="keyword">new</span> BinaryReader(<span class="keyword">new</span> MemoryStream(command), Encoding.ASCII);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                <span class="comment">/*</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">                int magic = ByteBuffer.ReadInt4(Query, 0);</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">                // The driver version number</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">                int maj_ver = ByteBuffer.ReadInt4(Query, 4);</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">                int min_ver = ByteBuffer.ReadInt4(Query, 8);</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">                */</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                reader.ReadInt32();     <span class="comment">// magic</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                reader.ReadInt32();     <span class="comment">// server major version</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                reader.ReadInt32();     <span class="comment">// server minor version</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <span class="keywordtype">string</span> databaseName = reader.ReadString();</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                <span class="keywordflow">if</span> (!ChangeDatabaseInterface(controller.Config, databaseName))</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                    <span class="keywordflow">return</span> Single(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#ab835dd21bb38856b6345691f1ed3867d">DatabaseNotFound</a>);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                Version version = Assembly.GetExecutingAssembly().GetName().Version;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                byte[] ackCommand = <span class="keyword">new</span> byte[4 + 1 + 4 + 4 + 1];</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                <span class="comment">// Send back an acknowledgement and the version number of the server</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">WriteInteger</a>(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#abf40df1a48371301de9e17a62fc0d660">Acknowledgement</a>, ackCommand, 0);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                ackCommand[4] = 1;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">WriteInteger</a>(version.Major, ackCommand, 5);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">WriteInteger</a>(version.Minor, ackCommand, 9);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                ackCommand[13] = 0;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                <span class="comment">// Set to the next state.</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                state = ClientConnectionState.NotAuthenticated;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                <span class="comment">// Return the acknowledgement</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <span class="keywordflow">return</span> ackCommand;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="keywordflow">if</span> (state == ClientConnectionState.NotAuthenticated) {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                <span class="comment">// State 4 means we looking for username and password...</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                MemoryStream input = <span class="keyword">new</span> MemoryStream(command);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                BinaryReader reader = <span class="keyword">new</span> BinaryReader(input, Encoding.ASCII);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <span class="keywordtype">string</span> defaultSchema = reader.ReadString();</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                <span class="keywordtype">string</span> username = reader.ReadString();</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                <span class="keywordtype">string</span> password = reader.ReadString();</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                    <span class="keywordflow">if</span> (!dbInterface.Login(defaultSchema, username, password, dbCallback)) {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                        <span class="comment">// Close after 12 tries.</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                        <span class="keywordflow">if</span> (authenticationTries &gt;= 12) {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                            Close();</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                            ++authenticationTries;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                            <span class="keywordflow">return</span> Single(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#aa00102c815ce6111a4bfc6c53cd9ceef">UserAuthenticationFailed</a>);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                        }</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                        state = ClientConnectionState.Processing;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                        <span class="keywordflow">return</span> Single(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#affb90384d65f9657d06c7b45a6b23eae">UserAuthenticationPassed</a>);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                    }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                } <span class="keywordflow">catch</span> (DataException) {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            }</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="keywordflow">if</span> (state == ClientConnectionState.Processing)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                <span class="comment">// Process the query</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                <span class="keywordflow">return</span> ProcessQuery(command);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Illegal state: &quot;</span> + state);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        }</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a63dabc4aa3dcd94cd56f1b1906cc72fc">  192</a></span>&#160;        <span class="keyword">protected</span> ClientConnectionState ClientState {</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> state; }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        }</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a47ff272705aa96ad1db8e79209bb2e7e">  202</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> byte[] <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a47ff272705aa96ad1db8e79209bb2e7e">Single</a>(<span class="keywordtype">int</span> val) {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            byte[] buf = <span class="keyword">new</span> byte[4];</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">WriteInteger</a>(val, buf, 0);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">return</span> buf;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        }</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">  214</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> byte[] <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Exception</a>(<span class="keywordtype">int</span> dispatchId, DataException e) {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keywordtype">int</span> code = <span class="comment">/* TODO: e.ErrorCode */</span> -1;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keywordtype">string</span> msg = e.Message;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="keywordflow">if</span> (String.IsNullOrEmpty(msg))</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                msg = <span class="stringliteral">&quot;NULL exception message&quot;</span>;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keywordtype">string</span> server_msg = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            <span class="keywordtype">string</span> stack_trace = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="keywordflow">if</span> (e is DbDataException) {</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                DbDataException me = (DbDataException)e;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                server_msg = me.ServerErrorMessage;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                stack_trace = me.ServerErrorStackTrace;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                stack_trace = e.StackTrace;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            MemoryStream output = <span class="keyword">new</span> MemoryStream();</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            BinaryWriter writer = <span class="keyword">new</span> BinaryWriter(output, Encoding.Unicode);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            writer.Write(dispatchId);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            writer.Write(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a1dad73c642c4c0647c9799609eb73032">Exception</a>);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            writer.Write(code);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            writer.Write(msg);</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            writer.Write(stack_trace);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            <span class="keywordflow">return</span> output.ToArray();</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        }</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#abc955cad267890c308011cf97abe4c0c">  248</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> byte[] <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#abc955cad267890c308011cf97abe4c0c">SimpleSuccess</a>(<span class="keywordtype">int</span> dispatchId) {</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            byte[] buf = <span class="keyword">new</span> byte[8];</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">WriteInteger</a>(dispatchId, buf, 0);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">WriteInteger</a>(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a9f09bd58257f84b018a51a2563841501">Success</a>, buf, 4);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <span class="keywordflow">return</span> buf;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        }</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div>
<div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a3a5e705d687fef6f59417fffff835da2">  260</a></span>&#160;        <span class="keyword">private</span> byte[] <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a3a5e705d687fef6f59417fffff835da2">ProcessQuery</a>(byte[] command) {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            byte[] result;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="comment">// The first int is the Query.</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="keywordtype">int</span> ins = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 0);</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            <span class="comment">// Otherwise must be a dispatch type request.</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="comment">// The second is the dispatch id.</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            <span class="keywordtype">int</span> dispatchId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 4);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <span class="keywordflow">if</span> (dispatchId == -1)</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Special case dispatch id of -1 in query&quot;</span>);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <span class="keywordflow">if</span> (ins == <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a24875424a1d8819c05ec29fddea6ef7d">ChangeDatabase</a>) {</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                result = ChangeDatabase(dispatchId, command);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ins == <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#aed17c629f7c6ec9b35b70d6ef4732653">ResultSection</a>) {</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                result = ResultSection(dispatchId, command);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ins == <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a4b702f47ebd2e6e2a8d779a8981c2f38">Query</a>) {</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                result = QueryCommand(dispatchId, command);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ins == <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a2699a6e294646f35a96189074ce33633">PushStreamableObjectPart</a>) {</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                result = PushStreamableObjectPart(dispatchId, command);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ins == <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a6a680686864ac3329f3e02a76f401acf">DisposeResult</a>) {</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                result = DisposeResult(dispatchId, command);</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ins == <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#ad934166b70f89d2a40b08c0a57a1b961">StreamableObjectSection</a>) {</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                result = StreamableObjectSection(dispatchId, command);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ins == <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a36649355a94068f7269c6c27a483095f">DisposeStreamableObject</a>) {</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                result = DisposeStreamableObject(dispatchId, command);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ins == <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a6dbbfe8e09cb6f863940b3f8a8a06343">Close</a>) {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                Close();</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                result = null;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;Query (&quot;</span> + ins + <span class="stringliteral">&quot;) not understood.&quot;</span>);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            }</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        }</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a4cb3591c932ae050152cf36489698316">  301</a></span>&#160;        <span class="keyword">protected</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a4cb3591c932ae050152cf36489698316">Dispose</a>(<span class="keywordtype">bool</span> disposing) {</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="keywordflow">if</span> (disposing) {</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                    <span class="keywordflow">if</span> (dbInterfaces.Count &gt; 0) {</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                        <span class="keywordflow">foreach</span> (DatabaseInterface databaseInterface <span class="keywordflow">in</span> dbInterfaces.Values) {</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                            databaseInterface.Dispose();</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                        }</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                    }</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                    dbInterfaces.Clear();</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                } <span class="keywordflow">catch</span> (Exception e) {</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                    controller.Logger.Error(<span class="keyword">this</span>, e);</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                }</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            }</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        }</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="comment">// ---------- Primitive _queries ----------</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div>
<div class="line"><a name="l00319"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ac322164f492eed402ef2886a7ccd3de4">  319</a></span>&#160;        <span class="keyword">private</span> byte [] <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ac322164f492eed402ef2886a7ccd3de4">ChangeDatabase</a>(<span class="keywordtype">int</span> dispatchId, byte[] command) {</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            <span class="comment">// Read the query from the Query.</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            MemoryStream input = <span class="keyword">new</span> MemoryStream(command, 8, command.Length - 8);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            BinaryReader reader = <span class="keyword">new</span> BinaryReader(input, Encoding.Unicode);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;            <span class="keywordtype">string</span> databaseName = reader.ReadString();</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                dbInterface.ChangeDatabase(databaseName);</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                state = ClientConnectionState.NotAuthenticated;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                <span class="keywordflow">return</span> SimpleSuccess(dispatchId);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            } <span class="keywordflow">catch</span> (DataException e) {</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                <span class="keywordflow">return</span> Exception(dispatchId, e);</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            }</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        }</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div>
<div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#aa5c8ed7855932a8e138c19517a31feaf">  346</a></span>&#160;        <span class="keyword">private</span> byte[] <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#aa5c8ed7855932a8e138c19517a31feaf">QueryCommand</a>(<span class="keywordtype">int</span> dispatchId, byte[] command) {</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            <span class="comment">// Read the query from the Query.</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            MemoryStream input = <span class="keyword">new</span> MemoryStream(command, 8, command.Length - 8);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            BinaryReader reader = <span class="keyword">new</span> BinaryReader(input, Encoding.Unicode);</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1SqlQuery.htm">SqlQuery</a> query = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1SqlQuery.htm">SqlQuery</a>.ReadFrom(reader);</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                <span class="comment">// Do the query</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                <a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IQueryResponse.htm">IQueryResponse</a> response = dbInterface.ExecuteQuery(query)[0];</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                <span class="comment">// Prepare the stream to output the response to,</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                MemoryStream output = <span class="keyword">new</span> MemoryStream();</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                BinaryWriter writer = <span class="keyword">new</span> BinaryWriter(output, Encoding.Unicode);</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                writer.Write(dispatchId);</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                writer.Write(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a9f09bd58257f84b018a51a2563841501">Success</a>);</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                <span class="comment">// The response sends the result id, the time the query took, the</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                <span class="comment">// total row count, and description of each column in the result.</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                writer.Write(response.<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IQueryResponse.htm#ad3bbd1db3c1929cc1955afbd7fb995f1">ResultId</a>);</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                writer.Write(response.<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IQueryResponse.htm#a4b8db8276e1605b1427eb2d947b5b365">QueryTimeMillis</a>);</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                writer.Write(response.<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IQueryResponse.htm#a5723eaa5baafc466ac3151494d022266">RowCount</a>);</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                <span class="keywordtype">int</span> colCount = response.<a class="code" href="interfaceDeveel_1_1Data_1_1Protocol_1_1IQueryResponse.htm#a01abfbe5a6fbf46b8457e258db79c2cb">ColumnCount</a>;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                writer.Write(colCount);</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; colCount; ++i) {</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                    response.GetColumnDescription(i).WriteTo(writer);</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                }</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                writer.Flush();</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                <span class="keywordflow">return</span> output.ToArray();</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            } <span class="keywordflow">catch</span> (DataException e) {</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                <span class="comment">//      debug.writeException(e);</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                <span class="keywordflow">return</span> Exception(dispatchId, e);</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            }</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        }</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div>
<div class="line"><a name="l00389"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab53597924fbb008d0fccf40e22171139">  389</a></span>&#160;        <span class="keyword">private</span> byte[] <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab53597924fbb008d0fccf40e22171139">PushStreamableObjectPart</a>(<span class="keywordtype">int</span> dispatchId, byte[] command) {</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            ReferenceType type = (ReferenceType) command[8];</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="keywordtype">long</span> objectId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">ReadInt8</a>(command, 9);</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            <span class="keywordtype">long</span> objectLength = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">ReadInt8</a>(command, 17);</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            <span class="keywordtype">int</span> length = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 25);</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            byte[] obBuf = <span class="keyword">new</span> byte[length];</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            Array.Copy(command, 29, obBuf, 0, length);</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            <span class="keywordtype">long</span> offset = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">ReadInt8</a>(command, 29 + length);</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                <span class="comment">// Pass this through to the underlying database interface.</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                dbInterface.PushStreamableObjectPart(type, objectId, objectLength, obBuf, offset, length);</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                <span class="comment">// Return operation success.</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                <span class="keywordflow">return</span> SimpleSuccess(dispatchId);</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            } <span class="keywordflow">catch</span> (DataException e) {</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                <span class="keywordflow">return</span> Exception(dispatchId, e);</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            }</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        }</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div>
<div class="line"><a name="l00417"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a567e5c810cac89e1d45f3e4027dc7e74">  417</a></span>&#160;        <span class="keyword">private</span> byte[] <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a567e5c810cac89e1d45f3e4027dc7e74">ResultSection</a>(<span class="keywordtype">int</span> dispatchId, byte[] command) {</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            <span class="keywordtype">int</span> resultId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 8);</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            <span class="keywordtype">int</span> rowNumber = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 12);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            <span class="keywordtype">int</span> rowCount = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 16);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                <span class="comment">// Get the result part...</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                ResultPart block = dbInterface.GetResultPart(resultId, rowNumber, rowCount);</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                MemoryStream output = <span class="keyword">new</span> MemoryStream();</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                BinaryWriter writer = <span class="keyword">new</span> BinaryWriter(output, Encoding.Unicode);</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                writer.Write(dispatchId);</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                writer.Write(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a9f09bd58257f84b018a51a2563841501">Success</a>);</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                <span class="comment">// Send the contents of the result set.</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                <span class="comment">// HACK - Work out column count by dividing number of entries in block</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                <span class="comment">//   by number of rows.</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                <span class="keywordtype">int</span> colCount = block.Count / rowCount;</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                writer.Write(colCount);</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                <span class="keywordtype">int</span> bsize = block.Count;</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> index = 0; index &lt; bsize; ++index) {</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                    ObjectTransfer.WriteTo(writer, block[index]);</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                }</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                writer.Flush();</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                <span class="keywordflow">return</span> output.ToArray();</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            } <span class="keywordflow">catch</span> (DataException e) {</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                <span class="keywordflow">return</span> Exception(dispatchId, e);</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            }</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        }</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div>
<div class="line"><a name="l00455"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0477c5e4a1a96977a4b5ccbc93efaba7">  455</a></span>&#160;        <span class="keyword">private</span> byte[] <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0477c5e4a1a96977a4b5ccbc93efaba7">StreamableObjectSection</a>(<span class="keywordtype">int</span> dispatchId, byte[] command) {</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;            <span class="keywordtype">int</span> resultId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 8);</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            <span class="keywordtype">long</span> streamableObjectId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">ReadInt8</a>(command, 12);</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            <span class="keywordtype">long</span> offset = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">ReadInt8</a>(command, 20);</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            <span class="keywordtype">int</span> length = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 28);</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                byte[] buf = dbInterface.GetStreamableObjectPart(resultId, streamableObjectId, offset, length);</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                MemoryStream output = <span class="keyword">new</span> MemoryStream();</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                BinaryWriter writer = <span class="keyword">new</span> BinaryWriter(output, Encoding.Unicode);</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                writer.Write(dispatchId);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                writer.Write(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">ProtocolConstants</a>.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a9f09bd58257f84b018a51a2563841501">Success</a>);</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                writer.Write(buf.Length);</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                writer.Write(buf, 0, buf.Length);</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                writer.Flush();</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                <span class="keywordflow">return</span> output.ToArray();</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;            } <span class="keywordflow">catch</span> (DataException e) {</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                <span class="keywordflow">return</span> Exception(dispatchId, e);</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;            }</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        }</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div>
<div class="line"><a name="l00486"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#aaa597983d626b2e9d49740a95ecf017d">  486</a></span>&#160;        <span class="keyword">private</span> byte[] <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#aaa597983d626b2e9d49740a95ecf017d">DisposeStreamableObject</a>(<span class="keywordtype">int</span> dispatchId, byte[] command) {</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;            <span class="keywordtype">int</span> resultId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 8);</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            <span class="keywordtype">long</span> streamableObjectId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">ReadInt8</a>(command, 12);</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                <span class="comment">// Pass this through to the underlying database interface.</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                dbInterface.DisposeStreamableObject(resultId, streamableObjectId);</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                <span class="comment">// Return operation success.</span></div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                <span class="keywordflow">return</span> SimpleSuccess(dispatchId);</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            } <span class="keywordflow">catch</span> (DataException e) {</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                <span class="keywordflow">return</span> Exception(dispatchId, e);</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            }</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        }</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div>
<div class="line"><a name="l00507"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ae7a4b3bc43a5e0860b90cfa510d8591b">  507</a></span>&#160;        <span class="keyword">private</span> byte[] <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ae7a4b3bc43a5e0860b90cfa510d8591b">DisposeResult</a>(<span class="keywordtype">int</span> dispatchId, byte[] command) {</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            <span class="comment">// Get the result id.</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            <span class="keywordtype">int</span> resultId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 8);</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                <span class="comment">// Dispose the table.</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                dbInterface.DisposeResult(resultId);</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                <span class="comment">// Return operation success.</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                <span class="keywordflow">return</span> SimpleSuccess(dispatchId);</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;            } <span class="keywordflow">catch</span> (DataException e) {</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                <span class="keywordflow">return</span> Exception(dispatchId, e);</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;            }</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        }</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <span class="comment">// ---------- Abstract methods ----------</span></div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        <span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keywordtype">void</span> SendEvent(byte[] eventMsg);</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keywordtype">void</span> Close();</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div>
<div class="line"><a name="l00549"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a681117f8c95cbb16bd105934f42556fd">  549</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keywordtype">bool</span> IsClosed { <span class="keyword">get</span>; }</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div>
<div class="line"><a name="l00551"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6e2bd072c375038d193a5a14331d12d4">  551</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="interfaceDeveel_1_1Data_1_1IDatabase.htm">IDatabase</a> <a class="code" href="classDeveel_1_1Data_1_1Database.htm">Database</a> { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        <span class="comment">// ---------- Finalize ----------</span></div>
<div class="line"><a name="l00554"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#af2411b858e7556aef9e3134815cef624">  554</a></span>&#160;        <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#af2411b858e7556aef9e3134815cef624">~Processor</a>() {</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;            Dispose(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        }</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div>
<div class="line"><a name="l00558"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0e2c498909d1409035e1b2951d9f2c70">  558</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0e2c498909d1409035e1b2951d9f2c70">Dispose</a>() {</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;            Dispose(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            GC.SuppressFinalize(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        }</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    }</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ac322164f492eed402ef2886a7ccd3de4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ac322164f492eed402ef2886a7ccd3de4">Deveel.Data.Protocol.Processor.ChangeDatabase</a></div><div class="ttdeci">byte[] ChangeDatabase(int dispatchId, byte[] command)</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00319">Processor.cs:319</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants_htm_ad934166b70f89d2a40b08c0a57a1b961"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#ad934166b70f89d2a40b08c0a57a1b961">Deveel.Data.Protocol.ProtocolConstants.StreamableObjectSection</a></div><div class="ttdeci">const int StreamableObjectSection</div><div class="ttdoc">Requests a section of a streamable object from the server. </div><div class="ttdef"><b>Definition:</b> <a href="ProtocolConstants_8cs_source.htm#l00097">ProtocolConstants.cs:97</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ad9536a227ab2fa749b6a25b7331223f5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">Deveel.Data.Protocol.Processor.controller</a></div><div class="ttdeci">readonly DbController controller</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00059">Processor.cs:59</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants_htm_a1dad73c642c4c0647c9799609eb73032"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a1dad73c642c4c0647c9799609eb73032">Deveel.Data.Protocol.ProtocolConstants.Exception</a></div><div class="ttdeci">const int Exception</div><div class="ttdoc">Operation threw an exception. </div><div class="ttdef"><b>Definition:</b> <a href="ProtocolConstants_8cs_source.htm#l00058">ProtocolConstants.cs:58</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm">Deveel.Data.Protocol.Processor</a></div><div class="ttdoc">This processes _queries from a client and dispatches the _queries to the database. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00041">Processor.cs:41</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a0129fb04066c23a1f1b42a4218b42ab3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0129fb04066c23a1f1b42a4218b42ab3">Deveel.Data.Protocol.Processor.dbCallback</a></div><div class="ttdeci">readonly DatabaseEventCallback dbCallback</div><div class="ttdoc">The database call back method that sends database events back to the client. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00090">Processor.cs:90</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a800485cf5cc1fc8bae979aeff60e8877"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">Deveel.Data.Util.ByteBuffer.WriteInteger</a></div><div class="ttdeci">ByteBuffer WriteInteger(int v)</div><div class="ttdoc">Writes an integer into the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00118">ByteBuffer.cs:118</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Protocol_1_1IQueryResponse_htm_a4b8db8276e1605b1427eb2d947b5b365"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Protocol_1_1IQueryResponse.htm#a4b8db8276e1605b1427eb2d947b5b365">Deveel.Data.Protocol.IQueryResponse.QueryTimeMillis</a></div><div class="ttdeci">int QueryTimeMillis</div><div class="ttdef"><b>Definition:</b> <a href="IQueryResponse_8cs_source.htm#l00040">IQueryResponse.cs:40</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants_htm_a36649355a94068f7269c6c27a483095f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a36649355a94068f7269c6c27a483095f">Deveel.Data.Protocol.ProtocolConstants.DisposeStreamableObject</a></div><div class="ttdeci">const int DisposeStreamableObject</div><div class="ttdoc">Disposes of the resources associated with a streamable object on the server. </div><div class="ttdef"><b>Definition:</b> <a href="ProtocolConstants_8cs_source.htm#l00103">ProtocolConstants.cs:103</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a648a81dc9cad14071959026995a4bb99"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a648a81dc9cad14071959026995a4bb99">Deveel.Data.Protocol.Processor.ProcessCommand</a></div><div class="ttdeci">byte[] ProcessCommand(byte[] command)</div><div class="ttdoc">Processes a single Query from the client. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00115">Processor.cs:115</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a946b330588fd8d78dcdf762be5b80886"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">Deveel.Data.Util.ByteBuffer.ReadInt4</a></div><div class="ttdeci">int ReadInt4()</div><div class="ttdoc">Reads an integer from the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00128">ByteBuffer.cs:128</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a47ff272705aa96ad1db8e79209bb2e7e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a47ff272705aa96ad1db8e79209bb2e7e">Deveel.Data.Protocol.Processor.Single</a></div><div class="ttdeci">static byte[] Single(int val)</div><div class="ttdoc">Returns a single 4 byte array with the given int encoded into it. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00202">Processor.cs:202</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Protocol_1_1IQueryResponse_htm_a5723eaa5baafc466ac3151494d022266"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Protocol_1_1IQueryResponse.htm#a5723eaa5baafc466ac3151494d022266">Deveel.Data.Protocol.IQueryResponse.RowCount</a></div><div class="ttdeci">int RowCount</div><div class="ttdef"><b>Definition:</b> <a href="IQueryResponse_8cs_source.htm#l00048">IQueryResponse.cs:48</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Protocol_1_1IQueryResponse_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Protocol_1_1IQueryResponse.htm">Deveel.Data.Protocol.IQueryResponse</a></div><div class="ttdoc">The response to a command executed via the IDatabaseInterface.ExecuteQuery method in the IDatabaseInt...</div><div class="ttdef"><b>Definition:</b> <a href="IQueryResponse_8cs_source.htm#l00027">IQueryResponse.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants_htm_a4b702f47ebd2e6e2a8d779a8981c2f38"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a4b702f47ebd2e6e2a8d779a8981c2f38">Deveel.Data.Protocol.ProtocolConstants.Query</a></div><div class="ttdeci">const int Query</div><div class="ttdoc">Query sent to the server for processing. </div><div class="ttdef"><b>Definition:</b> <a href="ProtocolConstants_8cs_source.htm#l00082">ProtocolConstants.cs:82</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Database_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Database.htm">Deveel.Data.Database</a></div><div class="ttdoc">The default implementation of a database in a system. </div><div class="ttdef"><b>Definition:</b> <a href="Database_8cs_source.htm#l00038">Database.cs:38</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1SqlQuery_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1SqlQuery.htm">Deveel.Data.Sql.SqlQuery</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlQuery_8cs_source.htm#l00026">SqlQuery.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants_htm_a2699a6e294646f35a96189074ce33633"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a2699a6e294646f35a96189074ce33633">Deveel.Data.Protocol.ProtocolConstants.PushStreamableObjectPart</a></div><div class="ttdeci">const int PushStreamableObjectPart</div><div class="ttdoc">For pushing a part of a streamable object onto the server from the client. </div><div class="ttdef"><b>Definition:</b> <a href="ProtocolConstants_8cs_source.htm#l00108">ProtocolConstants.cs:108</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Protocol_1_1IQueryResponse_htm_a01abfbe5a6fbf46b8457e258db79c2cb"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Protocol_1_1IQueryResponse.htm#a01abfbe5a6fbf46b8457e258db79c2cb">Deveel.Data.Protocol.IQueryResponse.ColumnCount</a></div><div class="ttdeci">int ColumnCount</div><div class="ttdoc">The number of columns in the command result. </div><div class="ttdef"><b>Definition:</b> <a href="IQueryResponse_8cs_source.htm#l00053">IQueryResponse.cs:53</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants_htm_ab835dd21bb38856b6345691f1ed3867d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#ab835dd21bb38856b6345691f1ed3867d">Deveel.Data.Protocol.ProtocolConstants.DatabaseNotFound</a></div><div class="ttdeci">const int DatabaseNotFound</div><div class="ttdoc">The specified database was not found. </div><div class="ttdef"><b>Definition:</b> <a href="ProtocolConstants_8cs_source.htm#l00032">ProtocolConstants.cs:32</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_aaa597983d626b2e9d49740a95ecf017d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#aaa597983d626b2e9d49740a95ecf017d">Deveel.Data.Protocol.Processor.DisposeStreamableObject</a></div><div class="ttdeci">byte[] DisposeStreamableObject(int dispatchId, byte[] command)</div><div class="ttdoc">Disposes of a streamable object. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00486">Processor.cs:486</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1IDatabase_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1IDatabase.htm">Deveel.Data.IDatabase</a></div><div class="ttdoc">The representation of a single database in the system. </div><div class="ttdef"><b>Definition:</b> <a href="IDatabase_8cs_source.htm#l00040">IDatabase.cs:40</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ab26b468a6fee9411d7278b546b06befd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab26b468a6fee9411d7278b546b06befd">Deveel.Data.Protocol.Processor.ChangeDatabaseInterface</a></div><div class="ttdeci">bool ChangeDatabaseInterface(IDbConfig config, string databaseName)</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00092">Processor.cs:92</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Protocol_htm_afb4421f156bc5f10909c84bbf205a03c"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Protocol.htm#afb4421f156bc5f10909c84bbf205a03c">Deveel.Data.Protocol.DatabaseEventCallback</a></div><div class="ttdeci">delegate void DatabaseEventCallback(int eventType, string eventMessage)</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm">Deveel.Data.Protocol.ProtocolConstants</a></div><div class="ttdoc">Constants used in the database communication protocol. </div><div class="ttdef"><b>Definition:</b> <a href="ProtocolConstants_8cs_source.htm#l00023">ProtocolConstants.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a4cb3591c932ae050152cf36489698316"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a4cb3591c932ae050152cf36489698316">Deveel.Data.Protocol.Processor.Dispose</a></div><div class="ttdeci">void Dispose(bool disposing)</div><div class="ttdoc">Disposes of this processor. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00301">Processor.cs:301</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a360325d66b16eb3b0d98145d40fd767e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Deveel.Data.Protocol.Processor.Exception</a></div><div class="ttdeci">static byte[] Exception(int dispatchId, DataException e)</div><div class="ttdoc">Creates a response that represents a data exception failure. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00214">Processor.cs:214</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants_htm_affb90384d65f9657d06c7b45a6b23eae"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#affb90384d65f9657d06c7b45a6b23eae">Deveel.Data.Protocol.ProtocolConstants.UserAuthenticationPassed</a></div><div class="ttdeci">const int UserAuthenticationPassed</div><div class="ttdoc">Sent if login passed. </div><div class="ttdef"><b>Definition:</b> <a href="ProtocolConstants_8cs_source.htm#l00037">ProtocolConstants.cs:37</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a3a5e705d687fef6f59417fffff835da2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a3a5e705d687fef6f59417fffff835da2">Deveel.Data.Protocol.Processor.ProcessQuery</a></div><div class="ttdeci">byte[] ProcessQuery(byte[] command)</div><div class="ttdoc">Processes a query on the byte[] array and returns the result. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00260">Processor.cs:260</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Client_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Client.htm">Deveel.Data.Client</a></div><div class="ttdef"><b>Definition:</b> <a href="ConnectionClient_8cs_source.htm#l00029">ConnectionClient.cs:29</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a87f6a6465602be448530fb2ade194f2b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a87f6a6465602be448530fb2ade194f2b">Deveel.Data.Protocol.Processor.dbInterfaces</a></div><div class="ttdeci">readonly Dictionary&lt; string, DatabaseInterface &gt; dbInterfaces</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00060">Processor.cs:60</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a0477c5e4a1a96977a4b5ccbc93efaba7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0477c5e4a1a96977a4b5ccbc93efaba7">Deveel.Data.Protocol.Processor.StreamableObjectSection</a></div><div class="ttdeci">byte[] StreamableObjectSection(int dispatchId, byte[] command)</div><div class="ttdoc">Returns a section of a streamable object. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00455">Processor.cs:455</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a567e5c810cac89e1d45f3e4027dc7e74"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a567e5c810cac89e1d45f3e4027dc7e74">Deveel.Data.Protocol.Processor.ResultSection</a></div><div class="ttdeci">byte[] ResultSection(int dispatchId, byte[] command)</div><div class="ttdoc">Responds with a part of the result set of a query made via the ProtocolConstants.Query Query...</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00417">Processor.cs:417</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a4685987f382736d486d9a8f5cc72eb73"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a4685987f382736d486d9a8f5cc72eb73">Deveel.Data.Protocol.Processor.authenticationTries</a></div><div class="ttdeci">int authenticationTries</div><div class="ttdoc">Number of authentications tried. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00055">Processor.cs:55</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a6ad397f82ba92e8b50c14e862464080d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">Deveel.Data.Protocol.Processor.dbInterface</a></div><div class="ttdeci">DatabaseInterface dbInterface</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00061">Processor.cs:61</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a2e8068c3832a73b39a5d2c10a9da55ba"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a2e8068c3832a73b39a5d2c10a9da55ba">Deveel.Data.Protocol.Processor.Processor</a></div><div class="ttdeci">Processor(DbController controller, string hostString)</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00063">Processor.cs:63</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a0e2c498909d1409035e1b2951d9f2c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0e2c498909d1409035e1b2951d9f2c70">Deveel.Data.Protocol.Processor.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00558">Processor.cs:558</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ae7a4b3bc43a5e0860b90cfa510d8591b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ae7a4b3bc43a5e0860b90cfa510d8591b">Deveel.Data.Protocol.Processor.DisposeResult</a></div><div class="ttdeci">byte[] DisposeResult(int dispatchId, byte[] command)</div><div class="ttdoc">Disposes of a result set we queries via the ProtocolConstants.Query Query. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00507">Processor.cs:507</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_abc955cad267890c308011cf97abe4c0c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#abc955cad267890c308011cf97abe4c0c">Deveel.Data.Protocol.Processor.SimpleSuccess</a></div><div class="ttdeci">static byte[] SimpleSuccess(int dispatchId)</div><div class="ttdoc">Creates a response that indicates a simple success of an operation with the given dispatch id...</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00248">Processor.cs:248</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ab53597924fbb008d0fccf40e22171139"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab53597924fbb008d0fccf40e22171139">Deveel.Data.Protocol.Processor.PushStreamableObjectPart</a></div><div class="ttdeci">byte[] PushStreamableObjectPart(int dispatchId, byte[] command)</div><div class="ttdoc">Pushes a part of a streamable object onto the server. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00389">Processor.cs:389</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Diagnostics_htm"><div class="ttname"><a href="namespaceDeveel_1_1Diagnostics.htm">Deveel.Diagnostics</a></div><div class="ttdef"><b>Definition:</b> <a href="ConsoleLogger_8cs_source.htm#l00005">ConsoleLogger.cs:5</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">Deveel.Data.Util.ByteBuffer</a></div><div class="ttdoc">A wrapper for an array of byte. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00027">ByteBuffer.cs:27</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Control_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Control.htm">Deveel.Data.Control</a></div><div class="ttdef"><b>Definition:</b> <a href="DbConfigTest_8cs_source.htm#l00009">DbConfigTest.cs:9</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_aa5c8ed7855932a8e138c19517a31feaf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#aa5c8ed7855932a8e138c19517a31feaf">Deveel.Data.Protocol.Processor.QueryCommand</a></div><div class="ttdeci">byte[] QueryCommand(int dispatchId, byte[] command)</div><div class="ttdoc">Executes a query and returns the header for the result in the response. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00346">Processor.cs:346</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a85fe40529d554001986ead6dc4ee0ddb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a85fe40529d554001986ead6dc4ee0ddb">Deveel.Data.Protocol.Processor.state</a></div><div class="ttdeci">ClientConnectionState state</div><div class="ttdoc">The current state we are in. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00050">Processor.cs:50</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ab08c677faf5509b36ebeb272dbdea2d5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab08c677faf5509b36ebeb272dbdea2d5">Deveel.Data.Protocol.Processor.hostString</a></div><div class="ttdeci">readonly string hostString</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00057">Processor.cs:57</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_ad14d59e2c961bfbb3d7a857437fed53b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">Deveel.Data.Util.ByteBuffer.ReadInt8</a></div><div class="ttdeci">static long ReadInt8(byte[] arr, int offset)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00234">ByteBuffer.cs:234</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants_htm_a6dbbfe8e09cb6f863940b3f8a8a06343"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a6dbbfe8e09cb6f863940b3f8a8a06343">Deveel.Data.Protocol.ProtocolConstants.Close</a></div><div class="ttdeci">const int Close</div><div class="ttdoc">Closes the protocol stream. </div><div class="ttdef"><b>Definition:</b> <a href="ProtocolConstants_8cs_source.htm#l00119">ProtocolConstants.cs:119</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Configuration_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Configuration.htm">Deveel.Data.Configuration</a></div><div class="ttdef"><b>Definition:</b> <a href="ConfigGroup_8cs_source.htm#l00019">ConfigGroup.cs:19</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants_htm_a9f09bd58257f84b018a51a2563841501"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a9f09bd58257f84b018a51a2563841501">Deveel.Data.Protocol.ProtocolConstants.Success</a></div><div class="ttdeci">const int Success</div><div class="ttdoc">Operation was successful. </div><div class="ttdef"><b>Definition:</b> <a href="ProtocolConstants_8cs_source.htm#l00047">ProtocolConstants.cs:47</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants_htm_abf40df1a48371301de9e17a62fc0d660"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#abf40df1a48371301de9e17a62fc0d660">Deveel.Data.Protocol.ProtocolConstants.Acknowledgement</a></div><div class="ttdeci">const int Acknowledgement</div><div class="ttdoc">Sent as an acknowledgement to a command. </div><div class="ttdef"><b>Definition:</b> <a href="ProtocolConstants_8cs_source.htm#l00027">ProtocolConstants.cs:27</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm">Deveel.Data.Sql</a></div><div class="ttdef"><b>Definition:</b> <a href="CellId_8cs_source.htm#l00022">CellId.cs:22</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Util_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Util.htm">Deveel.Data.Util</a></div><div class="ttdef"><b>Definition:</b> <a href="BigArray_8cs_source.htm#l00019">BigArray.cs:19</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants_htm_aed17c629f7c6ec9b35b70d6ef4732653"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#aed17c629f7c6ec9b35b70d6ef4732653">Deveel.Data.Protocol.ProtocolConstants.ResultSection</a></div><div class="ttdeci">const int ResultSection</div><div class="ttdoc">Requests a section of a result from the server. </div><div class="ttdef"><b>Definition:</b> <a href="ProtocolConstants_8cs_source.htm#l00092">ProtocolConstants.cs:92</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants_htm_a24875424a1d8819c05ec29fddea6ef7d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a24875424a1d8819c05ec29fddea6ef7d">Deveel.Data.Protocol.ProtocolConstants.ChangeDatabase</a></div><div class="ttdeci">const int ChangeDatabase</div><div class="ttdoc">Changes the current database for the session. </div><div class="ttdef"><b>Definition:</b> <a href="ProtocolConstants_8cs_source.htm#l00077">ProtocolConstants.cs:77</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_af2411b858e7556aef9e3134815cef624"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#af2411b858e7556aef9e3134815cef624">Deveel.Data.Protocol.Processor.~Processor</a></div><div class="ttdeci">~Processor()</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00554">Processor.cs:554</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a0eb22af9caca9751b3837adbe7a3b129"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0eb22af9caca9751b3837adbe7a3b129">Deveel.Data.Protocol.Processor.OnDatabaseEvent</a></div><div class="ttdeci">void OnDatabaseEvent(int eventType, String eventMessage)</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00072">Processor.cs:72</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Protocol_1_1IQueryResponse_htm_ad3bbd1db3c1929cc1955afbd7fb995f1"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Protocol_1_1IQueryResponse.htm#ad3bbd1db3c1929cc1955afbd7fb995f1">Deveel.Data.Protocol.IQueryResponse.ResultId</a></div><div class="ttdeci">int ResultId</div><div class="ttdoc">Returns a number that identifies this command within the set of queries executed on the connection...</div><div class="ttdef"><b>Definition:</b> <a href="IQueryResponse_8cs_source.htm#l00035">IQueryResponse.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants_htm_aa00102c815ce6111a4bfc6c53cd9ceef"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#aa00102c815ce6111a4bfc6c53cd9ceef">Deveel.Data.Protocol.ProtocolConstants.UserAuthenticationFailed</a></div><div class="ttdeci">const int UserAuthenticationFailed</div><div class="ttdoc">Sent if login failed because username or password were invalid. </div><div class="ttdef"><b>Definition:</b> <a href="ProtocolConstants_8cs_source.htm#l00042">ProtocolConstants.cs:42</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants_htm_a6a680686864ac3329f3e02a76f401acf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a6a680686864ac3329f3e02a76f401acf">Deveel.Data.Protocol.ProtocolConstants.DisposeResult</a></div><div class="ttdeci">const int DisposeResult</div><div class="ttdoc">Disposes the server-side resources associated with a result. </div><div class="ttdef"><b>Definition:</b> <a href="ProtocolConstants_8cs_source.htm#l00087">ProtocolConstants.cs:87</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
