<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Util/ByteBuffer.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_6756c90673132daa25f33a7157eea2eb.htm">Deveel.Data.Util</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ByteBuffer.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ByteBuffer_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Util {</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">   27</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a> {</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a1f44e2126f879e4561118bd89872b1f4">   31</a></span>&#160;        <span class="keyword">private</span> readonly byte[] <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a1f44e2126f879e4561118bd89872b1f4">buf</a>;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a91635cf51b2e82d7dafb902e7d01b216">   36</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a91635cf51b2e82d7dafb902e7d01b216">pos</a>;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a4f712de46a10f1ea54e34723581470e1">   41</a></span>&#160;        <span class="keyword">private</span> readonly <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a4f712de46a10f1ea54e34723581470e1">length</a>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a117a876afc88d3e70803a9cce214e4e6">   49</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a117a876afc88d3e70803a9cce214e4e6">ByteBuffer</a>(byte[] buf, <span class="keywordtype">int</span> offset, <span class="keywordtype">int</span> length) {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            this.buf = buf;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            this.length = length;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            pos = offset;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a97d8191acc6ca6ae3af5454f0d7bd644">   55</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a97d8191acc6ca6ae3af5454f0d7bd644">ByteBuffer</a>(byte[] buf)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            : this(buf, 0, buf.Length) {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a704f5f564e78ccde8e7fecf8bdaeeb3c">   62</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> Position {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            set { pos = value; }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> pos; }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a4c0da9c8c6f5ab42becc8c8202b78bf2">   70</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> Length {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> length; }</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a02027a9152d7ea156ca7b25a2af5066f">   81</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a02027a9152d7ea156ca7b25a2af5066f">Write</a>(byte[] b, <span class="keywordtype">int</span> offset, <span class="keywordtype">int</span> count) {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            Array.Copy(b, offset, buf, pos, count);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            pos += count;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#af4606744317872199bab76113d43e9cf">   87</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#af4606744317872199bab76113d43e9cf">Write</a>(byte[] b) {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="keywordflow">return</span> Write(b, 0, b.Length);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a353c16afe7cb1ca151ec02f630dec6c5">   96</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a353c16afe7cb1ca151ec02f630dec6c5">Write</a>(<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a> buffer) {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">return</span> Write(buffer.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a1f44e2126f879e4561118bd89872b1f4">buf</a>, buffer.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a91635cf51b2e82d7dafb902e7d01b216">pos</a>, buffer.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a4f712de46a10f1ea54e34723581470e1">length</a>);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad2bae94d648501149919c54464a7f3ff">  107</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad2bae94d648501149919c54464a7f3ff">Read</a>(byte[] b, <span class="keywordtype">int</span> offset, <span class="keywordtype">int</span> count) {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            Array.Copy(buf, pos, b, offset, count);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            pos += count;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">  118</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">WriteInteger</a>(<span class="keywordtype">int</span> v) {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            WriteInteger(v, buf, pos);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            pos += 4;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">  128</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>() {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordtype">int</span> v = ReadInt4(buf, pos);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            pos += 4;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="keywordflow">return</span> v;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        }</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a148ca514ff8dd2513d7b03d33ed6f543">  139</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a148ca514ff8dd2513d7b03d33ed6f543">WriteByte</a>(byte v) {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            buf[pos] = v;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            ++pos;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a0ca4eddd8f2cead9347367288a6c7a49">  149</a></span>&#160;        <span class="keyword">public</span> byte <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a0ca4eddd8f2cead9347367288a6c7a49">ReadByte</a>() {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            byte b = buf[pos];</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            ++pos;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keywordflow">return</span> b;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a72e507f1116fc50f8680404b607d02b7">  160</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a72e507f1116fc50f8680404b607d02b7">WriteInt2</a>(<span class="keywordtype">short</span> v) {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            WriteInt2(v, buf, pos);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            pos += 2;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad1c536718cac5e55a0c47fe32c97114c">  170</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">short</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad1c536718cac5e55a0c47fe32c97114c">ReadInt2</a>() {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keywordtype">short</span> v = ReadInt2(buf, pos);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            pos += 2;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="keywordflow">return</span> v;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a994e589759c5579f81ad638a246cbbc6">  176</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a994e589759c5579f81ad638a246cbbc6">WriteInteger</a>(<span class="keywordtype">int</span> value, byte[] arr, <span class="keywordtype">int</span> offset) {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <span class="comment">/*</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">            TODO: check ...</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">          arr[offset + 0] = (byte) ((value &gt;&gt;&gt; 24) &amp; 0xFF);</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">          arr[offset + 1] = (byte) ((value &gt;&gt;&gt; 16) &amp; 0xFF);</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">          arr[offset + 2] = (byte) ((value &gt;&gt;&gt;  8) &amp; 0xFF);</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">          arr[offset + 3] = (byte) ((value &gt;&gt;&gt;  0) &amp; 0xFF);</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            byte[] buff = BitConverter.GetBytes(value);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            Array.Copy(buff, 0, arr, offset, buff.Length);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a3dad3f56032792f5428a8839a9272ee1">  188</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">char</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a3dad3f56032792f5428a8839a9272ee1">ReadChar</a>(byte[] arr, <span class="keywordtype">int</span> offset) {</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;          <span class="keywordtype">int</span> c1 = (((int) arr[offset + 0]) &amp; 0x0FF);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;          <span class="keywordtype">int</span> c2 = (((int) arr[offset + 1]) &amp; 0x0FF);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;          <span class="keywordflow">return</span> (<span class="keywordtype">char</span>) ((c1 &lt;&lt; 8) + (c2));</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <span class="comment">//TODO: check... return BitConverter.ToChar(arr, offset);</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a5ea2479623e85e3940c99b304f5963ed">  195</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a5ea2479623e85e3940c99b304f5963ed">WriteChar</a>(<span class="keywordtype">char</span> value, byte[] arr, <span class="keywordtype">int</span> offset) {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;          arr[offset + 0] = (byte) (URShift(value, 8) &amp; 0x0FF);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;          arr[offset + 1] = (byte) (URShift(value, 0) &amp; 0x0FF);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <span class="comment">// byte[] buff = BitConverter.GetBytes(value);</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            Array.Copy(arr, 0, arr, offset, 2);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a935cf5ca32f0e26adcf26f2a981ecd22">  202</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">short</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a935cf5ca32f0e26adcf26f2a981ecd22">ReadInt2</a>(byte[] arr, <span class="keywordtype">int</span> offset) {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="comment">/*</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">            TODO: check ...</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">          int c1 = (((int) arr[offset + 0]) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">          int c2 = (((int) arr[offset + 1]) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">          return (short) ((c1 &lt;&lt; 8) + (c2));</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">            */</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <span class="keywordflow">return</span> BitConverter.ToInt16(arr, offset);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        }</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div>
<div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a20ea6c5837d767df57bd0ae09a5b9745">  212</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a20ea6c5837d767df57bd0ae09a5b9745">WriteInt2</a>(<span class="keywordtype">short</span> value, byte[] arr, <span class="keywordtype">int</span> offset) {</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <span class="comment">/*</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">            TODO: check ...</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">          arr[offset + 0] = (byte) ((value &gt;&gt;&gt; 8) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">          arr[offset + 1] = (byte) ((value &gt;&gt;&gt; 0) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            byte[] buff = BitConverter.GetBytes(value);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            Array.Copy(buff, 0, arr, offset, buff.Length);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a6bb95bb83901e41776a3946b4e7648d0">  222</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a6bb95bb83901e41776a3946b4e7648d0">ReadInt4</a>(byte[] arr, <span class="keywordtype">int</span> offset) {</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="comment">/*</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">            TODO: check ...</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">          int c1 = (((int) arr[offset + 0]) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">          int c2 = (((int) arr[offset + 1]) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">          int c3 = (((int) arr[offset + 2]) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">          int c4 = (((int) arr[offset + 3]) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">          return (c1 &lt;&lt; 24) + (c2 &lt;&lt; 16) + (c3 &lt;&lt; 8) + (c4);</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keywordflow">return</span> BitConverter.ToInt32(arr, offset);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div>
<div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">  234</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">ReadInt8</a>(byte[] arr, <span class="keywordtype">int</span> offset) {</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            <span class="comment">/*</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">            TODO: check ...</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">          long c1 = (((int) arr[offset + 0]) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">          long c2 = (((int) arr[offset + 1]) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">          long c3 = (((int) arr[offset + 2]) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">          long c4 = (((int) arr[offset + 3]) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">          long c5 = (((int) arr[offset + 4]) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">          long c6 = (((int) arr[offset + 5]) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">          long c7 = (((int) arr[offset + 6]) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">          long c8 = (((int) arr[offset + 7]) &amp; 0x0FF);</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">    </span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">          return (c1 &lt;&lt; 56) + (c2 &lt;&lt; 48) + (c3 &lt;&lt; 40) +</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">                 (c4 &lt;&lt; 32) + (c5 &lt;&lt; 24) + (c6 &lt;&lt; 16) + (c7 &lt;&lt;  8) + (c8);</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">             */</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            <span class="keywordflow">return</span> BitConverter.ToInt64(arr, offset);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        }</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div>
<div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a4beda85eabb0aab7309186d8e2719589">  252</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a4beda85eabb0aab7309186d8e2719589">WriteInt8</a>(<span class="keywordtype">long</span> value, byte[] arr, <span class="keywordtype">int</span> offset) {</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            <span class="comment">/*</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">            TODO:</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">          arr[offset + 0] = (byte) ((value &gt;&gt;&gt; 56) &amp; 0xFF);</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">          arr[offset + 1] = (byte) ((value &gt;&gt;&gt; 48) &amp; 0xFF);</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">          arr[offset + 2] = (byte) ((value &gt;&gt;&gt; 40) &amp; 0xFF);</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">          arr[offset + 3] = (byte) ((value &gt;&gt;&gt; 32) &amp; 0xFF);</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">          arr[offset + 4] = (byte) ((value &gt;&gt;&gt; 24) &amp; 0xFF);</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">          arr[offset + 5] = (byte) ((value &gt;&gt;&gt; 16) &amp; 0xFF);</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">          arr[offset + 6] = (byte) ((value &gt;&gt;&gt;  8) &amp; 0xFF);</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">          arr[offset + 7] = (byte) ((value &gt;&gt;&gt;  0) &amp; 0xFF);</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">            */</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            byte[] buff = BitConverter.GetBytes(value);</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            Array.Copy(buff, 0, arr, offset, buff.Length);</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        }</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00277"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ac15fb9eaac6b962d377bdd300b8c0a2e">  277</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ac15fb9eaac6b962d377bdd300b8c0a2e">URShift</a>(<span class="keywordtype">int</span> number, <span class="keywordtype">int</span> bits) {</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            <span class="keywordflow">if</span> (number &gt;= 0)</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                <span class="keywordflow">return</span> number &gt;&gt; bits;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            <span class="keywordflow">return</span> (number &gt;&gt; bits) + (2 &lt;&lt; ~bits);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        }</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a0ae4f670f22a9df1b5a708ceb4464b2a">  283</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a0ae4f670f22a9df1b5a708ceb4464b2a">URShift</a>(<span class="keywordtype">int</span> number, <span class="keywordtype">long</span> bits) {</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            <span class="keywordflow">return</span> URShift(number, (<span class="keywordtype">int</span>)bits);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        }</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div>
<div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#aca256548cc693b3b4f08d0d836f07b83">  287</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#aca256548cc693b3b4f08d0d836f07b83">URShift</a>(<span class="keywordtype">long</span> number, <span class="keywordtype">int</span> bits) {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            <span class="keywordflow">if</span> (number &gt;= 0)</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                <span class="keywordflow">return</span> number &gt;&gt; bits;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <span class="keywordflow">return</span> (number &gt;&gt; bits) + (2L &lt;&lt; ~bits);</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        }</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a807f717b7122d17ecd5e10d146d546d1">  293</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a807f717b7122d17ecd5e10d146d546d1">URShift</a>(<span class="keywordtype">long</span> number, <span class="keywordtype">long</span> bits) {</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            <span class="keywordflow">return</span> URShift(number, (<span class="keywordtype">int</span>)bits);</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        }</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    }</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a72e507f1116fc50f8680404b607d02b7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a72e507f1116fc50f8680404b607d02b7">Deveel.Data.Util.ByteBuffer.WriteInt2</a></div><div class="ttdeci">ByteBuffer WriteInt2(short v)</div><div class="ttdoc">Writes a short into the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00160">ByteBuffer.cs:160</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_ad1c536718cac5e55a0c47fe32c97114c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad1c536718cac5e55a0c47fe32c97114c">Deveel.Data.Util.ByteBuffer.ReadInt2</a></div><div class="ttdeci">short ReadInt2()</div><div class="ttdoc">Reads a short from the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00170">ByteBuffer.cs:170</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a0ca4eddd8f2cead9347367288a6c7a49"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a0ca4eddd8f2cead9347367288a6c7a49">Deveel.Data.Util.ByteBuffer.ReadByte</a></div><div class="ttdeci">byte ReadByte()</div><div class="ttdoc">Reads a byte from the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00149">ByteBuffer.cs:149</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a800485cf5cc1fc8bae979aeff60e8877"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">Deveel.Data.Util.ByteBuffer.WriteInteger</a></div><div class="ttdeci">ByteBuffer WriteInteger(int v)</div><div class="ttdoc">Writes an integer into the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00118">ByteBuffer.cs:118</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a4f712de46a10f1ea54e34723581470e1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a4f712de46a10f1ea54e34723581470e1">Deveel.Data.Util.ByteBuffer.length</a></div><div class="ttdeci">readonly int length</div><div class="ttdoc">The length of the buf array. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00041">ByteBuffer.cs:41</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a935cf5ca32f0e26adcf26f2a981ecd22"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a935cf5ca32f0e26adcf26f2a981ecd22">Deveel.Data.Util.ByteBuffer.ReadInt2</a></div><div class="ttdeci">static short ReadInt2(byte[] arr, int offset)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00202">ByteBuffer.cs:202</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a946b330588fd8d78dcdf762be5b80886"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">Deveel.Data.Util.ByteBuffer.ReadInt4</a></div><div class="ttdeci">int ReadInt4()</div><div class="ttdoc">Reads an integer from the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00128">ByteBuffer.cs:128</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a807f717b7122d17ecd5e10d146d546d1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a807f717b7122d17ecd5e10d146d546d1">Deveel.Data.Util.ByteBuffer.URShift</a></div><div class="ttdeci">static long URShift(long number, long bits)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00293">ByteBuffer.cs:293</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a20ea6c5837d767df57bd0ae09a5b9745"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a20ea6c5837d767df57bd0ae09a5b9745">Deveel.Data.Util.ByteBuffer.WriteInt2</a></div><div class="ttdeci">static void WriteInt2(short value, byte[] arr, int offset)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00212">ByteBuffer.cs:212</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_aca256548cc693b3b4f08d0d836f07b83"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#aca256548cc693b3b4f08d0d836f07b83">Deveel.Data.Util.ByteBuffer.URShift</a></div><div class="ttdeci">static long URShift(long number, int bits)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00287">ByteBuffer.cs:287</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a117a876afc88d3e70803a9cce214e4e6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a117a876afc88d3e70803a9cce214e4e6">Deveel.Data.Util.ByteBuffer.ByteBuffer</a></div><div class="ttdeci">ByteBuffer(byte[] buf, int offset, int length)</div><div class="ttdoc">Constructs the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00049">ByteBuffer.cs:49</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a353c16afe7cb1ca151ec02f630dec6c5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a353c16afe7cb1ca151ec02f630dec6c5">Deveel.Data.Util.ByteBuffer.Write</a></div><div class="ttdeci">ByteBuffer Write(ByteBuffer buffer)</div><div class="ttdoc">Writes a ByteBuffer in to this buffer. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00096">ByteBuffer.cs:96</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a0ae4f670f22a9df1b5a708ceb4464b2a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a0ae4f670f22a9df1b5a708ceb4464b2a">Deveel.Data.Util.ByteBuffer.URShift</a></div><div class="ttdeci">static int URShift(int number, long bits)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00283">ByteBuffer.cs:283</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a5ea2479623e85e3940c99b304f5963ed"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a5ea2479623e85e3940c99b304f5963ed">Deveel.Data.Util.ByteBuffer.WriteChar</a></div><div class="ttdeci">static void WriteChar(char value, byte[] arr, int offset)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00195">ByteBuffer.cs:195</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_af4606744317872199bab76113d43e9cf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#af4606744317872199bab76113d43e9cf">Deveel.Data.Util.ByteBuffer.Write</a></div><div class="ttdeci">ByteBuffer Write(byte[] b)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00087">ByteBuffer.cs:87</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a02027a9152d7ea156ca7b25a2af5066f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a02027a9152d7ea156ca7b25a2af5066f">Deveel.Data.Util.ByteBuffer.Write</a></div><div class="ttdeci">ByteBuffer Write(byte[] b, int offset, int count)</div><div class="ttdoc">Writes a byte array into the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00081">ByteBuffer.cs:81</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a3dad3f56032792f5428a8839a9272ee1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a3dad3f56032792f5428a8839a9272ee1">Deveel.Data.Util.ByteBuffer.ReadChar</a></div><div class="ttdeci">static char ReadChar(byte[] arr, int offset)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00188">ByteBuffer.cs:188</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_ac15fb9eaac6b962d377bdd300b8c0a2e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ac15fb9eaac6b962d377bdd300b8c0a2e">Deveel.Data.Util.ByteBuffer.URShift</a></div><div class="ttdeci">static int URShift(int number, int bits)</div><div class="ttdoc">Operates a shift on the given integer by the number of bits specified. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00277">ByteBuffer.cs:277</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a6bb95bb83901e41776a3946b4e7648d0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a6bb95bb83901e41776a3946b4e7648d0">Deveel.Data.Util.ByteBuffer.ReadInt4</a></div><div class="ttdeci">static int ReadInt4(byte[] arr, int offset)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00222">ByteBuffer.cs:222</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">Deveel.Data.Util.ByteBuffer</a></div><div class="ttdoc">A wrapper for an array of byte. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00027">ByteBuffer.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a97d8191acc6ca6ae3af5454f0d7bd644"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a97d8191acc6ca6ae3af5454f0d7bd644">Deveel.Data.Util.ByteBuffer.ByteBuffer</a></div><div class="ttdeci">ByteBuffer(byte[] buf)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00055">ByteBuffer.cs:55</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a994e589759c5579f81ad638a246cbbc6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a994e589759c5579f81ad638a246cbbc6">Deveel.Data.Util.ByteBuffer.WriteInteger</a></div><div class="ttdeci">static void WriteInteger(int value, byte[] arr, int offset)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00176">ByteBuffer.cs:176</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a1f44e2126f879e4561118bd89872b1f4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a1f44e2126f879e4561118bd89872b1f4">Deveel.Data.Util.ByteBuffer.buf</a></div><div class="ttdeci">readonly byte[] buf</div><div class="ttdoc">The wrapped byte array itself. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00031">ByteBuffer.cs:31</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_ad2bae94d648501149919c54464a7f3ff"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad2bae94d648501149919c54464a7f3ff">Deveel.Data.Util.ByteBuffer.Read</a></div><div class="ttdeci">ByteBuffer Read(byte[] b, int offset, int count)</div><div class="ttdoc">Reads a byte array from the buffer. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00107">ByteBuffer.cs:107</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a148ca514ff8dd2513d7b03d33ed6f543"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a148ca514ff8dd2513d7b03d33ed6f543">Deveel.Data.Util.ByteBuffer.WriteByte</a></div><div class="ttdeci">ByteBuffer WriteByte(byte v)</div><div class="ttdoc">Writes a byte into the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00139">ByteBuffer.cs:139</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_ad14d59e2c961bfbb3d7a857437fed53b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">Deveel.Data.Util.ByteBuffer.ReadInt8</a></div><div class="ttdeci">static long ReadInt8(byte[] arr, int offset)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00234">ByteBuffer.cs:234</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a91635cf51b2e82d7dafb902e7d01b216"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a91635cf51b2e82d7dafb902e7d01b216">Deveel.Data.Util.ByteBuffer.pos</a></div><div class="ttdeci">int pos</div><div class="ttdoc">The current position in the array. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00036">ByteBuffer.cs:36</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a4beda85eabb0aab7309186d8e2719589"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a4beda85eabb0aab7309186d8e2719589">Deveel.Data.Util.ByteBuffer.WriteInt8</a></div><div class="ttdeci">static void WriteInt8(long value, byte[] arr, int offset)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00252">ByteBuffer.cs:252</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
