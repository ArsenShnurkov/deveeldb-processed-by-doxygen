<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Sql.Objects.SqlBooleanTest Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm">Objects</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm">SqlBooleanTest</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Sql.Objects.SqlBooleanTest Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a617dfe59bd9c741f131a2c704598e778"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a617dfe59bd9c741f131a2c704598e778">CreateFromByte</a> ()</td></tr>
<tr class="separator:a617dfe59bd9c741f131a2c704598e778"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56429ee4fe60dd6bf82c70ba11dc7fba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a56429ee4fe60dd6bf82c70ba11dc7fba">CreateFromBoolean</a> ()</td></tr>
<tr class="separator:a56429ee4fe60dd6bf82c70ba11dc7fba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca27f168b3d34d6a309e614e489e4ecb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#aca27f168b3d34d6a309e614e489e4ecb">Compare_Equal</a> ()</td></tr>
<tr class="separator:aca27f168b3d34d6a309e614e489e4ecb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94f45c7bb77a20364566202be0d6cd4c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a94f45c7bb77a20364566202be0d6cd4c">Compare_NotEqual</a> ()</td></tr>
<tr class="separator:a94f45c7bb77a20364566202be0d6cd4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa451c4f7ea3b13b42d5f5256f7b74f56"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#aa451c4f7ea3b13b42d5f5256f7b74f56">Compare_ToBooleanNull</a> ()</td></tr>
<tr class="separator:aa451c4f7ea3b13b42d5f5256f7b74f56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdcaee82be679f140bfd928bdf5a6d55"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#acdcaee82be679f140bfd928bdf5a6d55">Compare_ToNull</a> ()</td></tr>
<tr class="separator:acdcaee82be679f140bfd928bdf5a6d55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46f6fbae91ffa73a10b469c7ede3bd7b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a46f6fbae91ffa73a10b469c7ede3bd7b">Compare_ToNumber_InRange</a> ()</td></tr>
<tr class="separator:a46f6fbae91ffa73a10b469c7ede3bd7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b2ed14099ad6bb308e4ea7141a00984"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a1b2ed14099ad6bb308e4ea7141a00984">Compare_ToNumber_OutOfRange</a> ()</td></tr>
<tr class="separator:a1b2ed14099ad6bb308e4ea7141a00984"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e10f2358f71394523820cd17d5d5f37"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a6e10f2358f71394523820cd17d5d5f37">Equality_True</a> ()</td></tr>
<tr class="separator:a6e10f2358f71394523820cd17d5d5f37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c4215c048988da78e12783a2a2d8257"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a6c4215c048988da78e12783a2a2d8257">Equality_False</a> ()</td></tr>
<tr class="separator:a6c4215c048988da78e12783a2a2d8257"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90a4663505667b6d01caed0464f63a13"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a90a4663505667b6d01caed0464f63a13">Equality_ToNull_True</a> ()</td></tr>
<tr class="separator:a90a4663505667b6d01caed0464f63a13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a228ccea1ef762db80d7ed034a5e4a9d2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBooleanTest.htm#a228ccea1ef762db80d7ed034a5e4a9d2">Convert_ToString</a> ()</td></tr>
<tr class="separator:a228ccea1ef762db80d7ed034a5e4a9d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="SqlBooleanTest_8cs_source.htm#l00024">24</a> of file <a class="el" href="SqlBooleanTest_8cs_source.htm">SqlBooleanTest.cs</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aca27f168b3d34d6a309e614e489e4ecb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlBooleanTest.Compare_Equal </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBooleanTest_8cs_source.htm#l00053">53</a> of file <a class="el" href="SqlBooleanTest_8cs_source.htm">SqlBooleanTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                                    {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            var value2 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            Assert.IsFalse(value1.IsNull);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            Assert.IsFalse(value2.IsNull);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            Assert.IsTrue(value1.IsComparableTo(value2));</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keywordtype">int</span> i = -2;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            Assert.DoesNotThrow(() =&gt; i = value1.CompareTo(value2));</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            Assert.AreEqual(0, i);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a5611a45679d0938ba19c3f26d7385e67"><div class="ttname"><a href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlBoolean SqlBoolean</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00026">DataObject.cs:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a94f45c7bb77a20364566202be0d6cd4c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlBooleanTest.Compare_NotEqual </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBooleanTest_8cs_source.htm#l00069">69</a> of file <a class="el" href="SqlBooleanTest_8cs_source.htm">SqlBooleanTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                       {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.False;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            var value2 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            Assert.IsFalse(value1.IsNull);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            Assert.IsFalse(value2.IsNull);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            Assert.IsTrue(value1.IsComparableTo(value2));</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="keywordtype">int</span> i = -2;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            Assert.DoesNotThrow(() =&gt; i = value1.CompareTo(value2));</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            Assert.AreEqual(-1, i);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a5611a45679d0938ba19c3f26d7385e67"><div class="ttname"><a href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlBoolean SqlBoolean</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00026">DataObject.cs:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa451c4f7ea3b13b42d5f5256f7b74f56"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlBooleanTest.Compare_ToBooleanNull </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBooleanTest_8cs_source.htm#l00085">85</a> of file <a class="el" href="SqlBooleanTest_8cs_source.htm">SqlBooleanTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                                            {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            var value2 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            Assert.IsFalse(value1.IsNull);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            Assert.IsTrue(value2.IsNull);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            Assert.IsTrue(value1.IsComparableTo(value2));</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordtype">int</span> i = -2;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            Assert.DoesNotThrow(() =&gt; i = value1.CompareTo(value2));</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            Assert.AreEqual(1, i);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="acdcaee82be679f140bfd928bdf5a6d55"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlBooleanTest.Compare_ToNull </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBooleanTest_8cs_source.htm#l00101">101</a> of file <a class="el" href="SqlBooleanTest_8cs_source.htm">SqlBooleanTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                     {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            var value2 = SqlNull.Value;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            Assert.IsFalse(value1.IsNull);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            Assert.IsTrue(value2.IsNull);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            Assert.IsTrue(value1.IsComparableTo(value2));</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordtype">int</span> i = -2;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            Assert.DoesNotThrow(() =&gt; i = value1.CompareTo(value2));</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            Assert.AreEqual(1, i);          </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a46f6fbae91ffa73a10b469c7ede3bd7b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlBooleanTest.Compare_ToNumber_InRange </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBooleanTest_8cs_source.htm#l00118">118</a> of file <a class="el" href="SqlBooleanTest_8cs_source.htm">SqlBooleanTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                                               {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            var value2 = SqlNumber.One;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            Assert.IsFalse(value1.IsNull);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            Assert.IsFalse(value2.IsNull);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            Assert.IsTrue(value1.IsComparableTo(value2));</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordtype">int</span> i = -2;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            Assert.DoesNotThrow(() =&gt; i = value1.CompareTo(value2));</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            Assert.AreEqual(0, i);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            value2 = SqlNumber.Zero;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            Assert.IsFalse(value1.IsNull);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            Assert.IsFalse(value2.IsNull);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            Assert.IsTrue(value1.IsComparableTo(value2));</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            i = -2;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            Assert.DoesNotThrow(() =&gt; i = value1.CompareTo(value2));</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            Assert.AreEqual(1, i);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1b2ed14099ad6bb308e4ea7141a00984"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlBooleanTest.Compare_ToNumber_OutOfRange </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBooleanTest_8cs_source.htm#l00146">146</a> of file <a class="el" href="SqlBooleanTest_8cs_source.htm">SqlBooleanTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                                  {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            var value2 = <span class="keyword">new</span> SqlNumber(21);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            Assert.IsFalse(value1.IsNull);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            Assert.IsFalse(value2.IsNull);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            Assert.IsFalse(value1.IsComparableTo(value2));</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            <span class="keywordtype">int</span> i = -2;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            Assert.Throws&lt;ArgumentOutOfRangeException&gt;(() =&gt; i = value1.CompareTo(value2));</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            Assert.AreEqual(-2, i);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a228ccea1ef762db80d7ed034a5e4a9d2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlBooleanTest.Convert_ToString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBooleanTest_8cs_source.htm#l00193">193</a> of file <a class="el" href="SqlBooleanTest_8cs_source.htm">SqlBooleanTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                                       {</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            var value = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;true&quot;</span>, value.ToString());</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            value = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.False;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;false&quot;</span>, value.ToString());</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            value = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;NULL&quot;</span>, value.ToString());</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a56429ee4fe60dd6bf82c70ba11dc7fba"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlBooleanTest.CreateFromBoolean </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBooleanTest_8cs_source.htm#l00039">39</a> of file <a class="el" href="SqlBooleanTest_8cs_source.htm">SqlBooleanTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                                        {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            var value = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            Assert.IsNotNull(value);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            Assert.IsFalse(value.IsNull);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            Assert.AreEqual(<span class="keyword">true</span>, (<span class="keywordtype">bool</span>)value);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            value = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            Assert.IsNotNull(value);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            Assert.IsFalse(value.IsNull);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            Assert.AreEqual(<span class="keyword">false</span>, (<span class="keywordtype">bool</span>)value);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        }</div>
<div class="ttc" id="DataObject_8cs_htm_a5611a45679d0938ba19c3f26d7385e67"><div class="ttname"><a href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlBoolean SqlBoolean</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00026">DataObject.cs:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a617dfe59bd9c741f131a2c704598e778"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlBooleanTest.CreateFromByte </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBooleanTest_8cs_source.htm#l00026">26</a> of file <a class="el" href="SqlBooleanTest_8cs_source.htm">SqlBooleanTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                                     {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            var value = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>(1);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            Assert.IsNotNull(value);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            Assert.IsFalse(value.IsNull);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            Assert.AreEqual(<span class="keyword">true</span>, (<span class="keywordtype">bool</span>)value);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            value = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>(0);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            Assert.IsNotNull(value);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            Assert.IsFalse(value.IsNull);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            Assert.AreEqual(<span class="keyword">false</span>, (<span class="keywordtype">bool</span>)value);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        }</div>
<div class="ttc" id="DataObject_8cs_htm_a5611a45679d0938ba19c3f26d7385e67"><div class="ttname"><a href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlBoolean SqlBoolean</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00026">DataObject.cs:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6c4215c048988da78e12783a2a2d8257"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlBooleanTest.Equality_False </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBooleanTest_8cs_source.htm#l00171">171</a> of file <a class="el" href="SqlBooleanTest_8cs_source.htm">SqlBooleanTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                                     {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            var value2 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.False;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            Assert.IsTrue(value1 != value2);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            value2 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            Assert.IsTrue(value1 != value2);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a90a4663505667b6d01caed0464f63a13"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlBooleanTest.Equality_ToNull_True </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBooleanTest_8cs_source.htm#l00184">184</a> of file <a class="el" href="SqlBooleanTest_8cs_source.htm">SqlBooleanTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                                           {</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            var value2 = SqlNull.Value;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            Assert.IsTrue(value1 == value2);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6e10f2358f71394523820cd17d5d5f37"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Sql.Objects.SqlBooleanTest.Equality_True </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlBooleanTest_8cs_source.htm#l00162">162</a> of file <a class="el" href="SqlBooleanTest_8cs_source.htm">SqlBooleanTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                    {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            var value1 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            var value2 = <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            Assert.IsTrue(value1 == value2);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb-nunit/Deveel.Data.Sql.Objects/<a class="el" href="SqlBooleanTest_8cs_source.htm">SqlBooleanTest.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
