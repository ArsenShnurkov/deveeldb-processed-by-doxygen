<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Protocol.Processor Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Protocol.htm">Protocol</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm">Processor</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#properties">Properties</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classDeveel_1_1Data_1_1Protocol_1_1Processor-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Protocol.Processor Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>This processes _queries from a client and dispatches the _queries to the database.  
 <a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#details">More...</a></p>
<div class="dynheader">
Inheritance diagram for Deveel.Data.Protocol.Processor:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classDeveel_1_1Data_1_1Protocol_1_1Processor.png" usemap="#Deveel.Data.Protocol.Processor_map" alt=""/>
  <map id="Deveel.Data.Protocol.Processor_map" name="Deveel.Data.Protocol.Processor_map">
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af05126f6ab39b213d2c2ca4633879a98"><td class="memItemLeft" align="right" valign="top">abstract void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#af05126f6ab39b213d2c2ca4633879a98">Close</a> ()</td></tr>
<tr class="memdesc:af05126f6ab39b213d2c2ca4633879a98"><td class="mdescLeft">&#160;</td><td class="mdescRight">Closes the connection with the client.  <a href="#af05126f6ab39b213d2c2ca4633879a98">More...</a><br /></td></tr>
<tr class="separator:af05126f6ab39b213d2c2ca4633879a98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e2c498909d1409035e1b2951d9f2c70"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0e2c498909d1409035e1b2951d9f2c70">Dispose</a> ()</td></tr>
<tr class="separator:a0e2c498909d1409035e1b2951d9f2c70"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a2e8068c3832a73b39a5d2c10a9da55ba"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a2e8068c3832a73b39a5d2c10a9da55ba">Processor</a> (DbController <a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">controller</a>, string <a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab08c677faf5509b36ebeb272dbdea2d5">hostString</a>)</td></tr>
<tr class="separator:a2e8068c3832a73b39a5d2c10a9da55ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a648a81dc9cad14071959026995a4bb99"><td class="memItemLeft" align="right" valign="top">byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a648a81dc9cad14071959026995a4bb99">ProcessCommand</a> (byte[] command)</td></tr>
<tr class="memdesc:a648a81dc9cad14071959026995a4bb99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processes a single <a class="el" href="classDeveel_1_1Data_1_1Query.htm">Query</a> from the client.  <a href="#a648a81dc9cad14071959026995a4bb99">More...</a><br /></td></tr>
<tr class="separator:a648a81dc9cad14071959026995a4bb99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cb3591c932ae050152cf36489698316"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a4cb3591c932ae050152cf36489698316">Dispose</a> (bool disposing)</td></tr>
<tr class="memdesc:a4cb3591c932ae050152cf36489698316"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disposes of this processor.  <a href="#a4cb3591c932ae050152cf36489698316">More...</a><br /></td></tr>
<tr class="separator:a4cb3591c932ae050152cf36489698316"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e00c133c32ddde5d821f9c474444a63"><td class="memItemLeft" align="right" valign="top">abstract void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a9e00c133c32ddde5d821f9c474444a63">SendEvent</a> (byte[] eventMsg)</td></tr>
<tr class="memdesc:a9e00c133c32ddde5d821f9c474444a63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends an event to the client.  <a href="#a9e00c133c32ddde5d821f9c474444a63">More...</a><br /></td></tr>
<tr class="separator:a9e00c133c32ddde5d821f9c474444a63"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="properties"></a>
Properties</h2></td></tr>
<tr class="memitem:a63dabc4aa3dcd94cd56f1b1906cc72fc"><td class="memItemLeft" align="right" valign="top">ClientConnectionState&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a63dabc4aa3dcd94cd56f1b1906cc72fc">ClientState</a><code> [get]</code></td></tr>
<tr class="memdesc:a63dabc4aa3dcd94cd56f1b1906cc72fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the state of the connection.  <a href="#a63dabc4aa3dcd94cd56f1b1906cc72fc">More...</a><br /></td></tr>
<tr class="separator:a63dabc4aa3dcd94cd56f1b1906cc72fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a681117f8c95cbb16bd105934f42556fd"><td class="memItemLeft" align="right" valign="top">abstract bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a681117f8c95cbb16bd105934f42556fd">IsClosed</a><code> [get]</code></td></tr>
<tr class="memdesc:a681117f8c95cbb16bd105934f42556fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the connection to the client is closed.  <a href="#a681117f8c95cbb16bd105934f42556fd">More...</a><br /></td></tr>
<tr class="separator:a681117f8c95cbb16bd105934f42556fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e2bd072c375038d193a5a14331d12d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1IDatabase.htm">IDatabase</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6e2bd072c375038d193a5a14331d12d4">Database</a><code> [get, private set]</code></td></tr>
<tr class="separator:a6e2bd072c375038d193a5a14331d12d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a0eb22af9caca9751b3837adbe7a3b129"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0eb22af9caca9751b3837adbe7a3b129">OnDatabaseEvent</a> (int eventType, String eventMessage)</td></tr>
<tr class="separator:a0eb22af9caca9751b3837adbe7a3b129"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab26b468a6fee9411d7278b546b06befd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab26b468a6fee9411d7278b546b06befd">ChangeDatabaseInterface</a> (IDbConfig config, string databaseName)</td></tr>
<tr class="separator:ab26b468a6fee9411d7278b546b06befd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a5e705d687fef6f59417fffff835da2"><td class="memItemLeft" align="right" valign="top">byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a3a5e705d687fef6f59417fffff835da2">ProcessQuery</a> (byte[] command)</td></tr>
<tr class="memdesc:a3a5e705d687fef6f59417fffff835da2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processes a query on the byte[] array and returns the result.  <a href="#a3a5e705d687fef6f59417fffff835da2">More...</a><br /></td></tr>
<tr class="separator:a3a5e705d687fef6f59417fffff835da2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac322164f492eed402ef2886a7ccd3de4"><td class="memItemLeft" align="right" valign="top">byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ac322164f492eed402ef2886a7ccd3de4">ChangeDatabase</a> (int dispatchId, byte[] command)</td></tr>
<tr class="separator:ac322164f492eed402ef2886a7ccd3de4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5c8ed7855932a8e138c19517a31feaf"><td class="memItemLeft" align="right" valign="top">byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#aa5c8ed7855932a8e138c19517a31feaf">QueryCommand</a> (int dispatchId, byte[] command)</td></tr>
<tr class="memdesc:aa5c8ed7855932a8e138c19517a31feaf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Executes a query and returns the header for the result in the response.  <a href="#aa5c8ed7855932a8e138c19517a31feaf">More...</a><br /></td></tr>
<tr class="separator:aa5c8ed7855932a8e138c19517a31feaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab53597924fbb008d0fccf40e22171139"><td class="memItemLeft" align="right" valign="top">byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab53597924fbb008d0fccf40e22171139">PushStreamableObjectPart</a> (int dispatchId, byte[] command)</td></tr>
<tr class="memdesc:ab53597924fbb008d0fccf40e22171139"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes a part of a streamable object onto the server.  <a href="#ab53597924fbb008d0fccf40e22171139">More...</a><br /></td></tr>
<tr class="separator:ab53597924fbb008d0fccf40e22171139"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a567e5c810cac89e1d45f3e4027dc7e74"><td class="memItemLeft" align="right" valign="top">byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a567e5c810cac89e1d45f3e4027dc7e74">ResultSection</a> (int dispatchId, byte[] command)</td></tr>
<tr class="memdesc:a567e5c810cac89e1d45f3e4027dc7e74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Responds with a part of the result set of a query made via the <a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a4b702f47ebd2e6e2a8d779a8981c2f38" title="Query sent to the server for processing. ">ProtocolConstants.Query</a> <a class="el" href="classDeveel_1_1Data_1_1Query.htm">Query</a>.  <a href="#a567e5c810cac89e1d45f3e4027dc7e74">More...</a><br /></td></tr>
<tr class="separator:a567e5c810cac89e1d45f3e4027dc7e74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0477c5e4a1a96977a4b5ccbc93efaba7"><td class="memItemLeft" align="right" valign="top">byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0477c5e4a1a96977a4b5ccbc93efaba7">StreamableObjectSection</a> (int dispatchId, byte[] command)</td></tr>
<tr class="memdesc:a0477c5e4a1a96977a4b5ccbc93efaba7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a section of a streamable object.  <a href="#a0477c5e4a1a96977a4b5ccbc93efaba7">More...</a><br /></td></tr>
<tr class="separator:a0477c5e4a1a96977a4b5ccbc93efaba7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa597983d626b2e9d49740a95ecf017d"><td class="memItemLeft" align="right" valign="top">byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#aaa597983d626b2e9d49740a95ecf017d">DisposeStreamableObject</a> (int dispatchId, byte[] command)</td></tr>
<tr class="memdesc:aaa597983d626b2e9d49740a95ecf017d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disposes of a streamable object.  <a href="#aaa597983d626b2e9d49740a95ecf017d">More...</a><br /></td></tr>
<tr class="separator:aaa597983d626b2e9d49740a95ecf017d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7a4b3bc43a5e0860b90cfa510d8591b"><td class="memItemLeft" align="right" valign="top">byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ae7a4b3bc43a5e0860b90cfa510d8591b">DisposeResult</a> (int dispatchId, byte[] command)</td></tr>
<tr class="memdesc:ae7a4b3bc43a5e0860b90cfa510d8591b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disposes of a result set we queries via the <a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a4b702f47ebd2e6e2a8d779a8981c2f38" title="Query sent to the server for processing. ">ProtocolConstants.Query</a> <a class="el" href="classDeveel_1_1Data_1_1Query.htm">Query</a>.  <a href="#ae7a4b3bc43a5e0860b90cfa510d8591b">More...</a><br /></td></tr>
<tr class="separator:ae7a4b3bc43a5e0860b90cfa510d8591b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2411b858e7556aef9e3134815cef624"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#af2411b858e7556aef9e3134815cef624">~Processor</a> ()</td></tr>
<tr class="separator:af2411b858e7556aef9e3134815cef624"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:a47ff272705aa96ad1db8e79209bb2e7e"><td class="memItemLeft" align="right" valign="top">static byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a47ff272705aa96ad1db8e79209bb2e7e">Single</a> (int val)</td></tr>
<tr class="memdesc:a47ff272705aa96ad1db8e79209bb2e7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a single 4 byte array with the given int encoded into it.  <a href="#a47ff272705aa96ad1db8e79209bb2e7e">More...</a><br /></td></tr>
<tr class="separator:a47ff272705aa96ad1db8e79209bb2e7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a360325d66b16eb3b0d98145d40fd767e"><td class="memItemLeft" align="right" valign="top">static byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Exception</a> (int dispatchId, DataException e)</td></tr>
<tr class="memdesc:a360325d66b16eb3b0d98145d40fd767e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a response that represents a data exception failure.  <a href="#a360325d66b16eb3b0d98145d40fd767e">More...</a><br /></td></tr>
<tr class="separator:a360325d66b16eb3b0d98145d40fd767e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc955cad267890c308011cf97abe4c0c"><td class="memItemLeft" align="right" valign="top">static byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#abc955cad267890c308011cf97abe4c0c">SimpleSuccess</a> (int dispatchId)</td></tr>
<tr class="memdesc:abc955cad267890c308011cf97abe4c0c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a response that indicates a simple success of an operation with the given dispatch id.  <a href="#abc955cad267890c308011cf97abe4c0c">More...</a><br /></td></tr>
<tr class="separator:abc955cad267890c308011cf97abe4c0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a51b9ec0741da951c4e5616320fb70a65"><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a51b9ec0741da951c4e5616320fb70a65">ServerVersion</a> = 1</td></tr>
<tr class="memdesc:a51b9ec0741da951c4e5616320fb70a65"><td class="mdescLeft">&#160;</td><td class="mdescRight">The version of the server protocol.  <a href="#a51b9ec0741da951c4e5616320fb70a65">More...</a><br /></td></tr>
<tr class="separator:a51b9ec0741da951c4e5616320fb70a65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85fe40529d554001986ead6dc4ee0ddb"><td class="memItemLeft" align="right" valign="top">ClientConnectionState&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a85fe40529d554001986ead6dc4ee0ddb">state</a></td></tr>
<tr class="memdesc:a85fe40529d554001986ead6dc4ee0ddb"><td class="mdescLeft">&#160;</td><td class="mdescRight">The current state we are in.  <a href="#a85fe40529d554001986ead6dc4ee0ddb">More...</a><br /></td></tr>
<tr class="separator:a85fe40529d554001986ead6dc4ee0ddb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4685987f382736d486d9a8f5cc72eb73"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a4685987f382736d486d9a8f5cc72eb73">authenticationTries</a></td></tr>
<tr class="memdesc:a4685987f382736d486d9a8f5cc72eb73"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of authentications tried.  <a href="#a4685987f382736d486d9a8f5cc72eb73">More...</a><br /></td></tr>
<tr class="separator:a4685987f382736d486d9a8f5cc72eb73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab08c677faf5509b36ebeb272dbdea2d5"><td class="memItemLeft" align="right" valign="top">readonly string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab08c677faf5509b36ebeb272dbdea2d5">hostString</a></td></tr>
<tr class="separator:ab08c677faf5509b36ebeb272dbdea2d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9536a227ab2fa749b6a25b7331223f5"><td class="memItemLeft" align="right" valign="top">readonly DbController&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">controller</a></td></tr>
<tr class="separator:ad9536a227ab2fa749b6a25b7331223f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87f6a6465602be448530fb2ade194f2b"><td class="memItemLeft" align="right" valign="top">readonly Dictionary&lt; string, DatabaseInterface &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a87f6a6465602be448530fb2ade194f2b">dbInterfaces</a></td></tr>
<tr class="separator:a87f6a6465602be448530fb2ade194f2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ad397f82ba92e8b50c14e862464080d"><td class="memItemLeft" align="right" valign="top">DatabaseInterface&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">dbInterface</a></td></tr>
<tr class="separator:a6ad397f82ba92e8b50c14e862464080d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0129fb04066c23a1f1b42a4218b42ab3"><td class="memItemLeft" align="right" valign="top">readonly <a class="el" href="namespaceDeveel_1_1Data_1_1Protocol.htm#afb4421f156bc5f10909c84bbf205a03c">DatabaseEventCallback</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0129fb04066c23a1f1b42a4218b42ab3">dbCallback</a></td></tr>
<tr class="memdesc:a0129fb04066c23a1f1b42a4218b42ab3"><td class="mdescLeft">&#160;</td><td class="mdescRight">The database call back method that sends database events back to the client.  <a href="#a0129fb04066c23a1f1b42a4218b42ab3">More...</a><br /></td></tr>
<tr class="separator:a0129fb04066c23a1f1b42a4218b42ab3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This processes _queries from a client and dispatches the _queries to the database. </p>
<p>This is a state based class. There is a single processor for each client connected. This class is designed to be flexible enough to handle packet based protocols as well as stream based protocols. </p>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00041">41</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a2e8068c3832a73b39a5d2c10a9da55ba"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Protocol.Processor.Processor </td>
          <td>(</td>
          <td class="paramtype">DbController&#160;</td>
          <td class="paramname"><em>controller</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>hostString</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00063">63</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                                                        {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            this.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab08c677faf5509b36ebeb272dbdea2d5">hostString</a> = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab08c677faf5509b36ebeb272dbdea2d5">hostString</a>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a87f6a6465602be448530fb2ade194f2b">dbInterfaces</a> = <span class="keyword">new</span> Dictionary&lt;string, DatabaseInterface&gt;();</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            this.<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">controller</a> = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">controller</a>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a85fe40529d554001986ead6dc4ee0ddb">state</a> = 0;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a4685987f382736d486d9a8f5cc72eb73">authenticationTries</a> = 0;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0129fb04066c23a1f1b42a4218b42ab3">dbCallback</a> = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0eb22af9caca9751b3837adbe7a3b129">OnDatabaseEvent</a>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ad9536a227ab2fa749b6a25b7331223f5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">Deveel.Data.Protocol.Processor.controller</a></div><div class="ttdeci">readonly DbController controller</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00059">Processor.cs:59</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a0129fb04066c23a1f1b42a4218b42ab3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0129fb04066c23a1f1b42a4218b42ab3">Deveel.Data.Protocol.Processor.dbCallback</a></div><div class="ttdeci">readonly DatabaseEventCallback dbCallback</div><div class="ttdoc">The database call back method that sends database events back to the client. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00090">Processor.cs:90</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a87f6a6465602be448530fb2ade194f2b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a87f6a6465602be448530fb2ade194f2b">Deveel.Data.Protocol.Processor.dbInterfaces</a></div><div class="ttdeci">readonly Dictionary&lt; string, DatabaseInterface &gt; dbInterfaces</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00060">Processor.cs:60</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a4685987f382736d486d9a8f5cc72eb73"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a4685987f382736d486d9a8f5cc72eb73">Deveel.Data.Protocol.Processor.authenticationTries</a></div><div class="ttdeci">int authenticationTries</div><div class="ttdoc">Number of authentications tried. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00055">Processor.cs:55</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a85fe40529d554001986ead6dc4ee0ddb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a85fe40529d554001986ead6dc4ee0ddb">Deveel.Data.Protocol.Processor.state</a></div><div class="ttdeci">ClientConnectionState state</div><div class="ttdoc">The current state we are in. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00050">Processor.cs:50</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ab08c677faf5509b36ebeb272dbdea2d5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab08c677faf5509b36ebeb272dbdea2d5">Deveel.Data.Protocol.Processor.hostString</a></div><div class="ttdeci">readonly string hostString</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00057">Processor.cs:57</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a0eb22af9caca9751b3837adbe7a3b129"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0eb22af9caca9751b3837adbe7a3b129">Deveel.Data.Protocol.Processor.OnDatabaseEvent</a></div><div class="ttdeci">void OnDatabaseEvent(int eventType, String eventMessage)</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00072">Processor.cs:72</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af2411b858e7556aef9e3134815cef624"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Protocol.Processor.~Processor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00554">554</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                     {</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0e2c498909d1409035e1b2951d9f2c70">Dispose</a>(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a0e2c498909d1409035e1b2951d9f2c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0e2c498909d1409035e1b2951d9f2c70">Deveel.Data.Protocol.Processor.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00558">Processor.cs:558</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ac322164f492eed402ef2886a7ccd3de4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">byte [] Deveel.Data.Protocol.Processor.ChangeDatabase </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dispatchId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>command</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00319">319</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                                                                       {</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            <span class="comment">// Read the query from the Query.</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            MemoryStream input = <span class="keyword">new</span> MemoryStream(command, 8, command.Length - 8);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            BinaryReader reader = <span class="keyword">new</span> BinaryReader(input, Encoding.Unicode);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;            <span class="keywordtype">string</span> databaseName = reader.ReadString();</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">dbInterface</a>.ChangeDatabase(databaseName);</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a85fe40529d554001986ead6dc4ee0ddb">state</a> = ClientConnectionState.NotAuthenticated;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#abc955cad267890c308011cf97abe4c0c">SimpleSuccess</a>(dispatchId);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            } <span class="keywordflow">catch</span> (DataException e) {</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Exception</a>(dispatchId, e);</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            }</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a360325d66b16eb3b0d98145d40fd767e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Deveel.Data.Protocol.Processor.Exception</a></div><div class="ttdeci">static byte[] Exception(int dispatchId, DataException e)</div><div class="ttdoc">Creates a response that represents a data exception failure. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00214">Processor.cs:214</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a6ad397f82ba92e8b50c14e862464080d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">Deveel.Data.Protocol.Processor.dbInterface</a></div><div class="ttdeci">DatabaseInterface dbInterface</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00061">Processor.cs:61</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_abc955cad267890c308011cf97abe4c0c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#abc955cad267890c308011cf97abe4c0c">Deveel.Data.Protocol.Processor.SimpleSuccess</a></div><div class="ttdeci">static byte[] SimpleSuccess(int dispatchId)</div><div class="ttdoc">Creates a response that indicates a simple success of an operation with the given dispatch id...</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00248">Processor.cs:248</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a85fe40529d554001986ead6dc4ee0ddb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a85fe40529d554001986ead6dc4ee0ddb">Deveel.Data.Protocol.Processor.state</a></div><div class="ttdeci">ClientConnectionState state</div><div class="ttdoc">The current state we are in. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00050">Processor.cs:50</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab26b468a6fee9411d7278b546b06befd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Protocol.Processor.ChangeDatabaseInterface </td>
          <td>(</td>
          <td class="paramtype">IDbConfig&#160;</td>
          <td class="paramname"><em>config</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>databaseName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00092">92</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                                                                    {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">controller</a>.DatabaseExists(config, databaseName))</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            DatabaseInterface dbi;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a87f6a6465602be448530fb2ade194f2b">dbInterfaces</a>.TryGetValue(databaseName, out dbi)) {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                dbi = <span class="keyword">new</span> DatabaseInterface(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">controller</a>, databaseName, <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab08c677faf5509b36ebeb272dbdea2d5">hostString</a>);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a87f6a6465602be448530fb2ade194f2b">dbInterfaces</a>[databaseName] = dbi;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            }</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6e2bd072c375038d193a5a14331d12d4">Database</a> = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">controller</a>.GetDatabase(databaseName);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">dbInterface</a> = dbi;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ad9536a227ab2fa749b6a25b7331223f5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">Deveel.Data.Protocol.Processor.controller</a></div><div class="ttdeci">readonly DbController controller</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00059">Processor.cs:59</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a6e2bd072c375038d193a5a14331d12d4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6e2bd072c375038d193a5a14331d12d4">Deveel.Data.Protocol.Processor.Database</a></div><div class="ttdeci">IDatabase Database</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00551">Processor.cs:551</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a87f6a6465602be448530fb2ade194f2b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a87f6a6465602be448530fb2ade194f2b">Deveel.Data.Protocol.Processor.dbInterfaces</a></div><div class="ttdeci">readonly Dictionary&lt; string, DatabaseInterface &gt; dbInterfaces</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00060">Processor.cs:60</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a6ad397f82ba92e8b50c14e862464080d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">Deveel.Data.Protocol.Processor.dbInterface</a></div><div class="ttdeci">DatabaseInterface dbInterface</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00061">Processor.cs:61</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ab08c677faf5509b36ebeb272dbdea2d5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab08c677faf5509b36ebeb272dbdea2d5">Deveel.Data.Protocol.Processor.hostString</a></div><div class="ttdeci">readonly string hostString</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00057">Processor.cs:57</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af05126f6ab39b213d2c2ca4633879a98"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">abstract void Deveel.Data.Protocol.Processor.Close </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Closes the connection with the client. </p>

</div>
</div>
<a class="anchor" id="a4cb3591c932ae050152cf36489698316"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Protocol.Processor.Dispose </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>disposing</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Disposes of this processor. </p>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00301">301</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                                               {</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            <span class="keywordflow">if</span> (disposing) {</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                    <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a87f6a6465602be448530fb2ade194f2b">dbInterfaces</a>.Count &gt; 0) {</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                        <span class="keywordflow">foreach</span> (DatabaseInterface databaseInterface <span class="keywordflow">in</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a87f6a6465602be448530fb2ade194f2b">dbInterfaces</a>.Values) {</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                            databaseInterface.Dispose();</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                        }</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                    }</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a87f6a6465602be448530fb2ade194f2b">dbInterfaces</a>.Clear();</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                } <span class="keywordflow">catch</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Exception</a> e) {</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">controller</a>.Logger.Error(<span class="keyword">this</span>, e);</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                }</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            }</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ad9536a227ab2fa749b6a25b7331223f5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">Deveel.Data.Protocol.Processor.controller</a></div><div class="ttdeci">readonly DbController controller</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00059">Processor.cs:59</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a360325d66b16eb3b0d98145d40fd767e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Deveel.Data.Protocol.Processor.Exception</a></div><div class="ttdeci">static byte[] Exception(int dispatchId, DataException e)</div><div class="ttdoc">Creates a response that represents a data exception failure. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00214">Processor.cs:214</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a87f6a6465602be448530fb2ade194f2b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a87f6a6465602be448530fb2ade194f2b">Deveel.Data.Protocol.Processor.dbInterfaces</a></div><div class="ttdeci">readonly Dictionary&lt; string, DatabaseInterface &gt; dbInterfaces</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00060">Processor.cs:60</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0e2c498909d1409035e1b2951d9f2c70"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Protocol.Processor.Dispose </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00558">558</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                              {</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0e2c498909d1409035e1b2951d9f2c70">Dispose</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            GC.SuppressFinalize(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a0e2c498909d1409035e1b2951d9f2c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0e2c498909d1409035e1b2951d9f2c70">Deveel.Data.Protocol.Processor.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00558">Processor.cs:558</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae7a4b3bc43a5e0860b90cfa510d8591b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">byte [] Deveel.Data.Protocol.Processor.DisposeResult </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dispatchId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>command</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Disposes of a result set we queries via the <a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a4b702f47ebd2e6e2a8d779a8981c2f38" title="Query sent to the server for processing. ">ProtocolConstants.Query</a> <a class="el" href="classDeveel_1_1Data_1_1Query.htm">Query</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dispatchId</td><td></td></tr>
    <tr><td class="paramname">command</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00507">507</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                                                                     {</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            <span class="comment">// Get the result id.</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            <span class="keywordtype">int</span> resultId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 8);</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                <span class="comment">// Dispose the table.</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">dbInterface</a>.DisposeResult(resultId);</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                <span class="comment">// Return operation success.</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#abc955cad267890c308011cf97abe4c0c">SimpleSuccess</a>(dispatchId);</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;            } <span class="keywordflow">catch</span> (DataException e) {</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Exception</a>(dispatchId, e);</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;            }</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a946b330588fd8d78dcdf762be5b80886"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">Deveel.Data.Util.ByteBuffer.ReadInt4</a></div><div class="ttdeci">int ReadInt4()</div><div class="ttdoc">Reads an integer from the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00128">ByteBuffer.cs:128</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a360325d66b16eb3b0d98145d40fd767e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Deveel.Data.Protocol.Processor.Exception</a></div><div class="ttdeci">static byte[] Exception(int dispatchId, DataException e)</div><div class="ttdoc">Creates a response that represents a data exception failure. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00214">Processor.cs:214</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a6ad397f82ba92e8b50c14e862464080d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">Deveel.Data.Protocol.Processor.dbInterface</a></div><div class="ttdeci">DatabaseInterface dbInterface</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00061">Processor.cs:61</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_abc955cad267890c308011cf97abe4c0c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#abc955cad267890c308011cf97abe4c0c">Deveel.Data.Protocol.Processor.SimpleSuccess</a></div><div class="ttdeci">static byte[] SimpleSuccess(int dispatchId)</div><div class="ttdoc">Creates a response that indicates a simple success of an operation with the given dispatch id...</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00248">Processor.cs:248</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">Deveel.Data.Util.ByteBuffer</a></div><div class="ttdoc">A wrapper for an array of byte. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00027">ByteBuffer.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aaa597983d626b2e9d49740a95ecf017d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">byte [] Deveel.Data.Protocol.Processor.DisposeStreamableObject </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dispatchId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>command</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Disposes of a streamable object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dispatchId</td><td></td></tr>
    <tr><td class="paramname">command</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00486">486</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                                                                               {</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;            <span class="keywordtype">int</span> resultId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 8);</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            <span class="keywordtype">long</span> streamableObjectId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">ReadInt8</a>(command, 12);</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                <span class="comment">// Pass this through to the underlying database interface.</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">dbInterface</a>.DisposeStreamableObject(resultId, streamableObjectId);</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                <span class="comment">// Return operation success.</span></div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#abc955cad267890c308011cf97abe4c0c">SimpleSuccess</a>(dispatchId);</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            } <span class="keywordflow">catch</span> (DataException e) {</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Exception</a>(dispatchId, e);</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            }</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a946b330588fd8d78dcdf762be5b80886"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">Deveel.Data.Util.ByteBuffer.ReadInt4</a></div><div class="ttdeci">int ReadInt4()</div><div class="ttdoc">Reads an integer from the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00128">ByteBuffer.cs:128</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a360325d66b16eb3b0d98145d40fd767e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Deveel.Data.Protocol.Processor.Exception</a></div><div class="ttdeci">static byte[] Exception(int dispatchId, DataException e)</div><div class="ttdoc">Creates a response that represents a data exception failure. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00214">Processor.cs:214</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a6ad397f82ba92e8b50c14e862464080d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">Deveel.Data.Protocol.Processor.dbInterface</a></div><div class="ttdeci">DatabaseInterface dbInterface</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00061">Processor.cs:61</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_abc955cad267890c308011cf97abe4c0c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#abc955cad267890c308011cf97abe4c0c">Deveel.Data.Protocol.Processor.SimpleSuccess</a></div><div class="ttdeci">static byte[] SimpleSuccess(int dispatchId)</div><div class="ttdoc">Creates a response that indicates a simple success of an operation with the given dispatch id...</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00248">Processor.cs:248</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">Deveel.Data.Util.ByteBuffer</a></div><div class="ttdoc">A wrapper for an array of byte. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00027">ByteBuffer.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_ad14d59e2c961bfbb3d7a857437fed53b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">Deveel.Data.Util.ByteBuffer.ReadInt8</a></div><div class="ttdeci">static long ReadInt8(byte[] arr, int offset)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00234">ByteBuffer.cs:234</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a360325d66b16eb3b0d98145d40fd767e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static byte [] Deveel.Data.Protocol.Processor.Exception </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dispatchId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DataException&#160;</td>
          <td class="paramname"><em>e</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a response that represents a data exception failure. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dispatchId</td><td></td></tr>
    <tr><td class="paramname">e</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00214">214</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                                                         {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keywordtype">int</span> code = <span class="comment">/* TODO: e.ErrorCode */</span> -1;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keywordtype">string</span> msg = e.Message;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.IsNullOrEmpty(msg))</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                msg = <span class="stringliteral">&quot;NULL exception message&quot;</span>;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keywordtype">string</span> server_msg = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            <span class="keywordtype">string</span> stack_trace = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="keywordflow">if</span> (e is DbDataException) {</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                DbDataException me = (DbDataException)e;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                server_msg = me.ServerErrorMessage;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                stack_trace = me.ServerErrorStackTrace;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                stack_trace = e.StackTrace;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            MemoryStream output = <span class="keyword">new</span> MemoryStream();</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            BinaryWriter writer = <span class="keyword">new</span> BinaryWriter(output, Encoding.Unicode);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            writer.Write(dispatchId);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            writer.Write(ProtocolConstants.Exception);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            writer.Write(code);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            writer.Write(msg);</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            writer.Write(stack_trace);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            <span class="keywordflow">return</span> output.ToArray();</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0eb22af9caca9751b3837adbe7a3b129"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Protocol.Processor.OnDatabaseEvent </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>eventType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">String&#160;</td>
          <td class="paramname"><em>eventMessage</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00072">72</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                                                         {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                <span class="comment">// Format the call back and send the event.</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                MemoryStream bout = <span class="keyword">new</span> MemoryStream();</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                BinaryWriter dout = <span class="keyword">new</span> BinaryWriter(bout, Encoding.Unicode);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                dout.Write(eventType);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                dout.Write(eventMessage);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a9e00c133c32ddde5d821f9c474444a63">SendEvent</a>(bout.ToArray());</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            } <span class="keywordflow">catch</span> (IOException e) {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">controller</a>.Logger.Error(<span class="keyword">this</span>, <span class="stringliteral">&quot;IO Error: &quot;</span> + e.Message);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">controller</a>.Logger.Error(<span class="keyword">this</span>, e);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a9e00c133c32ddde5d821f9c474444a63"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a9e00c133c32ddde5d821f9c474444a63">Deveel.Data.Protocol.Processor.SendEvent</a></div><div class="ttdeci">abstract void SendEvent(byte[] eventMsg)</div><div class="ttdoc">Sends an event to the client. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ad9536a227ab2fa749b6a25b7331223f5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">Deveel.Data.Protocol.Processor.controller</a></div><div class="ttdeci">readonly DbController controller</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00059">Processor.cs:59</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a648a81dc9cad14071959026995a4bb99"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">byte [] Deveel.Data.Protocol.Processor.ProcessCommand </td>
          <td>(</td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>command</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Processes a single <a class="el" href="classDeveel_1_1Data_1_1Query.htm">Query</a> from the client. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">command</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a byte array and the response is written out as a byte array, or <b>null</b> if the connection has been closed. </dd></dl>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00115">115</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                                        {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a85fe40529d554001986ead6dc4ee0ddb">state</a> == ClientConnectionState.Closed) {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                <span class="comment">// State 0 means we looking for the header...</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                BinaryReader reader = <span class="keyword">new</span> BinaryReader(<span class="keyword">new</span> MemoryStream(command), Encoding.ASCII);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                <span class="comment">/*</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">                int magic = ByteBuffer.ReadInt4(Query, 0);</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">                // The driver version number</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">                int maj_ver = ByteBuffer.ReadInt4(Query, 4);</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">                int min_ver = ByteBuffer.ReadInt4(Query, 8);</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">                */</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                reader.ReadInt32();     <span class="comment">// magic</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                reader.ReadInt32();     <span class="comment">// server major version</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                reader.ReadInt32();     <span class="comment">// server minor version</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <span class="keywordtype">string</span> databaseName = reader.ReadString();</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                <span class="keywordflow">if</span> (!<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab26b468a6fee9411d7278b546b06befd">ChangeDatabaseInterface</a>(<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">controller</a>.Config, databaseName))</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                    <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a47ff272705aa96ad1db8e79209bb2e7e">Single</a>(ProtocolConstants.DatabaseNotFound);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                Version version = Assembly.GetExecutingAssembly().GetName().Version;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                byte[] ackCommand = <span class="keyword">new</span> byte[4 + 1 + 4 + 4 + 1];</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                <span class="comment">// Send back an acknowledgement and the version number of the server</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">WriteInteger</a>(ProtocolConstants.Acknowledgement, ackCommand, 0);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                ackCommand[4] = 1;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">WriteInteger</a>(version.Major, ackCommand, 5);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">WriteInteger</a>(version.Minor, ackCommand, 9);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                ackCommand[13] = 0;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                <span class="comment">// Set to the next state.</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a85fe40529d554001986ead6dc4ee0ddb">state</a> = ClientConnectionState.NotAuthenticated;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                <span class="comment">// Return the acknowledgement</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <span class="keywordflow">return</span> ackCommand;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a85fe40529d554001986ead6dc4ee0ddb">state</a> == ClientConnectionState.NotAuthenticated) {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                <span class="comment">// State 4 means we looking for username and password...</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                MemoryStream input = <span class="keyword">new</span> MemoryStream(command);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                BinaryReader reader = <span class="keyword">new</span> BinaryReader(input, Encoding.ASCII);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <span class="keywordtype">string</span> defaultSchema = reader.ReadString();</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                <span class="keywordtype">string</span> username = reader.ReadString();</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                <span class="keywordtype">string</span> password = reader.ReadString();</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                    <span class="keywordflow">if</span> (!<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">dbInterface</a>.Login(defaultSchema, username, password, <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0129fb04066c23a1f1b42a4218b42ab3">dbCallback</a>)) {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                        <span class="comment">// Close after 12 tries.</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                        <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a4685987f382736d486d9a8f5cc72eb73">authenticationTries</a> &gt;= 12) {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                            <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#af05126f6ab39b213d2c2ca4633879a98">Close</a>();</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                        } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                            ++<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a4685987f382736d486d9a8f5cc72eb73">authenticationTries</a>;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a47ff272705aa96ad1db8e79209bb2e7e">Single</a>(ProtocolConstants.UserAuthenticationFailed);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                        }</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                        <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a85fe40529d554001986ead6dc4ee0ddb">state</a> = ClientConnectionState.Processing;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                        <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a47ff272705aa96ad1db8e79209bb2e7e">Single</a>(ProtocolConstants.UserAuthenticationPassed);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                    }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                } <span class="keywordflow">catch</span> (DataException) {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            }</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a85fe40529d554001986ead6dc4ee0ddb">state</a> == ClientConnectionState.Processing)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                <span class="comment">// Process the query</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a3a5e705d687fef6f59417fffff835da2">ProcessQuery</a>(command);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Exception</a>(<span class="stringliteral">&quot;Illegal state: &quot;</span> + <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a85fe40529d554001986ead6dc4ee0ddb">state</a>);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ad9536a227ab2fa749b6a25b7331223f5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ad9536a227ab2fa749b6a25b7331223f5">Deveel.Data.Protocol.Processor.controller</a></div><div class="ttdeci">readonly DbController controller</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00059">Processor.cs:59</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a0129fb04066c23a1f1b42a4218b42ab3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0129fb04066c23a1f1b42a4218b42ab3">Deveel.Data.Protocol.Processor.dbCallback</a></div><div class="ttdeci">readonly DatabaseEventCallback dbCallback</div><div class="ttdoc">The database call back method that sends database events back to the client. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00090">Processor.cs:90</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a800485cf5cc1fc8bae979aeff60e8877"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">Deveel.Data.Util.ByteBuffer.WriteInteger</a></div><div class="ttdeci">ByteBuffer WriteInteger(int v)</div><div class="ttdoc">Writes an integer into the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00118">ByteBuffer.cs:118</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a47ff272705aa96ad1db8e79209bb2e7e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a47ff272705aa96ad1db8e79209bb2e7e">Deveel.Data.Protocol.Processor.Single</a></div><div class="ttdeci">static byte[] Single(int val)</div><div class="ttdoc">Returns a single 4 byte array with the given int encoded into it. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00202">Processor.cs:202</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ab26b468a6fee9411d7278b546b06befd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab26b468a6fee9411d7278b546b06befd">Deveel.Data.Protocol.Processor.ChangeDatabaseInterface</a></div><div class="ttdeci">bool ChangeDatabaseInterface(IDbConfig config, string databaseName)</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00092">Processor.cs:92</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a360325d66b16eb3b0d98145d40fd767e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Deveel.Data.Protocol.Processor.Exception</a></div><div class="ttdeci">static byte[] Exception(int dispatchId, DataException e)</div><div class="ttdoc">Creates a response that represents a data exception failure. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00214">Processor.cs:214</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a3a5e705d687fef6f59417fffff835da2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a3a5e705d687fef6f59417fffff835da2">Deveel.Data.Protocol.Processor.ProcessQuery</a></div><div class="ttdeci">byte[] ProcessQuery(byte[] command)</div><div class="ttdoc">Processes a query on the byte[] array and returns the result. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00260">Processor.cs:260</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a4685987f382736d486d9a8f5cc72eb73"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a4685987f382736d486d9a8f5cc72eb73">Deveel.Data.Protocol.Processor.authenticationTries</a></div><div class="ttdeci">int authenticationTries</div><div class="ttdoc">Number of authentications tried. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00055">Processor.cs:55</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a6ad397f82ba92e8b50c14e862464080d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">Deveel.Data.Protocol.Processor.dbInterface</a></div><div class="ttdeci">DatabaseInterface dbInterface</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00061">Processor.cs:61</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">Deveel.Data.Util.ByteBuffer</a></div><div class="ttdoc">A wrapper for an array of byte. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00027">ByteBuffer.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a85fe40529d554001986ead6dc4ee0ddb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a85fe40529d554001986ead6dc4ee0ddb">Deveel.Data.Protocol.Processor.state</a></div><div class="ttdeci">ClientConnectionState state</div><div class="ttdoc">The current state we are in. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00050">Processor.cs:50</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_af05126f6ab39b213d2c2ca4633879a98"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#af05126f6ab39b213d2c2ca4633879a98">Deveel.Data.Protocol.Processor.Close</a></div><div class="ttdeci">abstract void Close()</div><div class="ttdoc">Closes the connection with the client. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3a5e705d687fef6f59417fffff835da2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">byte [] Deveel.Data.Protocol.Processor.ProcessQuery </td>
          <td>(</td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>command</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Processes a query on the byte[] array and returns the result. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">command</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00260">260</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                                                    {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            byte[] result;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="comment">// The first int is the Query.</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="keywordtype">int</span> ins = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 0);</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            <span class="comment">// Otherwise must be a dispatch type request.</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="comment">// The second is the dispatch id.</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            <span class="keywordtype">int</span> dispatchId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 4);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <span class="keywordflow">if</span> (dispatchId == -1)</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Exception</a>(<span class="stringliteral">&quot;Special case dispatch id of -1 in query&quot;</span>);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <span class="keywordflow">if</span> (ins == ProtocolConstants.ChangeDatabase) {</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                result = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ac322164f492eed402ef2886a7ccd3de4">ChangeDatabase</a>(dispatchId, command);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ins == ProtocolConstants.ResultSection) {</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                result = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a567e5c810cac89e1d45f3e4027dc7e74">ResultSection</a>(dispatchId, command);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ins == ProtocolConstants.Query) {</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                result = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#aa5c8ed7855932a8e138c19517a31feaf">QueryCommand</a>(dispatchId, command);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ins == ProtocolConstants.PushStreamableObjectPart) {</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                result = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab53597924fbb008d0fccf40e22171139">PushStreamableObjectPart</a>(dispatchId, command);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ins == ProtocolConstants.DisposeResult) {</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                result = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ae7a4b3bc43a5e0860b90cfa510d8591b">DisposeResult</a>(dispatchId, command);</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ins == ProtocolConstants.StreamableObjectSection) {</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                result = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0477c5e4a1a96977a4b5ccbc93efaba7">StreamableObjectSection</a>(dispatchId, command);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ins == ProtocolConstants.DisposeStreamableObject) {</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                result = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#aaa597983d626b2e9d49740a95ecf017d">DisposeStreamableObject</a>(dispatchId, command);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (ins == ProtocolConstants.Close) {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#af05126f6ab39b213d2c2ca4633879a98">Close</a>();</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                result = null;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Exception</a>(<span class="stringliteral">&quot;Query (&quot;</span> + ins + <span class="stringliteral">&quot;) not understood.&quot;</span>);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            }</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ac322164f492eed402ef2886a7ccd3de4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ac322164f492eed402ef2886a7ccd3de4">Deveel.Data.Protocol.Processor.ChangeDatabase</a></div><div class="ttdeci">byte[] ChangeDatabase(int dispatchId, byte[] command)</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00319">Processor.cs:319</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a946b330588fd8d78dcdf762be5b80886"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">Deveel.Data.Util.ByteBuffer.ReadInt4</a></div><div class="ttdeci">int ReadInt4()</div><div class="ttdoc">Reads an integer from the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00128">ByteBuffer.cs:128</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_aaa597983d626b2e9d49740a95ecf017d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#aaa597983d626b2e9d49740a95ecf017d">Deveel.Data.Protocol.Processor.DisposeStreamableObject</a></div><div class="ttdeci">byte[] DisposeStreamableObject(int dispatchId, byte[] command)</div><div class="ttdoc">Disposes of a streamable object. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00486">Processor.cs:486</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a360325d66b16eb3b0d98145d40fd767e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Deveel.Data.Protocol.Processor.Exception</a></div><div class="ttdeci">static byte[] Exception(int dispatchId, DataException e)</div><div class="ttdoc">Creates a response that represents a data exception failure. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00214">Processor.cs:214</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a0477c5e4a1a96977a4b5ccbc93efaba7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a0477c5e4a1a96977a4b5ccbc93efaba7">Deveel.Data.Protocol.Processor.StreamableObjectSection</a></div><div class="ttdeci">byte[] StreamableObjectSection(int dispatchId, byte[] command)</div><div class="ttdoc">Returns a section of a streamable object. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00455">Processor.cs:455</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a567e5c810cac89e1d45f3e4027dc7e74"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a567e5c810cac89e1d45f3e4027dc7e74">Deveel.Data.Protocol.Processor.ResultSection</a></div><div class="ttdeci">byte[] ResultSection(int dispatchId, byte[] command)</div><div class="ttdoc">Responds with a part of the result set of a query made via the ProtocolConstants.Query Query...</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00417">Processor.cs:417</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ae7a4b3bc43a5e0860b90cfa510d8591b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ae7a4b3bc43a5e0860b90cfa510d8591b">Deveel.Data.Protocol.Processor.DisposeResult</a></div><div class="ttdeci">byte[] DisposeResult(int dispatchId, byte[] command)</div><div class="ttdoc">Disposes of a result set we queries via the ProtocolConstants.Query Query. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00507">Processor.cs:507</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_ab53597924fbb008d0fccf40e22171139"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#ab53597924fbb008d0fccf40e22171139">Deveel.Data.Protocol.Processor.PushStreamableObjectPart</a></div><div class="ttdeci">byte[] PushStreamableObjectPart(int dispatchId, byte[] command)</div><div class="ttdoc">Pushes a part of a streamable object onto the server. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00389">Processor.cs:389</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">Deveel.Data.Util.ByteBuffer</a></div><div class="ttdoc">A wrapper for an array of byte. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00027">ByteBuffer.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_aa5c8ed7855932a8e138c19517a31feaf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#aa5c8ed7855932a8e138c19517a31feaf">Deveel.Data.Protocol.Processor.QueryCommand</a></div><div class="ttdeci">byte[] QueryCommand(int dispatchId, byte[] command)</div><div class="ttdoc">Executes a query and returns the header for the result in the response. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00346">Processor.cs:346</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_af05126f6ab39b213d2c2ca4633879a98"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#af05126f6ab39b213d2c2ca4633879a98">Deveel.Data.Protocol.Processor.Close</a></div><div class="ttdeci">abstract void Close()</div><div class="ttdoc">Closes the connection with the client. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab53597924fbb008d0fccf40e22171139"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">byte [] Deveel.Data.Protocol.Processor.PushStreamableObjectPart </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dispatchId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>command</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Pushes a part of a streamable object onto the server. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dispatchId</td><td>The number we need to respond with.</td></tr>
    <tr><td class="paramname">command</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00389">389</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                                                                                {</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            ReferenceType type = (ReferenceType) command[8];</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="keywordtype">long</span> objectId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">ReadInt8</a>(command, 9);</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            <span class="keywordtype">long</span> objectLength = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">ReadInt8</a>(command, 17);</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;            <span class="keywordtype">int</span> length = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 25);</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            byte[] obBuf = <span class="keyword">new</span> byte[length];</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Array</a>.Copy(command, 29, obBuf, 0, length);</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            <span class="keywordtype">long</span> offset = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">ReadInt8</a>(command, 29 + length);</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                <span class="comment">// Pass this through to the underlying database interface.</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">dbInterface</a>.PushStreamableObjectPart(type, objectId, objectLength, obBuf, offset, length);</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                <span class="comment">// Return operation success.</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#abc955cad267890c308011cf97abe4c0c">SimpleSuccess</a>(dispatchId);</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            } <span class="keywordflow">catch</span> (DataException e) {</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Exception</a>(dispatchId, e);</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            }</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a946b330588fd8d78dcdf762be5b80886"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">Deveel.Data.Util.ByteBuffer.ReadInt4</a></div><div class="ttdeci">int ReadInt4()</div><div class="ttdoc">Reads an integer from the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00128">ByteBuffer.cs:128</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a360325d66b16eb3b0d98145d40fd767e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Deveel.Data.Protocol.Processor.Exception</a></div><div class="ttdeci">static byte[] Exception(int dispatchId, DataException e)</div><div class="ttdoc">Creates a response that represents a data exception failure. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00214">Processor.cs:214</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a6ad397f82ba92e8b50c14e862464080d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">Deveel.Data.Protocol.Processor.dbInterface</a></div><div class="ttdeci">DatabaseInterface dbInterface</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00061">Processor.cs:61</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_abc955cad267890c308011cf97abe4c0c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#abc955cad267890c308011cf97abe4c0c">Deveel.Data.Protocol.Processor.SimpleSuccess</a></div><div class="ttdeci">static byte[] SimpleSuccess(int dispatchId)</div><div class="ttdoc">Creates a response that indicates a simple success of an operation with the given dispatch id...</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00248">Processor.cs:248</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">Deveel.Data.Util.ByteBuffer</a></div><div class="ttdoc">A wrapper for an array of byte. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00027">ByteBuffer.cs:27</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Deveel.Data.Types.SqlTypeCode.Array</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_ad14d59e2c961bfbb3d7a857437fed53b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">Deveel.Data.Util.ByteBuffer.ReadInt8</a></div><div class="ttdeci">static long ReadInt8(byte[] arr, int offset)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00234">ByteBuffer.cs:234</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa5c8ed7855932a8e138c19517a31feaf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">byte [] Deveel.Data.Protocol.Processor.QueryCommand </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dispatchId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>command</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Executes a query and returns the header for the result in the response. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dispatchId</td><td>The number we need to respond with.</td></tr>
    <tr><td class="paramname">command</td><td></td></tr>
  </table>
  </dd>
</dl>
<p>This keeps track of all result sets because sections of the result are later queries via the <a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#aed17c629f7c6ec9b35b70d6ef4732653" title="Requests a section of a result from the server. ">ProtocolConstants.ResultSection</a> <a class="el" href="classDeveel_1_1Data_1_1Query.htm">Query</a>. </p>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00346">346</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                                                                    {</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            <span class="comment">// Read the query from the Query.</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            MemoryStream input = <span class="keyword">new</span> MemoryStream(command, 8, command.Length - 8);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            BinaryReader reader = <span class="keyword">new</span> BinaryReader(input, Encoding.Unicode);</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1SqlQuery.htm">SqlQuery</a> query = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1SqlQuery.htm">SqlQuery</a>.ReadFrom(reader);</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                <span class="comment">// Do the query</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                IQueryResponse response = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">dbInterface</a>.ExecuteQuery(query)[0];</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                <span class="comment">// Prepare the stream to output the response to,</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                MemoryStream output = <span class="keyword">new</span> MemoryStream();</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                BinaryWriter writer = <span class="keyword">new</span> BinaryWriter(output, Encoding.Unicode);</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                writer.Write(dispatchId);</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                writer.Write(ProtocolConstants.Success);</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                <span class="comment">// The response sends the result id, the time the query took, the</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                <span class="comment">// total row count, and description of each column in the result.</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                writer.Write(response.ResultId);</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                writer.Write(response.QueryTimeMillis);</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                writer.Write(response.RowCount);</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                <span class="keywordtype">int</span> colCount = response.ColumnCount;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                writer.Write(colCount);</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; colCount; ++i) {</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                    response.GetColumnDescription(i).WriteTo(writer);</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                }</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                writer.Flush();</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                <span class="keywordflow">return</span> output.ToArray();</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            } <span class="keywordflow">catch</span> (DataException e) {</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                <span class="comment">//      debug.writeException(e);</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Exception</a>(dispatchId, e);</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            }</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1SqlQuery_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1SqlQuery.htm">Deveel.Data.Sql.SqlQuery</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlQuery_8cs_source.htm#l00026">SqlQuery.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a360325d66b16eb3b0d98145d40fd767e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Deveel.Data.Protocol.Processor.Exception</a></div><div class="ttdeci">static byte[] Exception(int dispatchId, DataException e)</div><div class="ttdoc">Creates a response that represents a data exception failure. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00214">Processor.cs:214</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a6ad397f82ba92e8b50c14e862464080d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">Deveel.Data.Protocol.Processor.dbInterface</a></div><div class="ttdeci">DatabaseInterface dbInterface</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00061">Processor.cs:61</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a567e5c810cac89e1d45f3e4027dc7e74"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">byte [] Deveel.Data.Protocol.Processor.ResultSection </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dispatchId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>command</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Responds with a part of the result set of a query made via the <a class="el" href="classDeveel_1_1Data_1_1Protocol_1_1ProtocolConstants.htm#a4b702f47ebd2e6e2a8d779a8981c2f38" title="Query sent to the server for processing. ">ProtocolConstants.Query</a> <a class="el" href="classDeveel_1_1Data_1_1Query.htm">Query</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dispatchId</td><td>The number we need to respond with.</td></tr>
    <tr><td class="paramname">command</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00417">417</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                                                                     {</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            <span class="keywordtype">int</span> resultId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 8);</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            <span class="keywordtype">int</span> rowNumber = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 12);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            <span class="keywordtype">int</span> rowCount = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 16);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                <span class="comment">// Get the result part...</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                ResultPart block = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">dbInterface</a>.GetResultPart(resultId, rowNumber, rowCount);</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                MemoryStream output = <span class="keyword">new</span> MemoryStream();</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                BinaryWriter writer = <span class="keyword">new</span> BinaryWriter(output, Encoding.Unicode);</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                writer.Write(dispatchId);</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                writer.Write(ProtocolConstants.Success);</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                <span class="comment">// Send the contents of the result set.</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                <span class="comment">// HACK - Work out column count by dividing number of entries in block</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                <span class="comment">//   by number of rows.</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                <span class="keywordtype">int</span> colCount = block.Count / rowCount;</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                writer.Write(colCount);</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                <span class="keywordtype">int</span> bsize = block.Count;</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> index = 0; index &lt; bsize; ++index) {</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                    ObjectTransfer.WriteTo(writer, block[index]);</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                }</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                writer.Flush();</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                <span class="keywordflow">return</span> output.ToArray();</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            } <span class="keywordflow">catch</span> (DataException e) {</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Exception</a>(dispatchId, e);</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            }</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a946b330588fd8d78dcdf762be5b80886"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">Deveel.Data.Util.ByteBuffer.ReadInt4</a></div><div class="ttdeci">int ReadInt4()</div><div class="ttdoc">Reads an integer from the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00128">ByteBuffer.cs:128</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a360325d66b16eb3b0d98145d40fd767e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Deveel.Data.Protocol.Processor.Exception</a></div><div class="ttdeci">static byte[] Exception(int dispatchId, DataException e)</div><div class="ttdoc">Creates a response that represents a data exception failure. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00214">Processor.cs:214</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a6ad397f82ba92e8b50c14e862464080d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">Deveel.Data.Protocol.Processor.dbInterface</a></div><div class="ttdeci">DatabaseInterface dbInterface</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00061">Processor.cs:61</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">Deveel.Data.Util.ByteBuffer</a></div><div class="ttdoc">A wrapper for an array of byte. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00027">ByteBuffer.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a9e00c133c32ddde5d821f9c474444a63"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">abstract void Deveel.Data.Protocol.Processor.SendEvent </td>
          <td>(</td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>eventMsg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sends an event to the client. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">eventMsg</td><td></td></tr>
  </table>
  </dd>
</dl>
<p>This is used to notify the client of trigger events, etc. </p>
<p><b><a class="el" href="namespaceDeveel_1_1Data_1_1Security.htm">Security</a> Issue</b>: This is always invoked by the DatabaseDispatcher. We have to be careful that this method isn't allowed to block. Otherwise the DatabaseDispatcher thread will be out of operation. Unfortunately assuring this may not be possible until non-blocking IO, or we use datagrams for transmission. I know for sure that the TCP implementation is vunrable. If the client doesn't 'read' what we are sending then this'll block when the buffers become full. </p>

</div>
</div>
<a class="anchor" id="abc955cad267890c308011cf97abe4c0c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static byte [] Deveel.Data.Protocol.Processor.SimpleSuccess </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dispatchId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a response that indicates a simple success of an operation with the given dispatch id. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dispatchId</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00248">248</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                                                            {</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            byte[] buf = <span class="keyword">new</span> byte[8];</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">WriteInteger</a>(dispatchId, buf, 0);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">WriteInteger</a>(ProtocolConstants.Success, buf, 4);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <span class="keywordflow">return</span> buf;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a800485cf5cc1fc8bae979aeff60e8877"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">Deveel.Data.Util.ByteBuffer.WriteInteger</a></div><div class="ttdeci">ByteBuffer WriteInteger(int v)</div><div class="ttdoc">Writes an integer into the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00118">ByteBuffer.cs:118</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">Deveel.Data.Util.ByteBuffer</a></div><div class="ttdoc">A wrapper for an array of byte. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00027">ByteBuffer.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a47ff272705aa96ad1db8e79209bb2e7e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static byte [] Deveel.Data.Protocol.Processor.Single </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a single 4 byte array with the given int encoded into it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">val</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00202">202</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                              {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            byte[] buf = <span class="keyword">new</span> byte[4];</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">WriteInteger</a>(val, buf, 0);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">return</span> buf;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a800485cf5cc1fc8bae979aeff60e8877"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a800485cf5cc1fc8bae979aeff60e8877">Deveel.Data.Util.ByteBuffer.WriteInteger</a></div><div class="ttdeci">ByteBuffer WriteInteger(int v)</div><div class="ttdoc">Writes an integer into the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00118">ByteBuffer.cs:118</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">Deveel.Data.Util.ByteBuffer</a></div><div class="ttdoc">A wrapper for an array of byte. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00027">ByteBuffer.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0477c5e4a1a96977a4b5ccbc93efaba7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">byte [] Deveel.Data.Protocol.Processor.StreamableObjectSection </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dispatchId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>command</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a section of a streamable object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">dispatchId</td><td>The number we need to respond with.</td></tr>
    <tr><td class="paramname">command</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00455">455</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                                                                               {</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;            <span class="keywordtype">int</span> resultId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 8);</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            <span class="keywordtype">long</span> streamableObjectId = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">ReadInt8</a>(command, 12);</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            <span class="keywordtype">long</span> offset = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">ReadInt8</a>(command, 20);</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            <span class="keywordtype">int</span> length = <a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">ByteBuffer</a>.<a class="code" href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">ReadInt4</a>(command, 28);</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                byte[] buf = <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">dbInterface</a>.GetStreamableObjectPart(resultId, streamableObjectId, offset, length);</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                MemoryStream output = <span class="keyword">new</span> MemoryStream();</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                BinaryWriter writer = <span class="keyword">new</span> BinaryWriter(output, Encoding.Unicode);</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                writer.Write(dispatchId);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                writer.Write(ProtocolConstants.Success);</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                writer.Write(buf.Length);</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                writer.Write(buf, 0, buf.Length);</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                writer.Flush();</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                <span class="keywordflow">return</span> output.ToArray();</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;            } <span class="keywordflow">catch</span> (DataException e) {</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Exception</a>(dispatchId, e);</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;            }</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_a946b330588fd8d78dcdf762be5b80886"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#a946b330588fd8d78dcdf762be5b80886">Deveel.Data.Util.ByteBuffer.ReadInt4</a></div><div class="ttdeci">int ReadInt4()</div><div class="ttdoc">Reads an integer from the buffer at the current position. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00128">ByteBuffer.cs:128</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a360325d66b16eb3b0d98145d40fd767e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a360325d66b16eb3b0d98145d40fd767e">Deveel.Data.Protocol.Processor.Exception</a></div><div class="ttdeci">static byte[] Exception(int dispatchId, DataException e)</div><div class="ttdoc">Creates a response that represents a data exception failure. </div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00214">Processor.cs:214</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Protocol_1_1Processor_htm_a6ad397f82ba92e8b50c14e862464080d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Protocol_1_1Processor.htm#a6ad397f82ba92e8b50c14e862464080d">Deveel.Data.Protocol.Processor.dbInterface</a></div><div class="ttdeci">DatabaseInterface dbInterface</div><div class="ttdef"><b>Definition:</b> <a href="Processor_8cs_source.htm#l00061">Processor.cs:61</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm">Deveel.Data.Util.ByteBuffer</a></div><div class="ttdoc">A wrapper for an array of byte. </div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00027">ByteBuffer.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Util_1_1ByteBuffer_htm_ad14d59e2c961bfbb3d7a857437fed53b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Util_1_1ByteBuffer.htm#ad14d59e2c961bfbb3d7a857437fed53b">Deveel.Data.Util.ByteBuffer.ReadInt8</a></div><div class="ttdeci">static long ReadInt8(byte[] arr, int offset)</div><div class="ttdef"><b>Definition:</b> <a href="ByteBuffer_8cs_source.htm#l00234">ByteBuffer.cs:234</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a4685987f382736d486d9a8f5cc72eb73"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Deveel.Data.Protocol.Processor.authenticationTries</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Number of authentications tried. </p>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00055">55</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>

</div>
</div>
<a class="anchor" id="ad9536a227ab2fa749b6a25b7331223f5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly DbController Deveel.Data.Protocol.Processor.controller</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00059">59</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a0129fb04066c23a1f1b42a4218b42ab3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly <a class="el" href="namespaceDeveel_1_1Data_1_1Protocol.htm#afb4421f156bc5f10909c84bbf205a03c">DatabaseEventCallback</a> Deveel.Data.Protocol.Processor.dbCallback</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The database call back method that sends database events back to the client. </p>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00090">90</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a6ad397f82ba92e8b50c14e862464080d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">DatabaseInterface Deveel.Data.Protocol.Processor.dbInterface</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00061">61</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a87f6a6465602be448530fb2ade194f2b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly Dictionary&lt;string, DatabaseInterface&gt; Deveel.Data.Protocol.Processor.dbInterfaces</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00060">60</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>

</div>
</div>
<a class="anchor" id="ab08c677faf5509b36ebeb272dbdea2d5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">readonly string Deveel.Data.Protocol.Processor.hostString</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00057">57</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a51b9ec0741da951c4e5616320fb70a65"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const int Deveel.Data.Protocol.Processor.ServerVersion = 1</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The version of the server protocol. </p>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00045">45</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a85fe40529d554001986ead6dc4ee0ddb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ClientConnectionState Deveel.Data.Protocol.Processor.state</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The current state we are in. </p>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00050">50</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>

</div>
</div>
<h2 class="groupheader">Property Documentation</h2>
<a class="anchor" id="a63dabc4aa3dcd94cd56f1b1906cc72fc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ClientConnectionState Deveel.Data.Protocol.Processor.ClientState</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the state of the connection. </p>
<p>0 = not logged in yet. 1 = logged in. </p>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00192">192</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a6e2bd072c375038d193a5a14331d12d4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="interfaceDeveel_1_1Data_1_1IDatabase.htm">IDatabase</a> Deveel.Data.Protocol.Processor.Database</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00551">551</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a681117f8c95cbb16bd105934f42556fd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">abstract bool Deveel.Data.Protocol.Processor.IsClosed</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if the connection to the client is closed. </p>

<p>Definition at line <a class="el" href="Processor_8cs_source.htm#l00549">549</a> of file <a class="el" href="Processor_8cs_source.htm">Processor.cs</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Protocol/<a class="el" href="Processor_8cs_source.htm">Processor.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
