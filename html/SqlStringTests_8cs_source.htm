<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb-nunit/Deveel.Data.Sql.Objects/SqlStringTests.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_161fca7059b832f09270a2e8ed498e3a.htm">deveeldb-nunit</a></li><li class="navelem"><a class="el" href="dir_4dbe6e6fc3d467f8fa2c5648deb90144.htm">Deveel.Data.Sql.Objects</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">SqlStringTests.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="SqlStringTests_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2014 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Text;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceNUnit.htm">NUnit</a>.Framework;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Sql.Objects {</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    [TestFixture]</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    [Category(<span class="stringliteral">&quot;SQL Objects&quot;</span>)]</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm">   24</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm">SqlStringTests</a> {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        [Test]</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        [Category(<span class="stringliteral">&quot;Strings&quot;</span>)]</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a3f2a9b8dda43ca7a68ba2c5469470bad">   27</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a3f2a9b8dda43ca7a68ba2c5469470bad">String_Create</a>() {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;Test string UTF-16 LE&quot;</span>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            Assert.IsNotNull(sqlString);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            Assert.AreEqual(s.Length, sqlString.Length);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            Assert.AreEqual(s, sqlString);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        }</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        [Test]</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        [Category(<span class="stringliteral">&quot;Strings&quot;</span>)]</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a2de9c94aa5883df14263df38955b99aa">   37</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a2de9c94aa5883df14263df38955b99aa">String_Compare_Equal</a>() {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;Test string in UTF-16 LE&quot;</span>;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            var sqlString1 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            var sqlString2 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            Assert.AreEqual(0, sqlString1.CompareTo(sqlString2));</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        }</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        [Test]</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        [Category(<span class="stringliteral">&quot;Strings&quot;</span>)]</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#aacc6c8d080f07e943dabdbc27df6ec1a">   46</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#aacc6c8d080f07e943dabdbc27df6ec1a">String_Equals</a>() {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;Test string in UTF-16 LE&quot;</span>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            var sqlString1 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            var sqlString2 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            Assert.IsTrue(sqlString1.Equals(sqlString2));</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        [Test]</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        [Category(<span class="stringliteral">&quot;Strings&quot;</span>)]</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#aa90f1296960383b232808ce1503a5974">   55</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#aa90f1296960383b232808ce1503a5974">String_Concat</a>() {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s1 = <span class="stringliteral">&quot;First string comes before the &quot;</span>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s2 = <span class="stringliteral">&quot;Second string that comes after&quot;</span>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            var sqlString1 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s1);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            var sqlString2 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s2);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            var sqlString3 = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>();</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            Assert.DoesNotThrow(() =&gt; sqlString3 = sqlString1.Concat(sqlString2));</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;First string comes before the Second string that comes after&quot;</span>, sqlString3.ToString(Encoding.UTF8));</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        [Test]</div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a2d33fa85fded24792d333afc601343f5">   67</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a2d33fa85fded24792d333afc601343f5">String_EqualsToNull</a>() {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            var s = <a class="code" href="namespaceSqlString.htm">SqlString</a>.Null;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            Assert.IsTrue(s.IsNull);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            Assert.AreEqual(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Value</a>, s);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            Assert.AreEqual(s, <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Value</a>);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        [Test]</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        [Category(<span class="stringliteral">&quot;Conversion&quot;</span>)]</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        [Category(<span class="stringliteral">&quot;Date Time&quot;</span>)]</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a1868d0d4a8685c8f5111a3a63b3b1b45">   77</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a1868d0d4a8685c8f5111a3a63b3b1b45">String_Convert_TimeStamp</a>() {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;2011-01-23T23:44:21.525 +01:00&quot;</span>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            var timeStamp = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>();</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            Assert.DoesNotThrow(() =&gt; timeStamp = (<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>) Convert.ChangeType(sqlString, typeof(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>)));</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            Assert.IsFalse(timeStamp.IsNull);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            Assert.AreEqual(2011, timeStamp.Year);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            Assert.AreEqual(01, timeStamp.Month);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            Assert.AreEqual(23, timeStamp.Day);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            Assert.AreEqual(23, timeStamp.Hour);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            Assert.AreEqual(44, timeStamp.Minute);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            Assert.AreEqual(525, timeStamp.Millisecond);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            Assert.AreEqual(1, timeStamp.Offset.Hours);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            Assert.AreEqual(0, timeStamp.Offset.Minutes);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        [Test]</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        [Category(<span class="stringliteral">&quot;Conversion&quot;</span>)]</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        [Category(<span class="stringliteral">&quot;Date Time&quot;</span>)]</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a017dc8cf4483ce492c8df7c5ccfcd1e9">   97</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a017dc8cf4483ce492c8df7c5ccfcd1e9">String_Convert_Time</a>() {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;23:44:21.525&quot;</span>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            var time = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>();</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            Assert.DoesNotThrow(() =&gt; time = (<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>) Convert.ChangeType(sqlString, typeof(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>)));</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            Assert.IsFalse(time.IsNull);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            Assert.AreEqual(1, time.Year);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            Assert.AreEqual(1, time.Month);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            Assert.AreEqual(1, time.Day);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            Assert.AreEqual(23, time.Hour);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            Assert.AreEqual(44, time.Minute);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            Assert.AreEqual(21, time.Second);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            Assert.AreEqual(525, time.Millisecond);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        [Test]</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        [Category(<span class="stringliteral">&quot;Conversion&quot;</span>)]</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        [Category(<span class="stringliteral">&quot;Date Time&quot;</span>)]</div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a75ae42b2383c3d14c762d2eec6a1cc3c">  116</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a75ae42b2383c3d14c762d2eec6a1cc3c">String_Convert_Date</a>() {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;2011-01-23&quot;</span>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            var date = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>();</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            Assert.DoesNotThrow(() =&gt; date = (<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>) Convert.ChangeType(sqlString, typeof(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>)));</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            Assert.IsFalse(date.IsNull);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            Assert.AreEqual(2011, date.Year);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            Assert.AreEqual(01, date.Month);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            Assert.AreEqual(23, date.Day);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            Assert.AreEqual(0, date.Hour);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            Assert.AreEqual(0, date.Minute);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            Assert.AreEqual(0, date.Millisecond);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            Assert.AreEqual(0, date.Offset.Hours);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            Assert.AreEqual(0, date.Offset.Minutes);            </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        [Test]</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        [Category(<span class="stringliteral">&quot;Conversion&quot;</span>)]</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        [Category(<span class="stringliteral">&quot;Numbers&quot;</span>)]</div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a8d67075691bd1e9bfa2bf80f00013b4b">  136</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a8d67075691bd1e9bfa2bf80f00013b4b">String_Convert_BigNumber</a>() {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;7689994.0000033992988477226661525553666370058812345883288477383&quot;</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            var number = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>();</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            Assert.DoesNotThrow(() =&gt; number = (<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>)Convert.ChangeType(sqlString, typeof(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>)));</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            Assert.IsFalse(number.IsNull);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            Assert.IsFalse(number.CanBeInt32);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            Assert.IsFalse(number.CanBeInt64);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            Assert.AreEqual(<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.None, number.State);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        }</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        [Test]</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        [Category(<span class="stringliteral">&quot;Conversion&quot;</span>)]</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        [Category(<span class="stringliteral">&quot;Booleans&quot;</span>)]</div>
<div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#accaeefd8c9f492e5185acbc5ec929a57">  151</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#accaeefd8c9f492e5185acbc5ec929a57">String_Convert_BooleanTrue</a>() {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;true&quot;</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            var b = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>();</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            Assert.DoesNotThrow(() =&gt; b = (<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>)Convert.ChangeType(sqlString, typeof(<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>)));</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            Assert.IsFalse(b.IsNull);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            Assert.AreEqual(<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True, b);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        [Test]</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        [Category(<span class="stringliteral">&quot;Conversion&quot;</span>)]</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        [Category(<span class="stringliteral">&quot;Booleans&quot;</span>)]</div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a98753345221304619731b62e5c0abe3a">  164</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a98753345221304619731b62e5c0abe3a">String_Convert_BooleanFalse</a>() {</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;false&quot;</span>;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            var b = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>();</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            Assert.DoesNotThrow(() =&gt; b = (<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>)Convert.ChangeType(sqlString, typeof(<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>)));</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            Assert.IsFalse(b.IsNull);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            Assert.AreEqual(<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.False, b);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        [Test]</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        [Category(<span class="stringliteral">&quot;Conversion&quot;</span>)]</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        [Category(<span class="stringliteral">&quot;Booleans&quot;</span>)]</div>
<div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a4afbce7dc898e474f66d399de8f229c9">  177</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a4afbce7dc898e474f66d399de8f229c9">String_Convert_BooleanNull</a>() {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> s = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            var sqlString = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            var b = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>();</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            Assert.DoesNotThrow(() =&gt; b = (<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>)Convert.ChangeType(sqlString, typeof(<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>)));</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            Assert.IsTrue(b.IsNull);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            Assert.AreEqual(<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null, b);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        }</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;}</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Objects_htm_afe7dfc9aa4bf3283014653f9d5020327"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">Deveel.Data.Sql.Objects.NumericState</a></div><div class="ttdeci">NumericState</div><div class="ttdoc">Lists all the possible special states of a number. </div><div class="ttdef"><b>Definition:</b> <a href="NumericState_8cs_source.htm#l00021">NumericState.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests_htm_aa90f1296960383b232808ce1503a5974"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#aa90f1296960383b232808ce1503a5974">Deveel.Data.Sql.Objects.SqlStringTests.String_Concat</a></div><div class="ttdeci">void String_Concat()</div><div class="ttdef"><b>Definition:</b> <a href="SqlStringTests_8cs_source.htm#l00055">SqlStringTests.cs:55</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests_htm_a3f2a9b8dda43ca7a68ba2c5469470bad"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a3f2a9b8dda43ca7a68ba2c5469470bad">Deveel.Data.Sql.Objects.SqlStringTests.String_Create</a></div><div class="ttdeci">void String_Create()</div><div class="ttdef"><b>Definition:</b> <a href="SqlStringTests_8cs_source.htm#l00027">SqlStringTests.cs:27</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests_htm_a98753345221304619731b62e5c0abe3a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a98753345221304619731b62e5c0abe3a">Deveel.Data.Sql.Objects.SqlStringTests.String_Convert_BooleanFalse</a></div><div class="ttdeci">void String_Convert_BooleanFalse()</div><div class="ttdef"><b>Definition:</b> <a href="SqlStringTests_8cs_source.htm#l00164">SqlStringTests.cs:164</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests_htm_a75ae42b2383c3d14c762d2eec6a1cc3c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a75ae42b2383c3d14c762d2eec6a1cc3c">Deveel.Data.Sql.Objects.SqlStringTests.String_Convert_Date</a></div><div class="ttdeci">void String_Convert_Date()</div><div class="ttdef"><b>Definition:</b> <a href="SqlStringTests_8cs_source.htm#l00116">SqlStringTests.cs:116</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests_htm_aacc6c8d080f07e943dabdbc27df6ec1a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#aacc6c8d080f07e943dabdbc27df6ec1a">Deveel.Data.Sql.Objects.SqlStringTests.String_Equals</a></div><div class="ttdeci">void String_Equals()</div><div class="ttdef"><b>Definition:</b> <a href="SqlStringTests_8cs_source.htm#l00046">SqlStringTests.cs:46</a></div></div>
<div class="ttc" id="namespaceNUnit_htm"><div class="ttname"><a href="namespaceNUnit.htm">NUnit</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests_htm_accaeefd8c9f492e5185acbc5ec929a57"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#accaeefd8c9f492e5185acbc5ec929a57">Deveel.Data.Sql.Objects.SqlStringTests.String_Convert_BooleanTrue</a></div><div class="ttdeci">void String_Convert_BooleanTrue()</div><div class="ttdef"><b>Definition:</b> <a href="SqlStringTests_8cs_source.htm#l00151">SqlStringTests.cs:151</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests_htm_a8d67075691bd1e9bfa2bf80f00013b4b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a8d67075691bd1e9bfa2bf80f00013b4b">Deveel.Data.Sql.Objects.SqlStringTests.String_Convert_BigNumber</a></div><div class="ttdeci">void String_Convert_BigNumber()</div><div class="ttdef"><b>Definition:</b> <a href="SqlStringTests_8cs_source.htm#l00136">SqlStringTests.cs:136</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm_a34389e1b9a93987d32840d009a4e08b6"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Deveel.Data.Sql.Objects.SqlNull.Value</a></div><div class="ttdeci">static readonly SqlNull Value</div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00024">SqlNull.cs:24</a></div></div>
<div class="ttc" id="namespaceSqlString_htm"><div class="ttname"><a href="namespaceSqlString.htm">SqlString</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests_htm_a2de9c94aa5883df14263df38955b99aa"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a2de9c94aa5883df14263df38955b99aa">Deveel.Data.Sql.Objects.SqlStringTests.String_Compare_Equal</a></div><div class="ttdeci">void String_Compare_Equal()</div><div class="ttdef"><b>Definition:</b> <a href="SqlStringTests_8cs_source.htm#l00037">SqlStringTests.cs:37</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">Deveel.Data.Sql.Objects.SqlDateTime</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlDateTime_8cs_source.htm#l00021">SqlDateTime.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests_htm_a1868d0d4a8685c8f5111a3a63b3b1b45"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a1868d0d4a8685c8f5111a3a63b3b1b45">Deveel.Data.Sql.Objects.SqlStringTests.String_Convert_TimeStamp</a></div><div class="ttdeci">void String_Convert_TimeStamp()</div><div class="ttdef"><b>Definition:</b> <a href="SqlStringTests_8cs_source.htm#l00077">SqlStringTests.cs:77</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests_htm_a4afbce7dc898e474f66d399de8f229c9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a4afbce7dc898e474f66d399de8f229c9">Deveel.Data.Sql.Objects.SqlStringTests.String_Convert_BooleanNull</a></div><div class="ttdeci">void String_Convert_BooleanNull()</div><div class="ttdef"><b>Definition:</b> <a href="SqlStringTests_8cs_source.htm#l00177">SqlStringTests.cs:177</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests_htm_a2d33fa85fded24792d333afc601343f5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a2d33fa85fded24792d333afc601343f5">Deveel.Data.Sql.Objects.SqlStringTests.String_EqualsToNull</a></div><div class="ttdeci">void String_EqualsToNull()</div><div class="ttdef"><b>Definition:</b> <a href="SqlStringTests_8cs_source.htm#l00067">SqlStringTests.cs:67</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a5611a45679d0938ba19c3f26d7385e67"><div class="ttname"><a href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlBoolean SqlBoolean</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00026">DataObject.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm">Deveel.Data.Sql.Objects.SqlStringTests</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlStringTests_8cs_source.htm#l00024">SqlStringTests.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests_htm_a017dc8cf4483ce492c8df7c5ccfcd1e9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlStringTests.htm#a017dc8cf4483ce492c8df7c5ccfcd1e9">Deveel.Data.Sql.Objects.SqlStringTests.String_Convert_Time</a></div><div class="ttdeci">void String_Convert_Time()</div><div class="ttdef"><b>Definition:</b> <a href="SqlStringTests_8cs_source.htm#l00097">SqlStringTests.cs:97</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">Deveel.Data.Sql.Objects.SqlNumber</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00024">SqlNumber.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
