<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb-nunit/Deveel.Data.Security/UserManagementTests.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_161fca7059b832f09270a2e8ed498e3a.htm">deveeldb-nunit</a></li><li class="navelem"><a class="el" href="dir_6aaf6691970fdbbcd2a39d7be52e3400.htm">Deveel.Data.Security</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">UserManagementTests.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="UserManagementTests_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2014 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceNUnit.htm">NUnit</a>.Framework;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Security {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    [TestFixture]</div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm">   21</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm">UserManagementTests</a> : <a class="code" href="classDeveel_1_1Data_1_1ContextBasedTest.htm">ContextBasedTest</a> {</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#ae774148f3770ff5b7f17a88dd2277674">   22</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1ISession.htm">ISession</a> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#ae774148f3770ff5b7f17a88dd2277674">CreateAdminSession</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1IDatabase.htm">IDatabase</a> database) {</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;            var testName = TestContext.CurrentContext.Test.Name;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;            <span class="keywordflow">if</span> (testName != <span class="stringliteral">&quot;CreateUser&quot;</span>) {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                <span class="keyword">using</span> (var session = base.CreateAdminSession(database)) {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                    <span class="keyword">using</span> (var query = session.CreateQuery()) {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;                        query.CreateUser(<span class="stringliteral">&quot;tester&quot;</span>, <span class="stringliteral">&quot;123456789&quot;</span>);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                        query.<a class="code" href="interfaceDeveel_1_1Data_1_1ISession.htm#a335120dcd7660c8fa935b43d9333cc33">Commit</a>();</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                    }</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                }</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            }</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <span class="keywordflow">return</span> base.CreateAdminSession(database);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        }</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        [Test]</div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a804afd7367bc96c81db404756daba48e">   36</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a804afd7367bc96c81db404756daba48e">CreateUser</a>() {</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Security_1_1User.htm">User</a> user = null;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            Assert.DoesNotThrow(() =&gt; user = <a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm">Query</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a111d5b26f63bd23bbe85e3e16f0eb375">CreateUser</a>(<span class="stringliteral">&quot;tester&quot;</span>, <span class="stringliteral">&quot;123456&quot;</span>));</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            Assert.IsNotNull(user);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;tester&quot;</span>, user.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1User.htm#a7d75ff092fb1f5cea7bcde22878d0c06">Name</a>);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="keywordtype">bool</span> exists = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            Assert.DoesNotThrow(() =&gt; exists = <a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm">Query</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a431ab7800adbba9971abddd2855295df">UserExists</a>(<span class="stringliteral">&quot;tester&quot;</span>));</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            Assert.IsTrue(exists);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        [Test]</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#adcdfdc87b2dae7b55a679e88d05e31f3">   49</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#adcdfdc87b2dae7b55a679e88d05e31f3">Authenticate_Success</a>() {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Security_1_1User.htm">User</a> user = null;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            Assert.DoesNotThrow(() =&gt; user = <a class="code" href="classDeveel_1_1Data_1_1Database.htm">Database</a>.Authenticate(<span class="stringliteral">&quot;tester&quot;</span>, <span class="stringliteral">&quot;123456789&quot;</span>));</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            Assert.IsNotNull(user);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;tester&quot;</span>, user.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1User.htm#a7d75ff092fb1f5cea7bcde22878d0c06">Name</a>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        [Test]</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a72c65e32a5277f2430dcfb46ae4c9c50">   58</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a72c65e32a5277f2430dcfb46ae4c9c50">Authenticate_Fail</a>() {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Security_1_1User.htm">User</a> user = null;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            Assert.Throws&lt;<a class="code" href="classDeveel_1_1Data_1_1Security_1_1SecurityException.htm">SecurityException</a>&gt;(() =&gt; user = <a class="code" href="classDeveel_1_1Data_1_1Database.htm">Database</a>.Authenticate(<span class="stringliteral">&quot;test2&quot;</span>, <span class="stringliteral">&quot;12545587&quot;</span>));</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            Assert.IsNull(user);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        [Test]</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#ac2d02afd3734e630d701cf75b7dd66d2">   66</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#ac2d02afd3734e630d701cf75b7dd66d2">CreateExistingUser</a>() {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="keywordtype">bool</span> exists = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            Assert.DoesNotThrow(() =&gt; exists = <a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm">Query</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a431ab7800adbba9971abddd2855295df">UserExists</a>(<span class="stringliteral">&quot;tester&quot;</span>));</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            Assert.IsTrue(exists);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            Assert.Throws&lt;<a class="code" href="classDeveel_1_1Data_1_1Security_1_1SecurityException.htm">SecurityException</a>&gt;(() =&gt; <a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm">Query</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a111d5b26f63bd23bbe85e3e16f0eb375">CreateUser</a>(<span class="stringliteral">&quot;tester&quot;</span>, <span class="stringliteral">&quot;123456789&quot;</span>));</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        [Test]</div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a49b02e2005a9cf671e3dc4cc00dcd3d7">   75</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a49b02e2005a9cf671e3dc4cc00dcd3d7">DropUser</a>() {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            Assert.DoesNotThrow(() =&gt; <a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm">Query</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a14a614c46b193f543e64061ab62de341">DeleteUser</a>(<span class="stringliteral">&quot;tester&quot;</span>));</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="keywordtype">bool</span> exists = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            Assert.DoesNotThrow(() =&gt; <a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm">Query</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a431ab7800adbba9971abddd2855295df">UserExists</a>(<span class="stringliteral">&quot;tester&quot;</span>));</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            Assert.IsFalse(exists);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        [Test]</div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a5285c1bea91f3e22b9f6620960dce4c1">   84</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a5285c1bea91f3e22b9f6620960dce4c1">AdminChangesUserPassword</a>() {</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            Assert.DoesNotThrow(() =&gt; <a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm">Query</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm#af8b9417e9622762ce629c8be5ec0a7de">AlterUserPassword</a>(<span class="stringliteral">&quot;tester&quot;</span>, <span class="stringliteral">&quot;0123456789&quot;</span>));</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        [Test]</div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a88aab86fb272fc9ca85298fc802c9ae0">   89</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a88aab86fb272fc9ca85298fc802c9ae0">SetUserGroups</a>() {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            Assert.DoesNotThrow(() =&gt; <a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm">Query</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm#afee01b8e23628d16ca6ae34e8fb0f5a4">AddUserToGroup</a>(<span class="stringliteral">&quot;tester&quot;</span>, <span class="stringliteral">&quot;test_group&quot;</span>));</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            Assert.DoesNotThrow(() =&gt; <a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm">Query</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm#afee01b8e23628d16ca6ae34e8fb0f5a4">AddUserToGroup</a>(<span class="stringliteral">&quot;tester&quot;</span>, <a class="code" href="classDeveel_1_1Data_1_1Security_1_1SystemGroups.htm">SystemGroups</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1SystemGroups.htm#a246863c2c0c0223894583d76ff362b38">UserManagerGroup</a>));</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Security_1_1User.htm">User</a> user = null;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            Assert.DoesNotThrow(() =&gt; user = <a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm">Query</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a88a430e5d04634aa07daca59cc98893c">GetUser</a>(<span class="stringliteral">&quot;tester&quot;</span>));</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            Assert.IsNotNull(user);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordtype">string</span>[] userGroups = null;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            Assert.DoesNotThrow(() =&gt; userGroups = <a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm">Query</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a4b8ffce01bc9dad2124dc80fc15335a0">GetGroupsUserBelongsTo</a>(user.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1User.htm#a7d75ff092fb1f5cea7bcde22878d0c06">Name</a>));</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            Assert.IsNotNull(userGroups);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            Assert.Contains(<span class="stringliteral">&quot;test_group&quot;</span>, userGroups);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            Assert.Contains(<a class="code" href="classDeveel_1_1Data_1_1Security_1_1SystemGroups.htm">SystemGroups</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1SystemGroups.htm#a246863c2c0c0223894583d76ff362b38">UserManagerGroup</a>, userGroups);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            Assert.IsTrue(<a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm">Query</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a24d16195aa2001f00fd3a93ba169c880">UserBelongsToGroup</a>(<span class="stringliteral">&quot;tester&quot;</span>, <span class="stringliteral">&quot;test_group&quot;</span>));</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        [Test]</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a6e43163c3451dc306cc2ec30b0945c78">  107</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a6e43163c3451dc306cc2ec30b0945c78">LockUser</a>() {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm">Query</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a5826e69341e2ce00b33da9cbf22ff4bd">SetUserStatus</a>(<span class="stringliteral">&quot;tester&quot;</span>, <a class="code" href="namespaceDeveel_1_1Data_1_1Security.htm#af2c400f61d23b63ea0d62bae7ecc6903">UserStatus</a>.Locked);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Security.htm#af2c400f61d23b63ea0d62bae7ecc6903">UserStatus</a> status = <span class="keyword">new</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Security.htm#af2c400f61d23b63ea0d62bae7ecc6903">UserStatus</a>();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            Assert.DoesNotThrow(() =&gt; status = <a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm">Query</a>.<a class="code" href="classDeveel_1_1Data_1_1Security_1_1Query.htm#ac15b64375975ae577882917c0b8d3897">GetUserStatus</a>(<span class="stringliteral">&quot;tester&quot;</span>));</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            Assert.AreEqual(<a class="code" href="namespaceDeveel_1_1Data_1_1Security.htm#af2c400f61d23b63ea0d62bae7ecc6903">UserStatus</a>.Locked, status);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1UserManagementTests_htm_a88aab86fb272fc9ca85298fc802c9ae0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a88aab86fb272fc9ca85298fc802c9ae0">Deveel.Data.Security.UserManagementTests.SetUserGroups</a></div><div class="ttdeci">void SetUserGroups()</div><div class="ttdef"><b>Definition:</b> <a href="UserManagementTests_8cs_source.htm#l00089">UserManagementTests.cs:89</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1Query_htm_a111d5b26f63bd23bbe85e3e16f0eb375"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a111d5b26f63bd23bbe85e3e16f0eb375">Deveel.Data.Security.Query.CreateUser</a></div><div class="ttdeci">static User CreateUser(this IQuery query, string userName, string password)</div><div class="ttdef"><b>Definition:</b> <a href="Query_8Security_8cs_source.htm#l00109">Query.Security.cs:109</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Security_htm_af2c400f61d23b63ea0d62bae7ecc6903"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Security.htm#af2c400f61d23b63ea0d62bae7ecc6903">Deveel.Data.Security.UserStatus</a></div><div class="ttdeci">UserStatus</div><div class="ttdef"><b>Definition:</b> <a href="UserStatus_8cs_source.htm#l00020">UserStatus.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1UserManagementTests_htm_ac2d02afd3734e630d701cf75b7dd66d2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#ac2d02afd3734e630d701cf75b7dd66d2">Deveel.Data.Security.UserManagementTests.CreateExistingUser</a></div><div class="ttdeci">void CreateExistingUser()</div><div class="ttdef"><b>Definition:</b> <a href="UserManagementTests_8cs_source.htm#l00066">UserManagementTests.cs:66</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1Query_htm_afee01b8e23628d16ca6ae34e8fb0f5a4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1Query.htm#afee01b8e23628d16ca6ae34e8fb0f5a4">Deveel.Data.Security.Query.AddUserToGroup</a></div><div class="ttdeci">static void AddUserToGroup(this IQuery queryContext, string username, string group, bool asAdmin=false)</div><div class="ttdef"><b>Definition:</b> <a href="Query_8Security_8cs_source.htm#l00209">Query.Security.cs:209</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1Query_htm_af8b9417e9622762ce629c8be5ec0a7de"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1Query.htm#af8b9417e9622762ce629c8be5ec0a7de">Deveel.Data.Security.Query.AlterUserPassword</a></div><div class="ttdeci">static void AlterUserPassword(this IQuery queryContext, string username, string password)</div><div class="ttdef"><b>Definition:</b> <a href="Query_8Security_8cs_source.htm#l00141">Query.Security.cs:141</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1ISession_htm_a335120dcd7660c8fa935b43d9333cc33"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1ISession.htm#a335120dcd7660c8fa935b43d9333cc33">Deveel.Data.ISession.Commit</a></div><div class="ttdeci">void Commit()</div><div class="ttdoc">Commits the latest changes made by the user in the session. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1Query_htm_a4b8ffce01bc9dad2124dc80fc15335a0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a4b8ffce01bc9dad2124dc80fc15335a0">Deveel.Data.Security.Query.GetGroupsUserBelongsTo</a></div><div class="ttdeci">static string[] GetGroupsUserBelongsTo(this IQuery queryContext, string username)</div><div class="ttdef"><b>Definition:</b> <a href="Query_8Security_8cs_source.htm#l00308">Query.Security.cs:308</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Database_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Database.htm">Deveel.Data.Database</a></div><div class="ttdoc">The default implementation of a database in a system. </div><div class="ttdef"><b>Definition:</b> <a href="Database_8cs_source.htm#l00038">Database.cs:38</a></div></div>
<div class="ttc" id="namespaceNUnit_htm"><div class="ttname"><a href="namespaceNUnit.htm">NUnit</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1Query_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1Query.htm">Deveel.Data.Security.Query</a></div><div class="ttdef"><b>Definition:</b> <a href="Query_8Security_8cs_source.htm#l00028">Query.Security.cs:28</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1IDatabase_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1IDatabase.htm">Deveel.Data.IDatabase</a></div><div class="ttdoc">The representation of a single database in the system. </div><div class="ttdef"><b>Definition:</b> <a href="IDatabase_8cs_source.htm#l00040">IDatabase.cs:40</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1SystemGroups_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1SystemGroups.htm">Deveel.Data.Security.SystemGroups</a></div><div class="ttdef"><b>Definition:</b> <a href="SystemGroups_8cs_source.htm#l00020">SystemGroups.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1UserManagementTests_htm_a72c65e32a5277f2430dcfb46ae4c9c50"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a72c65e32a5277f2430dcfb46ae4c9c50">Deveel.Data.Security.UserManagementTests.Authenticate_Fail</a></div><div class="ttdeci">void Authenticate_Fail()</div><div class="ttdef"><b>Definition:</b> <a href="UserManagementTests_8cs_source.htm#l00058">UserManagementTests.cs:58</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1UserManagementTests_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm">Deveel.Data.Security.UserManagementTests</a></div><div class="ttdef"><b>Definition:</b> <a href="UserManagementTests_8cs_source.htm#l00021">UserManagementTests.cs:21</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1ISession_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1ISession.htm">Deveel.Data.ISession</a></div><div class="ttdoc">An isolated session to a given database for a given user, encapsulating the transaction for operation...</div><div class="ttdef"><b>Definition:</b> <a href="ISession_8cs_source.htm#l00030">ISession.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1ContextBasedTest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1ContextBasedTest.htm">Deveel.Data.ContextBasedTest</a></div><div class="ttdef"><b>Definition:</b> <a href="ContextBasedTest_8cs_source.htm#l00025">ContextBasedTest.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1SystemGroups_htm_a246863c2c0c0223894583d76ff362b38"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1SystemGroups.htm#a246863c2c0c0223894583d76ff362b38">Deveel.Data.Security.SystemGroups.UserManagerGroup</a></div><div class="ttdeci">const string UserManagerGroup</div><div class="ttdoc">The name of the user manager group. </div><div class="ttdef"><b>Definition:</b> <a href="SystemGroups_8cs_source.htm#l00055">SystemGroups.cs:55</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1Query_htm_a88a430e5d04634aa07daca59cc98893c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a88a430e5d04634aa07daca59cc98893c">Deveel.Data.Security.Query.GetUser</a></div><div class="ttdeci">static User GetUser(this IQuery query, string userName)</div><div class="ttdef"><b>Definition:</b> <a href="Query_8Security_8cs_source.htm#l00046">Query.Security.cs:46</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1Query_htm_a431ab7800adbba9971abddd2855295df"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a431ab7800adbba9971abddd2855295df">Deveel.Data.Security.Query.UserExists</a></div><div class="ttdeci">static bool UserExists(this IQuery query, string userName)</div><div class="ttdef"><b>Definition:</b> <a href="Query_8Security_8cs_source.htm#l00094">Query.Security.cs:94</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1UserManagementTests_htm_a804afd7367bc96c81db404756daba48e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a804afd7367bc96c81db404756daba48e">Deveel.Data.Security.UserManagementTests.CreateUser</a></div><div class="ttdeci">void CreateUser()</div><div class="ttdef"><b>Definition:</b> <a href="UserManagementTests_8cs_source.htm#l00036">UserManagementTests.cs:36</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1SecurityException_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1SecurityException.htm">Deveel.Data.Security.SecurityException</a></div><div class="ttdef"><b>Definition:</b> <a href="SecurityException_8cs_source.htm#l00022">SecurityException.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1UserManagementTests_htm_a5285c1bea91f3e22b9f6620960dce4c1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a5285c1bea91f3e22b9f6620960dce4c1">Deveel.Data.Security.UserManagementTests.AdminChangesUserPassword</a></div><div class="ttdeci">void AdminChangesUserPassword()</div><div class="ttdef"><b>Definition:</b> <a href="UserManagementTests_8cs_source.htm#l00084">UserManagementTests.cs:84</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1Query_htm_a24d16195aa2001f00fd3a93ba169c880"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a24d16195aa2001f00fd3a93ba169c880">Deveel.Data.Security.Query.UserBelongsToGroup</a></div><div class="ttdeci">static bool UserBelongsToGroup(this IQuery queryContext, string group)</div><div class="ttdef"><b>Definition:</b> <a href="Query_8Security_8cs_source.htm#l00312">Query.Security.cs:312</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1Query_htm_a14a614c46b193f543e64061ab62de341"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a14a614c46b193f543e64061ab62de341">Deveel.Data.Security.Query.DeleteUser</a></div><div class="ttdeci">static bool DeleteUser(this IQuery query, string userName)</div><div class="ttdef"><b>Definition:</b> <a href="Query_8Security_8cs_source.htm#l00151">Query.Security.cs:151</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1User_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1User.htm">Deveel.Data.Security.User</a></div><div class="ttdoc">Provides the information for a user in a database system </div><div class="ttdef"><b>Definition:</b> <a href="User_8cs_source.htm#l00027">User.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1Query_htm_a5826e69341e2ce00b33da9cbf22ff4bd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1Query.htm#a5826e69341e2ce00b33da9cbf22ff4bd">Deveel.Data.Security.Query.SetUserStatus</a></div><div class="ttdeci">static void SetUserStatus(this IQuery queryContext, string username, UserStatus status)</div><div class="ttdef"><b>Definition:</b> <a href="Query_8Security_8cs_source.htm#l00060">Query.Security.cs:60</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1UserManagementTests_htm_ae774148f3770ff5b7f17a88dd2277674"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#ae774148f3770ff5b7f17a88dd2277674">Deveel.Data.Security.UserManagementTests.CreateAdminSession</a></div><div class="ttdeci">override ISession CreateAdminSession(IDatabase database)</div><div class="ttdef"><b>Definition:</b> <a href="UserManagementTests_8cs_source.htm#l00022">UserManagementTests.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1Query_htm_ac15b64375975ae577882917c0b8d3897"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1Query.htm#ac15b64375975ae577882917c0b8d3897">Deveel.Data.Security.Query.GetUserStatus</a></div><div class="ttdeci">static UserStatus GetUserStatus(this IQuery queryContext, string userName)</div><div class="ttdef"><b>Definition:</b> <a href="Query_8Security_8cs_source.htm#l00068">Query.Security.cs:68</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1UserManagementTests_htm_a6e43163c3451dc306cc2ec30b0945c78"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a6e43163c3451dc306cc2ec30b0945c78">Deveel.Data.Security.UserManagementTests.LockUser</a></div><div class="ttdeci">void LockUser()</div><div class="ttdef"><b>Definition:</b> <a href="UserManagementTests_8cs_source.htm#l00107">UserManagementTests.cs:107</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1UserManagementTests_htm_a49b02e2005a9cf671e3dc4cc00dcd3d7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#a49b02e2005a9cf671e3dc4cc00dcd3d7">Deveel.Data.Security.UserManagementTests.DropUser</a></div><div class="ttdeci">void DropUser()</div><div class="ttdef"><b>Definition:</b> <a href="UserManagementTests_8cs_source.htm#l00075">UserManagementTests.cs:75</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1UserManagementTests_htm_adcdfdc87b2dae7b55a679e88d05e31f3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1UserManagementTests.htm#adcdfdc87b2dae7b55a679e88d05e31f3">Deveel.Data.Security.UserManagementTests.Authenticate_Success</a></div><div class="ttdeci">void Authenticate_Success()</div><div class="ttdef"><b>Definition:</b> <a href="UserManagementTests_8cs_source.htm#l00049">UserManagementTests.cs:49</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1User_htm_a7d75ff092fb1f5cea7bcde22878d0c06"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1User.htm#a7d75ff092fb1f5cea7bcde22878d0c06">Deveel.Data.Security.User.Name</a></div><div class="ttdeci">string Name</div><div class="ttdoc">Gets the name that uniquely identify a user within a database system. </div><div class="ttdef"><b>Definition:</b> <a href="User_8cs_source.htm#l00057">User.cs:57</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
