<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Objects/SqlString.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_8d3ca2cb7518dd1b1915c037274ac88e.htm">Deveel.Data.Sql.Objects</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">SqlString.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="SqlString_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.IO;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Text;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Serialization.htm">Serialization</a>;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm">Types</a>;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Sql.Objects {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    [<a class="code" href="namespaceDeveel_1_1Data_1_1Transactions.htm#a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b">Serializable</a>]</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm">   42</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">struct </span><a class="code" href="namespaceSqlString.htm">SqlString</a> : <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a>, IEquatable&lt;SqlString&gt;, IConvertible, <a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">ISerializable</a> {</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#afe52452808b7e09762c4bdd90681c583">   46</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">const</span> <span class="keywordtype">int</span> MaxLength = Int16.MaxValue;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a0acbe05028d0ee34e8d95f3d15b226f9">   51</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> readonly <a class="code" href="namespaceSqlString.htm">SqlString</a> <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1abbb93ef26e3c101ff11cdd21cab08a94">Null</a> = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(null, 0, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ae1a0017b4522bb7b4ddedb59f8ccccf2">   53</a></span>&#160;        <span class="keyword">private</span> readonly byte[] <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ae1a0017b4522bb7b4ddedb59f8ccccf2">source</a>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a16c5aa1562dc39a6f6e4501cdf79c412">   55</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a16c5aa1562dc39a6f6e4501cdf79c412">SqlString</a>(<span class="keywordtype">char</span>[] chars, <span class="keywordtype">int</span> length, <span class="keywordtype">bool</span> isNull) : this() {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <span class="keywordflow">if</span> (chars == null) {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                source = null;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                <span class="keywordflow">if</span> (length &gt; MaxLength)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="stringliteral">&quot;length&quot;</span>);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                source = Encoding.Unicode.GetBytes(chars);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                Length = Encoding.Unicode.GetCharCount(source);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            IsNull = isNull || source == null;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a46bcb8a3583b47632d85da754a24d3c7">   74</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a46bcb8a3583b47632d85da754a24d3c7">SqlString</a>(<span class="keywordtype">char</span>[] chars)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            : this(chars, chars == null ? 0 : chars.Length) {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ab44a438f9a203256aaae3b8fe691200c">   84</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ab44a438f9a203256aaae3b8fe691200c">SqlString</a>(<span class="keywordtype">char</span>[] chars, <span class="keywordtype">int</span> length)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            : this(chars, length, false) {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a28629c7e5f87ee158b6a595f017b813e">   88</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a28629c7e5f87ee158b6a595f017b813e">SqlString</a>(<span class="keywordtype">string</span> source)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            : this(source == null ? (char[]) null : source.ToCharArray()) {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a273d90fd696890526b4bf3de191ba3ee">   92</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a273d90fd696890526b4bf3de191ba3ee">SqlString</a>(byte[] bytes, <span class="keywordtype">int</span> offset, <span class="keywordtype">int</span> length)</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            : this(GetChars(bytes, offset, length)) {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#abf47757be466f043b4a94ae291c43156">   96</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#abf47757be466f043b4a94ae291c43156">SqlString</a>(byte[] bytes)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            : this(bytes, 0, bytes == null ? 0 : bytes.Length) {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ac1ccf528ba1602dc36735b8eb0e4443d">  100</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ac1ccf528ba1602dc36735b8eb0e4443d">SqlString</a>(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">ObjectData</a> data)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            : this() {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            source = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a86f3d523b9ae1357b275ed330178ecb0">GetValue</a>&lt;byte[]&gt;(<span class="stringliteral">&quot;Source&quot;</span>);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#aa80a6adee130aff3e6cce101fe950b74">  105</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">char</span>[] <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#aa80a6adee130aff3e6cce101fe950b74">GetChars</a>(byte[] bytes, <span class="keywordtype">int</span> offset, <span class="keywordtype">int</span> length) {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">if</span> (bytes == null)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">return</span> Encoding.Unicode.GetChars(bytes, offset, length);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a63871c88ae2ccce35224392369a9699e">  112</a></span>&#160;        <span class="keywordtype">int</span> IComparable.CompareTo(<span class="keywordtype">object</span> obj) {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keywordflow">return</span> CompareTo((<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a>) obj);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a7ffcb976496b99d838d8a8605f665b44">  116</a></span>&#160;        <span class="keywordtype">int</span> IComparable&lt;ISqlObject&gt;.CompareTo(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> other) {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="keywordflow">return</span> CompareTo((<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a>) other);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        }</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#abb816740ed9524dcade4f58e053031ed">  120</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> IsNull { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a8714120815bab0467614c075d01942e8">  122</a></span>&#160;        Encoding <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm#a47179b9dc9bf8111af34cf6c6b0edd30">Encoding</a> {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> Encoding.Unicode; }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a5eb2132eae8da5700709b5ed92ce6d7f">  126</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> Value {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> source == null ? null : Encoding.Unicode.GetString(source, 0, source.Length); }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a14dbb86167a6ce02743c96b248b39c3b">  130</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">char</span> <span class="keyword">this</span>[<span class="keywordtype">long</span> index] {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="keyword">get</span> {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                <span class="keywordflow">if</span> (index &gt; Int32.MaxValue)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="stringliteral">&quot;index&quot;</span>);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <span class="keywordflow">if</span> (source == null)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                    <span class="keywordflow">return</span> <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                <span class="keywordflow">if</span> (index &gt;= Length)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="stringliteral">&quot;index&quot;</span>);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                var chars = Encoding.Unicode.GetChars(source);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <span class="keywordflow">return</span> chars[index];</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a9d87f9dc7f64d236c3a8154d3802be04">  145</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">IsComparableTo</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> other) {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            <span class="keywordflow">return</span> other is <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a>;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a6e79b24b1263e564945bdf96076e9a7d">  149</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a6e79b24b1263e564945bdf96076e9a7d">CompareTo</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a> other) {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordflow">if</span> (other == null)</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;other&quot;</span>);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keywordflow">if</span> (IsNull &amp;&amp; other.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            <span class="keywordflow">if</span> (IsNull)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            <span class="keywordflow">if</span> (other.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keywordflow">if</span> (other is <a class="code" href="namespaceSqlString.htm">SqlString</a>) {</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                var otherString = (<a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>) other;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Compare(Value, otherString.Value, StringComparison.Ordinal);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException(<span class="stringliteral">&quot;Comparison with long strong not implemented yet.&quot;</span>);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#aa846f6def183e07d2f587e70f1581261">  168</a></span>&#160;        <span class="keyword">public</span> IEnumerator&lt;char&gt; <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#aa846f6def183e07d2f587e70f1581261">GetEnumerator</a>() {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm">StringEnumerator</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div>
<div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a47c990b13a6f0fe85d7856705fab96ed">  172</a></span>&#160;        IEnumerator IEnumerable.GetEnumerator() {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="keywordflow">return</span> GetEnumerator();</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ab87a6b7c64bfae01c601fca42eb289e7">  176</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">long</span> Length { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a8fa394fd981682bce551de326436d5ba">  178</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">ISerializable</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm#acd5831980e3c1969437ba5c9d838669e">GetData</a>(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a> data) {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;Source&quot;</span>, source);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        }</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ae044bb2f6ed577e6bc7f4a7d3bd765e0">  182</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ae044bb2f6ed577e6bc7f4a7d3bd765e0">ToString</a>(Encoding encoding) {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keywordflow">if</span> (IsNull)</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            var bytes = source;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="keywordflow">if</span> (!encoding.Equals(Encoding.Unicode))</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                bytes = Encoding.Convert(Encoding.Unicode, encoding, bytes);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordflow">return</span> encoding.GetString(bytes, 0, bytes.Length);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a8f795dbc4e3048286f5d864420bd1a47">  194</a></span>&#160;        <span class="keyword">public</span> TextReader <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a8f795dbc4e3048286f5d864420bd1a47">GetInput</a>(Encoding encoding) {</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">if</span> (IsNull)</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <span class="keywordflow">return</span> TextReader.Null;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <span class="keywordflow">if</span> (encoding == null)</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                encoding = Encoding.Unicode;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            var bytes = source;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            <span class="keywordflow">if</span> (!encoding.Equals(Encoding.Unicode))</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                bytes = Encoding.Convert(Encoding.Unicode, encoding, bytes);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            var stream = <span class="keyword">new</span> MemoryStream(bytes);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> StreamReader(stream, encoding);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        }</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div>
<div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a5b84a49437de0ba08018c08f143a0c6a">  209</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">bool</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a5b84a49437de0ba08018c08f143a0c6a">Equals</a>(<a class="code" href="namespaceSqlString.htm">SqlString</a> other) {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            <span class="keywordflow">if</span> (source == null &amp;&amp; other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ae1a0017b4522bb7b4ddedb59f8ccccf2">source</a> == null)</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <span class="keywordflow">if</span> (source == null)</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keywordflow">if</span> (source.Length != other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ae1a0017b4522bb7b4ddedb59f8ccccf2">source</a>.Length)</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; source.Length; i++) {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                var c1 = source[i];</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                var c2 = other.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ae1a0017b4522bb7b4ddedb59f8ccccf2">source</a>[i];</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                <span class="keywordflow">if</span> (!c1.Equals(c2))</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            }</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        }</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div>
<div class="line"><a name="l00229"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ac684615a3435805cf81a266ee2005c6d">  229</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ac684615a3435805cf81a266ee2005c6d">Equals</a>(<span class="keywordtype">object</span> obj) {</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <span class="keywordflow">if</span> (obj is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a> &amp;&amp; IsNull)</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            <span class="keywordflow">return</span> Equals((<a class="code" href="namespaceSqlString.htm">SqlString</a>) obj);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div>
<div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ad3acdb0e6306c3d4affdb82e3a37a932">  236</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">int</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ad3acdb0e6306c3d4affdb82e3a37a932">GetHashCode</a>() {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            <span class="keywordflow">if</span> (source == null)</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            unchecked {</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                <span class="keywordtype">int</span> hash = 17;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                <span class="comment">// get hash code for all items in array</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                <span class="keywordflow">foreach</span> (var item <span class="keywordflow">in</span> source) {</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                    hash = hash*23 + item.GetHashCode();</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                }</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                <span class="keywordflow">return</span> hash;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            }</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        }</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div>
<div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a55f9ca70c0215ed8ec43effe3ce25d23">  252</a></span>&#160;        <span class="keyword">public</span> byte[] <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a55f9ca70c0215ed8ec43effe3ce25d23">ToByteArray</a>(Encoding encoding) {</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            <span class="keywordflow">if</span> (encoding == null)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;encoding&quot;</span>);</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            <span class="keywordflow">if</span> (source == null)</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> byte[0];</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            <span class="keywordflow">return</span> (byte[]) source.Clone();</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        }</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;</div>
<div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ac86c7f0b4293aa0b16d9aa65b754ca62">  262</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="namespaceSqlString.htm">SqlString</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ac86c7f0b4293aa0b16d9aa65b754ca62">Concat</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a> other) {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="keywordflow">if</span> (other == null || other.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            <span class="keywordflow">if</span> (other is <a class="code" href="namespaceSqlString.htm">SqlString</a>) {</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                var otheString = (<a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>) other;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                var length = (int) (Length + otheString.Length);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                <span class="keywordflow">if</span> (length &gt;= MaxLength)</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<span class="stringliteral">&quot;The final string will be over the maximum length&quot;</span>);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                var sourceChars = ToCharArray();</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                var otherChars = otheString.ToCharArray();</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                var destChars = <span class="keyword">new</span> <span class="keywordtype">char</span>[length];</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Array</a>.Copy(sourceChars, 0, destChars, 0, (<span class="keywordtype">int</span>)Length);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Array</a>.Copy(otherChars, 0, destChars, (<span class="keywordtype">int</span>)Length, (<span class="keywordtype">int</span>)otheString.Length);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(destChars, length);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            }</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            var sb = <span class="keyword">new</span> StringBuilder(Int16.MaxValue);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            <span class="keyword">using</span> (var output = <span class="keyword">new</span> StringWriter(sb)) {</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                <span class="comment">// First read the current stream</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                <span class="keyword">using</span> (var reader = GetInput(Encoding.Unicode)) {</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                    var buffer = <span class="keyword">new</span> <span class="keywordtype">char</span>[2048];</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                    <span class="keywordtype">int</span> count;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                    <span class="keywordflow">while</span> ((count = reader.Read(buffer, 0, buffer.Length)) != 0) {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                        output.Write(buffer, 0, count);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                    }</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                }</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                <span class="comment">// Then read the second stream</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                <span class="keyword">using</span> (var reader = other.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm#ac58e4cac07dcc13b6b2dc083b0ded145">GetInput</a>(Encoding.Unicode)) {</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                    var buffer = <span class="keyword">new</span> <span class="keywordtype">char</span>[2048];</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                    <span class="keywordtype">int</span> count;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                    <span class="keywordflow">while</span> ((count = reader.Read(buffer, 0, buffer.Length)) != 0) {</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                        output.Write(buffer, 0, count);</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                    }</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                }</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                output.Flush();</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            }</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="preprocessor">#if PCL</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            var s = sb.ToString();</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(s);</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            var outChars = <span class="keyword">new</span> <span class="keywordtype">char</span>[sb.Length];</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            sb.CopyTo(0, outChars, 0, sb.Length);</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(outChars, outChars.Length);</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        }</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div>
<div class="line"><a name="l00315"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a28a26013a3f5b3545ce8086fe663f5db">  315</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a28a26013a3f5b3545ce8086fe663f5db">GetByteCount</a>(Encoding encoding) {</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <span class="keywordflow">if</span> (IsNull)</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            var bytes = Encoding.Convert(Encoding.Unicode, encoding, source);</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            <span class="keywordflow">return</span> bytes.Length;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        }</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="preprocessor">        #region StringEnumerator</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div>
<div class="line"><a name="l00325"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm">  325</a></span>&#160;        <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm">StringEnumerator</a> : IEnumerator&lt;char&gt; {</div>
<div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a979cf218957d9a10e079f88bbfbea9a7">  326</a></span>&#160;            <span class="keyword">private</span> readonly <a class="code" href="namespaceSqlString.htm">SqlString</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a979cf218957d9a10e079f88bbfbea9a7">sqlString</a>;</div>
<div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a88b9cd70dbb0a1726062b8a0edf22117">  327</a></span>&#160;            <span class="keyword">private</span> <span class="keywordtype">int</span> index = -1;</div>
<div class="line"><a name="l00328"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#af682739c32a0cf1f1a65bfe04c6d7766">  328</a></span>&#160;            <span class="keyword">private</span> readonly <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#af682739c32a0cf1f1a65bfe04c6d7766">length</a>;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div>
<div class="line"><a name="l00330"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a36a3e2d8cc042e05f6f76b9382d7261b">  330</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a36a3e2d8cc042e05f6f76b9382d7261b">StringEnumerator</a>(<a class="code" href="namespaceSqlString.htm">SqlString</a> sqlString) {</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                this.sqlString = sqlString;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                length = (int) sqlString.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ab87a6b7c64bfae01c601fca42eb289e7">Length</a>;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            }</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div>
<div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a2aaeb366fd3d02d1af36ffad70c5468f">  335</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a2aaeb366fd3d02d1af36ffad70c5468f">Dispose</a>() {</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            }</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div>
<div class="line"><a name="l00338"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a01de53eb77819830317e23ee7a650848">  338</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a01de53eb77819830317e23ee7a650848">MoveNext</a>() {</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                <span class="keywordflow">return</span> ++index &lt; length;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            }</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div>
<div class="line"><a name="l00342"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a2132d35065a41e35375a4e1dbfa38edb">  342</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a2132d35065a41e35375a4e1dbfa38edb">Reset</a>() {</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                index = -1;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            }</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div>
<div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a42b86c72914a4b69a42a0339635622e3">  346</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">char</span> Current {</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                <span class="keyword">get</span> {</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                    <span class="keywordflow">if</span> (index &gt;= length)</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException();</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                    <span class="keywordflow">return</span> sqlString[index];</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                }</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            }</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div>
<div class="line"><a name="l00355"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a33055ac10aac514d71c0c043151670b9">  355</a></span>&#160;            <span class="keywordtype">object</span> IEnumerator.Current {</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                <span class="keyword">get</span> { <span class="keywordflow">return</span> Current; }</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            }</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        }</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div>
<div class="line"><a name="l00362"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ad7f938c7106a0396d8190a27251ce27b">  362</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">string</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ad7f938c7106a0396d8190a27251ce27b">ToString</a>() {</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <span class="keywordflow">return</span> Value;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;        }</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div>
<div class="line"><a name="l00366"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a9816dd7fa5b1767578c5d777a0e94da3">  366</a></span>&#160;        TypeCode IConvertible.GetTypeCode() {</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordflow">return</span> TypeCode.String;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        }</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div>
<div class="line"><a name="l00370"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ab79e7e9b40f3b206fd555d68c9f565c6">  370</a></span>&#160;        <span class="keywordtype">bool</span> IConvertible.ToBoolean(IFormatProvider provider) {</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;            <span class="keywordflow">return</span> Convert.ToBoolean(Value, provider);</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        }</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div>
<div class="line"><a name="l00374"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a805b64997d5f2f7de789329f74fadda6">  374</a></span>&#160;        <span class="keywordtype">char</span> IConvertible.ToChar(IFormatProvider provider) {</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            <span class="keywordflow">return</span> Convert.ToChar(Value, provider);</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        }</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div>
<div class="line"><a name="l00378"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ad796f68bf01bbd0acfd2e42cf2966842">  378</a></span>&#160;        sbyte IConvertible.ToSByte(IFormatProvider provider) {</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            <span class="keywordflow">return</span> Convert.ToSByte(Value, provider);</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        }</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div>
<div class="line"><a name="l00382"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a11d32e7c79e1f9ac88bbd7ba73d03391">  382</a></span>&#160;        byte IConvertible.ToByte(IFormatProvider provider) {</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            <span class="keywordflow">return</span> Convert.ToByte(Value, provider);</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        }</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div>
<div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#aa8c8a655932ed52b3767a7ba5e1cb343">  386</a></span>&#160;        <span class="keywordtype">short</span> IConvertible.ToInt16(IFormatProvider provider) {</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="keywordflow">return</span> Convert.ToInt16(Value, provider);</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        }</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div>
<div class="line"><a name="l00390"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#afd195f2f95de48ba4fb11dc0639e2af2">  390</a></span>&#160;        ushort IConvertible.ToUInt16(IFormatProvider provider) {</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="keywordflow">return</span> Convert.ToUInt16(Value, provider);</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        }</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div>
<div class="line"><a name="l00394"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a647355b567f2e92d3ab03b77aff7e7ea">  394</a></span>&#160;        <span class="keywordtype">int</span> IConvertible.ToInt32(IFormatProvider provider) {</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            <span class="keywordflow">return</span> Convert.ToInt32(Value, provider);</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        }</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div>
<div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#aa7672aab565740e01d4c8c338c9fc878">  398</a></span>&#160;        uint IConvertible.ToUInt32(IFormatProvider provider) {</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            <span class="keywordflow">return</span> Convert.ToUInt32(Value, provider);</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        }</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div>
<div class="line"><a name="l00402"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a839b38e3974f50cae2828c3062dfdc87">  402</a></span>&#160;        <span class="keywordtype">long</span> IConvertible.ToInt64(IFormatProvider provider) {</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            <span class="keywordflow">return</span> Convert.ToInt64(Value, provider);</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        }</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div>
<div class="line"><a name="l00406"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a6b00bdffea8aa6dd16aabe60d158eed8">  406</a></span>&#160;        ulong IConvertible.ToUInt64(IFormatProvider provider) {</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            <span class="keywordflow">return</span> Convert.ToUInt64(Value, provider);</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        }</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div>
<div class="line"><a name="l00410"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#aad65f05a189399f5db7c5d2aa1a901f9">  410</a></span>&#160;        <span class="keywordtype">float</span> IConvertible.ToSingle(IFormatProvider provider) {</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            <span class="keywordflow">return</span> Convert.ToSingle(Value, provider);</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        }</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div>
<div class="line"><a name="l00414"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a4a2ed099bf1d0e34b9d0090d771b644f">  414</a></span>&#160;        <span class="keywordtype">double</span> IConvertible.ToDouble(IFormatProvider provider) {</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;            <span class="keywordflow">return</span> Convert.ToDouble(Value, provider);</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        }</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div>
<div class="line"><a name="l00418"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#aaf90db5d5227b82320b6a065049b0058">  418</a></span>&#160;        decimal IConvertible.ToDecimal(IFormatProvider provider) {</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            <span class="keywordflow">return</span> Convert.ToDecimal(Value, provider);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        }</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div>
<div class="line"><a name="l00422"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ac0fe7361106a8b8795a868ec55335a75">  422</a></span>&#160;        <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a8cf10d2341ed01492506085688270c1e">DateTime</a> IConvertible.ToDateTime(IFormatProvider provider) {</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;            <span class="keywordflow">return</span> Convert.ToDateTime(Value, provider);</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        }</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div>
<div class="line"><a name="l00426"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#adc7cb0ed59d107560fbc49ebd402d088">  426</a></span>&#160;        <span class="keywordtype">string</span> IConvertible.ToString(IFormatProvider provider) {</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            <span class="keywordflow">return</span> Convert.ToString(Value, provider);</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        }</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div>
<div class="line"><a name="l00430"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#afe2744a6293db37ce8409325626a219c">  430</a></span>&#160;        <span class="keywordtype">object</span> IConvertible.ToType(Type conversionType, IFormatProvider provider) {</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<span class="keywordtype">bool</span>))</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                <span class="keywordflow">return</span> Convert.ToBoolean(Value, provider);</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (byte))</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                <span class="keywordflow">return</span> Convert.ToByte(Value, provider);</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (sbyte))</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                <span class="keywordflow">return</span> Convert.ToSByte(Value, provider);</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<span class="keywordtype">short</span>))</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                <span class="keywordflow">return</span> Convert.ToInt16(Value, provider);</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (ushort))</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                <span class="keywordflow">return</span> Convert.ToUInt16(Value, provider);</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<span class="keywordtype">int</span>))</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                <span class="keywordflow">return</span> Convert.ToInt32(Value, provider);</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (uint))</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                <span class="keywordflow">return</span> Convert.ToUInt32(Value, provider);</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<span class="keywordtype">long</span>))</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                <span class="keywordflow">return</span> Convert.ToInt64(Value, provider);</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (ulong))</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                <span class="keywordflow">return</span> Convert.ToUInt64(Value, provider);</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<span class="keywordtype">float</span>))</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                <span class="keywordflow">return</span> Convert.ToSingle(Value, provider);</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<span class="keywordtype">double</span>))</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                <span class="keywordflow">return</span> Convert.ToDouble(Value, provider);</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (decimal))</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                <span class="keywordflow">return</span> Convert.ToDecimal(Value, provider);</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<span class="keywordtype">string</span>))</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;                <span class="keywordflow">return</span> Convert.ToString(Value, provider);</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<span class="keywordtype">char</span>[]))</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                <span class="keywordflow">return</span> ToCharArray();</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>))</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                <span class="keywordflow">return</span> ToNumber();</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>))</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                <span class="keywordflow">return</span> ToBoolean();</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>))</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                <span class="keywordflow">return</span> ToDateTime();</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;            <span class="keywordflow">if</span> (conversionType == typeof (<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBinary.htm">SqlBinary</a>))</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                <span class="keywordflow">return</span> ToBinary();</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;Cannot convet SQL STRING to {0}&quot;</span>, conversionType.FullName));</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        }</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div>
<div class="line"><a name="l00473"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#afc18fad4f0b053d690b6d884892ae1f5">  473</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#afc18fad4f0b053d690b6d884892ae1f5">ToBoolean</a>() {</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;            <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a> value;</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.TryParse(Value, out value))</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;         <span class="comment">// TODO: Should we throw an exception?</span></div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        }</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div>
<div class="line"><a name="l00481"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a8ae73eff290420d220a65e72431fffab">  481</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a8ae73eff290420d220a65e72431fffab">ToNumber</a>() {</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> value;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a47be2f65063ecc47a093f2cb8bcef30c">TryParse</a>(Value, out value))</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aed053d462ea48c3ad8ff42a90d7f35e8">Null</a>;          <span class="comment">// TODO: Shoudl we throw an exception?</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;            <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        }</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div>
<div class="line"><a name="l00489"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a23c8554cffe35018568dd9dc53771b42">  489</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a23c8554cffe35018568dd9dc53771b42">ToDateTime</a>() {</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a> value;</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm#a7d16149292898cfaa5a09ef2ad666e16">TryParse</a>(Value, out value))</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm#aefd142b3fa8e599f4d5335d5445b5d12">Null</a>;        <span class="comment">// TODO: Shoudl we throw an exception?</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        }</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div>
<div class="line"><a name="l00497"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a08d5e352cb84bc57ede023592f27b45d">  497</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBinary.htm">SqlBinary</a> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a08d5e352cb84bc57ede023592f27b45d">ToBinary</a>() {</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            var bytes = ToByteArray(Encoding.Unicode);</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBinary.htm">SqlBinary</a>(bytes);</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        }</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div>
<div class="line"><a name="l00502"></a><span class="lineno"><a class="line" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a0a26bc80af73559085c5b15835eed798">  502</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">char</span>[] <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a0a26bc80af73559085c5b15835eed798">ToCharArray</a>() {</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            <span class="keywordflow">if</span> (source == null)</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <span class="keywordtype">char</span>[0];</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;            <span class="keywordflow">return</span> Encoding.Unicode.GetChars(source);</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        }</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    }</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;}</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Serialization_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Serialization.htm">Deveel.Data.Serialization</a></div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00024">BinarySerializer.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_a55f9ca70c0215ed8ec43effe3ce25d23"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a55f9ca70c0215ed8ec43effe3ce25d23">Deveel.Data.Sql.Objects.SqlString.ToByteArray</a></div><div class="ttdeci">byte[] ToByteArray(Encoding encoding)</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00252">SqlString.cs:252</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_ac684615a3435805cf81a266ee2005c6d"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ac684615a3435805cf81a266ee2005c6d">Deveel.Data.Sql.Objects.SqlString.Equals</a></div><div class="ttdeci">override bool Equals(object obj)</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00229">SqlString.cs:229</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_a23c8554cffe35018568dd9dc53771b42"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a23c8554cffe35018568dd9dc53771b42">Deveel.Data.Sql.Objects.SqlString.ToDateTime</a></div><div class="ttdeci">SqlDateTime ToDateTime()</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00489">SqlString.cs:489</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable_htm_acd5831980e3c1969437ba5c9d838669e"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm#acd5831980e3c1969437ba5c9d838669e">Deveel.Data.Serialization.ISerializable.GetData</a></div><div class="ttdeci">void GetData(SerializeData data)</div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_a08d5e352cb84bc57ede023592f27b45d"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a08d5e352cb84bc57ede023592f27b45d">Deveel.Data.Sql.Objects.SqlString.ToBinary</a></div><div class="ttdeci">SqlBinary ToBinary()</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00497">SqlString.cs:497</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">Deveel.Data.Sql.Objects.ISqlString</a></div><div class="ttdef"><b>Definition:</b> <a href="ISqlString_8cs_source.htm#l00023">ISqlString.cs:23</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_abf47757be466f043b4a94ae291c43156"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#abf47757be466f043b4a94ae291c43156">Deveel.Data.Sql.Objects.SqlString.SqlString</a></div><div class="ttdeci">SqlString(byte[] bytes)</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00096">SqlString.cs:96</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator_htm_a36a3e2d8cc042e05f6f76b9382d7261b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a36a3e2d8cc042e05f6f76b9382d7261b">Deveel.Data.Sql.Objects.SqlString.StringEnumerator.StringEnumerator</a></div><div class="ttdeci">StringEnumerator(SqlString sqlString)</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00330">SqlString.cs:330</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a47be2f65063ecc47a093f2cb8bcef30c"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a47be2f65063ecc47a093f2cb8bcef30c">Deveel.Data.Sql.Objects.SqlNumber.TryParse</a></div><div class="ttdeci">static bool TryParse(string s, out SqlNumber value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00702">SqlNumber.cs:702</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBinary_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBinary.htm">Deveel.Data.Sql.Objects.SqlBinary</a></div><div class="ttdoc">Implements a BINARY object that handles a limited number of bytes, not exceding MaxLength. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBinary_8cs_source.htm#l00027">SqlBinary.cs:27</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString_htm_a47179b9dc9bf8111af34cf6c6b0edd30"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm#a47179b9dc9bf8111af34cf6c6b0edd30">Deveel.Data.Sql.Objects.ISqlString.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="ISqlString_8cs_source.htm#l00024">ISqlString.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_a8ae73eff290420d220a65e72431fffab"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a8ae73eff290420d220a65e72431fffab">Deveel.Data.Sql.Objects.SqlString.ToNumber</a></div><div class="ttdeci">SqlNumber ToNumber()</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00481">SqlString.cs:481</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_a28629c7e5f87ee158b6a595f017b813e"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a28629c7e5f87ee158b6a595f017b813e">Deveel.Data.Sql.Objects.SqlString.SqlString</a></div><div class="ttdeci">SqlString(string source)</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00088">SqlString.cs:88</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_a273d90fd696890526b4bf3de191ba3ee"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a273d90fd696890526b4bf3de191ba3ee">Deveel.Data.Sql.Objects.SqlString.SqlString</a></div><div class="ttdeci">SqlString(byte[] bytes, int offset, int length)</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00092">SqlString.cs:92</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator_htm_a01de53eb77819830317e23ee7a650848"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a01de53eb77819830317e23ee7a650848">Deveel.Data.Sql.Objects.SqlString.StringEnumerator.MoveNext</a></div><div class="ttdeci">bool MoveNext()</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00338">SqlString.cs:338</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm_a2a09ed1c661f92b60b0b38398fb7ced1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">Deveel.Data.Serialization.SerializeData.SetValue</a></div><div class="ttdeci">void SetValue(string key, Type type, object value)</div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00035">SerializeData.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator_htm_a979cf218957d9a10e079f88bbfbea9a7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a979cf218957d9a10e079f88bbfbea9a7">Deveel.Data.Sql.Objects.SqlString.StringEnumerator.sqlString</a></div><div class="ttdeci">readonly SqlString sqlString</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00326">SqlString.cs:326</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm">Deveel.Data.Serialization.ISerializable</a></div><div class="ttdef"><b>Definition:</b> <a href="ISerializable_8cs_source.htm#l00020">ISerializable.cs:20</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_afc18fad4f0b053d690b6d884892ae1f5"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#afc18fad4f0b053d690b6d884892ae1f5">Deveel.Data.Sql.Objects.SqlString.ToBoolean</a></div><div class="ttdeci">SqlBoolean ToBoolean()</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00473">SqlString.cs:473</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm_ab9810ddba011d9ffe76db3ceffa636c0"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">Deveel.Data.Sql.Objects.ISqlObject.IsNull</a></div><div class="ttdeci">bool IsNull</div><div class="ttdoc">Gets a boolean value indicating if the object is NULL. </div><div class="ttdef"><b>Definition:</b> <a href="ISqlObject_8cs_source.htm#l00028">ISqlObject.cs:28</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_aa80a6adee130aff3e6cce101fe950b74"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#aa80a6adee130aff3e6cce101fe950b74">Deveel.Data.Sql.Objects.SqlString.GetChars</a></div><div class="ttdeci">static char[] GetChars(byte[] bytes, int offset, int length)</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00105">SqlString.cs:105</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_ad3acdb0e6306c3d4affdb82e3a37a932"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ad3acdb0e6306c3d4affdb82e3a37a932">Deveel.Data.Sql.Objects.SqlString.GetHashCode</a></div><div class="ttdeci">override int GetHashCode()</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00236">SqlString.cs:236</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">Deveel.Data.Serialization.SerializeData</a></div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00021">SerializeData.cs:21</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">Deveel.Data.Sql.Objects.ISqlObject</a></div><div class="ttdoc">Defines the contract for a valid SQL Object </div><div class="ttdef"><b>Definition:</b> <a href="ISqlObject_8cs_source.htm#l00023">ISqlObject.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm">Deveel.Data.Sql.Objects.SqlString.StringEnumerator</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00325">SqlString.cs:325</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">Deveel.Data.Serialization.ObjectData</a></div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00022">ObjectData.cs:22</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_a16c5aa1562dc39a6f6e4501cdf79c412"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a16c5aa1562dc39a6f6e4501cdf79c412">Deveel.Data.Sql.Objects.SqlString.SqlString</a></div><div class="ttdeci">SqlString(char[] chars, int length, bool isNull)</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00055">SqlString.cs:55</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_aa846f6def183e07d2f587e70f1581261"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#aa846f6def183e07d2f587e70f1581261">Deveel.Data.Sql.Objects.SqlString.GetEnumerator</a></div><div class="ttdeci">IEnumerator&lt; char &gt; GetEnumerator()</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00168">SqlString.cs:168</a></div></div>
<div class="ttc" id="namespaceSqlString_htm"><div class="ttname"><a href="namespaceSqlString.htm">SqlString</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1abbb93ef26e3c101ff11cdd21cab08a94"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1abbb93ef26e3c101ff11cdd21cab08a94">Deveel.Data.Types.SqlTypeCode.Null</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime_htm_aefd142b3fa8e599f4d5335d5445b5d12"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm#aefd142b3fa8e599f4d5335d5445b5d12">Deveel.Data.Sql.Objects.SqlDateTime.Null</a></div><div class="ttdeci">static readonly SqlDateTime Null</div><div class="ttdef"><b>Definition:</b> <a href="SqlDateTime_8cs_source.htm#l00024">SqlDateTime.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_ae044bb2f6ed577e6bc7f4a7d3bd765e0"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ae044bb2f6ed577e6bc7f4a7d3bd765e0">Deveel.Data.Sql.Objects.SqlString.ToString</a></div><div class="ttdeci">string ToString(Encoding encoding)</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00182">SqlString.cs:182</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_a6e79b24b1263e564945bdf96076e9a7d"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a6e79b24b1263e564945bdf96076e9a7d">Deveel.Data.Sql.Objects.SqlString.CompareTo</a></div><div class="ttdeci">int CompareTo(ISqlString other)</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00149">SqlString.cs:149</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_ac1ccf528ba1602dc36735b8eb0e4443d"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ac1ccf528ba1602dc36735b8eb0e4443d">Deveel.Data.Sql.Objects.SqlString.SqlString</a></div><div class="ttdeci">SqlString(ObjectData data)</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00100">SqlString.cs:100</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString_htm_ac58e4cac07dcc13b6b2dc083b0ded145"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm#ac58e4cac07dcc13b6b2dc083b0ded145">Deveel.Data.Sql.Objects.ISqlString.GetInput</a></div><div class="ttdeci">TextReader GetInput(Encoding encoding)</div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">Deveel.Data.Sql.Objects.SqlDateTime</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlDateTime_8cs_source.htm#l00021">SqlDateTime.cs:21</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_aed053d462ea48c3ad8ff42a90d7f35e8"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aed053d462ea48c3ad8ff42a90d7f35e8">Deveel.Data.Sql.Objects.SqlNumber.Null</a></div><div class="ttdeci">static readonly SqlNumber Null</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00031">SqlNumber.cs:31</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm_a259b94206e518756bd85186b4b22aaab"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">Deveel.Data.Sql.Objects.ISqlObject.IsComparableTo</a></div><div class="ttdeci">bool IsComparableTo(ISqlObject other)</div><div class="ttdoc">Checks if the current object is comparable with the given one. </div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_ad7f938c7106a0396d8190a27251ce27b"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ad7f938c7106a0396d8190a27251ce27b">Deveel.Data.Sql.Objects.SqlString.ToString</a></div><div class="ttdeci">override string ToString()</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00362">SqlString.cs:362</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_a8f795dbc4e3048286f5d864420bd1a47"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a8f795dbc4e3048286f5d864420bd1a47">Deveel.Data.Sql.Objects.SqlString.GetInput</a></div><div class="ttdeci">TextReader GetInput(Encoding encoding)</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00194">SqlString.cs:194</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a8cf10d2341ed01492506085688270c1e"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a8cf10d2341ed01492506085688270c1e">Deveel.Data.Types.SqlTypeCode.DateTime</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Deveel.Data.Types.SqlTypeCode.Array</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm">Deveel.Data.Types</a></div><div class="ttdef"><b>Definition:</b> <a href="ArrayType_8cs_source.htm#l00021">ArrayType.cs:21</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_a0a26bc80af73559085c5b15835eed798"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a0a26bc80af73559085c5b15835eed798">Deveel.Data.Sql.Objects.SqlString.ToCharArray</a></div><div class="ttdeci">char[] ToCharArray()</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00502">SqlString.cs:502</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_a28a26013a3f5b3545ce8086fe663f5db"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a28a26013a3f5b3545ce8086fe663f5db">Deveel.Data.Sql.Objects.SqlString.GetByteCount</a></div><div class="ttdeci">int GetByteCount(Encoding encoding)</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00315">SqlString.cs:315</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_a46bcb8a3583b47632d85da754a24d3c7"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a46bcb8a3583b47632d85da754a24d3c7">Deveel.Data.Sql.Objects.SqlString.SqlString</a></div><div class="ttdeci">SqlString(char[] chars)</div><div class="ttdoc">Initializes a new instance of the SqlString structure with the given set of characters. </div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00074">SqlString.cs:74</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_ac86c7f0b4293aa0b16d9aa65b754ca62"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ac86c7f0b4293aa0b16d9aa65b754ca62">Deveel.Data.Sql.Objects.SqlString.Concat</a></div><div class="ttdeci">SqlString Concat(ISqlString other)</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00262">SqlString.cs:262</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a86f3d523b9ae1357b275ed330178ecb0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a86f3d523b9ae1357b275ed330178ecb0">Deveel.Data.Serialization.ObjectData.GetValue</a></div><div class="ttdeci">object GetValue(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00048">ObjectData.cs:48</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_ae1a0017b4522bb7b4ddedb59f8ccccf2"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ae1a0017b4522bb7b4ddedb59f8ccccf2">Deveel.Data.Sql.Objects.SqlString.source</a></div><div class="ttdeci">readonly byte[] source</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00053">SqlString.cs:53</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_a5b84a49437de0ba08018c08f143a0c6a"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#a5b84a49437de0ba08018c08f143a0c6a">Deveel.Data.Sql.Objects.SqlString.Equals</a></div><div class="ttdeci">bool Equals(SqlString other)</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00209">SqlString.cs:209</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Transactions_htm_a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Transactions.htm#a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b">Deveel.Data.Transactions.IsolationLevel.Serializable</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator_htm_a2aaeb366fd3d02d1af36ffad70c5468f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a2aaeb366fd3d02d1af36ffad70c5468f">Deveel.Data.Sql.Objects.SqlString.StringEnumerator.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00335">SqlString.cs:335</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_ab44a438f9a203256aaae3b8fe691200c"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ab44a438f9a203256aaae3b8fe691200c">Deveel.Data.Sql.Objects.SqlString.SqlString</a></div><div class="ttdeci">SqlString(char[] chars, int length)</div><div class="ttdoc">Initializes a new instance of the SqlString structure. </div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00084">SqlString.cs:84</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">Deveel.Data.Sql.Objects.SqlNumber</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00024">SqlNumber.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime_htm_a7d16149292898cfaa5a09ef2ad666e16"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm#a7d16149292898cfaa5a09ef2ad666e16">Deveel.Data.Sql.Objects.SqlDateTime.TryParse</a></div><div class="ttdeci">static bool TryParse(string s, out SqlDateTime value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlDateTime_8cs_source.htm#l00495">SqlDateTime.cs:495</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator_htm_af682739c32a0cf1f1a65bfe04c6d7766"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#af682739c32a0cf1f1a65bfe04c6d7766">Deveel.Data.Sql.Objects.SqlString.StringEnumerator.length</a></div><div class="ttdeci">readonly int length</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00328">SqlString.cs:328</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator_htm_a2132d35065a41e35375a4e1dbfa38edb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_1_1StringEnumerator.htm#a2132d35065a41e35375a4e1dbfa38edb">Deveel.Data.Sql.Objects.SqlString.StringEnumerator.Reset</a></div><div class="ttdeci">void Reset()</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00342">SqlString.cs:342</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString_htm_ab87a6b7c64bfae01c601fca42eb289e7"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlString.htm#ab87a6b7c64bfae01c601fca42eb289e7">Deveel.Data.Sql.Objects.SqlString.Length</a></div><div class="ttdeci">long Length</div><div class="ttdef"><b>Definition:</b> <a href="SqlString_8cs_source.htm#l00176">SqlString.cs:176</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
