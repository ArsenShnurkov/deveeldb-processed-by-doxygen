<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Sql.Parser.DataTypeBuilder Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Parser.htm">Parser</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm">DataTypeBuilder</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Sql.Parser.DataTypeBuilder Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a1f95b43094a45390ae56f5d06f69b926"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm#a1f95b43094a45390ae56f5d06f69b926">Build</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">ITypeResolver</a> resolver, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> sqlNode)</td></tr>
<tr class="separator:a1f95b43094a45390ae56f5d06f69b926"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:ae98346bca00c2c9673a076e2b829c49e"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm#ae98346bca00c2c9673a076e2b829c49e">BuildTypeMeta</a> (Dictionary&lt; string, string &gt; metadata)</td></tr>
<tr class="separator:ae98346bca00c2c9673a076e2b829c49e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="DataTypeBuilder_8cs_source.htm#l00024">24</a> of file <a class="el" href="DataTypeBuilder_8cs_source.htm">DataTypeBuilder.cs</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a1f95b43094a45390ae56f5d06f69b926"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> Deveel.Data.Sql.Parser.DataTypeBuilder.Build </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">ITypeResolver</a>&#160;</td>
          <td class="paramname"><em>resolver</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>&#160;</td>
          <td class="paramname"><em>sqlNode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DataTypeBuilder_8cs_source.htm#l00025">25</a> of file <a class="el" href="DataTypeBuilder_8cs_source.htm">DataTypeBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                                                                              {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            var node = sqlNode as DataTypeNode;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            <span class="keywordflow">if</span> (node == null)</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            var typeName = node.TypeName;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            var typeMeta = <span class="keyword">new</span> List&lt;DataTypeMeta&gt;();</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> sqlTypeCode;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            <span class="keywordflow">if</span> (node.IsPrimitive) {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(typeName, <span class="stringliteral">&quot;LONG VARCHAR&quot;</span>)) {</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                    sqlTypeCode = <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarChar;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(node.TypeName, <span class="stringliteral">&quot;LONG VARBINARY&quot;</span>)) {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                    sqlTypeCode = <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarBinary;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(typeName, <span class="stringliteral">&quot;INT&quot;</span>, StringComparison.OrdinalIgnoreCase)) {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                    sqlTypeCode = <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Integer;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                    <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                        sqlTypeCode = (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>) Enum.Parse(typeof (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>), node.TypeName, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                    } <span class="keywordflow">catch</span> (Exception) {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                        sqlTypeCode = <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Unknown;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                    }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                 </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                <span class="keywordflow">if</span> (sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Float ||</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                    sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Real ||</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                    sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Double ||</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                    sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Decimal ||</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                    sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Numeric) {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                    <span class="keywordflow">if</span> (node.HasScale)</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                        typeMeta.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>(<span class="stringliteral">&quot;Scale&quot;</span>, node.Scale.ToString()));</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                    <span class="keywordflow">if</span> (node.HasPrecision)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                        typeMeta.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>(<span class="stringliteral">&quot;Precision&quot;</span>, node.Precision.ToString()));</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Char ||</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                           sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.VarChar ||</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                           sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarChar) {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                    <span class="keywordflow">if</span> (node.HasSize)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                        typeMeta.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>(<span class="stringliteral">&quot;MaxSize&quot;</span>, node.Size.ToString()));</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                    <span class="keywordflow">if</span> (node.HasLocale)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                        typeMeta.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>(<span class="stringliteral">&quot;Locale&quot;</span>, node.Locale));</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                    <span class="keywordflow">if</span> (node.HasEncoding)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                        typeMeta.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>(<span class="stringliteral">&quot;Encoding&quot;</span>, node.Encoding));</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Binary ||</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                           sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.VarBinary ||</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                           sqlTypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarBinary) {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                    <span class="keywordflow">if</span> (node.HasSize)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                        typeMeta.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>(<span class="stringliteral">&quot;MaxSize&quot;</span>, node.Size.ToString()));</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                <span class="comment">// TODO: Support %ROWTYPE and %TYPE</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                sqlTypeCode = <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Type;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.IsNullOrEmpty(typeName))</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> SqlParseException(<span class="stringliteral">&quot;Could not determine type name.&quot;</span>);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[] meta = typeMeta.ToArray();</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="keywordflow">if</span> (!node.IsPrimitive &amp;&amp; node.Metadata != null)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                meta = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm#ae98346bca00c2c9673a076e2b829c49e">BuildTypeMeta</a>(node.Metadata);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            var type = <a class="code" href="classDeveel_1_1Data_1_1Types_1_1TypeResolver.htm">TypeResolver</a>.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1TypeResolver.htm#a7f9638fb2b17a319f38051888d7f602a">Resolve</a>(sqlTypeCode, typeName, meta, resolver);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="keywordflow">if</span> (type == null)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> SqlParseException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;User defined type {0} could not be resolved.&quot;</span>, typeName));</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordflow">return</span> type;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1TypeResolver_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1TypeResolver.htm">Deveel.Data.Types.TypeResolver</a></div><div class="ttdef"><b>Definition:</b> <a href="TypeResolver_8cs_source.htm#l00020">TypeResolver.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1TypeResolver_htm_a7f9638fb2b17a319f38051888d7f602a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1TypeResolver.htm#a7f9638fb2b17a319f38051888d7f602a">Deveel.Data.Types.TypeResolver.Resolve</a></div><div class="ttdeci">static SqlType Resolve(SqlTypeCode typeCode, string typeName, DataTypeMeta[] metadata, ITypeResolver resolver)</div><div class="ttdef"><b>Definition:</b> <a href="TypeResolver_8cs_source.htm#l00021">TypeResolver.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder_htm_ae98346bca00c2c9673a076e2b829c49e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm#ae98346bca00c2c9673a076e2b829c49e">Deveel.Data.Sql.Parser.DataTypeBuilder.BuildTypeMeta</a></div><div class="ttdeci">static DataTypeMeta[] BuildTypeMeta(Dictionary&lt; string, string &gt; metadata)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeBuilder_8cs_source.htm#l00094">DataTypeBuilder.cs:94</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">Deveel.Data.Types.DataTypeMeta</a></div><div class="ttdef"><b>Definition:</b> <a href="DataTypeMeta_8cs_source.htm#l00020">DataTypeMeta.cs:20</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae98346bca00c2c9673a076e2b829c49e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a> [] Deveel.Data.Sql.Parser.DataTypeBuilder.BuildTypeMeta </td>
          <td>(</td>
          <td class="paramtype">Dictionary&lt; string, string &gt;&#160;</td>
          <td class="paramname"><em>metadata</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DataTypeBuilder_8cs_source.htm#l00094">94</a> of file <a class="el" href="DataTypeBuilder_8cs_source.htm">DataTypeBuilder.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                                                                         {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">return</span> metadata.Select(x =&gt; <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>(x.Key, x.Value)).ToArray();</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">Deveel.Data.Types.DataTypeMeta</a></div><div class="ttdef"><b>Definition:</b> <a href="DataTypeMeta_8cs_source.htm#l00020">DataTypeMeta.cs:20</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Parser/<a class="el" href="DataTypeBuilder_8cs_source.htm">DataTypeBuilder.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
