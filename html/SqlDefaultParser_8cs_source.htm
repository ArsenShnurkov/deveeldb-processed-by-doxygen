<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Parser/SqlDefaultParser.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_f0ea0b9ea9aae2e0e9b9dfca26eb78a8.htm">Deveel.Data.Sql.Parser</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">SqlDefaultParser.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="SqlDefaultParser_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Diagnostics;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Linq;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Text;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceIrony.htm">Irony</a>;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceIrony.htm">Irony</a>.Ast;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceIrony.htm">Irony</a>.Parsing;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Sql.Parser {</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm">   28</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm">SqlDefaultParser</a> : <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlParser.htm">ISqlParser</a> {</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#af5552aeb1ae1c7a52d03d51fca360ab7">   29</a></span>&#160;        <span class="keyword">private</span> LanguageData <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#af5552aeb1ae1c7a52d03d51fca360ab7">languageData</a>;</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a76471cd2ef026e51ce42c038fb834102">   30</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="namespaceIrony.htm">Irony</a>.Parsing.Parser <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a76471cd2ef026e51ce42c038fb834102">parser</a>;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a2e966067bba9e282540cd7d769441c5a">   32</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a2e966067bba9e282540cd7d769441c5a">SqlDefaultParser</a>(<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammarBase.htm">SqlGrammarBase</a> grammar) {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            languageData = <span class="keyword">new</span> LanguageData(grammar);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            parser = <span class="keyword">new</span> <a class="code" href="namespaceIrony.htm">Irony</a>.Parsing.Parser(languageData);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <span class="keywordflow">if</span> (!languageData.CanParse())</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException();</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        }</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#ab281b168d5ec3019c110e3653d117c56">   40</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#ab281b168d5ec3019c110e3653d117c56">Dispose</a>(<span class="keywordtype">bool</span> disposing) {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            parser = null;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            languageData = null;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        }</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#ab27dfc777e51b7ae81050e32b16fea21">   45</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#ab27dfc777e51b7ae81050e32b16fea21">Dispose</a>() {</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            Dispose(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            GC.SuppressFinalize(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        }</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a76ef6cd2a747e7083ef81cd01aaaa0f9">   50</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">string</span> Dialect {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> ((<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammarBase.htm">SqlGrammarBase</a>) languageData.Grammar).Dialect; }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a3bf62ba06e666411f2a4293b07d9253e">   54</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseResult.htm">SqlParseResult</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a3bf62ba06e666411f2a4293b07d9253e">Parse</a>(<span class="keywordtype">string</span> input) {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            var result = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseResult.htm">SqlParseResult</a>(Dialect);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            var timer = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer.htm">Timer</a>();</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                <span class="keywordtype">long</span> time;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                var node = ParseNode(input, result.Errors, out time);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                result.RootNode = node;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            } <span class="keywordflow">catch</span> (Exception ex) {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                <span class="comment">// TODO: form a better exception</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                result.Errors.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseError.htm">SqlParseError</a>(ex.Message, 0, 0));</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            } <span class="keywordflow">finally</span> {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                timer.Dispose();</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                result.ParseTime = timer.Elapsed;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a47986872f9502d58897d9701069d9fd8">   74</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a47986872f9502d58897d9701069d9fd8">ParseNode</a>(<span class="keywordtype">string</span> sqlSource, ICollection&lt;SqlParseError&gt; errors, out <span class="keywordtype">long</span> parseTime) {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            var tree = parser.Parse(sqlSource);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            parseTime = tree.ParseTimeMilliseconds;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="keywordflow">if</span> (tree.Status == ParseTreeStatus.Error) {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                BuildErrors(tree, errors, tree.ParserMessages);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            var astContext = <span class="keyword">new</span> AstContext(languageData) {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                DefaultNodeType = typeof (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm">SqlNode</a>),</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                DefaultIdentifierNodeType = typeof (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1IdentifierNode.htm">IdentifierNode</a>)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            };</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            var astCompiler = <span class="keyword">new</span> AstBuilder(astContext);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            astCompiler.BuildAst(tree);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordflow">if</span> (tree.HasErrors())</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                BuildErrors(tree, errors, tree.ParserMessages);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            var node = (<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">ISqlNode</a>) tree.Root.AstNode;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            if (node.NodeName == <span class="stringliteral">&quot;root&quot;</span>)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                node = node.ChildNodes.FirstOrDefault();</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">return</span> node;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a6707a4a6e759c5988a0738a6a204b4e4">  101</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a6707a4a6e759c5988a0738a6a204b4e4">BuildErrors</a>(ParseTree tree, ICollection&lt;SqlParseError&gt; errors, LogMessageList logMessages) {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">foreach</span> (var logMessage <span class="keywordflow">in</span> logMessages) {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                <span class="keywordflow">if</span> (logMessage.Level == <a class="code" href="namespaceDeveel_1_1Data_1_1Diagnostics.htm#a5383b8485159a427ef26310502d8df9d">ErrorLevel</a>.Error) {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                    var line = logMessage.Location.Line;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                    var column = logMessage.Location.Column;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                    var locationMessage = FormInfoMessage(tree, line, column);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                    var expected = logMessage.ParserState.ReportedExpectedSet.ToArray();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                    var infoMessage = String.Format(<span class="stringliteral">&quot;A parse error occurred near &#39;{0}&#39; in the source&quot;</span>, locationMessage);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                    <span class="keywordflow">if</span> (expected.Length &gt; 0)</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                        infoMessage = String.Format(<span class="stringliteral">&quot;{0}. Expected {1}&quot;</span>, infoMessage, String.Join(<span class="stringliteral">&quot;, &quot;</span>, expected));</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                    </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                    errors.Add(<span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseError.htm">SqlParseError</a>(infoMessage, line, column));</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a7cf57d257dbcc7fa090ff3677a43b8ff">  117</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">string</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a7cf57d257dbcc7fa090ff3677a43b8ff">FormInfoMessage</a>(ParseTree tree, <span class="keywordtype">int</span> line, <span class="keywordtype">int</span> column) {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">int</span> tokensBeforeCount = 10;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">int</span> tokensAfterCount = 10;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            var tokensBefore = FindTokensTo(tree, line, column).Reverse().ToList();</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            var tokensAfter = FindTokensFrom(tree, line, column);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            var countTokensBefore = <a class="code" href="namespaceSystem.htm">System</a>.Math.Min(tokensBefore.Count, tokensBeforeCount);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            var countTokensAfter = <a class="code" href="namespaceSystem.htm">System</a>.Math.Min(tokensAfterCount, tokensAfter.Count);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            var takeTokensBefore = tokensBefore.Take(countTokensBefore).Reverse();</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            var takeTokensAfter = tokensAfter.Take(countTokensAfter);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            var sb = <span class="keyword">new</span> StringBuilder();</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="keywordflow">foreach</span> (var token <span class="keywordflow">in</span> takeTokensBefore) {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                sb.Append(token.Text);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                sb.Append(<span class="stringliteral">&quot; &quot;</span>);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="keywordflow">foreach</span> (var token <span class="keywordflow">in</span> takeTokensAfter) {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                sb.Append(token.Text);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                sb.Append(<span class="stringliteral">&quot; &quot;</span>);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="keywordflow">return</span> sb.ToString();</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#ae639f60fd091897cbc52c90f28a676e9">  144</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> IList&lt;<a class="code" href="namespaceIrony.htm">Irony</a>.Parsing.Token&gt; <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#ae639f60fd091897cbc52c90f28a676e9">FindTokensFrom</a>(ParseTree tree, <span class="keywordtype">int</span> line, <span class="keywordtype">int</span> column) {</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            var tokens = tree.Tokens;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            <span class="keywordtype">bool</span> startCollect = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            var result = <span class="keyword">new</span> List&lt;<a class="code" href="namespaceIrony.htm">Irony</a>.Parsing.Token&gt;();</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keywordflow">foreach</span> (var token <span class="keywordflow">in</span> tokens) {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                <span class="keywordflow">if</span> (token.Location.Line == line &amp;&amp;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                    token.Location.Column == column) {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                    startCollect = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <span class="keywordflow">if</span> (startCollect)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                    result.Add(token);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">return</span> result.ToList();</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a7063b817a99e955bafd6b94c0556c0d3">  162</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> IList&lt;<a class="code" href="namespaceIrony.htm">Irony</a>.Parsing.Token&gt; <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a7063b817a99e955bafd6b94c0556c0d3">FindTokensTo</a>(ParseTree tree, <span class="keywordtype">int</span> line, <span class="keywordtype">int</span> column) {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            var tokens = tree.Tokens;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            var result = <span class="keyword">new</span> List&lt;<a class="code" href="namespaceIrony.htm">Irony</a>.Parsing.Token&gt;();</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keywordflow">foreach</span> (var token <span class="keywordflow">in</span> tokens) {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                <span class="keywordflow">if</span> (token.Location.Line == line &amp;&amp;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                    token.Location.Column == column)</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                result.Add(token);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="keywordflow">return</span> result.ToList();</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="preprocessor">#region Timer</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div>
<div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer.htm">  179</a></span>&#160;        <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer.htm">Timer</a> : IDisposable {</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor">#if PCL</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keyword">private</span> readonly DateTimeOffset startTime;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer.htm#aea960c767570da3b40aba8ec50d89ea7">  183</a></span>&#160;            <span class="keyword">private</span> Stopwatch <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer.htm#aea960c767570da3b40aba8ec50d89ea7">stopwatch</a>;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer.htm#a364865204d895a3b0df08d0c931c6cb2">  186</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer.htm#a364865204d895a3b0df08d0c931c6cb2">Timer</a>() {</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="preprocessor">#if PCL</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                startTime = DateTimeOffset.UtcNow;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                stopwatch = <span class="keyword">new</span> Stopwatch();</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                stopwatch.Start();</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer.htm#a884734f9d9a6efa1ab46b4e2df1b1245">  195</a></span>&#160;            <span class="keyword">public</span> TimeSpan Elapsed {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <span class="keyword">get</span> {</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="preprocessor">#if PCL</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                    <span class="keywordflow">return</span> DateTimeOffset.UtcNow.Subtract(startTime);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                    <span class="keywordflow">return</span> stopwatch.Elapsed;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            }</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer.htm#aca13b786cd896fe3fa1d5f59a9942c2c">  205</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer.htm#aca13b786cd896fe3fa1d5f59a9942c2c">Dispose</a>() {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="preprocessor">#if !PCL</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                <span class="keywordflow">if</span> (stopwatch != null)</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                    stopwatch.Stop();</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            }</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="preprocessor">#endregion</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseResult_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseResult.htm">Deveel.Data.Sql.Parser.SqlParseResult</a></div><div class="ttdoc">The result of a parse of an SQL input </div><div class="ttdef"><b>Definition:</b> <a href="SqlParseResult_8cs_source.htm#l00025">SqlParseResult.cs:25</a></div></div>
<div class="ttc" id="namespaceIrony_htm"><div class="ttname"><a href="namespaceIrony.htm">Irony</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer_htm_aea960c767570da3b40aba8ec50d89ea7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer.htm#aea960c767570da3b40aba8ec50d89ea7">Deveel.Data.Sql.Parser.SqlDefaultParser.Timer.stopwatch</a></div><div class="ttdeci">Stopwatch stopwatch</div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00183">SqlDefaultParser.cs:183</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_htm_ab281b168d5ec3019c110e3653d117c56"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#ab281b168d5ec3019c110e3653d117c56">Deveel.Data.Sql.Parser.SqlDefaultParser.Dispose</a></div><div class="ttdeci">void Dispose(bool disposing)</div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00040">SqlDefaultParser.cs:40</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1IdentifierNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1IdentifierNode.htm">Deveel.Data.Sql.Parser.IdentifierNode</a></div><div class="ttdoc">This is a simple identifier within a SQL grammar. </div><div class="ttdef"><b>Definition:</b> <a href="IdentifierNode_8cs_source.htm#l00028">IdentifierNode.cs:28</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlNode.htm">Deveel.Data.Sql.Parser.ISqlNode</a></div><div class="ttdoc">Defines the contract for nodes in an AST model for a SQL grammar analysis and parsing. </div><div class="ttdef"><b>Definition:</b> <a href="ISqlNode_8cs_source.htm#l00025">ISqlNode.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_htm_ae639f60fd091897cbc52c90f28a676e9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#ae639f60fd091897cbc52c90f28a676e9">Deveel.Data.Sql.Parser.SqlDefaultParser.FindTokensFrom</a></div><div class="ttdeci">static IList&lt; Irony.Parsing.Token &gt; FindTokensFrom(ParseTree tree, int line, int column)</div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00144">SqlDefaultParser.cs:144</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer_htm_aca13b786cd896fe3fa1d5f59a9942c2c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer.htm#aca13b786cd896fe3fa1d5f59a9942c2c">Deveel.Data.Sql.Parser.SqlDefaultParser.Timer.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00205">SqlDefaultParser.cs:205</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm">Deveel.Data.Sql.Parser.SqlDefaultParser</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00028">SqlDefaultParser.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_htm_a6707a4a6e759c5988a0738a6a204b4e4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a6707a4a6e759c5988a0738a6a204b4e4">Deveel.Data.Sql.Parser.SqlDefaultParser.BuildErrors</a></div><div class="ttdeci">static void BuildErrors(ParseTree tree, ICollection&lt; SqlParseError &gt; errors, LogMessageList logMessages)</div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00101">SqlDefaultParser.cs:101</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_htm_a2e966067bba9e282540cd7d769441c5a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a2e966067bba9e282540cd7d769441c5a">Deveel.Data.Sql.Parser.SqlDefaultParser.SqlDefaultParser</a></div><div class="ttdeci">SqlDefaultParser(SqlGrammarBase grammar)</div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00032">SqlDefaultParser.cs:32</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_htm_af5552aeb1ae1c7a52d03d51fca360ab7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#af5552aeb1ae1c7a52d03d51fca360ab7">Deveel.Data.Sql.Parser.SqlDefaultParser.languageData</a></div><div class="ttdeci">LanguageData languageData</div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00029">SqlDefaultParser.cs:29</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_htm_a7cf57d257dbcc7fa090ff3677a43b8ff"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a7cf57d257dbcc7fa090ff3677a43b8ff">Deveel.Data.Sql.Parser.SqlDefaultParser.FormInfoMessage</a></div><div class="ttdeci">static string FormInfoMessage(ParseTree tree, int line, int column)</div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00117">SqlDefaultParser.cs:117</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlParser_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlParser.htm">Deveel.Data.Sql.Parser.ISqlParser</a></div><div class="ttdoc">Implementations of this interface will parse input strings into ISqlNode that can be used to construc...</div><div class="ttdef"><b>Definition:</b> <a href="ISqlParser_8cs_source.htm#l00038">ISqlParser.cs:38</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_htm_a47986872f9502d58897d9701069d9fd8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a47986872f9502d58897d9701069d9fd8">Deveel.Data.Sql.Parser.SqlDefaultParser.ParseNode</a></div><div class="ttdeci">ISqlNode ParseNode(string sqlSource, ICollection&lt; SqlParseError &gt; errors, out long parseTime)</div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00074">SqlDefaultParser.cs:74</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Diagnostics_htm_a5383b8485159a427ef26310502d8df9d"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Diagnostics.htm#a5383b8485159a427ef26310502d8df9d">Deveel.Data.Diagnostics.ErrorLevel</a></div><div class="ttdeci">ErrorLevel</div><div class="ttdoc">In case of error messages, this enumerates the level of severity of the error. </div><div class="ttdef"><b>Definition:</b> <a href="ErrorLevel_8cs_source.htm#l00024">ErrorLevel.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammarBase_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlGrammarBase.htm">Deveel.Data.Sql.Parser.SqlGrammarBase</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlGrammarBase_8cs_source.htm#l00022">SqlGrammarBase.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_htm_a3bf62ba06e666411f2a4293b07d9253e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a3bf62ba06e666411f2a4293b07d9253e">Deveel.Data.Sql.Parser.SqlDefaultParser.Parse</a></div><div class="ttdeci">SqlParseResult Parse(string input)</div><div class="ttdoc">Analyzes and parses the input and results an object that describes the parsed nodes in a tree that ca...</div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00054">SqlDefaultParser.cs:54</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_htm_a7063b817a99e955bafd6b94c0556c0d3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a7063b817a99e955bafd6b94c0556c0d3">Deveel.Data.Sql.Parser.SqlDefaultParser.FindTokensTo</a></div><div class="ttdeci">static IList&lt; Irony.Parsing.Token &gt; FindTokensTo(ParseTree tree, int line, int column)</div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00162">SqlDefaultParser.cs:162</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseError_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseError.htm">Deveel.Data.Sql.Parser.SqlParseError</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlParseError_8cs_source.htm#l00020">SqlParseError.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer_htm_a364865204d895a3b0df08d0c931c6cb2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer.htm#a364865204d895a3b0df08d0c931c6cb2">Deveel.Data.Sql.Parser.SqlDefaultParser.Timer.Timer</a></div><div class="ttdeci">Timer()</div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00186">SqlDefaultParser.cs:186</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_htm_a76471cd2ef026e51ce42c038fb834102"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#a76471cd2ef026e51ce42c038fb834102">Deveel.Data.Sql.Parser.SqlDefaultParser.parser</a></div><div class="ttdeci">Irony.Parsing.Parser parser</div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00030">SqlDefaultParser.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_htm_ab27dfc777e51b7ae81050e32b16fea21"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser.htm#ab27dfc777e51b7ae81050e32b16fea21">Deveel.Data.Sql.Parser.SqlDefaultParser.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00045">SqlDefaultParser.cs:45</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlNode.htm">Deveel.Data.Sql.Parser.SqlNode</a></div><div class="ttdoc">The default implementation of ISqlNode, that is a node in the text analysis parsing of SQL commands...</div><div class="ttdef"><b>Definition:</b> <a href="SqlNode_8cs_source.htm#l00032">SqlNode.cs:32</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlDefaultParser_1_1Timer.htm">Deveel.Data.Sql.Parser.SqlDefaultParser.Timer</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlDefaultParser_8cs_source.htm#l00179">SqlDefaultParser.cs:179</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
