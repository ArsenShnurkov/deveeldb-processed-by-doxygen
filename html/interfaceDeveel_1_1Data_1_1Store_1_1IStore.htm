<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Store.IStore Interface Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Store.htm">Store</a></li><li class="navelem"><a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm">IStore</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#properties">Properties</a> &#124;
<a href="interfaceDeveel_1_1Data_1_1Store_1_1IStore-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Store.IStore Interface Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A store is a resource where areas can be allocated and freed to store information (a memory allocator).  
 <a href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm#details">More...</a></p>
<div class="dynheader">
Inheritance diagram for Deveel.Data.Store.IStore:</div>
<div class="dyncontent">
 <div class="center">
  <img src="interfaceDeveel_1_1Data_1_1Store_1_1IStore.png" usemap="#Deveel.Data.Store.IStore_map" alt=""/>
  <map id="Deveel.Data.Store.IStore_map" name="Deveel.Data.Store.IStore_map">
<area href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm" title="An implementation of IStore that persists data in the application memory. " alt="Deveel.Data.Store.InMemoryStore" shape="rect" coords="0,112,206,136"/>
<area href="classDeveel_1_1Data_1_1Store_1_1StoreBase.htm" alt="Deveel.Data.Store.StoreBase" shape="rect" coords="216,112,422,136"/>
<area href="classDeveel_1_1Data_1_1Store_1_1SingleFileStore.htm" alt="Deveel.Data.Store.SingleFileStore" shape="rect" coords="216,168,422,192"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2789b6b01534def9ff8e1d910dc08450"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm#a2789b6b01534def9ff8e1d910dc08450">CreateArea</a> (long size)</td></tr>
<tr class="memdesc:a2789b6b01534def9ff8e1d910dc08450"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocates a block of memory in the store of the specified size and returns an <a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm" title="An interface for access the contents of an area of a store. ">IArea</a> object that can be used to initialize the contents of the area.  <a href="#a2789b6b01534def9ff8e1d910dc08450">More...</a><br /></td></tr>
<tr class="separator:a2789b6b01534def9ff8e1d910dc08450"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13816ddb6c9004ac9bc4249a74648ae3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm#a13816ddb6c9004ac9bc4249a74648ae3">DeleteArea</a> (long id)</td></tr>
<tr class="memdesc:a13816ddb6c9004ac9bc4249a74648ae3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes an area that was previously allocated by the <a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm#a2789b6b01534def9ff8e1d910dc08450" title="Allocates a block of memory in the store of the specified size and returns an IArea object that can b...">CreateArea</a> method by the area id.  <a href="#a13816ddb6c9004ac9bc4249a74648ae3">More...</a><br /></td></tr>
<tr class="separator:a13816ddb6c9004ac9bc4249a74648ae3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33d0523221bec574156f4060c442f972"><td class="memItemLeft" align="right" valign="top"><a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm#a33d0523221bec574156f4060c442f972">GetArea</a> (long id, bool readOnly)</td></tr>
<tr class="memdesc:a33d0523221bec574156f4060c442f972"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an object that allows for the contents of an area (represented by the <em>id</em>  parameter) to be Read.  <a href="#a33d0523221bec574156f4060c442f972">More...</a><br /></td></tr>
<tr class="separator:a33d0523221bec574156f4060c442f972"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39cd54dd685dc38c0413c8d17bd62578"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm#a39cd54dd685dc38c0413c8d17bd62578">Lock</a> ()</td></tr>
<tr class="memdesc:a39cd54dd685dc38c0413c8d17bd62578"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called before the start of a sequence of Write commands between consistant states of some data structure represented by the store.  <a href="#a39cd54dd685dc38c0413c8d17bd62578">More...</a><br /></td></tr>
<tr class="separator:a39cd54dd685dc38c0413c8d17bd62578"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0d354c7087ca6a0a200a2423dd5f09c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm#aa0d354c7087ca6a0a200a2423dd5f09c">Unlock</a> ()</td></tr>
<tr class="memdesc:aa0d354c7087ca6a0a200a2423dd5f09c"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called after the end of a sequence of Write commands between consistant states of some data structure represented by the store.  <a href="#aa0d354c7087ca6a0a200a2423dd5f09c">More...</a><br /></td></tr>
<tr class="separator:aa0d354c7087ca6a0a200a2423dd5f09c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a721ce6b5ebd39ced0db818a32c75aa33"><td class="memItemLeft" align="right" valign="top">IEnumerable&lt; long &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm#a721ce6b5ebd39ced0db818a32c75aa33">GetAllAreas</a> ()</td></tr>
<tr class="memdesc:a721ce6b5ebd39ced0db818a32c75aa33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a complete list of pointers to all areas in the <a class="el" href="namespaceDeveel_1_1Data_1_1Store.htm">Store</a> as long objects sorted from lowest pointer to highest.  <a href="#a721ce6b5ebd39ced0db818a32c75aa33">More...</a><br /></td></tr>
<tr class="separator:a721ce6b5ebd39ced0db818a32c75aa33"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="properties"></a>
Properties</h2></td></tr>
<tr class="memitem:a3078ce310c34041f9451549016235a37"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm#a3078ce310c34041f9451549016235a37">ClosedClean</a><code> [get]</code></td></tr>
<tr class="memdesc:a3078ce310c34041f9451549016235a37"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates if the store was closed cleanly last time was accessed.  <a href="#a3078ce310c34041f9451549016235a37">More...</a><br /></td></tr>
<tr class="separator:a3078ce310c34041f9451549016235a37"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A store is a resource where areas can be allocated and freed to store information (a memory allocator). </p>
<p>A store can be backed by a file system or main memory, or any type of information storage mechanism that allows the creation, modification and fast lookup of blocks of information. </p>
<p>Some characteristics of implementations of <a class="el" href="namespaceDeveel_1_1Data_1_1Store.htm">Store</a> may be separately specified. For example, a file based store that is intended to persistently store objects may have robustness as a primary requirement. A main memory based store, or another type of volatile storage system, may not need to be sensitive to system crashes or data consistancy requirements across multiple sessions. </p>
<p>Some important assumptions for implementations; The data must not be changed in any way outside of the methods provided by the methods in the class. For persistant implementations, the information must remain the same over invocations, however its often not possible to guarantee this. At least, the store should be able to recover to the last check point. </p>
<p>This interface is the principle class to implement when porting the database to different types of storage devices. </p>
<p>Note that we use 'long' identifiers to reference areas in the store however only the first 60 bits of an identifer will be used unless we are referencing system (the static area is -1) or implementation specific areas. </p>

<p>Definition at line <a class="el" href="IStore_8cs_source.htm#l00056">56</a> of file <a class="el" href="IStore_8cs_source.htm">IStore.cs</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a2789b6b01534def9ff8e1d910dc08450"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> Deveel.Data.Store.IStore.CreateArea </td>
          <td>(</td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Allocates a block of memory in the store of the specified size and returns an <a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm" title="An interface for access the contents of an area of a store. ">IArea</a> object that can be used to initialize the contents of the area. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">size</td><td>The amount of memory to allocate.</td></tr>
  </table>
  </dd>
</dl>
<p>Note that an area in the store is undefined until the <a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#af6f36e4f1b30b4f9701785d079af0e96">IArea.Flush</a> method is called in <a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm" title="An interface for access the contents of an area of a store. ">IArea</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns an <a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm" title="An interface for access the contents of an area of a store. ">IArea</a> object that allows the area to be setup. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">System.IO.IOException</td><td>If not enough space available to create the area or the store is Read-only. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classDeveel_1_1Data_1_1Store_1_1StoreBase.htm#a98940aaca42749a5d6f45a3bd372e886">Deveel.Data.Store.StoreBase</a>, and <a class="el" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a171e16ed931309141e1bc25b61854092">Deveel.Data.Store.InMemoryStore</a>.</p>

</div>
</div>
<a class="anchor" id="a13816ddb6c9004ac9bc4249a74648ae3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Store.IStore.DeleteArea </td>
          <td>(</td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Deletes an area that was previously allocated by the <a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm#a2789b6b01534def9ff8e1d910dc08450" title="Allocates a block of memory in the store of the specified size and returns an IArea object that can b...">CreateArea</a> method by the area id. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>The identifier of the area to delete.</td></tr>
  </table>
  </dd>
</dl>
<p>Once an area is deleted the resources may be reclaimed. The behaviour of this method is undefined if the id doesn't represent a valid area. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">IOException</td><td>If the id is invalid or the area can not otherwise by deleted. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classDeveel_1_1Data_1_1Store_1_1StoreBase.htm#a77d1cf74383b6bac24918e8e35fc0dfa">Deveel.Data.Store.StoreBase</a>, and <a class="el" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a2c9522b5eb2e543eb03eeca331f25ccc">Deveel.Data.Store.InMemoryStore</a>.</p>

</div>
</div>
<a class="anchor" id="a721ce6b5ebd39ced0db818a32c75aa33"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">IEnumerable&lt;long&gt; Deveel.Data.Store.IStore.GetAllAreas </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a complete list of pointers to all areas in the <a class="el" href="namespaceDeveel_1_1Data_1_1Store.htm">Store</a> as long objects sorted from lowest pointer to highest. </p>
<p>This should be used for diagnostics only because it may be difficult for this to be generated with some implementations. It is useful in a repair tool to determine if a pointer is valid or not. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns an implementation of IList that contains all the pointers (as long) to the areas from the lowest to the highest. </dd></dl>

<p>Implemented in <a class="el" href="classDeveel_1_1Data_1_1Store_1_1StoreBase.htm#ac8726d586aad04152dcc075687180a2c">Deveel.Data.Store.StoreBase</a>, and <a class="el" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a2af5d3a64d2226853ad18ca5a5a9559c">Deveel.Data.Store.InMemoryStore</a>.</p>

</div>
</div>
<a class="anchor" id="a33d0523221bec574156f4060c442f972"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> Deveel.Data.Store.IStore.GetArea </td>
          <td>(</td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>readOnly</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns an object that allows for the contents of an area (represented by the <em>id</em>  parameter) to be Read. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>The identifier of the area to Read, or -1 for a 64 byte fixed area in the store.</td></tr>
    <tr><td class="paramname">readOnly</td><td>Indicates if the returned area must be read-only.</td></tr>
  </table>
  </dd>
</dl>
<p>The behaviour of this method is undefined if the id doesn't represent a valid area. </p>
<p>When <em>id</em>  is -1 then a fixed area (64 bytes in size) in the store is returned. The fixed area can be used to store important static information. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns an <a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm" title="An interface for access the contents of an area of a store. ">IArea</a> object that allows access to the part of the store. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">IOException</td><td>If the id is invalid or the area can not otherwise be accessed. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classDeveel_1_1Data_1_1Store_1_1StoreBase.htm#a5a21756bcf0a4b2b8b1b68a3fdf2a0d5">Deveel.Data.Store.StoreBase</a>, and <a class="el" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#aea1253e1f6478ad1f9f9854c680d41b7">Deveel.Data.Store.InMemoryStore</a>.</p>

</div>
</div>
<a class="anchor" id="a39cd54dd685dc38c0413c8d17bd62578"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Store.IStore.Lock </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This method is called before the start of a sequence of Write commands between consistant states of some data structure represented by the store. </p>
<p>This Lock mechanism is intended to inform the store when it is not safe to <a class="el" href="">checkpoint</a> the data in a log, ensuring that no partial updates are committed to a transaction log and the data can be restored in a consistant manner. </p>
<p>If the store does not implement a check point log or is otherwise not interested in consistant states of the data, then it is not necessary for this method to do anything. </p>
<p>This method prevents a check point from happening during some sequence of operations. This method should not Lock unless a check point is in progress. This method does not prevent concurrent writes to the store. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm#aa0d354c7087ca6a0a200a2423dd5f09c" title="This method is called after the end of a sequence of Write commands between consistant states of some...">Unlock</a></dd></dl>

<p>Implemented in <a class="el" href="classDeveel_1_1Data_1_1Store_1_1StoreBase.htm#a0371a4da25f016fb895e36e5984565f8">Deveel.Data.Store.StoreBase</a>, <a class="el" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#af9df820ecfe6b04a60f0f5e9eb005bb7">Deveel.Data.Store.InMemoryStore</a>, and <a class="el" href="classDeveel_1_1Data_1_1Store_1_1SingleFileStore.htm#a500cc6988e9e8963c28fbc7815f9132d">Deveel.Data.Store.SingleFileStore</a>.</p>

</div>
</div>
<a class="anchor" id="aa0d354c7087ca6a0a200a2423dd5f09c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Store.IStore.Unlock </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This method is called after the end of a sequence of Write commands between consistant states of some data structure represented by the store. </p>
<p>See the <a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm#a39cd54dd685dc38c0413c8d17bd62578" title="This method is called before the start of a sequence of Write commands between consistant states of s...">Lock</a> method for a further description of the operation of this locking mechanism. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm#a39cd54dd685dc38c0413c8d17bd62578" title="This method is called before the start of a sequence of Write commands between consistant states of s...">Lock</a></dd></dl>

<p>Implemented in <a class="el" href="classDeveel_1_1Data_1_1Store_1_1StoreBase.htm#a20c87e2c5e61fd48b283a0bd7eaf4e18">Deveel.Data.Store.StoreBase</a>, <a class="el" href="classDeveel_1_1Data_1_1Store_1_1InMemoryStore.htm#a9b8d0f5d67f2084123b186eaf3a09267">Deveel.Data.Store.InMemoryStore</a>, and <a class="el" href="classDeveel_1_1Data_1_1Store_1_1SingleFileStore.htm#a4d46463f7343703558547356a198b66e">Deveel.Data.Store.SingleFileStore</a>.</p>

</div>
</div>
<h2 class="groupheader">Property Documentation</h2>
<a class="anchor" id="a3078ce310c34041f9451549016235a37"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Store.IStore.ClosedClean</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Indicates if the store was closed cleanly last time was accessed. </p>
<p>Returns <b>true</b> if the store was closed cleanly last time it was accessed or <b>false</b> otherwise. </p>
<p>This is important information that may need to be considered when reading information from the store. This is typically used to issue a scan on the data in the store when it is not closed cleanly. </p>

<p>Definition at line <a class="el" href="IStore_8cs_source.htm#l00187">187</a> of file <a class="el" href="IStore_8cs_source.htm">IStore.cs</a>.</p>

</div>
</div>
<hr/>The documentation for this interface was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Store/<a class="el" href="IStore_8cs_source.htm">IStore.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
