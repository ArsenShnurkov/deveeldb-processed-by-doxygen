<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Index/BlockIndex_T.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_da8e3e59386dbd04e303b49ee54c7b55.htm">Deveel.Data.Index</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">BlockIndex_T.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="BlockIndex__T_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Index {</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm">   30</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm">BlockIndex</a>&lt;T&gt; : <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndexBase.htm">BlockIndexBase</a>&lt;T&gt; where T : IComparable&lt;T&gt;, IEquatable&lt;T&gt; {</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm#a7d3f75daaabc0d0626b4cb132c49f9f1">   34</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm#a7d3f75daaabc0d0626b4cb132c49f9f1">BlockIndex</a>() {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm#ae6124ae01261161567e9d4c0ccbb2405">   38</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm#ae6124ae01261161567e9d4c0ccbb2405">BlockIndex</a>(IEnumerable&lt;T&gt; values)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            : base(values) {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        }</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm#ac9408313eb7d4336e8252e2c2e16cd17">   43</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm#ac9408313eb7d4336e8252e2c2e16cd17">BlockIndex</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndex.htm">IIndex&lt;T&gt;</a> index)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            : base(index) {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        }</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm#a594eae42e2db44869b1dce9349c96dc0">   48</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm#a594eae42e2db44869b1dce9349c96dc0">BlockIndex</a>(IEnumerable&lt;<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm">IIndexBlock&lt;T&gt;</a>&gt; blocks)</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            : base(blocks) {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm#a8ae71d2a1e089114a897f83fef4b4004">   53</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm">IIndexBlock&lt;T&gt;</a> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm#a8ae71d2a1e089114a897f83fef4b4004">NewBlock</a>() {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Block.htm">Block</a>(512);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="preprocessor">        #region Block</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm">   59</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm">Block</a> : <a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm">IIndexBlock</a>&lt;T&gt; {</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a8c05e13048f8ee335e5d9bc583697755">   60</a></span>&#160;            <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a8c05e13048f8ee335e5d9bc583697755">count</a>;</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a5d5a09133c85f251671b6dadad6bb474">   61</a></span>&#160;            <span class="keyword">private</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a5d5a09133c85f251671b6dadad6bb474">changed</a>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ac3e0de59a4a86d17f003c3c438c4da83">   63</a></span>&#160;            <span class="keyword">protected</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ac3e0de59a4a86d17f003c3c438c4da83">Block</a>() {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#aea290044a91326e9374f61fca65ad14d">   66</a></span>&#160;            <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#aea290044a91326e9374f61fca65ad14d">Block</a>(<span class="keywordtype">int</span> blockSize)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                : this() {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                BaseArray = <span class="keyword">new</span> T[blockSize];</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                count = 0;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a43ba9c59bbb31785a15363831499b152">   72</a></span>&#160;            <span class="keyword">protected</span> T[] BaseArray { <span class="keyword">get</span>; set; }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a19ba5cbdb0165888ae15a503eb85f56c">   74</a></span>&#160;            <span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keywordtype">int</span> ArrayLength {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                <span class="keyword">get</span> { <span class="keywordflow">return</span> BaseArray.Length; }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a8ca50f5337dc18e15abacc8de572e064">   78</a></span>&#160;            <span class="keyword">public</span> IEnumerator&lt;T&gt; <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a8ca50f5337dc18e15abacc8de572e064">GetEnumerator</a>() {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm">Enumerator</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#acca2df505a238f2ba3ce2ccad2e509c5">   82</a></span>&#160;            IEnumerator IEnumerable.GetEnumerator() {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                <span class="keywordflow">return</span> GetEnumerator();</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a96420b936fe160fd59df8d67a505f395">   86</a></span>&#160;            <a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm">IIndexBlock&lt;T&gt;</a> <a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm">IIndexBlock&lt;T&gt;</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm#a968cfe15f76c6a13ca4576e3c5924e1d">Next</a> {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                <span class="keyword">get</span> { <span class="keywordflow">return</span> Next; }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                set { Next = (<a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm">Block</a>) value; }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ac8c9f37e27952e01fcf4601b655a4044">   91</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm">Block</a> Next { <span class="keyword">get</span>; set; }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#aa942a8ba84811e05d2a2f5abeba3782c">   93</a></span>&#160;            <a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm">IIndexBlock&lt;T&gt;</a> <a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm">IIndexBlock&lt;T&gt;</a>.<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm#a2acf4b97c169baeecdcac74758eb889e">Previous</a> {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                <span class="keyword">get</span> { <span class="keywordflow">return</span> Previous; }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                set { Previous = (<a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm">Block</a>) value; }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a3cbe4432e61b64620fc544c0319ccfba">   98</a></span>&#160;            <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm">Block</a> Previous { <span class="keyword">get</span>; set; }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#acc3cf63800c4863a8e60eb46901b3051">  101</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">bool</span> HasChanged {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                <span class="keyword">get</span> { <span class="keywordflow">return</span> changed; }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#aff034a3b391a816713d4a371eaafa533">  106</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">int</span> Count {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                <span class="keyword">get</span> { <span class="keywordflow">return</span> count; }</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                <span class="keyword">protected</span> set { count = value; }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a5b391f864d89b0d12fe197809c221dd4">  112</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">bool</span> IsFull {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                <span class="keyword">get</span> { <span class="keywordflow">return</span> count &gt;= ArrayLength; }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#aeda34edb257ae393d9e01ac3337746d3">  117</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">bool</span> IsEmpty {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                <span class="keyword">get</span> { <span class="keywordflow">return</span> count &lt;= 0; }</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a8e52cf509577a1abea3c3973260e84e7">  122</a></span>&#160;            <span class="keyword">public</span> <span class="keyword">virtual</span> T Top {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                <span class="keyword">get</span> { <span class="keywordflow">return</span> GetArray(<span class="keyword">true</span>)[count - 1]; }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ac73a1873dc116dee89f1c49100674f86">  127</a></span>&#160;            <span class="keyword">public</span> <span class="keyword">virtual</span> T Bottom {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                <span class="keyword">get</span> {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                    <span class="keywordflow">if</span> (count &lt;= 0)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;no bottom value.&quot;</span>);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                    <span class="keywordflow">return</span> GetArray(<span class="keyword">true</span>)[0];</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                }</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ac716097b448378212047a8343ee931eb">  137</a></span>&#160;            <span class="keyword">public</span> T <span class="keyword">this</span>[<span class="keywordtype">int</span> index] {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                <span class="keyword">get</span> { <span class="keywordflow">return</span> GetArray(<span class="keyword">true</span>)[index]; }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                set {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                    changed = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                    GetArray(<span class="keyword">false</span>)[index] = value;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a88d8f38f14214694628036ffba9c2863">  145</a></span>&#160;            <span class="keyword">protected</span> <span class="keyword">virtual</span> T[] <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a88d8f38f14214694628036ffba9c2863">GetArray</a>(<span class="keywordtype">bool</span> readOnly) {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                <span class="keywordflow">if</span> (readOnly) {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                    var newArray = <span class="keyword">new</span> T[BaseArray.Length];</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                    Array.Copy(BaseArray, 0, newArray, 0, BaseArray.Length);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                    <span class="keywordflow">return</span> newArray;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <span class="keywordflow">return</span> BaseArray;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a7afbc7a40769604ae776148a639b0909">  154</a></span>&#160;            <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a7afbc7a40769604ae776148a639b0909">IsSmallerOrEqual</a>(T x, T y) {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <span class="keywordflow">return</span> x.CompareTo(y) &lt;= 0;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a9fb41831e18c7039a181976934ee03db">  158</a></span>&#160;            <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a9fb41831e18c7039a181976934ee03db">IsGreaterOrEqual</a>(T x, T y) {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                <span class="keywordflow">return</span> x.CompareTo(y) &gt;= 0;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a6d28c42e77760569300b2478df6fcf4a">  162</a></span>&#160;            <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a6d28c42e77760569300b2478df6fcf4a">IsGreater</a>(T x, T y) {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                <span class="keywordflow">return</span> x.CompareTo(y) &gt; 0;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a1f61c1cab3899a2529a3a85786e74ed0">  166</a></span>&#160;            <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a1f61c1cab3899a2529a3a85786e74ed0">IsSmaller</a>(T x, T y) {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                <span class="keywordflow">return</span> x.CompareTo(y) &lt; 0;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            }</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#adea05c47afde20ae36387fd1c1f6a874">  171</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#adea05c47afde20ae36387fd1c1f6a874">CanContain</a>(<span class="keywordtype">int</span> number) {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <span class="keywordflow">return</span> count + number + 1 &lt; ArrayLength;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a2d3ad6f4e3f1716fe13ba648419ce962">  176</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a2d3ad6f4e3f1716fe13ba648419ce962">Add</a>(T value) {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                changed = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                var arr = GetArray(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                arr[count] = value;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                ++count;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            }</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a58676e0a41dacb2fda9959caa3e185a6">  184</a></span>&#160;            <span class="keyword">public</span> T <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a58676e0a41dacb2fda9959caa3e185a6">RemoveAt</a>(<span class="keywordtype">int</span> index) {</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                changed = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                var arr = GetArray(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                var val = arr[index];</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                Array.Copy(BaseArray, index + 1, arr, index, (count - index));</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                --count;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                <span class="keywordflow">return</span> val;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            }</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a399905cfdb6a741ee80708bdc8c3c5d0">  194</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a399905cfdb6a741ee80708bdc8c3c5d0">IndexOf</a>(T value) {</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                var arr = GetArray(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = count - 1; i &gt;= 0; --i) {</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                    <span class="keywordflow">if</span> (arr[i].Equals(value))</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                        <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                }</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#aafa131c2cc08f5041b223b83b114a410">  204</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#aafa131c2cc08f5041b223b83b114a410">IndexOf</a>(T value, <span class="keywordtype">int</span> startIndex) {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                var arr = GetArray(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = startIndex; i &lt; count; ++i) {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                    <span class="keywordflow">if</span> (arr[i].Equals(value))</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                        <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                }</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ab44e24057f1183f9ca4d4462963259f6">  214</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ab44e24057f1183f9ca4d4462963259f6">Insert</a>(T value, <span class="keywordtype">int</span> index) {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                changed = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                var arr = GetArray(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                Array.Copy(BaseArray, index, arr, index + 1, (count - index));</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                ++count;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                arr[index] = value;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ae0025d53a7cc5ab7b096223ee640dfa9">  223</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ae0025d53a7cc5ab7b096223ee640dfa9">MoveTo</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm">IIndexBlock&lt;T&gt;</a> destBlock, <span class="keywordtype">int</span> destIndex, <span class="keywordtype">int</span> length) {</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                var block = (<a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm">Block</a>) destBlock;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                var arr = GetArray(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                var destArr = block.GetArray(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                <span class="comment">// Make room in the destination block</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                <span class="keywordtype">int</span> destbSize = block.Count;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                <span class="keywordflow">if</span> (destbSize &gt; 0) {</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                    Array.Copy(destArr, 0, destArr, length, destbSize);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                <span class="comment">// Copy from this block into the destination block.</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                Array.Copy(arr, count - length, destArr, 0, length);</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                <span class="comment">// Alter size of destination and source block.</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                block.count += length;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                count -= length;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                <span class="comment">// Mark both blocks as changed</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                changed = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                block.changed = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            }</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ade8436d639f4683de22fb25e1edd9fad">  246</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ade8436d639f4683de22fb25e1edd9fad">CopyTo</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm">IIndexBlock&lt;T&gt;</a> destBlock) {</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                var block = (<a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm">Block</a>) destBlock;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                var destArr = block.GetArray(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                Array.Copy(GetArray(<span class="keyword">true</span>), 0, destArr, 0, count);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                block.count = count;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                block.changed = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            }</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div>
<div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a6be879f0ac55c4762ea27ef39add5e2c">  255</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a6be879f0ac55c4762ea27ef39add5e2c">CopyTo</a>(T[] destArray, <span class="keywordtype">int</span> arrayIndex) {</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                Array.Copy(GetArray(<span class="keyword">true</span>), 0, destArray, arrayIndex, count);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                <span class="keywordflow">return</span> count;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            }</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div>
<div class="line"><a name="l00261"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a922ec0fa750caf7ad36bc70a4944b022">  261</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a922ec0fa750caf7ad36bc70a4944b022">Clear</a>() {</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                changed = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                count = 0;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            }</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00267"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ad19d181e179d62c6b6d34fb8402b75fd">  267</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ad19d181e179d62c6b6d34fb8402b75fd">BinarySearch</a>(<span class="keywordtype">object</span> key, <a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexComparer.htm">IIndexComparer&lt;T&gt;</a> comparer) {</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                var arr = GetArray(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                <span class="keywordtype">int</span> low = 0;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                <span class="keywordtype">int</span> high = count - 1;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                <span class="keywordflow">while</span> (low &lt;= high) {</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                    <span class="keywordtype">int</span> mid = (low + high)/2;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                    <span class="keywordtype">int</span> cmp = comparer.<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexComparer.htm#a5b39c841a512496babf3f855761a8c08">CompareValue</a>(arr[mid], (<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>) key);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                    <span class="keywordflow">if</span> (cmp &lt; 0)</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                        low = mid + 1;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (cmp &gt; 0)</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                        high = mid - 1;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                        <span class="keywordflow">return</span> mid; <span class="comment">// key found</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                <span class="keywordflow">return</span> -(low + 1); <span class="comment">// key not found.</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a1cad745c9d6ef1ef3861a468faf214e6">  287</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a1cad745c9d6ef1ef3861a468faf214e6">SearchFirst</a>(<span class="keywordtype">object</span> key, <a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexComparer.htm">IIndexComparer&lt;T&gt;</a> comparer) {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                var arr = GetArray(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                <span class="keywordtype">int</span> low = 0;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                <span class="keywordtype">int</span> high = count - 1;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                <span class="keywordflow">while</span> (low &lt;= high) {</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                    <span class="keywordflow">if</span> (high - low &lt;= 2) {</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = low; i &lt;= high; ++i) {</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                            <span class="keywordtype">int</span> cmp1 = comparer.<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexComparer.htm#a5b39c841a512496babf3f855761a8c08">CompareValue</a>(arr[i], (<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>) key);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                            <span class="keywordflow">if</span> (cmp1 == 0)</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                                <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                            <span class="keywordflow">if</span> (cmp1 &gt; 0)</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                                <span class="keywordflow">return</span> -(i + 1);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                        }</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                        <span class="keywordflow">return</span> -(high + 2);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                    }</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                    <span class="keywordtype">int</span> mid = (low + high)/2;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                    <span class="keywordtype">int</span> cmp = comparer.<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexComparer.htm#a5b39c841a512496babf3f855761a8c08">CompareValue</a>(arr[mid], (<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>) key);</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                    <span class="keywordflow">if</span> (cmp &lt; 0) {</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                        low = mid + 1;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (cmp &gt; 0) {</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                        high = mid - 1;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                        high = mid;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                    }</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                }</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                <span class="keywordflow">return</span> -(low + 1); <span class="comment">// key not found.</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            }</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div>
<div class="line"><a name="l00322"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#aafb08143b25ecc820a8498dbc92b3ef5">  322</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#aafb08143b25ecc820a8498dbc92b3ef5">SearchLast</a>(<span class="keywordtype">object</span> key, <a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexComparer.htm">IIndexComparer&lt;T&gt;</a> comparer) {</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                var arr = GetArray(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                <span class="keywordtype">int</span> low = 0;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                <span class="keywordtype">int</span> high = count - 1;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                <span class="keywordflow">while</span> (low &lt;= high) {</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                    <span class="keywordflow">if</span> (high - low &lt;= 2) {</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = high; i &gt;= low; --i) {</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                            <span class="keywordtype">int</span> cmp1 = comparer.<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexComparer.htm#a5b39c841a512496babf3f855761a8c08">CompareValue</a>(arr[i], (<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>) key);</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                            <span class="keywordflow">if</span> (cmp1 == 0)</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                                <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                            <span class="keywordflow">if</span> (cmp1 &lt; 0)</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                                <span class="keywordflow">return</span> -(i + 2);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                        }</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                        <span class="keywordflow">return</span> -(low + 1);</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                    }</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                    <span class="keywordtype">int</span> mid = (low + high)/2;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                    <span class="keywordtype">int</span> cmp = comparer.<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexComparer.htm#a5b39c841a512496babf3f855761a8c08">CompareValue</a>(arr[mid], (<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>) key);</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                    <span class="keywordflow">if</span> (cmp &lt; 0) {</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                        low = mid + 1;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (cmp &gt; 0) {</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                        high = mid - 1;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                        low = mid;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                    }</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                }</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                <span class="keywordflow">return</span> -(low + 1); <span class="comment">// key not found.</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            }</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div>
<div class="line"><a name="l00355"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a7f1be00062a50216b06c3465d958dfe4">  355</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a7f1be00062a50216b06c3465d958dfe4">SearchFirst</a>(T value) {</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                var arr = GetArray(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                <span class="keywordtype">int</span> low = 0;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                <span class="keywordtype">int</span> high = count - 1;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                <span class="keywordflow">while</span> (low &lt;= high) {</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                    <span class="keywordflow">if</span> (high - low &lt;= 2) {</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = low; i &lt;= high; ++i) {</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                            <span class="keywordflow">if</span> (arr[i].Equals(value))</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                                <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                            <span class="keywordflow">if</span> (IsGreater(arr[i], value))</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                                <span class="keywordflow">return</span> -(i + 1);</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                        }</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                        <span class="keywordflow">return</span> -(high + 2);</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                    }</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                    <span class="keywordtype">int</span> mid = (low + high)/2;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                    <span class="keywordflow">if</span> (IsSmaller(arr[mid], value)) {</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                        low = mid + 1;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (IsGreater(arr[mid], value)) {</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                        high = mid - 1;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                        high = mid;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                    }</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                }</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                <span class="keywordflow">return</span> -(low + 1); <span class="comment">// key not found.</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            }</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div>
<div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ab97619edc1fc6697bb6f3935c240ee95">  386</a></span>&#160;            <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ab97619edc1fc6697bb6f3935c240ee95">SearchLast</a>(T value) {</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                var arr = GetArray(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                <span class="keywordtype">int</span> low = 0;</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                <span class="keywordtype">int</span> high = count - 1;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                <span class="keywordflow">while</span> (low &lt;= high) {</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                    <span class="keywordflow">if</span> (high - low &lt;= 2) {</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = high; i &gt;= low; --i) {</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                            <span class="keywordflow">if</span> (arr[i].Equals(value))</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                                <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                            <span class="keywordflow">if</span> (IsSmaller(arr[i], value))</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                                <span class="keywordflow">return</span> -(i + 2);</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                        }</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                        <span class="keywordflow">return</span> -(low + 1);</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                    }</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                    <span class="keywordtype">int</span> mid = (low + high)/2;</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                    <span class="keywordflow">if</span> (IsSmaller(arr[mid], value)) {</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                        low = mid + 1;</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (IsGreater(arr[mid], value)) {</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                        high = mid - 1;</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                        low = mid;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                    }</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                }</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                <span class="keywordflow">return</span> -(low + 1); <span class="comment">// key not found.</span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;            }</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="preprocessor">            #region Enumerator</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div>
<div class="line"><a name="l00418"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm">  418</a></span>&#160;            <span class="keyword">private</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm">Enumerator</a> : IEnumerator&lt;T&gt; {</div>
<div class="line"><a name="l00419"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#a57c96874acf675e99ec69b48382f92c3">  419</a></span>&#160;                <span class="keyword">private</span> readonly <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm">Block</a> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#a57c96874acf675e99ec69b48382f92c3">block</a>;</div>
<div class="line"><a name="l00420"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#aa155abb0bca2c13c659181c40d9f7875">  420</a></span>&#160;                <span class="keyword">private</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#aa155abb0bca2c13c659181c40d9f7875">index</a>;</div>
<div class="line"><a name="l00421"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#ad7eef9091448adb914fce9993e12da99">  421</a></span>&#160;                <span class="keyword">private</span> T[] <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#ad7eef9091448adb914fce9993e12da99">array</a>;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div>
<div class="line"><a name="l00423"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#ae5eff34e76f65b5b9a6e427eb3f7b259">  423</a></span>&#160;                <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#ae5eff34e76f65b5b9a6e427eb3f7b259">Enumerator</a>(<a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm">Block</a> block) {</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                    this.block = block;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                    array = block.<a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a88d8f38f14214694628036ffba9c2863">GetArray</a>(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                    index = -1;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                }</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div>
<div class="line"><a name="l00429"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#a965df45b040315ac91bea93c0707e6cb">  429</a></span>&#160;                <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#a965df45b040315ac91bea93c0707e6cb">Dispose</a>() {</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                }</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div>
<div class="line"><a name="l00432"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#ad9df9ebf4dcb2c4403c86093518e2203">  432</a></span>&#160;                <span class="keyword">public</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#ad9df9ebf4dcb2c4403c86093518e2203">MoveNext</a>() {</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                    <span class="keywordflow">return</span> ++index &lt; array.Length;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                }</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div>
<div class="line"><a name="l00436"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#a73ce28e8d7fcde0da096a3c39199b921">  436</a></span>&#160;                <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#a73ce28e8d7fcde0da096a3c39199b921">Reset</a>() {</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                    array = block.GetArray(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                    index = -1;</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                }</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div>
<div class="line"><a name="l00441"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#a22ee2f026dacd623baa3390852de407a">  441</a></span>&#160;                <span class="keyword">public</span> T Current {</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                    <span class="keyword">get</span> { <span class="keywordflow">return</span> array[index]; }</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                }</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div>
<div class="line"><a name="l00445"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#a528e9ad61df0a2d5ce33bf189304f898">  445</a></span>&#160;                <span class="keywordtype">object</span> IEnumerator.Current {</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                    <span class="keyword">get</span> { <span class="keywordflow">return</span> Current; }</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                }</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;            }</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="preprocessor">            #endregion</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        }</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    }</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator_htm_ad7eef9091448adb914fce9993e12da99"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#ad7eef9091448adb914fce9993e12da99">Deveel.Data.Index.BlockIndex.Block.Enumerator.array</a></div><div class="ttdeci">T[] array</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00421">BlockIndex_T.cs:421</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_a6d28c42e77760569300b2478df6fcf4a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a6d28c42e77760569300b2478df6fcf4a">Deveel.Data.Index.BlockIndex.Block.IsGreater</a></div><div class="ttdeci">static bool IsGreater(T x, T y)</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00162">BlockIndex_T.cs:162</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator_htm_ad9df9ebf4dcb2c4403c86093518e2203"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#ad9df9ebf4dcb2c4403c86093518e2203">Deveel.Data.Index.BlockIndex.Block.Enumerator.MoveNext</a></div><div class="ttdeci">bool MoveNext()</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00432">BlockIndex_T.cs:432</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_a399905cfdb6a741ee80708bdc8c3c5d0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a399905cfdb6a741ee80708bdc8c3c5d0">Deveel.Data.Index.BlockIndex.Block.IndexOf</a></div><div class="ttdeci">int IndexOf(T value)</div><div class="ttdoc">summary> Performs an iterative search from the given position to the end of the list in the block...</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00194">BlockIndex_T.cs:194</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_a9fb41831e18c7039a181976934ee03db"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a9fb41831e18c7039a181976934ee03db">Deveel.Data.Index.BlockIndex.Block.IsGreaterOrEqual</a></div><div class="ttdeci">static bool IsGreaterOrEqual(T x, T y)</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00158">BlockIndex_T.cs:158</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator_htm_a57c96874acf675e99ec69b48382f92c3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#a57c96874acf675e99ec69b48382f92c3">Deveel.Data.Index.BlockIndex.Block.Enumerator.block</a></div><div class="ttdeci">readonly Block block</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00419">BlockIndex_T.cs:419</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_ab97619edc1fc6697bb6f3935c240ee95"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ab97619edc1fc6697bb6f3935c240ee95">Deveel.Data.Index.BlockIndex.Block.SearchLast</a></div><div class="ttdeci">int SearchLast(T value)</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00386">BlockIndex_T.cs:386</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator_htm_aa155abb0bca2c13c659181c40d9f7875"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#aa155abb0bca2c13c659181c40d9f7875">Deveel.Data.Index.BlockIndex.Block.Enumerator.index</a></div><div class="ttdeci">int index</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00420">BlockIndex_T.cs:420</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Index_1_1IIndexComparer_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexComparer.htm">Deveel.Data.Index.IIndexComparer</a></div><div class="ttdoc">A comparer that is used within IIndex<T> to compares two values which are indices to data that is bei...</div><div class="ttdef"><b>Definition:</b> <a href="IIndexComparer__T_8cs_source.htm#l00029">IIndexComparer_T.cs:29</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_aafa131c2cc08f5041b223b83b114a410"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#aafa131c2cc08f5041b223b83b114a410">Deveel.Data.Index.BlockIndex.Block.IndexOf</a></div><div class="ttdeci">int IndexOf(T value, int startIndex)</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00204">BlockIndex_T.cs:204</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_a7afbc7a40769604ae776148a639b0909"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a7afbc7a40769604ae776148a639b0909">Deveel.Data.Index.BlockIndex.Block.IsSmallerOrEqual</a></div><div class="ttdeci">static bool IsSmallerOrEqual(T x, T y)</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00154">BlockIndex_T.cs:154</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_a7f1be00062a50216b06c3465d958dfe4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a7f1be00062a50216b06c3465d958dfe4">Deveel.Data.Index.BlockIndex.Block.SearchFirst</a></div><div class="ttdeci">int SearchFirst(T value)</div><div class="ttdoc">summary> Assuming a sorted block, finds the last index in the block that equals the given value...</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00355">BlockIndex_T.cs:355</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Block_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Block.htm">Deveel.Data.Block</a></div><div class="ttdef"><b>Definition:</b> <a href="Block_8cs_source.htm#l00023">Block.cs:23</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock_htm_a968cfe15f76c6a13ca4576e3c5924e1d"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm#a968cfe15f76c6a13ca4576e3c5924e1d">Deveel.Data.Index.IIndexBlock.Next</a></div><div class="ttdeci">IIndexBlock&lt; T &gt; Next</div><div class="ttdoc">Gets or sets the next block in the hash. </div><div class="ttdef"><b>Definition:</b> <a href="IIndexBlock__T_8cs_source.htm#l00037">IIndexBlock_T.cs:37</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_a922ec0fa750caf7ad36bc70a4944b022"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a922ec0fa750caf7ad36bc70a4944b022">Deveel.Data.Index.BlockIndex.Block.Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the block of all elements.  </div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00261">BlockIndex_T.cs:261</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_a6be879f0ac55c4762ea27ef39add5e2c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a6be879f0ac55c4762ea27ef39add5e2c">Deveel.Data.Index.BlockIndex.Block.CopyTo</a></div><div class="ttdeci">int CopyTo(T[] destArray, int arrayIndex)</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00255">BlockIndex_T.cs:255</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_htm_a7d3f75daaabc0d0626b4cb132c49f9f1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm#a7d3f75daaabc0d0626b4cb132c49f9f1">Deveel.Data.Index.BlockIndex.BlockIndex</a></div><div class="ttdeci">BlockIndex()</div><div class="ttdoc">Constructs an index with no values. </div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00034">BlockIndex_T.cs:34</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_a8ca50f5337dc18e15abacc8de572e064"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a8ca50f5337dc18e15abacc8de572e064">Deveel.Data.Index.BlockIndex.Block.GetEnumerator</a></div><div class="ttdeci">IEnumerator&lt; T &gt; GetEnumerator()</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00078">BlockIndex_T.cs:78</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_a1f61c1cab3899a2529a3a85786e74ed0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a1f61c1cab3899a2529a3a85786e74ed0">Deveel.Data.Index.BlockIndex.Block.IsSmaller</a></div><div class="ttdeci">static bool IsSmaller(T x, T y)</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00166">BlockIndex_T.cs:166</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_a2d3ad6f4e3f1716fe13ba648419ce962"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a2d3ad6f4e3f1716fe13ba648419ce962">Deveel.Data.Index.BlockIndex.Block.Add</a></div><div class="ttdeci">void Add(T value)</div><div class="ttdoc">Adss an int element to the block.  </div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00176">BlockIndex_T.cs:176</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_a8c05e13048f8ee335e5d9bc583697755"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a8c05e13048f8ee335e5d9bc583697755">Deveel.Data.Index.BlockIndex.Block.count</a></div><div class="ttdeci">int count</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00060">BlockIndex_T.cs:60</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_a1cad745c9d6ef1ef3861a468faf214e6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a1cad745c9d6ef1ef3861a468faf214e6">Deveel.Data.Index.BlockIndex.Block.SearchFirst</a></div><div class="ttdeci">int SearchFirst(object key, IIndexComparer&lt; T &gt; comparer)</div><div class="ttdoc">summary> Finds the last index in the block that equals the given key. /summary> param name="key"> ...</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00287">BlockIndex_T.cs:287</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock_htm_a2acf4b97c169baeecdcac74758eb889e"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm#a2acf4b97c169baeecdcac74758eb889e">Deveel.Data.Index.IIndexBlock.Previous</a></div><div class="ttdeci">IIndexBlock&lt; T &gt; Previous</div><div class="ttdoc">Gets or sets the previous block in the hash. </div><div class="ttdef"><b>Definition:</b> <a href="IIndexBlock__T_8cs_source.htm#l00042">IIndexBlock_T.cs:42</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_htm_ac9408313eb7d4336e8252e2c2e16cd17"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm#ac9408313eb7d4336e8252e2c2e16cd17">Deveel.Data.Index.BlockIndex.BlockIndex</a></div><div class="ttdeci">BlockIndex(IIndex&lt; T &gt; index)</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00043">BlockIndex_T.cs:43</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm">Deveel.Data.Index.BlockIndex.Block</a></div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00059">BlockIndex_T.cs:59</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_htm_a8ae71d2a1e089114a897f83fef4b4004"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm#a8ae71d2a1e089114a897f83fef4b4004">Deveel.Data.Index.BlockIndex.NewBlock</a></div><div class="ttdeci">override IIndexBlock&lt; T &gt; NewBlock()</div><div class="ttdoc">Creates a new IIndexBlock<T> for the given implementation.  </div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00053">BlockIndex_T.cs:53</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_a88d8f38f14214694628036ffba9c2863"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a88d8f38f14214694628036ffba9c2863">Deveel.Data.Index.BlockIndex.Block.GetArray</a></div><div class="ttdeci">virtual T[] GetArray(bool readOnly)</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00145">BlockIndex_T.cs:145</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1DataObject_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1DataObject.htm">Deveel.Data.DataObject</a></div><div class="ttdoc">Represents a dynamic object that encapsulates a defined SqlType and a compatible constant ISqlObject ...</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00035">DataObject.cs:35</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Index_1_1IIndexComparer_htm_a5b39c841a512496babf3f855761a8c08"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexComparer.htm#a5b39c841a512496babf3f855761a8c08">Deveel.Data.Index.IIndexComparer.CompareValue</a></div><div class="ttdeci">int CompareValue(T index, DataObject value)</div><div class="ttdoc">Compares a value contained in the underlying index at the given position and the </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_ae0025d53a7cc5ab7b096223ee640dfa9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ae0025d53a7cc5ab7b096223ee640dfa9">Deveel.Data.Index.BlockIndex.Block.MoveTo</a></div><div class="ttdeci">void MoveTo(IIndexBlock&lt; T &gt; destBlock, int destIndex, int length)</div><div class="ttdoc">summary> Copies all the data from this block into the given destination block. /summary> param name="...</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00223">BlockIndex_T.cs:223</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_htm_a594eae42e2db44869b1dce9349c96dc0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm#a594eae42e2db44869b1dce9349c96dc0">Deveel.Data.Index.BlockIndex.BlockIndex</a></div><div class="ttdeci">BlockIndex(IEnumerable&lt; IIndexBlock&lt; T &gt;&gt; blocks)</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00048">BlockIndex_T.cs:48</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_ade8436d639f4683de22fb25e1edd9fad"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ade8436d639f4683de22fb25e1edd9fad">Deveel.Data.Index.BlockIndex.Block.CopyTo</a></div><div class="ttdeci">void CopyTo(IIndexBlock&lt; T &gt; destBlock)</div><div class="ttdoc">summary> Copies all the data from this block into the given array. /summary> param name="array">The d...</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00246">BlockIndex_T.cs:246</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_a5d5a09133c85f251671b6dadad6bb474"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a5d5a09133c85f251671b6dadad6bb474">Deveel.Data.Index.BlockIndex.Block.changed</a></div><div class="ttdeci">bool changed</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00061">BlockIndex_T.cs:61</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexBlock.htm">Deveel.Data.Index.IIndexBlock</a></div><div class="ttdoc">A block contained in a BlockIndex. </div><div class="ttdef"><b>Definition:</b> <a href="IIndexBlock__T_8cs_source.htm#l00033">IIndexBlock_T.cs:33</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_aea290044a91326e9374f61fca65ad14d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#aea290044a91326e9374f61fca65ad14d">Deveel.Data.Index.BlockIndex.Block.Block</a></div><div class="ttdeci">Block(int blockSize)</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00066">BlockIndex_T.cs:66</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Index_1_1IIndex_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Index_1_1IIndex.htm">Deveel.Data.Index.IIndex&lt; T &gt;</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator_htm_a73ce28e8d7fcde0da096a3c39199b921"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#a73ce28e8d7fcde0da096a3c39199b921">Deveel.Data.Index.BlockIndex.Block.Enumerator.Reset</a></div><div class="ttdeci">void Reset()</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00436">BlockIndex_T.cs:436</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_aafb08143b25ecc820a8498dbc92b3ef5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#aafb08143b25ecc820a8498dbc92b3ef5">Deveel.Data.Index.BlockIndex.Block.SearchLast</a></div><div class="ttdeci">int SearchLast(object key, IIndexComparer&lt; T &gt; comparer)</div><div class="ttdoc">summary> Assuming a sorted block, finds the first index in the block that equals the given value...</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00322">BlockIndex_T.cs:322</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator_htm_ae5eff34e76f65b5b9a6e427eb3f7b259"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#ae5eff34e76f65b5b9a6e427eb3f7b259">Deveel.Data.Index.BlockIndex.Block.Enumerator.Enumerator</a></div><div class="ttdeci">Enumerator(Block block)</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00423">BlockIndex_T.cs:423</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_adea05c47afde20ae36387fd1c1f6a874"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#adea05c47afde20ae36387fd1c1f6a874">Deveel.Data.Index.BlockIndex.Block.CanContain</a></div><div class="ttdeci">bool CanContain(int number)</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00171">BlockIndex_T.cs:171</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndexBase_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndexBase.htm">Deveel.Data.Index.BlockIndexBase</a></div><div class="ttdoc">An implementation of an index of values that are stored across an array of blocks. </div><div class="ttdef"><b>Definition:</b> <a href="BlockIndexBase__T_8cs_source.htm#l00063">BlockIndexBase_T.cs:63</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator_htm_a965df45b040315ac91bea93c0707e6cb"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm#a965df45b040315ac91bea93c0707e6cb">Deveel.Data.Index.BlockIndex.Block.Enumerator.Dispose</a></div><div class="ttdeci">void Dispose()</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00429">BlockIndex_T.cs:429</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_ac3e0de59a4a86d17f003c3c438c4da83"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ac3e0de59a4a86d17f003c3c438c4da83">Deveel.Data.Index.BlockIndex.Block.Block</a></div><div class="ttdeci">Block()</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00063">BlockIndex_T.cs:63</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm">Deveel.Data.Index.BlockIndex</a></div><div class="ttdoc">An implementation of BlockIndexBase<T> that stores all values in blocks that are entirely stored in m...</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00030">BlockIndex_T.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_a58676e0a41dacb2fda9959caa3e185a6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#a58676e0a41dacb2fda9959caa3e185a6">Deveel.Data.Index.BlockIndex.Block.RemoveAt</a></div><div class="ttdeci">T RemoveAt(int index)</div><div class="ttdoc">Removes the element at the given index from the block.  </div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00184">BlockIndex_T.cs:184</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_1_1Enumerator.htm">Deveel.Data.Index.BlockIndex.Block.Enumerator</a></div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00418">BlockIndex_T.cs:418</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_htm_ae6124ae01261161567e9d4c0ccbb2405"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex.htm#ae6124ae01261161567e9d4c0ccbb2405">Deveel.Data.Index.BlockIndex.BlockIndex</a></div><div class="ttdeci">BlockIndex(IEnumerable&lt; T &gt; values)</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00038">BlockIndex_T.cs:38</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_ad19d181e179d62c6b6d34fb8402b75fd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ad19d181e179d62c6b6d34fb8402b75fd">Deveel.Data.Index.BlockIndex.Block.BinarySearch</a></div><div class="ttdeci">int BinarySearch(object key, IIndexComparer&lt; T &gt; comparer)</div><div class="ttdoc">summary> Finds the first index in the block that equals the given key. /summary> param name="key"> ...</div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00267">BlockIndex_T.cs:267</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block_htm_ab44e24057f1183f9ca4d4462963259f6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1BlockIndex_1_1Block.htm#ab44e24057f1183f9ca4d4462963259f6">Deveel.Data.Index.BlockIndex.Block.Insert</a></div><div class="ttdeci">void Insert(T value, int index)</div><div class="ttdoc">Inserts an element to the block at the given index.  </div><div class="ttdef"><b>Definition:</b> <a href="BlockIndex__T_8cs_source.htm#l00214">BlockIndex_T.cs:214</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
