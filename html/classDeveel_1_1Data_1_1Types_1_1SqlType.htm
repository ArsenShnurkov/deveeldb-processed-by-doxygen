<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Types.SqlType Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm">Types</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pac-methods">Package Functions</a> &#124;
<a href="#properties">Properties</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="classDeveel_1_1Data_1_1Types_1_1SqlType-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Types.SqlType Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Defines the properties of a specific SQL Type and handles the <a class="el" href="">values compatible</a>.  
 <a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#details">More...</a></p>
<div class="dynheader">
Inheritance diagram for Deveel.Data.Types.SqlType:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classDeveel_1_1Data_1_1Types_1_1SqlType.png" usemap="#Deveel.Data.Types.SqlType_map" alt=""/>
  <map id="Deveel.Data.Types.SqlType_map" name="Deveel.Data.Types.SqlType_map">
<area href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm" alt="Deveel.Data.Serialization.ISerializable" shape="rect" coords="590,0,875,24"/>
<area href="classDeveel_1_1Data_1_1Routines_1_1Function_1_1DynamicSqlType.htm" alt="Deveel.Data.Routines.Function.DynamicSqlType" shape="rect" coords="590,112,875,136"/>
<area href="classDeveel_1_1Data_1_1Spatial_1_1SpatialType.htm" alt="Deveel.Data.Spatial.SpatialType" shape="rect" coords="590,168,875,192"/>
<area href="classDeveel_1_1Data_1_1Types_1_1ArrayType.htm" alt="Deveel.Data.Types.ArrayType" shape="rect" coords="590,224,875,248"/>
<area href="classDeveel_1_1Data_1_1Types_1_1BinaryType.htm" alt="Deveel.Data.Types.BinaryType" shape="rect" coords="590,280,875,304"/>
<area href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm" alt="Deveel.Data.Types.BooleanType" shape="rect" coords="590,336,875,360"/>
<area href="classDeveel_1_1Data_1_1Types_1_1ColumnType.htm" alt="Deveel.Data.Types.ColumnType" shape="rect" coords="590,392,875,416"/>
<area href="classDeveel_1_1Data_1_1Types_1_1DateType.htm" alt="Deveel.Data.Types.DateType" shape="rect" coords="590,448,875,472"/>
<area href="classDeveel_1_1Data_1_1Types_1_1IntervalType.htm" alt="Deveel.Data.Types.IntervalType" shape="rect" coords="590,504,875,528"/>
<area href="classDeveel_1_1Data_1_1Types_1_1NullType.htm" title="A data type that represents the NULL value of a given SQL data type. " alt="Deveel.Data.Types.NullType" shape="rect" coords="590,560,875,584"/>
<area href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm" alt="Deveel.Data.Types.NumericType" shape="rect" coords="590,616,875,640"/>
<area href="classDeveel_1_1Data_1_1Types_1_1QueryType.htm" alt="Deveel.Data.Types.QueryType" shape="rect" coords="590,672,875,696"/>
<area href="classDeveel_1_1Data_1_1Types_1_1RowType.htm" alt="Deveel.Data.Types.RowType" shape="rect" coords="590,728,875,752"/>
<area href="classDeveel_1_1Data_1_1Types_1_1StringType.htm" alt="Deveel.Data.Types.StringType" shape="rect" coords="590,784,875,808"/>
<area href="classDeveel_1_1Data_1_1Types_1_1TabularType.htm" alt="Deveel.Data.Types.TabularType" shape="rect" coords="590,840,875,864"/>
<area href="classDeveel_1_1Data_1_1Types_1_1UserType.htm" alt="Deveel.Data.Types.UserType" shape="rect" coords="590,896,875,920"/>
<area href="classDeveel_1_1Data_1_1Xml_1_1XmlNodeType.htm" alt="Deveel.Data.Xml.XmlNodeType" shape="rect" coords="590,952,875,976"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2ff8f5717569d0651fd5dd19f18cc32e"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a2ff8f5717569d0651fd5dd19f18cc32e">IsComparable</a> (<a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> type)</td></tr>
<tr class="memdesc:a2ff8f5717569d0651fd5dd19f18cc32e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Verifies if a given <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> is comparable to this data-type.  <a href="#a2ff8f5717569d0651fd5dd19f18cc32e">More...</a><br /></td></tr>
<tr class="separator:a2ff8f5717569d0651fd5dd19f18cc32e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c3340d086048594d25c50f02f268eb5"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a9c3340d086048594d25c50f02f268eb5">CanCastTo</a> (<a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> destType)</td></tr>
<tr class="memdesc:a9c3340d086048594d25c50f02f268eb5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Verifies if this type can cast any value to the given <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a>.  <a href="#a9c3340d086048594d25c50f02f268eb5">More...</a><br /></td></tr>
<tr class="separator:a9c3340d086048594d25c50f02f268eb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66c1d0c1cdc3e01f4ae4959f740a8696"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a66c1d0c1cdc3e01f4ae4959f740a8696">CastTo</a> (<a class="el" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a> value, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> destType)</td></tr>
<tr class="memdesc:a66c1d0c1cdc3e01f4ae4959f740a8696"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts the given <a class="el" href="classDeveel_1_1Data_1_1DataObject.htm">object value</a> to a <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> specified.  <a href="#a66c1d0c1cdc3e01f4ae4959f740a8696">More...</a><br /></td></tr>
<tr class="separator:a66c1d0c1cdc3e01f4ae4959f740a8696"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98c0dae1490894c747848e647282734c"><td class="memItemLeft" align="right" valign="top">virtual object&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a98c0dae1490894c747848e647282734c">ConvertTo</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> obj, <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1aa1fa27779242b4902f7ae3bdd5c6d508">Type</a> destType)</td></tr>
<tr class="separator:a98c0dae1490894c747848e647282734c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa536ec75c1159785bb0fa2810fea62a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#aaa536ec75c1159785bb0fa2810fea62a">Add</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:aaa536ec75c1159785bb0fa2810fea62a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a936fac5afcd8e1b71d12b53210d5e5f9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a936fac5afcd8e1b71d12b53210d5e5f9">Subtract</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a936fac5afcd8e1b71d12b53210d5e5f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af636f5786914f278952d9a99a1532052"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#af636f5786914f278952d9a99a1532052">Multiply</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:af636f5786914f278952d9a99a1532052"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16ca6453b322e62e44c4d4521d6d926e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a16ca6453b322e62e44c4d4521d6d926e">Divide</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a16ca6453b322e62e44c4d4521d6d926e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ed9b77a57ddfdf718442981945a73d7"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1ed9b77a57ddfdf718442981945a73d7">Modulus</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a1ed9b77a57ddfdf718442981945a73d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03999c37a89bd47aca1337dd1b707e97"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03999c37a89bd47aca1337dd1b707e97">Negate</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> value)</td></tr>
<tr class="separator:a03999c37a89bd47aca1337dd1b707e97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f464758b1485c0765c7eee865eb6fd2"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a5f464758b1485c0765c7eee865eb6fd2">IsEqualTo</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a5f464758b1485c0765c7eee865eb6fd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24203f7351690085e27603bc54dbfb69"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a24203f7351690085e27603bc54dbfb69">IsNotEqualTo</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a24203f7351690085e27603bc54dbfb69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2591352a38bef294d1363a8eb8045629"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a2591352a38bef294d1363a8eb8045629">IsGreatherThan</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a2591352a38bef294d1363a8eb8045629"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfecab3646582d715764f76915bc6ee5"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#adfecab3646582d715764f76915bc6ee5">IsSmallerThan</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:adfecab3646582d715764f76915bc6ee5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2628d0f11304f2fc225f6207f4c34b5f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a2628d0f11304f2fc225f6207f4c34b5f">IsGreaterOrEqualThan</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a2628d0f11304f2fc225f6207f4c34b5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9620abd6b2364c55f9bd3b4db7273478"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a9620abd6b2364c55f9bd3b4db7273478">IsSmallerOrEqualThan</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a9620abd6b2364c55f9bd3b4db7273478"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5451e92685e6da9b78e304733d71312b"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a5451e92685e6da9b78e304733d71312b">And</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a5451e92685e6da9b78e304733d71312b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea8a41ad7f53cb2138dbdfa0f474b75d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#aea8a41ad7f53cb2138dbdfa0f474b75d">Or</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:aea8a41ad7f53cb2138dbdfa0f474b75d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9e541b32fc88f7dfbb1607ffc210014"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ab9e541b32fc88f7dfbb1607ffc210014">XOr</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> x, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> y)</td></tr>
<tr class="separator:ab9e541b32fc88f7dfbb1607ffc210014"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af35b8a4ae57950fb754e4bed48692cb5"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#af35b8a4ae57950fb754e4bed48692cb5">UnaryPlus</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> value)</td></tr>
<tr class="separator:af35b8a4ae57950fb754e4bed48692cb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68bec9e416bb576061b966a97edf8e1a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a68bec9e416bb576061b966a97edf8e1a">Reverse</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> value)</td></tr>
<tr class="separator:a68bec9e416bb576061b966a97edf8e1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48aaedeebc2f12a17728b1fedccdff17"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a48aaedeebc2f12a17728b1fedccdff17">Wider</a> (<a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> otherType)</td></tr>
<tr class="memdesc:a48aaedeebc2f12a17728b1fedccdff17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the one data-type between this and the other one given that handles the wider range of values.  <a href="#a48aaedeebc2f12a17728b1fedccdff17">More...</a><br /></td></tr>
<tr class="separator:a48aaedeebc2f12a17728b1fedccdff17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37dc84024cf0ea2df3622c3865773167"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a37dc84024cf0ea2df3622c3865773167">Compare</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> x, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> y)</td></tr>
<tr class="separator:a37dc84024cf0ea2df3622c3865773167"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e3aecfbc63957ce0d815a6705d99421"><td class="memItemLeft" align="right" valign="top">override bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a4e3aecfbc63957ce0d815a6705d99421">Equals</a> (object obj)</td></tr>
<tr class="separator:a4e3aecfbc63957ce0d815a6705d99421"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa78ee6d1f5a82d940c1aaef36fb4d8c6"><td class="memItemLeft" align="right" valign="top">override int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#aa78ee6d1f5a82d940c1aaef36fb4d8c6">GetHashCode</a> ()</td></tr>
<tr class="separator:aa78ee6d1f5a82d940c1aaef36fb4d8c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a904cd9a71067e94e10711f755af0b3a3"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a904cd9a71067e94e10711f755af0b3a3">Equals</a> (<a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> other)</td></tr>
<tr class="separator:a904cd9a71067e94e10711f755af0b3a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c4d526af40b7f26506073ab52f3d186"><td class="memItemLeft" align="right" valign="top">override string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a9c4d526af40b7f26506073ab52f3d186">ToString</a> ()</td></tr>
<tr class="separator:a9c4d526af40b7f26506073ab52f3d186"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28835cedd45f35449e3bb4388ebe5e53"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a28835cedd45f35449e3bb4388ebe5e53">SerializeObject</a> (Stream stream, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> obj)</td></tr>
<tr class="separator:a28835cedd45f35449e3bb4388ebe5e53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa60ee2eb43f5c6ee7086441322023029"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#aa60ee2eb43f5c6ee7086441322023029">DeserializeObject</a> (Stream stream)</td></tr>
<tr class="separator:aa60ee2eb43f5c6ee7086441322023029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9ac35afaf7ef13d2e5fbb335ad69903"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#aa9ac35afaf7ef13d2e5fbb335ad69903">IsCacheable</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> value)</td></tr>
<tr class="separator:aa9ac35afaf7ef13d2e5fbb335ad69903"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2367f0851cae70a4782bb9baf999ed22"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a2367f0851cae70a4782bb9baf999ed22">GetRuntimeType</a> ()</td></tr>
<tr class="separator:a2367f0851cae70a4782bb9baf999ed22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0daf05165a2a8cf385c7c59e7f0330b0"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a0daf05165a2a8cf385c7c59e7f0330b0">GetObjectType</a> ()</td></tr>
<tr class="separator:a0daf05165a2a8cf385c7c59e7f0330b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade1fc3592eec17179eda8a9d5d17cc9d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ade1fc3592eec17179eda8a9d5d17cc9d">CreateFromLargeObject</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1ILargeObject.htm">ILargeObject</a> objRef)</td></tr>
<tr class="separator:ade1fc3592eec17179eda8a9d5d17cc9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b50b470439c9cee9c58ef543d172cc8"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a4b50b470439c9cee9c58ef543d172cc8">CreateFrom</a> (object value)</td></tr>
<tr class="separator:a4b50b470439c9cee9c58ef543d172cc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a1a00ee783f2da7b0f16b588963f432a6"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1a00ee783f2da7b0f16b588963f432a6">Parse</a> (string s)</td></tr>
<tr class="memdesc:a1a00ee783f2da7b0f16b588963f432a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a SQL formatted string that defines a data-type into a constructed <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> object equivalent.  <a href="#a1a00ee783f2da7b0f16b588963f432a6">More...</a><br /></td></tr>
<tr class="separator:a1a00ee783f2da7b0f16b588963f432a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6486e0afa11155105567c77c51f7ab51"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a6486e0afa11155105567c77c51f7ab51">Parse</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1IContext.htm">IContext</a> context, string s)</td></tr>
<tr class="memdesc:a6486e0afa11155105567c77c51f7ab51"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a SQL formatted string that defines a data-type into a constructed <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> object equivalent.  <a href="#a6486e0afa11155105567c77c51f7ab51">More...</a><br /></td></tr>
<tr class="separator:a6486e0afa11155105567c77c51f7ab51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a185e15f2ca4611de266911ab10711b9d"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a185e15f2ca4611de266911ab10711b9d">IsPrimitiveType</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode)</td></tr>
<tr class="separator:a185e15f2ca4611de266911ab10711b9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1001e0bdf89c8e04c9925d1bb4ac18e"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Resolve</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode)</td></tr>
<tr class="separator:ac1001e0bdf89c8e04c9925d1bb4ac18e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84a3daf0cce0fd93fbb8b82f92318595"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a84a3daf0cce0fd93fbb8b82f92318595">Resolve</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[] meta)</td></tr>
<tr class="separator:a84a3daf0cce0fd93fbb8b82f92318595"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a777257e9dea6e2f74e7fb93645b4b24b"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a777257e9dea6e2f74e7fb93645b4b24b">Resolve</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[] meta, <a class="el" href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">ITypeResolver</a> resolver)</td></tr>
<tr class="separator:a777257e9dea6e2f74e7fb93645b4b24b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76b02406ac93348f14e4f096b5082e26"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a76b02406ac93348f14e4f096b5082e26">Resolve</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode, string name)</td></tr>
<tr class="separator:a76b02406ac93348f14e4f096b5082e26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3effe95a3754b37eeb56bccc876e81d6"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a3effe95a3754b37eeb56bccc876e81d6">Resolve</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode, string name, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[] meta)</td></tr>
<tr class="separator:a3effe95a3754b37eeb56bccc876e81d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2844f58398f4688e3bd150cf9bed03b"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#aa2844f58398f4688e3bd150cf9bed03b">Resolve</a> (string name)</td></tr>
<tr class="separator:aa2844f58398f4688e3bd150cf9bed03b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39a8e34dfc3053c57da82486fb62f4d8"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a39a8e34dfc3053c57da82486fb62f4d8">Resolve</a> (string name, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[] meta)</td></tr>
<tr class="separator:a39a8e34dfc3053c57da82486fb62f4d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a366c1540dead07314208b880863328c3"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a366c1540dead07314208b880863328c3">Resolve</a> (string name, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[] meta, <a class="el" href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">ITypeResolver</a> resolver)</td></tr>
<tr class="separator:a366c1540dead07314208b880863328c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ae79b6779d682fbcbfed20dff9fcd5a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a6ae79b6779d682fbcbfed20dff9fcd5a">Resolve</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode, string name, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[] meta, <a class="el" href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">ITypeResolver</a> resolver)</td></tr>
<tr class="separator:a6ae79b6779d682fbcbfed20dff9fcd5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a148c6293c9ede30a69b4b3d1046a50ab"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a148c6293c9ede30a69b4b3d1046a50ab">SqlType</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> sqlType)</td></tr>
<tr class="memdesc:a148c6293c9ede30a69b4b3d1046a50ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs the <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> for the given specific <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SQL TYPE</a>.  <a href="#a148c6293c9ede30a69b4b3d1046a50ab">More...</a><br /></td></tr>
<tr class="separator:a148c6293c9ede30a69b4b3d1046a50ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad744512a2294690756d5aee3610b4039"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ad744512a2294690756d5aee3610b4039">SqlType</a> (string name, <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode)</td></tr>
<tr class="memdesc:ad744512a2294690756d5aee3610b4039"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs the <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> for the given specific <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SQL TYPE</a> and a given name.  <a href="#ad744512a2294690756d5aee3610b4039">More...</a><br /></td></tr>
<tr class="separator:ad744512a2294690756d5aee3610b4039"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22612048f648f76328be8909113407b2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a22612048f648f76328be8909113407b2">SqlType</a> (<a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">ObjectData</a> data)</td></tr>
<tr class="separator:a22612048f648f76328be8909113407b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33783e5ebad6fa86d3e2d49e92b8d68b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a33783e5ebad6fa86d3e2d49e92b8d68b">GetData</a> (<a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a> data)</td></tr>
<tr class="separator:a33783e5ebad6fa86d3e2d49e92b8d68b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pac-methods"></a>
Package Functions</h2></td></tr>
<tr class="memitem:af8f9aac4d5354c8e11161d11b9c11ad0"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#af8f9aac4d5354c8e11161d11b9c11ad0">GetCacheUsage</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> value)</td></tr>
<tr class="separator:af8f9aac4d5354c8e11161d11b9c11ad0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb46e959df9aaba53976101e070c7551"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#afb46e959df9aaba53976101e070c7551">ColumnSizeOf</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> obj)</td></tr>
<tr class="separator:afb46e959df9aaba53976101e070c7551"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="properties"></a>
Properties</h2></td></tr>
<tr class="memitem:a1d7aa1701178a6e9ffe48c112c563e0e"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1d7aa1701178a6e9ffe48c112c563e0e">Name</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a1d7aa1701178a6e9ffe48c112c563e0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of the data-type that is used to resolve it within the context.  <a href="#a1d7aa1701178a6e9ffe48c112c563e0e">More...</a><br /></td></tr>
<tr class="separator:a1d7aa1701178a6e9ffe48c112c563e0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03b166e54c20d0768317b7e559b01c70"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a03b166e54c20d0768317b7e559b01c70"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the kind of SQL type this data-type handles.  <a href="#a03b166e54c20d0768317b7e559b01c70">More...</a><br /></td></tr>
<tr class="separator:a03b166e54c20d0768317b7e559b01c70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9df5ffc6e329a53b5cea148fc367295"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ad9df5ffc6e329a53b5cea148fc367295">IsIndexable</a><code> [get]</code></td></tr>
<tr class="memdesc:ad9df5ffc6e329a53b5cea148fc367295"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates if the values handled by the type can be part of an index.  <a href="#ad9df5ffc6e329a53b5cea148fc367295">More...</a><br /></td></tr>
<tr class="separator:ad9df5ffc6e329a53b5cea148fc367295"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a731ce7172c7f30e9e494ce68db96fa7b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a731ce7172c7f30e9e494ce68db96fa7b">IsPrimitive</a><code> [get]</code></td></tr>
<tr class="memdesc:a731ce7172c7f30e9e494ce68db96fa7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a value indicating if this data-type is primitive.  <a href="#a731ce7172c7f30e9e494ce68db96fa7b">More...</a><br /></td></tr>
<tr class="separator:a731ce7172c7f30e9e494ce68db96fa7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60b7ba0e65d9303fc9af858c5ae199af"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a60b7ba0e65d9303fc9af858c5ae199af">IsNull</a><code> [get]</code></td></tr>
<tr class="separator:a60b7ba0e65d9303fc9af858c5ae199af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff639e283ee8916b105488d3286c7314"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#aff639e283ee8916b105488d3286c7314">IsStorable</a><code> [get]</code></td></tr>
<tr class="separator:aff639e283ee8916b105488d3286c7314"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a49fff19d647d741548220641415109ae"><td class="memItemLeft" align="right" valign="top">void ISerializable.&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a49fff19d647d741548220641415109ae">GetData</a> (<a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a> data)</td></tr>
<tr class="separator:a49fff19d647d741548220641415109ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:adaa7176599d5cec135cafe39d07ce9a1"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#adaa7176599d5cec135cafe39d07ce9a1">ResolveTypeCode</a> (string name)</td></tr>
<tr class="separator:adaa7176599d5cec135cafe39d07ce9a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Defines the properties of a specific SQL Type and handles the <a class="el" href="">values compatible</a>. </p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00033">33</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a148c6293c9ede30a69b4b3d1046a50ab"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Types.SqlType.SqlType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td>
          <td class="paramname"><em>sqlType</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructs the <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> for the given specific <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SQL TYPE</a>. </p>
<p>This constructor will set the <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1d7aa1701178a6e9ffe48c112c563e0e" title="Gets the name of the data-type that is used to resolve it within the context. ">Name</a> value to the equivalent of the SQL Type specified. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sqlType</td><td>The code of the SQL Type this object will represent.</td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00043">43</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            : <span class="keyword">this</span>(sqlType.ToString().ToUpperInvariant(), sqlType) {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ad744512a2294690756d5aee3610b4039"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Types.SqlType.SqlType </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td>
          <td class="paramname"><em>typeCode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructs the <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> for the given specific <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SQL TYPE</a> and a given name. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td></td></tr>
    <tr><td class="paramname">typeCode</td><td></td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00053">53</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                                                             {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> = typeCode;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1d7aa1701178a6e9ffe48c112c563e0e">Name</a> = name;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a1d7aa1701178a6e9ffe48c112c563e0e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1d7aa1701178a6e9ffe48c112c563e0e">Deveel.Data.Types.SqlType.Name</a></div><div class="ttdeci">string Name</div><div class="ttdoc">Gets the name of the data-type that is used to resolve it within the context. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00075">SqlType.cs:75</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a03b166e54c20d0768317b7e559b01c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">Deveel.Data.Types.SqlType.TypeCode</a></div><div class="ttdeci">SqlTypeCode TypeCode</div><div class="ttdoc">Gets the kind of SQL type this data-type handles. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00091">SqlType.cs:91</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a22612048f648f76328be8909113407b2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Types.SqlType.SqlType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">ObjectData</a>&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00058">58</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                           {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1d7aa1701178a6e9ffe48c112c563e0e">Name</a> = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a828a888ad7250283e9f596f6da5fe97f">GetString</a>(<span class="stringliteral">&quot;Name&quot;</span>);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> = (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>) data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a1e267f2009bb7e9c0a35d707aa64e63a">GetInt32</a>(<span class="stringliteral">&quot;TypeCode&quot;</span>);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a1d7aa1701178a6e9ffe48c112c563e0e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1d7aa1701178a6e9ffe48c112c563e0e">Deveel.Data.Types.SqlType.Name</a></div><div class="ttdeci">string Name</div><div class="ttdoc">Gets the name of the data-type that is used to resolve it within the context. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00075">SqlType.cs:75</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a03b166e54c20d0768317b7e559b01c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">Deveel.Data.Types.SqlType.TypeCode</a></div><div class="ttdeci">SqlTypeCode TypeCode</div><div class="ttdoc">Gets the kind of SQL type this data-type handles. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00091">SqlType.cs:91</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a1e267f2009bb7e9c0a35d707aa64e63a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a1e267f2009bb7e9c0a35d707aa64e63a">Deveel.Data.Serialization.ObjectData.GetInt32</a></div><div class="ttdeci">int GetInt32(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00085">ObjectData.cs:85</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a828a888ad7250283e9f596f6da5fe97f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a828a888ad7250283e9f596f6da5fe97f">Deveel.Data.Serialization.ObjectData.GetString</a></div><div class="ttdeci">string GetString(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00101">ObjectData.cs:101</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aaa536ec75c1159785bb0fa2810fea62a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.SqlType.Add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a4cb35a41b2db3cc376431f4ada759077">Deveel.Data.Types.NumericType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#afe6a12f14589d632b82aebe7eb1c377d">Deveel.Data.Types.StringType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00192">192</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                                                                  {</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Value</a>;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        }</div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm_a34389e1b9a93987d32840d009a4e08b6"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Deveel.Data.Sql.Objects.SqlNull.Value</a></div><div class="ttdeci">static readonly SqlNull Value</div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00024">SqlNull.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a5451e92685e6da9b78e304733d71312b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.SqlType.And </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#acde8ef3129807655a6796dc0ef6e3bb0">Deveel.Data.Types.NumericType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#ad0953dd17771f248b1871c2cff650574">Deveel.Data.Types.BooleanType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00258">258</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                                                                  {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a9c3340d086048594d25c50f02f268eb5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Deveel.Data.Types.SqlType.CanCastTo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td>
          <td class="paramname"><em>destType</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Verifies if this type can cast any value to the given <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">destType</td><td>The other type, destination of the cast, to verify.</td></tr>
  </table>
  </dd>
</dl>
<p>By default, this method returns <code>false</code>, because cast process must be specified per type: when overriding the method <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a66c1d0c1cdc3e01f4ae4959f740a8696" title="Converts the given object value to a SqlType specified. ">CastTo</a>, pay attention to also override this method accordingly. </p>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>
<p><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a66c1d0c1cdc3e01f4ae4959f740a8696" title="Converts the given object value to a SqlType specified. ">CastTo</a> </p>

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d61523e94e5ffa0393cfac04a5bfe3a">Deveel.Data.Types.StringType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a79c2fed0d247c37a9860160f85095891">Deveel.Data.Types.NumericType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DateType.htm#a46f1e6057e074860fa75c0a21ce9661f">Deveel.Data.Types.DateType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#ad6fe469fe51612af95c32acc05310d2a">Deveel.Data.Types.BooleanType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1UserType.htm#aa43f0d32956d30aa4881bd6ac1dd8dc7">Deveel.Data.Types.UserType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Xml_1_1XmlNodeType.htm#a7cda7d4e88bac667c8183c42afff8f47">Deveel.Data.Xml.XmlNodeType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00153">153</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                                                        {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a66c1d0c1cdc3e01f4ae4959f740a8696"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a> Deveel.Data.Types.SqlType.CastTo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td>
          <td class="paramname"><em>destType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Converts the given <a class="el" href="classDeveel_1_1Data_1_1DataObject.htm">object value</a> to a <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> specified. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>The value to convert.</td></tr>
    <tr><td class="paramname">destType</td><td>The destination type of the conversion.</td></tr>
  </table>
  </dd>
</dl>
<p>If the given <em>destType</em> destination type is equivalent to this type, it will return the <em>value</em>  provided, otherwise it will throw an exception by default. </p>
<p>Casting values to specific types is specific to each data-type: override this method to support type-specific conversions. </p>
<p>When overriding this method, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a9c3340d086048594d25c50f02f268eb5" title="Verifies if this type can cast any value to the given SqlType. ">CanCastTo</a> should be overridden accordingly to indicate the type supports casting. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns an instance of <a class="el" href="classDeveel_1_1Data_1_1DataObject.htm" title="Represents a dynamic object that encapsulates a defined SqlType and a compatible constant ISqlObject ...">DataObject</a> that is the result of the conversion from this data-type to the other type given. </dd></dl>

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a4f7f3b52b9c92edc601e275e1dbc6174">Deveel.Data.Types.StringType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a82f6eaaf0d892343427f9fc7f27ade0a">Deveel.Data.Types.NumericType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DateType.htm#a22e279a38455427b759905d8b37d4923">Deveel.Data.Types.DateType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BinaryType.htm#af5926f11d8a615cf6cf19cb0e30d7883">Deveel.Data.Types.BinaryType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#aa11463bd59294190e193dfb98e411d82">Deveel.Data.Types.BooleanType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Xml_1_1XmlNodeType.htm#a83bcc98379a5b52be25e4c4b6ab9bf23">Deveel.Data.Xml.XmlNodeType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00180">180</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                                                             {</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a4e3aecfbc63957ce0d815a6705d99421">Equals</a>(destType))</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="comment">// TODO: Should we return a null value instead? NULL OF TYPE anyway is still a cast ...</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a4e3aecfbc63957ce0d815a6705d99421"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a4e3aecfbc63957ce0d815a6705d99421">Deveel.Data.Types.SqlType.Equals</a></div><div class="ttdeci">override bool Equals(object obj)</div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00373">SqlType.cs:373</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="afb46e959df9aaba53976101e070c7551"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int Deveel.Data.Types.SqlType.ColumnSizeOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>obj</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">package</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a4cab5146aba43afd7c8b98e198a84529">Deveel.Data.Types.NumericType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ae672fed8e712d45b041cb0f64ab00c74">Deveel.Data.Types.StringType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DateType.htm#a8fa5b8151678a3cf76fceb53748803f7">Deveel.Data.Types.DateType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#a69fba1e81520a3792784d5dbc892fc1e">Deveel.Data.Types.BooleanType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BinaryType.htm#a838f0aba37ec90989fd440db16e7b334">Deveel.Data.Types.BinaryType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00416">416</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                                                          {</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;            <span class="comment">// TODO: should make this required?</span></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a37dc84024cf0ea2df3622c3865773167"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int Deveel.Data.Types.SqlType.Compare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#adcccd74d13b230140b9d5cc2fb76c476">Deveel.Data.Types.StringType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ada885ded2f6186f93433bba3219341b7">Deveel.Data.Types.NumericType</a>, <a class="el" href="classDeveel_1_1Data_1_1Routines_1_1Function_1_1DynamicSqlType.htm#a4036dc602fb33a9ab301fcd7e0cba4d0">Deveel.Data.Routines.Function.DynamicSqlType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#ad749c678dab6c901d00a6a20fa31f198">Deveel.Data.Types.BooleanType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00358">358</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                                                               {</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="keywordflow">if</span> (!x.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">IsComparableTo</a>(y))</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            <span class="keywordflow">if</span> (x.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a> &amp;&amp; y.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            <span class="keywordflow">if</span> (x.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a> &amp;&amp; !y.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <span class="keywordflow">if</span> (!x.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a> &amp;&amp; y.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            <span class="keywordflow">return</span> ((IComparable) x).CompareTo(y);</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        }</div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm_ab9810ddba011d9ffe76db3ceffa636c0"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">Deveel.Data.Sql.Objects.ISqlObject.IsNull</a></div><div class="ttdeci">bool IsNull</div><div class="ttdoc">Gets a boolean value indicating if the object is NULL. </div><div class="ttdef"><b>Definition:</b> <a href="ISqlObject_8cs_source.htm#l00028">ISqlObject.cs:28</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm_a259b94206e518756bd85186b4b22aaab"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">Deveel.Data.Sql.Objects.ISqlObject.IsComparableTo</a></div><div class="ttdeci">bool IsComparableTo(ISqlObject other)</div><div class="ttdoc">Checks if the current object is comparable with the given one. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a98c0dae1490894c747848e647282734c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual object Deveel.Data.Types.SqlType.ConvertTo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>&#160;</td>
          <td class="paramname"><em>destType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ab733630c53de014a18b32c812465cc0f">Deveel.Data.Types.NumericType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a20e1b2d4eb7bc1138270da0dbfdd9433">Deveel.Data.Types.StringType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NullType.htm#a48366596350672974234aca3fd960dc6">Deveel.Data.Types.NullType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Xml_1_1XmlNodeType.htm#afd8e89f8c5604b6b4590180bedffd3fb">Deveel.Data.Xml.XmlNodeType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00188">188</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                                                                       {</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4b50b470439c9cee9c58ef543d172cc8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.SqlType.CreateFrom </td>
          <td>(</td>
          <td class="paramtype">object&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00437">437</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                                                           {</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;The type {0} does not support runtime object conversion.&quot;</span>, <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a9c4d526af40b7f26506073ab52f3d186">ToString</a>()));</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a9c4d526af40b7f26506073ab52f3d186"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a9c4d526af40b7f26506073ab52f3d186">Deveel.Data.Types.SqlType.ToString</a></div><div class="ttdeci">override string ToString()</div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00395">SqlType.cs:395</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ade1fc3592eec17179eda8a9d5d17cc9d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.SqlType.CreateFromLargeObject </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1ILargeObject.htm">ILargeObject</a>&#160;</td>
          <td class="paramname"><em>objRef</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00429">429</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                                                                             {</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;SQL Type {0} cannot be created from a large object.&quot;</span>, <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a>));</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a03b166e54c20d0768317b7e559b01c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">Deveel.Data.Types.SqlType.TypeCode</a></div><div class="ttdeci">SqlTypeCode TypeCode</div><div class="ttdoc">Gets the kind of SQL type this data-type handles. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00091">SqlType.cs:91</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa60ee2eb43f5c6ee7086441322023029"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.SqlType.DeserializeObject </td>
          <td>(</td>
          <td class="paramtype">Stream&#160;</td>
          <td class="paramname"><em>stream</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#abced560c4c94989c29a6533de3b74e9e">Deveel.Data.Types.NumericType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ad19294f11fd7780e43008024a326c056">Deveel.Data.Types.StringType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DateType.htm#ade40ad4dd36c534ef4e935cf748c3cc6">Deveel.Data.Types.DateType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BinaryType.htm#a912e7ff46b6a0c3c68cd894755c72d36">Deveel.Data.Types.BinaryType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#aee383bf2142cca8b66c3abc110469be4">Deveel.Data.Types.BooleanType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1IntervalType.htm#a572221a78f56f4d5f5df54a3f873d1c9">Deveel.Data.Types.IntervalType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NullType.htm#a341acd20393e990d4de9b5ce84c99445">Deveel.Data.Types.NullType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1QueryType.htm#a4a10eecd11cfa40977b65e485e4908c1">Deveel.Data.Types.QueryType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Xml_1_1XmlNodeType.htm#afbf1fbe2fcf0c61881d94bad321bf22e">Deveel.Data.Xml.XmlNodeType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00404">404</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                                                                   {</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;Type {0} cannot deserialize types.&quot;</span>, GetType()));</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a16ca6453b322e62e44c4d4521d6d926e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.SqlType.Divide </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a8951c607e5ad3ec4b47c06650078007d">Deveel.Data.Types.NumericType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00204">204</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                                                     {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Value</a>;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        }</div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm_a34389e1b9a93987d32840d009a4e08b6"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Deveel.Data.Sql.Objects.SqlNull.Value</a></div><div class="ttdeci">static readonly SqlNull Value</div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00024">SqlNull.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4e3aecfbc63957ce0d815a6705d99421"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override bool Deveel.Data.Types.SqlType.Equals </td>
          <td>(</td>
          <td class="paramtype">object&#160;</td>
          <td class="paramname"><em>obj</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00373">373</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                                                {</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;            var dataType = obj as <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a148c6293c9ede30a69b4b3d1046a50ab">SqlType</a>;</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            <span class="keywordflow">if</span> (dataType == null)</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a4e3aecfbc63957ce0d815a6705d99421">Equals</a>(dataType);</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a148c6293c9ede30a69b4b3d1046a50ab"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a148c6293c9ede30a69b4b3d1046a50ab">Deveel.Data.Types.SqlType.SqlType</a></div><div class="ttdeci">SqlType(SqlTypeCode sqlType)</div><div class="ttdoc">Constructs the SqlType for the given specific SQL TYPE. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00043">SqlType.cs:43</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a4e3aecfbc63957ce0d815a6705d99421"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a4e3aecfbc63957ce0d815a6705d99421">Deveel.Data.Types.SqlType.Equals</a></div><div class="ttdeci">override bool Equals(object obj)</div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00373">SqlType.cs:373</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a904cd9a71067e94e10711f755af0b3a3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Deveel.Data.Types.SqlType.Equals </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ab6df49f4e5e9465254af0d764754f82f">Deveel.Data.Types.StringType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00387">387</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                                                  {</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            <span class="keywordflow">if</span> (other == null)</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> == other.TypeCode;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a03b166e54c20d0768317b7e559b01c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">Deveel.Data.Types.SqlType.TypeCode</a></div><div class="ttdeci">SqlTypeCode TypeCode</div><div class="ttdoc">Gets the kind of SQL type this data-type handles. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00091">SqlType.cs:91</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af8f9aac4d5354c8e11161d11b9c11ad0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int Deveel.Data.Types.SqlType.GetCacheUsage </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">package</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00412">412</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                                                             {</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a49fff19d647d741548220641415109ae"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ISerializable. Deveel.Data.Types.SqlType.GetData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a>&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm#acd5831980e3c1969437ba5c9d838669e">Deveel.Data.Serialization.ISerializable</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00278">278</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                                                       {</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;Name&quot;</span>, <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1d7aa1701178a6e9ffe48c112c563e0e">Name</a>);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;TypeCode&quot;</span>, (<span class="keywordtype">int</span>) <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a>);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm_a2a09ed1c661f92b60b0b38398fb7ced1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">Deveel.Data.Serialization.SerializeData.SetValue</a></div><div class="ttdeci">void SetValue(string key, Type type, object value)</div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00035">SerializeData.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a1d7aa1701178a6e9ffe48c112c563e0e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1d7aa1701178a6e9ffe48c112c563e0e">Deveel.Data.Types.SqlType.Name</a></div><div class="ttdeci">string Name</div><div class="ttdoc">Gets the name of the data-type that is used to resolve it within the context. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00075">SqlType.cs:75</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a03b166e54c20d0768317b7e559b01c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">Deveel.Data.Types.SqlType.TypeCode</a></div><div class="ttdeci">SqlTypeCode TypeCode</div><div class="ttdoc">Gets the kind of SQL type this data-type handles. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00091">SqlType.cs:91</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a33783e5ebad6fa86d3e2d49e92b8d68b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Deveel.Data.Types.SqlType.GetData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a>&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm#acd5831980e3c1969437ba5c9d838669e">Deveel.Data.Serialization.ISerializable</a>.</p>

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a0196d64908182b941d77dce3f8424fc2">Deveel.Data.Types.StringType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BinaryType.htm#ad182848be48fac67ed41ebd1bce4f726">Deveel.Data.Types.BinaryType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a21530bc5576627ceb9e8a6120ece6353">Deveel.Data.Types.NumericType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00283">283</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                                                           {</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa78ee6d1f5a82d940c1aaef36fb4d8c6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override int Deveel.Data.Types.SqlType.GetHashCode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00382">382</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                                          {</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a>.GetHashCode();</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a03b166e54c20d0768317b7e559b01c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">Deveel.Data.Types.SqlType.TypeCode</a></div><div class="ttdeci">SqlTypeCode TypeCode</div><div class="ttdoc">Gets the kind of SQL type this data-type handles. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00091">SqlType.cs:91</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0daf05165a2a8cf385c7c59e7f0330b0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1aa1fa27779242b4902f7ae3bdd5c6d508">Type</a> Deveel.Data.Types.SqlType.GetObjectType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#af7020e5fdb20baa9bd8f298677e18db5">Deveel.Data.Types.StringType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DateType.htm#a9140c14d72207d8cebf8fe00a5ce3715">Deveel.Data.Types.DateType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BinaryType.htm#afefc6fa0822eaa6dfaafc40621163622">Deveel.Data.Types.BinaryType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#afb868eb49269b2d80fc3b9c79cc364ab">Deveel.Data.Types.NumericType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1IntervalType.htm#a3a15e01ab246dbed1dd69c99751197bd">Deveel.Data.Types.IntervalType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#acc9c45587c9a737c234fc8e7bceb2fda">Deveel.Data.Types.BooleanType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Types_1_1ArrayType.htm#a53f5c04ac6d1b8976b69434fe8896bc6">Deveel.Data.Types.ArrayType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00425">425</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                                            {</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2367f0851cae70a4782bb9baf999ed22"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1aa1fa27779242b4902f7ae3bdd5c6d508">Type</a> Deveel.Data.Types.SqlType.GetRuntimeType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#aafbbb13577989b79a8de6280a72c1db5">Deveel.Data.Types.StringType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DateType.htm#a85e2b4a7a41826041fb3581baa57b3f8">Deveel.Data.Types.DateType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BinaryType.htm#ac7535990e6528c27aa21aee760b1ce2a">Deveel.Data.Types.BinaryType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ae51d0736284c46385ec18aaf6f1ae8da">Deveel.Data.Types.NumericType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#a9c4a2a1334679229b32cc70b2de15e29">Deveel.Data.Types.BooleanType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1IntervalType.htm#a1b23391ad14d7ae5a046944428aeb801">Deveel.Data.Types.IntervalType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Types_1_1ArrayType.htm#a2890463f4248151be16de4349d3c63b1">Deveel.Data.Types.ArrayType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00421">421</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                                             {</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa9ac35afaf7ef13d2e5fbb335ad69903"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Deveel.Data.Types.SqlType.IsCacheable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#af2d4841f7fc51e35863630639af754e3">Deveel.Data.Types.StringType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ac2ceb7d683e1491d1e1dc496672d49e2">Deveel.Data.Types.NumericType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DateType.htm#a54070532528062819529055d71e31ac7">Deveel.Data.Types.DateType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BinaryType.htm#ab0f7636fa8c0c8a4e32f21834aecd858">Deveel.Data.Types.BinaryType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#a5d03dd0bb682ab6ad2e30e03cd128198">Deveel.Data.Types.BooleanType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Types_1_1IntervalType.htm#aa3b6e6c9419e38651ee29f156e58594d">Deveel.Data.Types.IntervalType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00408">408</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                                                          {</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2ff8f5717569d0651fd5dd19f18cc32e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Deveel.Data.Types.SqlType.IsComparable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Verifies if a given <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> is comparable to this data-type. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>The other data-type to verify the compatibility.</td></tr>
  </table>
  </dd>
</dl>
<p>It is not required two <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> to be identical to be compared: when overridden by a derived class, this methods verifies the properties of the argument type, to see if values handled by the types can be compared. </p>
<p>By default, this method compares the values returned by <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70" title="Gets the kind of SQL type this data-type handles. ">TypeCode</a> to see if they are identical. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns <code>true</code> if the values handled by this data-type can be compared to ones handled by the given <em>type</em> , or <code>false</code> otherwise. </dd></dl>

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ae22cb9f5d93c05b976fa8fa926225a0b">Deveel.Data.Types.NumericType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a790584e7ab6ce7f58480585ce0b8f240">Deveel.Data.Types.StringType</a>, <a class="el" href="classDeveel_1_1Data_1_1Routines_1_1Function_1_1DynamicSqlType.htm#a6d4a60b18e3b030a5c20397105b79080">Deveel.Data.Routines.Function.DynamicSqlType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DateType.htm#aa34985124e893240bf993e9dd48b5639">Deveel.Data.Types.DateType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#afb8404f951a48fc1a1634d9b312786d5">Deveel.Data.Types.BooleanType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1IntervalType.htm#aa25bbfa780a940fce126efb7196cd7c2">Deveel.Data.Types.IntervalType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1UserType.htm#ac1abe86bd91f5e84b3ce040a45179084">Deveel.Data.Types.UserType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Spatial_1_1SpatialType.htm#a60c8bbbd715f53c7a2656381b65d6aa7">Deveel.Data.Spatial.SpatialType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00137">137</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                                                       {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> == type.TypeCode;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a03b166e54c20d0768317b7e559b01c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">Deveel.Data.Types.SqlType.TypeCode</a></div><div class="ttdeci">SqlTypeCode TypeCode</div><div class="ttdoc">Gets the kind of SQL type this data-type handles. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00091">SqlType.cs:91</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a5f464758b1485c0765c7eee865eb6fd2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a> Deveel.Data.Types.SqlType.IsEqualTo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a0d304e02bd72f3acd09ccc16a57dca81">Deveel.Data.Types.NumericType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00216">216</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                                                                        {</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="keywordflow">if</span> (!a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">IsComparableTo</a>(b))</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keywordflow">return</span> a.CompareTo(b) == 0;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm_a259b94206e518756bd85186b4b22aaab"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">Deveel.Data.Sql.Objects.ISqlObject.IsComparableTo</a></div><div class="ttdeci">bool IsComparableTo(ISqlObject other)</div><div class="ttdoc">Checks if the current object is comparable with the given one. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2628d0f11304f2fc225f6207f4c34b5f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a> Deveel.Data.Types.SqlType.IsGreaterOrEqualThan </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a0396974cdc94afccad38ab178f54ad1a">Deveel.Data.Types.NumericType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00244">244</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                                                                                   {</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            <span class="keywordflow">if</span> (!a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">IsComparableTo</a>(b))</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="keywordflow">return</span> a.CompareTo(b) &gt;= 0;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm_a259b94206e518756bd85186b4b22aaab"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">Deveel.Data.Sql.Objects.ISqlObject.IsComparableTo</a></div><div class="ttdeci">bool IsComparableTo(ISqlObject other)</div><div class="ttdoc">Checks if the current object is comparable with the given one. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a2591352a38bef294d1363a8eb8045629"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a> Deveel.Data.Types.SqlType.IsGreatherThan </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ad939ae97937fafda2601bf48bb151ba7">Deveel.Data.Types.NumericType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00230">230</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                                                                             {</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keywordflow">if</span> (!a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">IsComparableTo</a>(b))</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            <span class="keywordflow">return</span> a.CompareTo(b) &gt; 0;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm_a259b94206e518756bd85186b4b22aaab"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">Deveel.Data.Sql.Objects.ISqlObject.IsComparableTo</a></div><div class="ttdeci">bool IsComparableTo(ISqlObject other)</div><div class="ttdoc">Checks if the current object is comparable with the given one. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a24203f7351690085e27603bc54dbfb69"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a> Deveel.Data.Types.SqlType.IsNotEqualTo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a6b32bdcb8976e9bb92fda75d3f1bae52">Deveel.Data.Types.NumericType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00223">223</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;                                                                           {</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <span class="keywordflow">if</span> (!a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">IsComparableTo</a>(b))</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <span class="keywordflow">return</span> a.CompareTo(b) != 0;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm_a259b94206e518756bd85186b4b22aaab"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">Deveel.Data.Sql.Objects.ISqlObject.IsComparableTo</a></div><div class="ttdeci">bool IsComparableTo(ISqlObject other)</div><div class="ttdoc">Checks if the current object is comparable with the given one. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a185e15f2ca4611de266911ab10711b9d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Deveel.Data.Types.SqlType.IsPrimitiveType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td>
          <td class="paramname"><em>typeCode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00433">433</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                                                                 {</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            <span class="keywordflow">return</span> PrimitiveTypes.IsPrimitive(typeCode);</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a9620abd6b2364c55f9bd3b4db7273478"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a> Deveel.Data.Types.SqlType.IsSmallerOrEqualThan </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ad30ad9538c1365aa0734d1d0dd9d2226">Deveel.Data.Types.NumericType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00251">251</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                                                                                   {</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <span class="keywordflow">if</span> (!a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">IsComparableTo</a>(b))</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            <span class="keywordflow">return</span> a.CompareTo(b) &lt;= 0;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm_a259b94206e518756bd85186b4b22aaab"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">Deveel.Data.Sql.Objects.ISqlObject.IsComparableTo</a></div><div class="ttdeci">bool IsComparableTo(ISqlObject other)</div><div class="ttdoc">Checks if the current object is comparable with the given one. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="adfecab3646582d715764f76915bc6ee5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a> Deveel.Data.Types.SqlType.IsSmallerThan </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ae5b19d145983f06c46d72c94801b164b">Deveel.Data.Types.NumericType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00237">237</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                                                                            {</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            <span class="keywordflow">if</span> (!a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">IsComparableTo</a>(b))</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            <span class="keywordflow">return</span> a.CompareTo(b) &lt; 0;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm_a259b94206e518756bd85186b4b22aaab"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#a259b94206e518756bd85186b4b22aaab">Deveel.Data.Sql.Objects.ISqlObject.IsComparableTo</a></div><div class="ttdeci">bool IsComparableTo(ISqlObject other)</div><div class="ttdoc">Checks if the current object is comparable with the given one. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1ed9b77a57ddfdf718442981945a73d7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.SqlType.Modulus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a0cb5db2c58913bb7bb1fd14baaad85c4">Deveel.Data.Types.NumericType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00208">208</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                                                                      {</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Value</a>;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        }</div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm_a34389e1b9a93987d32840d009a4e08b6"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Deveel.Data.Sql.Objects.SqlNull.Value</a></div><div class="ttdeci">static readonly SqlNull Value</div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00024">SqlNull.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af636f5786914f278952d9a99a1532052"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.SqlType.Multiply </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a9d0b471b8dc3ba1d766e201acd687579">Deveel.Data.Types.NumericType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00200">200</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                                                                       {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Value</a>;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        }</div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm_a34389e1b9a93987d32840d009a4e08b6"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Deveel.Data.Sql.Objects.SqlNull.Value</a></div><div class="ttdeci">static readonly SqlNull Value</div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00024">SqlNull.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a03999c37a89bd47aca1337dd1b707e97"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.SqlType.Negate </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a93e7c2018c75981a9a2a9903d65e4757">Deveel.Data.Types.NumericType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#a71134caf7b13a0ea26037be9ce986eb8">Deveel.Data.Types.BooleanType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00212">212</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                                                           {</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Value</a>;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        }</div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm_a34389e1b9a93987d32840d009a4e08b6"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Deveel.Data.Sql.Objects.SqlNull.Value</a></div><div class="ttdeci">static readonly SqlNull Value</div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00024">SqlNull.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aea8a41ad7f53cb2138dbdfa0f474b75d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.SqlType.Or </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a11130b9c1dda86c1fdc063458f3dead2">Deveel.Data.Types.NumericType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#af4e7d63c4342a634c31de9e8fe208095">Deveel.Data.Types.BooleanType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00262">262</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                                                                 {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1a00ee783f2da7b0f16b588963f432a6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> Deveel.Data.Types.SqlType.Parse </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Parses a SQL formatted string that defines a data-type into a constructed <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> object equivalent. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>The SQL formatted data-type string, defining the properties of the type.</td></tr>
  </table>
  </dd>
</dl>
<p>This method only supports primitive types. </p>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#a9967fff32a47b51089727534e3e23fee">PrimitiveTypes.IsPrimitive(Deveel.Data.Types.SqlTypeCode)</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a9c4d526af40b7f26506073ab52f3d186">ToString()</a></dd></dl>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00321">321</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                                              {</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1a00ee783f2da7b0f16b588963f432a6">Parse</a>(null, s);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a1a00ee783f2da7b0f16b588963f432a6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1a00ee783f2da7b0f16b588963f432a6">Deveel.Data.Types.SqlType.Parse</a></div><div class="ttdeci">static SqlType Parse(string s)</div><div class="ttdoc">Parses a SQL formatted string that defines a data-type into a constructed SqlType object equivalent...</div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00321">SqlType.cs:321</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6486e0afa11155105567c77c51f7ab51"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> Deveel.Data.Types.SqlType.Parse </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1IContext.htm">IContext</a>&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Parses a SQL formatted string that defines a data-type into a constructed <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> object equivalent. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">query</td><td></td></tr>
    <tr><td class="paramname">s</td><td>The SQL formatted data-type string, defining the properties of the type.</td></tr>
  </table>
  </dd>
</dl>
<p>This method only supports primitive types. </p>
<dl class="section return"><dt>Returns</dt><dd></dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#a9967fff32a47b51089727534e3e23fee">PrimitiveTypes.IsPrimitive(Deveel.Data.Types.SqlTypeCode)</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a9c4d526af40b7f26506073ab52f3d186">ToString()</a></dd></dl>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00338">338</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                                                                {</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            var sqlCompiler = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParsers.htm">SqlParsers</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParsers.htm#aa089fa4d9a9bc47f0e5848e7687449b4">DataType</a>;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                var result = sqlCompiler.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlParser.htm#ad7d35318531ead27afe363a1cbf96896">Parse</a>(s);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                <span class="keywordflow">if</span> (result.HasErrors)</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseException.htm">SqlParseException</a>(result.Errors.First().Message);</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                var node = (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm">DataTypeNode</a>) result.RootNode;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                if (context == null &amp;&amp; !node.IsPrimitive)</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;The type &#39;{0}&#39; is not primitive and no resolve context is provided.&quot;</span>, node.TypeName));</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm">DataTypeBuilder</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm#a1f95b43094a45390ae56f5d06f69b926">Build</a>(context.TypeResolver(), node);</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            } <span class="keywordflow">catch</span> (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseException.htm">SqlParseException</a>) {</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> FormatException(<span class="stringliteral">&quot;Unable to parse the given string to a valid data type.&quot;</span>);</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            }</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParsers_htm_aa089fa4d9a9bc47f0e5848e7687449b4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParsers.htm#aa089fa4d9a9bc47f0e5848e7687449b4">Deveel.Data.Sql.Parser.SqlParsers.DataType</a></div><div class="ttdeci">static readonly ISqlParser DataType</div><div class="ttdef"><b>Definition:</b> <a href="SqlParsers_8cs_source.htm#l00022">SqlParsers.cs:22</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm">Deveel.Data.Sql.Parser.DataTypeBuilder</a></div><div class="ttdef"><b>Definition:</b> <a href="DataTypeBuilder_8cs_source.htm#l00024">DataTypeBuilder.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParsers_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParsers.htm">Deveel.Data.Sql.Parser.SqlParsers</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlParsers_8cs_source.htm#l00020">SqlParsers.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder_htm_a1f95b43094a45390ae56f5d06f69b926"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeBuilder.htm#a1f95b43094a45390ae56f5d06f69b926">Deveel.Data.Sql.Parser.DataTypeBuilder.Build</a></div><div class="ttdeci">static SqlType Build(ITypeResolver resolver, ISqlNode sqlNode)</div><div class="ttdef"><b>Definition:</b> <a href="DataTypeBuilder_8cs_source.htm#l00025">DataTypeBuilder.cs:25</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlParser_htm_ad7d35318531ead27afe363a1cbf96896"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Parser_1_1ISqlParser.htm#ad7d35318531ead27afe363a1cbf96896">Deveel.Data.Sql.Parser.ISqlParser.Parse</a></div><div class="ttdeci">SqlParseResult Parse(string input)</div><div class="ttdoc">Analyzes and parses the input and results an object that describes the parsed nodes in a tree that ca...</div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1DataTypeNode.htm">Deveel.Data.Sql.Parser.DataTypeNode</a></div><div class="ttdoc">Describes the information of a data type as found in a SQL string. </div><div class="ttdef"><b>Definition:</b> <a href="DataTypeNode_8cs_source.htm#l00028">DataTypeNode.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseException_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Parser_1_1SqlParseException.htm">Deveel.Data.Sql.Parser.SqlParseException</a></div><div class="ttdoc">An error that occurs when compiling a input string into a SQL object. </div><div class="ttdef"><b>Definition:</b> <a href="SqlParseException_8cs_source.htm#l00026">SqlParseException.cs:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac1001e0bdf89c8e04c9925d1bb4ac18e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> Deveel.Data.Types.SqlType.Resolve </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td>
          <td class="paramname"><em>typeCode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00441">441</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                                                            {</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Resolve</a>(typeCode, <span class="keyword">new</span> DataTypeMeta[0]);</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_ac1001e0bdf89c8e04c9925d1bb4ac18e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Deveel.Data.Types.SqlType.Resolve</a></div><div class="ttdeci">static SqlType Resolve(SqlTypeCode typeCode)</div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00441">SqlType.cs:441</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a84a3daf0cce0fd93fbb8b82f92318595"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> Deveel.Data.Types.SqlType.Resolve </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td>
          <td class="paramname"><em>typeCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[]&#160;</td>
          <td class="paramname"><em>meta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00445">445</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                                                                                 {</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Resolve</a>(typeCode, meta, null);</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_ac1001e0bdf89c8e04c9925d1bb4ac18e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Deveel.Data.Types.SqlType.Resolve</a></div><div class="ttdeci">static SqlType Resolve(SqlTypeCode typeCode)</div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00441">SqlType.cs:441</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a777257e9dea6e2f74e7fb93645b4b24b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> Deveel.Data.Types.SqlType.Resolve </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td>
          <td class="paramname"><em>typeCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[]&#160;</td>
          <td class="paramname"><em>meta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">ITypeResolver</a>&#160;</td>
          <td class="paramname"><em>resolver</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00449">449</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                                                                                                         {</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Resolve</a>(typeCode, typeCode.ToString().ToUpperInvariant(), meta, resolver);</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_ac1001e0bdf89c8e04c9925d1bb4ac18e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Deveel.Data.Types.SqlType.Resolve</a></div><div class="ttdeci">static SqlType Resolve(SqlTypeCode typeCode)</div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00441">SqlType.cs:441</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a76b02406ac93348f14e4f096b5082e26"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> Deveel.Data.Types.SqlType.Resolve </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td>
          <td class="paramname"><em>typeCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>name</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00453">453</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                                                                         {</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Resolve</a>(typeCode, name, <span class="keyword">new</span> DataTypeMeta[0]);</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_ac1001e0bdf89c8e04c9925d1bb4ac18e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Deveel.Data.Types.SqlType.Resolve</a></div><div class="ttdeci">static SqlType Resolve(SqlTypeCode typeCode)</div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00441">SqlType.cs:441</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3effe95a3754b37eeb56bccc876e81d6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> Deveel.Data.Types.SqlType.Resolve </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td>
          <td class="paramname"><em>typeCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[]&#160;</td>
          <td class="paramname"><em>meta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00457">457</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                                                                                              {</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Resolve</a>(typeCode, name, meta, null);</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_ac1001e0bdf89c8e04c9925d1bb4ac18e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Deveel.Data.Types.SqlType.Resolve</a></div><div class="ttdeci">static SqlType Resolve(SqlTypeCode typeCode)</div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00441">SqlType.cs:441</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa2844f58398f4688e3bd150cf9bed03b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> Deveel.Data.Types.SqlType.Resolve </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00461">461</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                                                   {</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Resolve</a>(name, <span class="keyword">new</span> DataTypeMeta[0]);</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_ac1001e0bdf89c8e04c9925d1bb4ac18e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Deveel.Data.Types.SqlType.Resolve</a></div><div class="ttdeci">static SqlType Resolve(SqlTypeCode typeCode)</div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00441">SqlType.cs:441</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a39a8e34dfc3053c57da82486fb62f4d8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> Deveel.Data.Types.SqlType.Resolve </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[]&#160;</td>
          <td class="paramname"><em>meta</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00465">465</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                                                                        {</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Resolve</a>(name, meta, null);</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_ac1001e0bdf89c8e04c9925d1bb4ac18e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Deveel.Data.Types.SqlType.Resolve</a></div><div class="ttdeci">static SqlType Resolve(SqlTypeCode typeCode)</div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00441">SqlType.cs:441</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a366c1540dead07314208b880863328c3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> Deveel.Data.Types.SqlType.Resolve </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[]&#160;</td>
          <td class="paramname"><em>meta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">ITypeResolver</a>&#160;</td>
          <td class="paramname"><em>resolver</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00469">469</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                                                                                                {</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;            var typeCode = <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#adaa7176599d5cec135cafe39d07ce9a1">ResolveTypeCode</a>(name);</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Resolve</a>(typeCode, name, meta, resolver);</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_adaa7176599d5cec135cafe39d07ce9a1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#adaa7176599d5cec135cafe39d07ce9a1">Deveel.Data.Types.SqlType.ResolveTypeCode</a></div><div class="ttdeci">static SqlTypeCode ResolveTypeCode(string name)</div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00478">SqlType.cs:478</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_ac1001e0bdf89c8e04c9925d1bb4ac18e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Deveel.Data.Types.SqlType.Resolve</a></div><div class="ttdeci">static SqlType Resolve(SqlTypeCode typeCode)</div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00441">SqlType.cs:441</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6ae79b6779d682fbcbfed20dff9fcd5a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> Deveel.Data.Types.SqlType.Resolve </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td>
          <td class="paramname"><em>typeCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[]&#160;</td>
          <td class="paramname"><em>meta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">ITypeResolver</a>&#160;</td>
          <td class="paramname"><em>resolver</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00474">474</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                                                                                                                      {</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;            <span class="keywordflow">return</span> TypeResolver.Resolve(typeCode, name, meta, resolver);</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="adaa7176599d5cec135cafe39d07ce9a1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> Deveel.Data.Types.SqlType.ResolveTypeCode </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00478">478</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                                                                {</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            var typeCode = PrimitiveTypes.ResolveTypeCode(name);</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Unknown)</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                typeCode = <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Type;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;            <span class="keywordflow">return</span> typeCode;</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a68bec9e416bb576061b966a97edf8e1a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.SqlType.Reverse </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a3b91dd0632825c7ecafd7ea7fcfe002a">Deveel.Data.Types.NumericType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#a4e5f69f56e1987df727ecb8e37dffbeb">Deveel.Data.Types.BooleanType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00274">274</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                                                            {</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Value</a>;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        }</div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm_a34389e1b9a93987d32840d009a4e08b6"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Deveel.Data.Sql.Objects.SqlNull.Value</a></div><div class="ttdeci">static readonly SqlNull Value</div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00024">SqlNull.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a28835cedd45f35449e3bb4388ebe5e53"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Deveel.Data.Types.SqlType.SerializeObject </td>
          <td>(</td>
          <td class="paramtype">Stream&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>obj</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a9728f97c58d5522d0f85d2d6a5b7e63c">Deveel.Data.Types.NumericType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#af3656f8422205538e2a26eb4851dae72">Deveel.Data.Types.StringType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DateType.htm#a9dd3798aa6baf427409066afc86f85c4">Deveel.Data.Types.DateType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BinaryType.htm#af2b54ee7720a69d6119f8c89bfb97512">Deveel.Data.Types.BinaryType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#a13d23434ad2d3a639f8126aab403f439">Deveel.Data.Types.BooleanType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1IntervalType.htm#abd5228d91048dc3f81def0aee977b7cb">Deveel.Data.Types.IntervalType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1QueryType.htm#a25b47dc45649b428fd4957f7dd77c168">Deveel.Data.Types.QueryType</a>, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NullType.htm#a5b9ae71f9abb21e136237eadbce2bc24">Deveel.Data.Types.NullType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Xml_1_1XmlNodeType.htm#a2362fd8d76209d944b694f7cfa6d4d3b">Deveel.Data.Xml.XmlNodeType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00399">399</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                                                                           {</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;Type {0} cannot serialize object of type {1}.&quot;</span>, GetType(),</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                obj.GetType()));</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a936fac5afcd8e1b71d12b53210d5e5f9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.SqlType.Subtract </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a09305bc44b01717aabb57834e02bbea2">Deveel.Data.Types.NumericType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00196">196</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                                                       {</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Value</a>;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        }</div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm_a34389e1b9a93987d32840d009a4e08b6"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Deveel.Data.Sql.Objects.SqlNull.Value</a></div><div class="ttdeci">static readonly SqlNull Value</div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00024">SqlNull.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a9c4d526af40b7f26506073ab52f3d186"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override string Deveel.Data.Types.SqlType.ToString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00395">395</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                                          {</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1d7aa1701178a6e9ffe48c112c563e0e">Name</a>;</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a1d7aa1701178a6e9ffe48c112c563e0e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1d7aa1701178a6e9ffe48c112c563e0e">Deveel.Data.Types.SqlType.Name</a></div><div class="ttdeci">string Name</div><div class="ttdoc">Gets the name of the data-type that is used to resolve it within the context. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00075">SqlType.cs:75</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af35b8a4ae57950fb754e4bed48692cb5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.SqlType.UnaryPlus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#aa16cfc1e0c7fab7629b2127a4278dd54">Deveel.Data.Types.NumericType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00270">270</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                                                              {</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Value</a>;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        }</div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm_a34389e1b9a93987d32840d009a4e08b6"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Deveel.Data.Sql.Objects.SqlNull.Value</a></div><div class="ttdeci">static readonly SqlNull Value</div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00024">SqlNull.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a48aaedeebc2f12a17728b1fedccdff17"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> Deveel.Data.Types.SqlType.Wider </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td>
          <td class="paramname"><em>otherType</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the one data-type between this and the other one given that handles the wider range of values. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">otherType</td><td>The other type to verify.</td></tr>
  </table>
  </dd>
</dl>
<p>This is very important for operations and functions, when operating on <a class="el" href="classDeveel_1_1Data_1_1DataObject.htm">objects</a> with comparable but different data-types, to ensure the result of the operation will be capable to handle the final value. </p>
<p>By default, this method returns this instance, as it is not able to dynamically define the wider type. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns this type if it handles a wider range of values or <em>otherType</em> other type given otherwise. </dd></dl>

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a96d18af2f636bd043c7bb42ec4380996">Deveel.Data.Types.NumericType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00305">305</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                                                        {</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab9e541b32fc88f7dfbb1607ffc210014"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.SqlType.XOr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ad53dac2a00bd2cfc07d5eaa86c9f3026">Deveel.Data.Types.NumericType</a>, and <a class="el" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#a10caf6eb95d6a146bd1709954d7ab086">Deveel.Data.Types.BooleanType</a>.</p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00266">266</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                                                                  {</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Value</a>;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        }</div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm_a34389e1b9a93987d32840d009a4e08b6"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Deveel.Data.Sql.Objects.SqlNull.Value</a></div><div class="ttdeci">static readonly SqlNull Value</div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00024">SqlNull.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Property Documentation</h2>
<a class="anchor" id="ad9df5ffc6e329a53b5cea148fc367295"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Deveel.Data.Types.SqlType.IsIndexable</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Indicates if the values handled by the type can be part of an index. </p>
<p>By default, this returns <code>true</code>, since most of primitive types are indexable (except for Long Objects). </p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00100">100</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a60b7ba0e65d9303fc9af858c5ae199af"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Types.SqlType.IsNull</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00111">111</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a731ce7172c7f30e9e494ce68db96fa7b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Deveel.Data.Types.SqlType.IsPrimitive</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a value indicating if this data-type is primitive. </p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00107">107</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>

</div>
</div>
<a class="anchor" id="aff639e283ee8916b105488d3286c7314"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Deveel.Data.Types.SqlType.IsStorable</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00115">115</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a1d7aa1701178a6e9ffe48c112c563e0e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string Deveel.Data.Types.SqlType.Name</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the name of the data-type that is used to resolve it within the context. </p>
<p>This value is always unique within a database system and can be simple (eg. for <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a731ce7172c7f30e9e494ce68db96fa7b">primitive</a> types like <code>NUMERIC</code>), or composed by multiple parts (eg. for user-defined types). </p>
<p>Some primitive types (for example <code>NUMERIC</code>) can handle multiple SQL types, so this property works as an identificator for the type handler. </p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00075">75</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a03b166e54c20d0768317b7e559b01c70"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> Deveel.Data.Types.SqlType.TypeCode</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the kind of SQL type this data-type handles. </p>
<p>The same instance of a <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> can handle multiple kind of <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SQL types</a>, making such instances, of the same kind, to be different in attributes. </p>
<p>In fact, for example a <code>NUMERIC</code> data-type materialized as <code>INTEGER</code> is not equal to <code>NUMERIC</code> data-type materialized as <code>BIGINT</code>: the two instances will be comparable, but they won't be considered coincident. </p>
<p><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a2ff8f5717569d0651fd5dd19f18cc32e" title="Verifies if a given SqlType is comparable to this data-type. ">IsComparable</a> </p>

<p>Definition at line <a class="el" href="SqlType_8cs_source.htm#l00091">91</a> of file <a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Types/<a class="el" href="SqlType_8cs_source.htm">SqlType.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
