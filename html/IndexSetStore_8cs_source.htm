<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Index/IndexSetStore.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_da8e3e59386dbd04e303b49ee54c7b55.htm">Deveel.Data.Index</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">IndexSetStore.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="IndexSetStore_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Collections.Generic;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.IO;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Linq;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Xml.Schema;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Store.htm">Store</a>;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Index {</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">   27</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">IndexSetStore</a> {</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a8a353d08b102cf2ddf798043e75a2c94">   28</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a8a353d08b102cf2ddf798043e75a2c94">startArea</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#ad6a44d9ba7cc9e3fc0f7046c852607cd">   30</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#ad6a44d9ba7cc9e3fc0f7046c852607cd">indexHeaderPointer</a>;</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a5a37bd569d77ce81545fbac5ca4cfe63">   31</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">IArea</a> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a5a37bd569d77ce81545fbac5ca4cfe63">indexHeaderArea</a>;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a5f655535763eab6db760d2334a5b70a8">   33</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm">IndexBlock</a>[] <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a5f655535763eab6db760d2334a5b70a8">indexBlocks</a>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="comment">// private bool disposed;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a595d735ac2c5d9392138f80ac973d2a6">   37</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">int</span> Magic = 0x0CA90291;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a738c09aec5f650340bec7edbcf7bc536">   39</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a738c09aec5f650340bec7edbcf7bc536">IndexSetStore</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1IDatabaseContext.htm">IDatabaseContext</a> databaseContext, <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm">IStore</a> store) {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            Store = store;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a5f8bccb1ace339b0795116bdc166c6c2">   43</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm">IStore</a> Store { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a59bf8b141418e0024a7ae3df4c3cb165">   45</a></span>&#160;        <span class="keyword">internal</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a59bf8b141418e0024a7ae3df4c3cb165">DeleteAreas</a>(IEnumerable&lt;int&gt; deletedAreas) {</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                <span class="keywordflow">if</span> (Store != null) {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                    <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                        Store.Lock();</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                        <span class="keywordflow">foreach</span> (var <span class="keywordtype">id</span> <span class="keywordflow">in</span> deletedAreas) {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                            Store.DeleteArea(<span class="keywordtype">id</span>);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                        }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                    } <span class="keywordflow">catch</span> (IOException) {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                        <span class="comment">// TODO: Raise the error to the system</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                    } <span class="keywordflow">finally</span> {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                        Store.Unlock();</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                    }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            }</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a9aafdba0c9beb785ebc73ffb84c4a59e">   64</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a9aafdba0c9beb785ebc73ffb84c4a59e">CreateNewBlock</a>() {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="comment">// Allocate the area</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            var a = Store.CreateArea(16);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="keywordtype">long</span> indexBlockP = a.Id;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            <span class="comment">// Setup the header</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            a.WriteInt4(1);     <span class="comment">// version</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            a.WriteInt4(0);     <span class="comment">// reserved</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            a.WriteInt8(0);    <span class="comment">// block entries</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            a.Flush();</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <span class="keywordflow">return</span> indexBlockP;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#af8ac18b86d9fa3112a8a7c31d1ee1814">   77</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#af8ac18b86d9fa3112a8a7c31d1ee1814">Create</a>() {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                <span class="comment">// Create an empty index header area</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                var a = Store.CreateArea(16);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                indexHeaderPointer = a.Id;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                a.WriteInt4(1); <span class="comment">// version</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                a.WriteInt4(0); <span class="comment">// reserved</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                a.WriteInt8(0); <span class="comment">// number of indexes in the set</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                a.Flush();</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                <span class="comment">// Set up the local IArea object for the index header</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                indexHeaderArea = Store.GetArea(indexHeaderPointer);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                indexBlocks = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm">IndexBlock</a>[0];</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                <span class="comment">// Allocate the starting header</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                var sa = Store.CreateArea(32);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                <span class="keywordtype">long</span> startPointer = sa.Id;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                <span class="comment">// The magic</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                sa.WriteInt4(Magic);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                <span class="comment">// The version</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                sa.WriteInt4(1);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                <span class="comment">// Pointer to the index header</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                sa.WriteInt8(indexHeaderPointer);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                sa.Flush();</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                <span class="comment">// Set the &#39;start_area&#39; value.</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                startArea = Store.GetArea(startPointer);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <span class="keywordflow">return</span> startPointer;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            }</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#adc05843ade42277844664d7fa04b76cc">  110</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#adc05843ade42277844664d7fa04b76cc">Open</a>(<span class="keywordtype">long</span> startPointer) {</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                <span class="comment">// Set up the start area</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                startArea = Store.GetArea(startPointer);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                <span class="keywordtype">int</span> magic = startArea.ReadInt4();</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                <span class="keywordflow">if</span> (magic != Magic)</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;Magic value for index set does not match.&quot;</span>);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                <span class="keywordtype">int</span> version = startArea.ReadInt4();</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                <span class="keywordflow">if</span> (version != 1)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;Unknown version for index set.&quot;</span>);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                <span class="comment">// Setup the index_header area</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                indexHeaderPointer = startArea.ReadInt8();</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                indexHeaderArea = Store.GetArea(indexHeaderPointer);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                <span class="comment">// Read the index header area</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                version = indexHeaderArea.ReadInt4(); <span class="comment">// version</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <span class="keywordflow">if</span> (version != 1)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;Incorrect version&quot;</span>);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                indexHeaderArea.ReadInt4(); <span class="comment">// reserved</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                <span class="keywordtype">int</span> indexCount = (int)indexHeaderArea.ReadInt8();</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                indexBlocks = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm">IndexBlock</a>[indexCount];</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                <span class="comment">// Initialize each index block</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; indexCount; ++i) {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                    <span class="keywordtype">int</span> type = indexHeaderArea.ReadInt4();</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                    <span class="keywordtype">int</span> blockSize = indexHeaderArea.ReadInt4();</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                    <span class="keywordtype">long</span> indexBlockPointer = indexHeaderArea.ReadInt8();</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                    <span class="keywordflow">if</span> (type != 1)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                        <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;Do not understand index type: &quot;</span> + type);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                    indexBlocks[i] = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm">IndexBlock</a>(<span class="keyword">this</span>, i, blockSize, indexBlockPointer);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                    indexBlocks[i].<a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm#afa03e8ea5d2f1e22b7ef8b8810b6d33e">AddReference</a>();</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                }</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#aae2cf3632c5a45e37bc63f951d868fb8">  150</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#aae2cf3632c5a45e37bc63f951d868fb8">Close</a>() {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                <span class="keywordflow">if</span> (Store != null) {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; indexBlocks.Length; ++i) {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                        indexBlocks[i].<a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm#aea024b0e8fa8beecbf352229ce906245">RemoveReference</a>();</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                    }</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                    Store = null;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                    indexBlocks = null;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a38b1b592cc18f777f97800f78ac7d8cf">  162</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a38b1b592cc18f777f97800f78ac7d8cf">GetAreasUsed</a>(List&lt;long&gt; list) {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            list.Add(startArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a76ca6f78f4cdec5b070871c02cebdcc3">Id</a>);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            list.Add(indexHeaderPointer);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keywordflow">foreach</span> (var block <span class="keywordflow">in</span> indexBlocks) {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                list.Add(block.StartOffset);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                <span class="keywordtype">long</span>[] blockPointers = block.GetBlockPointers();</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                list.AddRange(blockPointers);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a3499908cab44bd25f2d4ba50237ba969">  173</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a3499908cab44bd25f2d4ba50237ba969">PrepareIndexLists</a>(<span class="keywordtype">int</span> count, <span class="keywordtype">int</span> type, <span class="keywordtype">int</span> blockSize) {</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                    Store.Lock();</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                    <span class="comment">// Allocate a new area for the list</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                    <span class="keywordtype">int</span> newSize = 16 + ((indexBlocks.Length + count) * 16);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                    var newIndexArea = Store.CreateArea(newSize);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                    <span class="keywordtype">long</span> newIndexPointer = newIndexArea.Id;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                    var newIndexBlocks = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm">IndexBlock</a>[(indexBlocks.Length + count)];</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                    <span class="comment">// Copy the existing area</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                    indexHeaderArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a> = 0;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                    <span class="keywordtype">int</span> version = indexHeaderArea.ReadInt4();</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                    <span class="keywordtype">int</span> reserved = indexHeaderArea.ReadInt4();</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                    <span class="keywordtype">long</span> icount = indexHeaderArea.ReadInt8();</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                    newIndexArea.WriteInt4(version);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                    newIndexArea.WriteInt4(reserved);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                    newIndexArea.WriteInt8(icount + count);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; indexBlocks.Length; ++i) {</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                        <span class="keywordtype">int</span> itype = indexHeaderArea.ReadInt4();</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                        <span class="keywordtype">int</span> iblockSize = indexHeaderArea.ReadInt4();</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                        <span class="keywordtype">long</span> indexBlockP = indexHeaderArea.ReadInt8();</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                        newIndexArea.WriteInt4(itype);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                        newIndexArea.WriteInt4(iblockSize);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                        newIndexArea.WriteInt8(indexBlockP);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                        newIndexBlocks[i] = indexBlocks[i];</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                    }</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                    <span class="comment">// Add the new entries</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; count; ++i) {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                        <span class="keywordtype">long</span> newBlankBlockP = CreateNewBlock();</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                        newIndexArea.WriteInt4(type);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                        newIndexArea.WriteInt4(blockSize);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                        newIndexArea.WriteInt8(newBlankBlockP);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                        var newBlock = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm">IndexBlock</a>(<span class="keyword">this</span>, indexBlocks.Length + i, blockSize, newBlankBlockP);</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                        newBlock.AddReference();</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                        newIndexBlocks[indexBlocks.Length + i] = newBlock;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                    }</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                    <span class="comment">// Finished initializing the index.</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                    newIndexArea.Flush();</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                    <span class="comment">// The old index header pointer</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                    <span class="keywordtype">long</span> oldIndexHeaderP = indexHeaderPointer;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                    <span class="comment">// Update the state of this object,</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                    indexHeaderPointer = newIndexPointer;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                    indexHeaderArea = Store.GetArea(newIndexPointer);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                    indexBlocks = newIndexBlocks;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                    <span class="comment">// Update the start pointer</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                    startArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a> = 8;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                    startArea.WriteInt8(newIndexPointer);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                    startArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#af6f36e4f1b30b4f9701785d079af0e96">Flush</a>();</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                    <span class="comment">// Free the old header</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                    Store.DeleteArea(oldIndexHeaderP);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                } <span class="keywordflow">finally</span> {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                    Store.Unlock();</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                }</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        }</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#abccd347e8d9538ee450da4eddf7ed395">  242</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexSet.htm">IIndexSet</a> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#abccd347e8d9538ee450da4eddf7ed395">GetSnapshotIndex</a>() {</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                <span class="comment">// Clone the blocks list.  This represents the current snapshot of the</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                <span class="comment">// index state.</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                var snapshotIndexBlocks = (<a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm">IndexBlock</a>[])indexBlocks.Clone();</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                <span class="comment">// Add this as the reference</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; snapshotIndexBlocks.Length; ++i) {</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                    snapshotIndexBlocks[i].<a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm#afa03e8ea5d2f1e22b7ef8b8810b6d33e">AddReference</a>();</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                }</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1SnapshotIndexSet.htm">SnapshotIndexSet</a>(<span class="keyword">this</span>, snapshotIndexBlocks);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            }</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        }</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div>
<div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a9fae3761ebf77ab6966e9eed60617543">  257</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a9fae3761ebf77ab6966e9eed60617543">CommitIndexHeader</a>() {</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                <span class="comment">// Make a new index header area for the changed set.</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                var a = Store.CreateArea(16 + (indexBlocks.Length * 16));</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                <span class="keywordtype">long</span> aOffset = a.Id;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                a.WriteInt4(1); <span class="comment">// version</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                a.WriteInt4(0); <span class="comment">// reserved</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                a.WriteInt8(indexBlocks.Length); <span class="comment">// count</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                <span class="keywordflow">foreach</span> (var indBlock <span class="keywordflow">in</span> indexBlocks) {</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                    a.WriteInt4(1);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                    a.WriteInt4(indBlock.BlockSize);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                    a.WriteInt8(indBlock.StartOffset);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                <span class="comment">// Finish creating the updated header</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                a.Flush();</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                <span class="comment">// The old index header pointer</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                <span class="keywordtype">long</span> oldIndexHeaderP = indexHeaderPointer;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                <span class="comment">// Set the new index header</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                indexHeaderPointer = aOffset;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                indexHeaderArea = Store.GetArea(indexHeaderPointer);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                <span class="comment">// Write the change to &#39;startPointer&#39;</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                startArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Position</a> = 8;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                startArea.WriteInt8(indexHeaderPointer);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                startArea.<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#af6f36e4f1b30b4f9701785d079af0e96">Flush</a>();</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <span class="comment">// Free the old header index</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                Store.DeleteArea(oldIndexHeaderP);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            }</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        }</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div>
<div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a038a3a7f37074bc029c25565534b47ed">  293</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a038a3a7f37074bc029c25565534b47ed">CommitIndexSet</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexSet.htm">IIndexSet</a> indexSet) {</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            var removedBlocks = <span class="keyword">new</span> List&lt;IndexBlock&gt;();</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                var sIndexSet = (<a class="code" href="classDeveel_1_1Data_1_1Index_1_1SnapshotIndexSet.htm">SnapshotIndexSet</a>)indexSet;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                var indices = sIndexSet.AllIndices.ToList();</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                    <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                        Store.Lock();</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                        <span class="comment">// For each Index in the index set,</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                        <span class="keywordflow">foreach</span> (var index <span class="keywordflow">in</span> indices) {</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                            <span class="keywordtype">int</span> indexNum = index.IndexNumber;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                            <span class="comment">// The IndexBlock we are changing</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                            var curIndexBlock = indexBlocks[indexNum];</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                            <span class="comment">// Get all the blocks in the list</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                            var blocks = index.AllBlocks.ToList();</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                            <span class="comment">// Make up a new block list for this index set.</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                            var area = Store.CreateArea(16 + (blocks.Count * 28));</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                            <span class="keywordtype">long</span> blockP = area.Id;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                            area.WriteInt4(1);               <span class="comment">// version</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                            area.WriteInt4(0);               <span class="comment">// reserved</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                            area.WriteInt8(blocks.Count);  <span class="comment">// block count</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                            <span class="keywordflow">foreach</span> (var block <span class="keywordflow">in</span> blocks) {</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                                var mappedBlock = (<a class="code" href="interfaceDeveel_1_1Data_1_1Index_1_1IMappedBlock.htm">IMappedBlock</a>)block;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                                <span class="keywordtype">long</span> bottomInt = 0;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                                <span class="keywordtype">long</span> topInt = 0;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                                <span class="keywordtype">int</span> blockSize = mappedBlock.Count;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                                <span class="keywordflow">if</span> (blockSize &gt; 0) {</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                                    bottomInt = mappedBlock.Bottom;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                                    topInt = mappedBlock.Top;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                                }</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                                <span class="keywordtype">long</span> blockPointer = mappedBlock.BlockPointer;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                                <span class="comment">// Is the block new or was it changed?</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                                <span class="keywordflow">if</span> (blockPointer == -1 || mappedBlock.HasChanged) {</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                                    <span class="comment">// If this isn&#39;t -1 then write this sector on the list of</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                                    <span class="comment">// sectors to delete during GC.</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                                    <span class="keywordflow">if</span> (blockPointer != -1)</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                                        curIndexBlock.<a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm#a3a7bb0fc14f8033f47f6539d2283d23b">AddDeletedArea</a>(blockPointer);</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                                    <span class="comment">// This is a new block or a block that&#39;s been changed</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                                    <span class="comment">// Write the block to the file system</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                                    blockPointer = mappedBlock.Flush();</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                                }</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                                area.WriteInt8(bottomInt);</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                                area.WriteInt8(topInt);</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                                area.WriteInt8(blockPointer);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                                area.WriteInt4(blockSize | (((<span class="keywordtype">int</span>)mappedBlock.CompactType) &lt;&lt; 24));</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                            }</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                            <span class="comment">// Finish initializing the area</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                            area.Flush();</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                            <span class="comment">// Add the deleted blocks</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                            var deletedBlocks = index.DeletedBlocks.ToArray();</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; deletedBlocks.Length; ++i) {</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                                <span class="keywordtype">long</span> delBlockP = deletedBlocks[i].BlockPointer;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                                <span class="keywordflow">if</span> (delBlockP != -1)</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                                    curIndexBlock.AddDeletedArea(delBlockP);</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                            }</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                            <span class="comment">// Mark the current block as deleted</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                            curIndexBlock.MarkAsDeleted();</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                            <span class="comment">// Now create a new IndexBlock object</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                            var newIndexBlock = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm">IndexBlock</a>(<span class="keyword">this</span>, indexNum, curIndexBlock.BlockSize, blockP);</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                            newIndexBlock.Parent = curIndexBlock;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                            <span class="comment">// Add reference to the new one</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                            newIndexBlock.AddReference();</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                            <span class="comment">// Update the index_blocks list</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                            indexBlocks[indexNum] = newIndexBlock;</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                            <span class="comment">// We remove this later.</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                            removedBlocks.Add(curIndexBlock);</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                        }</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                        <span class="comment">// Commit the new index header (index_blocks)</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                        CommitIndexHeader();</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                    } <span class="keywordflow">finally</span> {</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                        Store.Unlock();</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                    }</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                    <span class="comment">// Commit finished.</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                } <span class="keywordflow">catch</span> (IOException e) {</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Error while committing index changed&quot;</span>, e);</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                }</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            }</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            <span class="comment">// Remove all the references for the changed blocks,</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            <span class="keywordflow">foreach</span> (var block <span class="keywordflow">in</span> removedBlocks) {</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                block.RemoveReference();</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            }</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        }</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div>
<div class="line"><a name="l00400"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a84ff32daf2cb50f7c45e5cbde3c86f05">  400</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a84ff32daf2cb50f7c45e5cbde3c86f05">CommitDropIndex</a>(<span class="keywordtype">int</span> indexNum) {</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            lock (<span class="keyword">this</span>) {</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                <span class="comment">// The IndexBlock we are dropping</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                var curIndexBlock = indexBlocks[indexNum];</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                <span class="keywordtype">int</span> blockSize = curIndexBlock.<a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm#a6626620b712b67c956ab9d23a338fe0d">BlockSize</a>;</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                    Store.Lock();</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                    <span class="comment">// Add all the elements to the deleted areas in the block</span></div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                    var allBlockPointers = curIndexBlock.GetBlockPointers();</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                    <span class="keywordflow">foreach</span> (<span class="keywordtype">long</span> area <span class="keywordflow">in</span> allBlockPointers) {</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                        curIndexBlock.AddDeletedArea(area);</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                    }</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                    <span class="comment">// Mark the current block as deleted</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                    curIndexBlock.MarkAsDeleted();</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                    <span class="comment">// Make up a new blank block list for this index set.</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                    <span class="keywordtype">long</span> blockP = CreateNewBlock();</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                    <span class="comment">// Now create a new IndexBlock object</span></div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                    var newIndexBlock = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm">IndexBlock</a>(<span class="keyword">this</span>, indexNum, blockSize, blockP);</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                    <span class="comment">// Add reference to the new one</span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                    newIndexBlock.AddReference();</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                    <span class="comment">// Remove reference to the old</span></div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                    curIndexBlock.RemoveReference();</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                    <span class="comment">// Update the index_blocks list</span></div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                    indexBlocks[indexNum] = newIndexBlock;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                    <span class="comment">// Commit the new index header (index_blocks)</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                    CommitIndexHeader();</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                } <span class="keywordflow">finally</span> {</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                    Store.Unlock();</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                }</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;            }</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        }</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="preprocessor">        #region IndexBlock</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="preprocessor">        #endregion</span></div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    }</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;}</div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IArea_htm_af6f36e4f1b30b4f9701785d079af0e96"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#af6f36e4f1b30b4f9701785d079af0e96">Deveel.Data.Store.IArea.Flush</a></div><div class="ttdeci">void Flush()</div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1IDatabaseContext_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1IDatabaseContext.htm">Deveel.Data.IDatabaseContext</a></div><div class="ttdoc">The context of a single database within a system. </div><div class="ttdef"><b>Definition:</b> <a href="IDatabaseContext_8cs_source.htm#l00032">IDatabaseContext.cs:32</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_a84ff32daf2cb50f7c45e5cbde3c86f05"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a84ff32daf2cb50f7c45e5cbde3c86f05">Deveel.Data.Index.IndexSetStore.CommitDropIndex</a></div><div class="ttdeci">void CommitDropIndex(int indexNum)</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00400">IndexSetStore.cs:400</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_a5a37bd569d77ce81545fbac5ca4cfe63"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a5a37bd569d77ce81545fbac5ca4cfe63">Deveel.Data.Index.IndexSetStore.indexHeaderArea</a></div><div class="ttdeci">IArea indexHeaderArea</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00031">IndexSetStore.cs:31</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_a3499908cab44bd25f2d4ba50237ba969"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a3499908cab44bd25f2d4ba50237ba969">Deveel.Data.Index.IndexSetStore.PrepareIndexLists</a></div><div class="ttdeci">void PrepareIndexLists(int count, int type, int blockSize)</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00173">IndexSetStore.cs:173</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IArea_htm_a4ae01bbadd6d1072abb9c93be189e8ce"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a4ae01bbadd6d1072abb9c93be189e8ce">Deveel.Data.Store.IArea.Position</a></div><div class="ttdeci">long Position</div><div class="ttdoc">Returns or sets the current position of the pointer within the area. </div><div class="ttdef"><b>Definition:</b> <a href="IArea_8cs_source.htm#l00048">IArea.cs:48</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm">Deveel.Data.Index.IndexSetStore</a></div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00027">IndexSetStore.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_ad6a44d9ba7cc9e3fc0f7046c852607cd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#ad6a44d9ba7cc9e3fc0f7046c852607cd">Deveel.Data.Index.IndexSetStore.indexHeaderPointer</a></div><div class="ttdeci">long indexHeaderPointer</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00030">IndexSetStore.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_adc05843ade42277844664d7fa04b76cc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#adc05843ade42277844664d7fa04b76cc">Deveel.Data.Index.IndexSetStore.Open</a></div><div class="ttdeci">void Open(long startPointer)</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00110">IndexSetStore.cs:110</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_a38b1b592cc18f777f97800f78ac7d8cf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a38b1b592cc18f777f97800f78ac7d8cf">Deveel.Data.Index.IndexSetStore.GetAreasUsed</a></div><div class="ttdeci">void GetAreasUsed(List&lt; long &gt; list)</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00162">IndexSetStore.cs:162</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_a8a353d08b102cf2ddf798043e75a2c94"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a8a353d08b102cf2ddf798043e75a2c94">Deveel.Data.Index.IndexSetStore.startArea</a></div><div class="ttdeci">IArea startArea</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00028">IndexSetStore.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_abccd347e8d9538ee450da4eddf7ed395"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#abccd347e8d9538ee450da4eddf7ed395">Deveel.Data.Index.IndexSetStore.GetSnapshotIndex</a></div><div class="ttdeci">IIndexSet GetSnapshotIndex()</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00242">IndexSetStore.cs:242</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_a59bf8b141418e0024a7ae3df4c3cb165"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a59bf8b141418e0024a7ae3df4c3cb165">Deveel.Data.Index.IndexSetStore.DeleteAreas</a></div><div class="ttdeci">void DeleteAreas(IEnumerable&lt; int &gt; deletedAreas)</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00045">IndexSetStore.cs:45</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_a9fae3761ebf77ab6966e9eed60617543"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a9fae3761ebf77ab6966e9eed60617543">Deveel.Data.Index.IndexSetStore.CommitIndexHeader</a></div><div class="ttdeci">void CommitIndexHeader()</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00257">IndexSetStore.cs:257</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_a5f655535763eab6db760d2334a5b70a8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a5f655535763eab6db760d2334a5b70a8">Deveel.Data.Index.IndexSetStore.indexBlocks</a></div><div class="ttdeci">IndexBlock[] indexBlocks</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00033">IndexSetStore.cs:33</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_aae2cf3632c5a45e37bc63f951d868fb8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#aae2cf3632c5a45e37bc63f951d868fb8">Deveel.Data.Index.IndexSetStore.Close</a></div><div class="ttdeci">void Close()</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00150">IndexSetStore.cs:150</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IArea_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm">Deveel.Data.Store.IArea</a></div><div class="ttdoc">An interface for access the contents of an area of a store. </div><div class="ttdef"><b>Definition:</b> <a href="IArea_8cs_source.htm#l00023">IArea.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_a9aafdba0c9beb785ebc73ffb84c4a59e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a9aafdba0c9beb785ebc73ffb84c4a59e">Deveel.Data.Index.IndexSetStore.CreateNewBlock</a></div><div class="ttdeci">long CreateNewBlock()</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00064">IndexSetStore.cs:64</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Index_1_1IIndexSet_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Index_1_1IIndexSet.htm">Deveel.Data.Index.IIndexSet</a></div><div class="ttdoc">An object that access to a set of indexes. </div><div class="ttdef"><b>Definition:</b> <a href="IIndexSet_8cs_source.htm#l00027">IIndexSet.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexBlock_htm_afa03e8ea5d2f1e22b7ef8b8810b6d33e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm#afa03e8ea5d2f1e22b7ef8b8810b6d33e">Deveel.Data.Index.IndexBlock.AddReference</a></div><div class="ttdeci">void AddReference()</div><div class="ttdef"><b>Definition:</b> <a href="IndexBlock_8cs_source.htm#l00142">IndexBlock.cs:142</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexBlock_htm_aea024b0e8fa8beecbf352229ce906245"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm#aea024b0e8fa8beecbf352229ce906245">Deveel.Data.Index.IndexBlock.RemoveReference</a></div><div class="ttdeci">void RemoveReference()</div><div class="ttdef"><b>Definition:</b> <a href="IndexBlock_8cs_source.htm#l00151">IndexBlock.cs:151</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1SnapshotIndexSet_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1SnapshotIndexSet.htm">Deveel.Data.Index.SnapshotIndexSet</a></div><div class="ttdef"><b>Definition:</b> <a href="SnapshotIndexSet_8cs_source.htm#l00022">SnapshotIndexSet.cs:22</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexBlock_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm">Deveel.Data.Index.IndexBlock</a></div><div class="ttdef"><b>Definition:</b> <a href="IndexBlock_8cs_source.htm#l00025">IndexBlock.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexBlock_htm_a6626620b712b67c956ab9d23a338fe0d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm#a6626620b712b67c956ab9d23a338fe0d">Deveel.Data.Index.IndexBlock.BlockSize</a></div><div class="ttdeci">int BlockSize</div><div class="ttdef"><b>Definition:</b> <a href="IndexBlock_8cs_source.htm#l00054">IndexBlock.cs:54</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexBlock_htm_a3a7bb0fc14f8033f47f6539d2283d23b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexBlock.htm#a3a7bb0fc14f8033f47f6539d2283d23b">Deveel.Data.Index.IndexBlock.AddDeletedArea</a></div><div class="ttdeci">void AddDeletedArea(long pointer)</div><div class="ttdef"><b>Definition:</b> <a href="IndexBlock_8cs_source.htm#l00185">IndexBlock.cs:185</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Store_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Store.htm">Deveel.Data.Store</a></div><div class="ttdef"><b>Definition:</b> <a href="AreaExtensions_8cs_source.htm#l00019">AreaExtensions.cs:19</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_a738c09aec5f650340bec7edbcf7bc536"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a738c09aec5f650340bec7edbcf7bc536">Deveel.Data.Index.IndexSetStore.IndexSetStore</a></div><div class="ttdeci">IndexSetStore(IDatabaseContext databaseContext, IStore store)</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00039">IndexSetStore.cs:39</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_af8ac18b86d9fa3112a8a7c31d1ee1814"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#af8ac18b86d9fa3112a8a7c31d1ee1814">Deveel.Data.Index.IndexSetStore.Create</a></div><div class="ttdeci">long Create()</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00077">IndexSetStore.cs:77</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IArea_htm_a76ca6f78f4cdec5b070871c02cebdcc3"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IArea.htm#a76ca6f78f4cdec5b070871c02cebdcc3">Deveel.Data.Store.IArea.Id</a></div><div class="ttdeci">long Id</div><div class="ttdoc">Returns the unique identifier that represents this area. </div><div class="ttdef"><b>Definition:</b> <a href="IArea_8cs_source.htm#l00031">IArea.cs:31</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Index_1_1IndexSetStore_htm_a038a3a7f37074bc029c25565534b47ed"><div class="ttname"><a href="classDeveel_1_1Data_1_1Index_1_1IndexSetStore.htm#a038a3a7f37074bc029c25565534b47ed">Deveel.Data.Index.IndexSetStore.CommitIndexSet</a></div><div class="ttdeci">void CommitIndexSet(IIndexSet indexSet)</div><div class="ttdef"><b>Definition:</b> <a href="IndexSetStore_8cs_source.htm#l00293">IndexSetStore.cs:293</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Index_1_1IMappedBlock_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Index_1_1IMappedBlock.htm">Deveel.Data.Index.IMappedBlock</a></div><div class="ttdef"><b>Definition:</b> <a href="IMappedBlock_8cs_source.htm#l00022">IMappedBlock.cs:22</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1IStore_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1IStore.htm">Deveel.Data.Store.IStore</a></div><div class="ttdoc">A store is a resource where areas can be allocated and freed to store information (a memory allocator...</div><div class="ttdef"><b>Definition:</b> <a href="IStore_8cs_source.htm#l00056">IStore.cs:56</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
