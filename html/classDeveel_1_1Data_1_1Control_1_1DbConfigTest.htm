<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Control.DbConfigTest Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Control.htm">Control</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Control_1_1DbConfigTest.htm">DbConfigTest</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classDeveel_1_1Data_1_1Control_1_1DbConfigTest-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Control.DbConfigTest Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3a03e56228c409d04943d56241ace58b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Control_1_1DbConfigTest.htm#a3a03e56228c409d04943d56241ace58b">CreateControllerWithoutConfig</a> ()</td></tr>
<tr class="separator:a3a03e56228c409d04943d56241ace58b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7addd52ad000f97bbcda09e267f19855"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Control_1_1DbConfigTest.htm#a7addd52ad000f97bbcda09e267f19855">LoadTest</a> ()</td></tr>
<tr class="separator:a7addd52ad000f97bbcda09e267f19855"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f7fc3c6bf9a85433c6b23ca42cb0335"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Control_1_1DbConfigTest.htm#a5f7fc3c6bf9a85433c6b23ca42cb0335">SaveToTest</a> ()</td></tr>
<tr class="separator:a5f7fc3c6bf9a85433c6b23ca42cb0335"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="DbConfigTest_8cs_source.htm#l00011">11</a> of file <a class="el" href="DbConfigTest_8cs_source.htm">DbConfigTest.cs</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a3a03e56228c409d04943d56241ace58b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Control.DbConfigTest.CreateControllerWithoutConfig </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DbConfigTest_8cs_source.htm#l00013">13</a> of file <a class="el" href="DbConfigTest_8cs_source.htm">DbConfigTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;                                                    {</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;            Assert.DoesNotThrow(() =&gt; DbController.Create());</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a7addd52ad000f97bbcda09e267f19855"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Control.DbConfigTest.LoadTest </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DbConfigTest_8cs_source.htm#l00018">18</a> of file <a class="el" href="DbConfigTest_8cs_source.htm">DbConfigTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                               {</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;            StringWriter writer = <span class="keyword">new</span> StringWriter(sb);</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;            writer.WriteLine(<span class="stringliteral">&quot;key1=value1&quot;</span>);</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;            writer.WriteLine(<span class="stringliteral">&quot;key2 = on&quot;</span>);</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;            writer.WriteLine(<span class="stringliteral">&quot;key3= true&quot;</span>);</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;            writer.Flush();</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            MemoryStream stream = <span class="keyword">new</span> MemoryStream(Encoding.GetEncoding(<span class="stringliteral">&quot;ISO-8859-1&quot;</span>).GetBytes(sb.ToString()));</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            DbConfig config = DbConfig.Empty;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            config.Load(stream);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <span class="keywordtype">string</span> value = config.GetValue&lt;<span class="keywordtype">string</span>&gt;(<span class="stringliteral">&quot;key1&quot;</span>);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            Assert.IsNotNull(value, <span class="stringliteral">&quot;The &#39;key1&#39; was not set into the config.&quot;</span>);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            Assert.IsNotEmpty(value, <span class="stringliteral">&quot;The value of &#39;key1&#39; is empty.&quot;</span>);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;value1&quot;</span>, value, <span class="stringliteral">&quot;The value for &#39;key1&#39; is not correct.&quot;</span>);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            value = config.GetValue&lt;<span class="keywordtype">string</span>&gt;(<span class="stringliteral">&quot;key2&quot;</span>);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            Assert.IsNotNull(value, <span class="stringliteral">&quot;The &#39;key2&#39; was not set into the config.&quot;</span>);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            Assert.IsNotEmpty(value, <span class="stringliteral">&quot;The value of &#39;key2&#39; is empty.&quot;</span>);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;on&quot;</span>, value, <span class="stringliteral">&quot;The value for &#39;key2&#39; is not correct.&quot;</span>);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            value = config.GetValue&lt;<span class="keywordtype">string</span>&gt;(<span class="stringliteral">&quot;key3&quot;</span>);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            Assert.IsNotNull(value, <span class="stringliteral">&quot;The &#39;key3&#39; was not set into the config.&quot;</span>);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            Assert.IsNotEmpty(value, <span class="stringliteral">&quot;The value of &#39;key3&#39; is empty.&quot;</span>);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            Assert.AreEqual(<span class="stringliteral">&quot;true&quot;</span>, value, <span class="stringliteral">&quot;The value for &#39;key1&#39; is not correct.&quot;</span>);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a5f7fc3c6bf9a85433c6b23ca42cb0335"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Control.DbConfigTest.SaveToTest </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="DbConfigTest_8cs_source.htm#l00049">49</a> of file <a class="el" href="DbConfigTest_8cs_source.htm">DbConfigTest.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                 {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            DbConfig config = DbConfig.Empty;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            config.SetValue(<span class="stringliteral">&quot;key1&quot;</span>, <span class="stringliteral">&quot;value1&quot;</span>);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            config.SetValue(<span class="stringliteral">&quot;key2&quot;</span>, <span class="stringliteral">&quot;on&quot;</span>);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            config.SetValue(<span class="stringliteral">&quot;key3&quot;</span>, <span class="stringliteral">&quot;true&quot;</span>);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            MemoryStream stream = <span class="keyword">new</span> MemoryStream();</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            config.Save(stream);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb-nunit/Deveel.Data.Control/<a class="el" href="DbConfigTest_8cs_source.htm">DbConfigTest.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
