<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Types/TypeSerializer.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_19d3c7f6763b6fdf1f737cd3b1c149f6.htm">Deveel.Data.Types</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">TypeSerializer.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="TypeSerializer_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Globalization;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.IO;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Text;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Serialization.htm">Serialization</a>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Types {</div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1TypeSerializer.htm">   25</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Types_1_1TypeSerializer.htm">TypeSerializer</a> {</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1TypeSerializer.htm#af4e1af3879f04eec02583b2909e337c0">   26</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1TypeSerializer.htm#af4e1af3879f04eec02583b2909e337c0">SerializeTo</a>(BinaryWriter writer, <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> type) {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            writer.Write((byte) type.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a>);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            <span class="keywordflow">if</span> (type.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a731ce7172c7f30e9e494ce68db96fa7b">IsPrimitive</a>) {</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                <span class="keywordflow">if</span> (type is <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm">NumericType</a>) {</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                    var numericType = (NumericType) type;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                    writer.Write(numericType.Size);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                    writer.Write(numericType.Scale);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (type is <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm">StringType</a>) {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                    var stringType = (StringType) type;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                    writer.Write(stringType.MaxSize);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                    <span class="keywordflow">if</span> (stringType.Locale != null) {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                        writer.Write((byte) 1);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                        writer.Write(stringType.Locale.Name);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                        writer.Write((byte) 0);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                    }</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (type is <a class="code" href="classDeveel_1_1Data_1_1Types_1_1BinaryType.htm">BinaryType</a>) {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                    var binaryType = (BinaryType) type;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                    writer.Write(binaryType.MaxSize);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (type is <a class="code" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm">BooleanType</a> ||</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                           type is <a class="code" href="classDeveel_1_1Data_1_1Types_1_1IntervalType.htm">IntervalType</a> ||</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                           type is <a class="code" href="classDeveel_1_1Data_1_1Types_1_1DateType.htm">DateType</a> ||</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                           type is <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NullType.htm">NullType</a>) {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                    <span class="comment">// nothing to add to the SQL Type Code</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;The data type &#39;{0}&#39; cannot be serialized.&quot;</span>, type.GetType().FullName));</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (type is <a class="code" href="classDeveel_1_1Data_1_1Types_1_1UserType.htm">UserType</a>) {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                var userType = (UserType) type;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                writer.Write((byte) 1); <span class="comment">// The code of custom type</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                writer.Write(userType.FullName.FullName);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (type is <a class="code" href="classDeveel_1_1Data_1_1Types_1_1QueryType.htm">QueryType</a>) {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                <span class="comment">// nothing to do for the Query Type here</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (type is <a class="code" href="classDeveel_1_1Data_1_1Types_1_1ArrayType.htm">ArrayType</a>) {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                var arrayType = (ArrayType) type;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                writer.Write(arrayType.Length);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1TypeSerializer.htm#ae0cc9e27239dfb8486e8bec1cc958fe5">   70</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1TypeSerializer.htm#ae0cc9e27239dfb8486e8bec1cc958fe5">SerializeTo</a>(Stream stream, <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> type) {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            var writer = <span class="keyword">new</span> BinaryWriter(stream, Encoding.Unicode);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            SerializeTo(writer, type);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1TypeSerializer.htm#a3952a3f93d1aa17d914f9d397033709f">   75</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1TypeSerializer.htm#a3952a3f93d1aa17d914f9d397033709f">Deserialize</a>(BinaryReader reader, <a class="code" href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">ITypeResolver</a> resolver) {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            var typeCode = (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>)reader.ReadByte();</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm">BooleanType</a>.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#af4988131dda6e98af925aa8b2266ab2a">IsBooleanType</a>(typeCode))</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm">PrimitiveTypes</a>.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#aeff714f46e3b8cb829d7323742ddad0e">Boolean</a>(typeCode);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1IntervalType.htm">IntervalType</a>.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1IntervalType.htm#ad4e2ec4017dfe39043853ddac75fcfd5">IsIntervalType</a>(typeCode))</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm">PrimitiveTypes</a>.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#a690149456838ab4a7f45f2bf0f67558b">Interval</a>(typeCode);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1DateType.htm">DateType</a>.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1DateType.htm#aebe241a4f9bd948d72fce644f884b0c2">IsDateType</a>(typeCode))</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm">PrimitiveTypes</a>.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#ad8d1845131dedfabe4428de8d2f2195d">DateTime</a>(typeCode);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm">StringType</a>.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7c8bfed62acfa974fbd9dc0d274b0e6f">IsStringType</a>(typeCode)) {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                var maxSize = reader.ReadInt32();</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                CultureInfo locale = null;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                var hasLocale = reader.ReadByte() == 1;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                <span class="keywordflow">if</span> (hasLocale) {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                    var name = reader.ReadString();</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                    locale = <span class="keyword">new</span> CultureInfo(name);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                <span class="comment">// TODO: Get the encoding from the serialization...</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm">PrimitiveTypes</a>.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#a3c8806064ed05c26c44a8e105e40d153">String</a>(typeCode, maxSize, Encoding.Unicode, locale);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm">NumericType</a>.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#abdbe9fdf30f1b8905b987fbe63f2ee26">IsNumericType</a>(typeCode)) {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                var size = reader.ReadInt32();</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                var scale = reader.ReadByte();</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm">PrimitiveTypes</a>.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#a84c99b654fd0aba51a17e6a2ef1533a7">Numeric</a>(typeCode, size, scale);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1BinaryType.htm">BinaryType</a>.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1BinaryType.htm#ab6f344c71e765c408398558516f07535">IsBinaryType</a>(typeCode)) {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                var size = reader.ReadInt32();</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm">PrimitiveTypes</a>.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#ac7e33cc65747a65d4cf088d65108c6e1">Binary</a>(typeCode, size);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Type) {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                <span class="comment">// TODO:</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.QueryPlan)</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1QueryType.htm">QueryType</a>();</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Array) {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                var size = reader.ReadInt32();</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1ArrayType.htm">ArrayType</a>(size);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Null)</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm">PrimitiveTypes</a>.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#aafd71d1da848cc50846910cb3e3c5d92">Null</a>();</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();          </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1TypeSerializer.htm#adffdb959fdb75862f298197bf49cf360">  130</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1TypeSerializer.htm#adffdb959fdb75862f298197bf49cf360">Deserialize</a>(Stream stream, <a class="code" href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">ITypeResolver</a> typeResolver) {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            var reader = <span class="keyword">new</span> BinaryReader(stream, Encoding.Unicode);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="keywordflow">return</span> Deserialize(reader, typeResolver);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        }</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm">Deveel.Data.Types.PrimitiveTypes</a></div><div class="ttdoc">Provides some helper functions for resolving and creating SqlType instances that are primitive to the...</div><div class="ttdef"><b>Definition:</b> <a href="PrimitiveTypes_8cs_source.htm#l00029">PrimitiveTypes.cs:29</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Serialization_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Serialization.htm">Deveel.Data.Serialization</a></div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00024">BinarySerializer.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1BinaryType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1BinaryType.htm">Deveel.Data.Types.BinaryType</a></div><div class="ttdef"><b>Definition:</b> <a href="BinaryType_8cs_source.htm#l00027">BinaryType.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1TypeSerializer_htm_af4e1af3879f04eec02583b2909e337c0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1TypeSerializer.htm#af4e1af3879f04eec02583b2909e337c0">Deveel.Data.Types.TypeSerializer.SerializeTo</a></div><div class="ttdeci">static void SerializeTo(BinaryWriter writer, SqlType type)</div><div class="ttdef"><b>Definition:</b> <a href="TypeSerializer_8cs_source.htm#l00026">TypeSerializer.cs:26</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1BooleanType_htm_af4988131dda6e98af925aa8b2266ab2a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm#af4988131dda6e98af925aa8b2266ab2a">Deveel.Data.Types.BooleanType.IsBooleanType</a></div><div class="ttdeci">static bool IsBooleanType(SqlTypeCode sqlType)</div><div class="ttdef"><b>Definition:</b> <a href="BooleanType_8cs_source.htm#l00041">BooleanType.cs:41</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm">Deveel.Data.Types.StringType</a></div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00029">StringType.cs:29</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes_htm_aeff714f46e3b8cb829d7323742ddad0e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#aeff714f46e3b8cb829d7323742ddad0e">Deveel.Data.Types.PrimitiveTypes.Boolean</a></div><div class="ttdeci">static BooleanType Boolean()</div><div class="ttdef"><b>Definition:</b> <a href="PrimitiveTypes_8cs_source.htm#l00030">PrimitiveTypes.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1TypeSerializer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1TypeSerializer.htm">Deveel.Data.Types.TypeSerializer</a></div><div class="ttdef"><b>Definition:</b> <a href="TypeSerializer_8cs_source.htm#l00025">TypeSerializer.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1TypeSerializer_htm_a3952a3f93d1aa17d914f9d397033709f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1TypeSerializer.htm#a3952a3f93d1aa17d914f9d397033709f">Deveel.Data.Types.TypeSerializer.Deserialize</a></div><div class="ttdeci">static SqlType Deserialize(BinaryReader reader, ITypeResolver resolver)</div><div class="ttdef"><b>Definition:</b> <a href="TypeSerializer_8cs_source.htm#l00075">TypeSerializer.cs:75</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm">Deveel.Data.Types.NumericType</a></div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00027">NumericType.cs:27</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">Deveel.Data.Types.ITypeResolver</a></div><div class="ttdef"><b>Definition:</b> <a href="ITypeResolver_8cs_source.htm#l00020">ITypeResolver.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1TypeSerializer_htm_ae0cc9e27239dfb8486e8bec1cc958fe5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1TypeSerializer.htm#ae0cc9e27239dfb8486e8bec1cc958fe5">Deveel.Data.Types.TypeSerializer.SerializeTo</a></div><div class="ttdeci">static void SerializeTo(Stream stream, SqlType type)</div><div class="ttdef"><b>Definition:</b> <a href="TypeSerializer_8cs_source.htm#l00070">TypeSerializer.cs:70</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes_htm_ac7e33cc65747a65d4cf088d65108c6e1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#ac7e33cc65747a65d4cf088d65108c6e1">Deveel.Data.Types.PrimitiveTypes.Binary</a></div><div class="ttdeci">static BinaryType Binary(int maxSize)</div><div class="ttdef"><b>Definition:</b> <a href="PrimitiveTypes_8cs_source.htm#l00162">PrimitiveTypes.cs:162</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_abdbe9fdf30f1b8905b987fbe63f2ee26"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#abdbe9fdf30f1b8905b987fbe63f2ee26">Deveel.Data.Types.NumericType.IsNumericType</a></div><div class="ttdeci">static bool IsNumericType(SqlTypeCode typeCode)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00684">NumericType.cs:684</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a03b166e54c20d0768317b7e559b01c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">Deveel.Data.Types.SqlType.TypeCode</a></div><div class="ttdeci">SqlTypeCode TypeCode</div><div class="ttdoc">Gets the kind of SQL type this data-type handles. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00091">SqlType.cs:91</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1DateType_htm_aebe241a4f9bd948d72fce644f884b0c2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1DateType.htm#aebe241a4f9bd948d72fce644f884b0c2">Deveel.Data.Types.DateType.IsDateType</a></div><div class="ttdeci">static bool IsDateType(SqlTypeCode sqlType)</div><div class="ttdef"><b>Definition:</b> <a href="DateType_8cs_source.htm#l00208">DateType.cs:208</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a7c8bfed62acfa974fbd9dc0d274b0e6f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7c8bfed62acfa974fbd9dc0d274b0e6f">Deveel.Data.Types.StringType.IsStringType</a></div><div class="ttdeci">static bool IsStringType(SqlTypeCode typeCode)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00566">StringType.cs:566</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1BinaryType_htm_ab6f344c71e765c408398558516f07535"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1BinaryType.htm#ab6f344c71e765c408398558516f07535">Deveel.Data.Types.BinaryType.IsBinaryType</a></div><div class="ttdeci">static bool IsBinaryType(SqlTypeCode sqlType)</div><div class="ttdef"><b>Definition:</b> <a href="BinaryType_8cs_source.htm#l00165">BinaryType.cs:165</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes_htm_aafd71d1da848cc50846910cb3e3c5d92"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#aafd71d1da848cc50846910cb3e3c5d92">Deveel.Data.Types.PrimitiveTypes.Null</a></div><div class="ttdeci">static NullType Null()</div><div class="ttdef"><b>Definition:</b> <a href="PrimitiveTypes_8cs_source.htm#l00126">PrimitiveTypes.cs:126</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1TypeSerializer_htm_adffdb959fdb75862f298197bf49cf360"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1TypeSerializer.htm#adffdb959fdb75862f298197bf49cf360">Deveel.Data.Types.TypeSerializer.Deserialize</a></div><div class="ttdeci">static SqlType Deserialize(Stream stream, ITypeResolver typeResolver)</div><div class="ttdef"><b>Definition:</b> <a href="TypeSerializer_8cs_source.htm#l00130">TypeSerializer.cs:130</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes_htm_a84c99b654fd0aba51a17e6a2ef1533a7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#a84c99b654fd0aba51a17e6a2ef1533a7">Deveel.Data.Types.PrimitiveTypes.Numeric</a></div><div class="ttdeci">static NumericType Numeric()</div><div class="ttdef"><b>Definition:</b> <a href="PrimitiveTypes_8cs_source.htm#l00078">PrimitiveTypes.cs:78</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1UserType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1UserType.htm">Deveel.Data.Types.UserType</a></div><div class="ttdef"><b>Definition:</b> <a href="UserType_8cs_source.htm#l00022">UserType.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes_htm_a690149456838ab4a7f45f2bf0f67558b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#a690149456838ab4a7f45f2bf0f67558b">Deveel.Data.Types.PrimitiveTypes.Interval</a></div><div class="ttdeci">static IntervalType Interval(SqlTypeCode sqlType)</div><div class="ttdef"><b>Definition:</b> <a href="PrimitiveTypes_8cs_source.htm#l00178">PrimitiveTypes.cs:178</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes_htm_ad8d1845131dedfabe4428de8d2f2195d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#ad8d1845131dedfabe4428de8d2f2195d">Deveel.Data.Types.PrimitiveTypes.DateTime</a></div><div class="ttdeci">static DateType DateTime()</div><div class="ttdef"><b>Definition:</b> <a href="PrimitiveTypes_8cs_source.htm#l00134">PrimitiveTypes.cs:134</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1ArrayType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1ArrayType.htm">Deveel.Data.Types.ArrayType</a></div><div class="ttdef"><b>Definition:</b> <a href="ArrayType_8cs_source.htm#l00022">ArrayType.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">Deveel.Data.Types.SqlType</a></div><div class="ttdoc">Defines the properties of a specific SQL Type and handles the values compatible. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00033">SqlType.cs:33</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1BooleanType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm">Deveel.Data.Types.BooleanType</a></div><div class="ttdef"><b>Definition:</b> <a href="BooleanType_8cs_source.htm#l00026">BooleanType.cs:26</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1IntervalType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1IntervalType.htm">Deveel.Data.Types.IntervalType</a></div><div class="ttdef"><b>Definition:</b> <a href="IntervalType_8cs_source.htm#l00023">IntervalType.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1QueryType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1QueryType.htm">Deveel.Data.Types.QueryType</a></div><div class="ttdef"><b>Definition:</b> <a href="QueryType_8cs_source.htm#l00027">QueryType.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes_htm_a3c8806064ed05c26c44a8e105e40d153"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1PrimitiveTypes.htm#a3c8806064ed05c26c44a8e105e40d153">Deveel.Data.Types.PrimitiveTypes.String</a></div><div class="ttdeci">static StringType String()</div><div class="ttdef"><b>Definition:</b> <a href="PrimitiveTypes_8cs_source.htm#l00042">PrimitiveTypes.cs:42</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a731ce7172c7f30e9e494ce68db96fa7b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a731ce7172c7f30e9e494ce68db96fa7b">Deveel.Data.Types.SqlType.IsPrimitive</a></div><div class="ttdeci">bool IsPrimitive</div><div class="ttdoc">Gets a value indicating if this data-type is primitive. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00107">SqlType.cs:107</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NullType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NullType.htm">Deveel.Data.Types.NullType</a></div><div class="ttdoc">A data type that represents the NULL value of a given SQL data type. </div><div class="ttdef"><b>Definition:</b> <a href="NullType_8cs_source.htm#l00029">NullType.cs:29</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1DateType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1DateType.htm">Deveel.Data.Types.DateType</a></div><div class="ttdef"><b>Definition:</b> <a href="DateType_8cs_source.htm#l00023">DateType.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1IntervalType_htm_ad4e2ec4017dfe39043853ddac75fcfd5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1IntervalType.htm#ad4e2ec4017dfe39043853ddac75fcfd5">Deveel.Data.Types.IntervalType.IsIntervalType</a></div><div class="ttdeci">static bool IsIntervalType(SqlTypeCode sqlType)</div><div class="ttdef"><b>Definition:</b> <a href="IntervalType_8cs_source.htm#l00117">IntervalType.cs:117</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
