<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Serialization.BinarySerializer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Serialization.htm">Serialization</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm">BinarySerializer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#properties">Properties</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Serialization.BinarySerializer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad15573d07ef3eb6afb9d8e3839a2469f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#ad15573d07ef3eb6afb9d8e3839a2469f">BinarySerializer</a> ()</td></tr>
<tr class="separator:ad15573d07ef3eb6afb9d8e3839a2469f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a185280513049bf8a972cd320b148f039"><td class="memItemLeft" align="right" valign="top">object&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a185280513049bf8a972cd320b148f039">Deserialize</a> (Stream stream, Type graphType)</td></tr>
<tr class="separator:a185280513049bf8a972cd320b148f039"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af03f36942d6f2042526b6ae2c09b568c"><td class="memItemLeft" align="right" valign="top">object&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af03f36942d6f2042526b6ae2c09b568c">Deserialize</a> (BinaryReader reader, Type graphType)</td></tr>
<tr class="separator:af03f36942d6f2042526b6ae2c09b568c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cacf7edeff7417eb44cd8378e6a3a58"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a8cacf7edeff7417eb44cd8378e6a3a58">Serialize</a> (Stream stream, object obj)</td></tr>
<tr class="separator:a8cacf7edeff7417eb44cd8378e6a3a58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7924736ce6dc3e9d7834862adfb7339b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a7924736ce6dc3e9d7834862adfb7339b">Serialize</a> (BinaryWriter writer, object obj)</td></tr>
<tr class="separator:a7924736ce6dc3e9d7834862adfb7339b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="properties"></a>
Properties</h2></td></tr>
<tr class="memitem:af6fe4270065e0524f5676d196119f154"><td class="memItemLeft" align="right" valign="top">Encoding&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a><code> [get, set]</code></td></tr>
<tr class="separator:af6fe4270065e0524f5676d196119f154"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a992cee1c08f62ffcd5d444351629d76a"><td class="memItemLeft" align="right" valign="top">object&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a992cee1c08f62ffcd5d444351629d76a">DeserializeType</a> (BinaryReader reader, Type graphType)</td></tr>
<tr class="separator:a992cee1c08f62ffcd5d444351629d76a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a3498d728349e27a4c55f407da18a33"><td class="memItemLeft" align="right" valign="top">ConstructorInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a6a3498d728349e27a4c55f407da18a33">GetDefaultConstructor</a> (Type type)</td></tr>
<tr class="separator:a6a3498d728349e27a4c55f407da18a33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abededce28b8165099af672f0908bb7c8"><td class="memItemLeft" align="right" valign="top">object&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#abededce28b8165099af672f0908bb7c8">CustomDeserialize</a> (BinaryReader reader, Type graphType)</td></tr>
<tr class="separator:abededce28b8165099af672f0908bb7c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe206cf110e8745c2d5c86dab10d657d"><td class="memItemLeft" align="right" valign="top">ConstructorInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#afe206cf110e8745c2d5c86dab10d657d">GetSpecialConstructor</a> (Type type)</td></tr>
<tr class="separator:afe206cf110e8745c2d5c86dab10d657d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:a81db27038bfeb8b2a3ec5f75c3233fa7"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a81db27038bfeb8b2a3ec5f75c3233fa7">ReadValues</a> (BinaryReader reader, <a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a> encoding, IDictionary&lt; string, object &gt; values)</td></tr>
<tr class="separator:a81db27038bfeb8b2a3ec5f75c3233fa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cfb9364ac299d2d47c988337bada5b3"><td class="memItemLeft" align="right" valign="top">static object&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a5cfb9364ac299d2d47c988337bada5b3">ReadValue</a> (BinaryReader reader, <a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a> encoding)</td></tr>
<tr class="separator:a5cfb9364ac299d2d47c988337bada5b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3822d08175284bdfc6272a3f5b19ffb9"><td class="memItemLeft" align="right" valign="top">static Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a3822d08175284bdfc6272a3f5b19ffb9">ReadType</a> (BinaryReader reader)</td></tr>
<tr class="separator:a3822d08175284bdfc6272a3f5b19ffb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee43a4aee17842650ef352720cea5fff"><td class="memItemLeft" align="right" valign="top">static object&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aee43a4aee17842650ef352720cea5fff">ReadObject</a> (BinaryReader reader, <a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a> encoding)</td></tr>
<tr class="separator:aee43a4aee17842650ef352720cea5fff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f87151efb9c10dcb01560644eaf40bc"><td class="memItemLeft" align="right" valign="top">static Array&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a5f87151efb9c10dcb01560644eaf40bc">ReadArray</a> (BinaryReader reader, <a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a> encoding)</td></tr>
<tr class="separator:a5f87151efb9c10dcb01560644eaf40bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9946db73e2197a90c1142fe89df94f7"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#ab9946db73e2197a90c1142fe89df94f7">GetObjectValues</a> (Type objType, object obj, <a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a> graph)</td></tr>
<tr class="separator:ab9946db73e2197a90c1142fe89df94f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0df53d799ce0e862ca8cf9f5588cd58e"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a0df53d799ce0e862ca8cf9f5588cd58e">SerializeGraph</a> (BinaryWriter writer, <a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a> encoding, <a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a> graph)</td></tr>
<tr class="separator:a0df53d799ce0e862ca8cf9f5588cd58e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26972a1f7378a72c3dbf46683a4d6c6d"><td class="memItemLeft" align="right" valign="top">static byte&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a26972a1f7378a72c3dbf46683a4d6c6d">GetTypeCode</a> (Type type)</td></tr>
<tr class="separator:a26972a1f7378a72c3dbf46683a4d6c6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79cf28d5c92c060f91661a4f4c8661b8"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a79cf28d5c92c060f91661a4f4c8661b8">SerializeValue</a> (BinaryWriter writer, <a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a> encoding, Type type, object value)</td></tr>
<tr class="separator:a79cf28d5c92c060f91661a4f4c8661b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a258a08adf4ef8a3b7783d19aa37de0d7"><td class="memItemLeft" align="right" valign="top">const byte&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a258a08adf4ef8a3b7783d19aa37de0d7">BooleanType</a> = 1</td></tr>
<tr class="separator:a258a08adf4ef8a3b7783d19aa37de0d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad576ea35c765444ab8cdee7218c92d41"><td class="memItemLeft" align="right" valign="top">const byte&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#ad576ea35c765444ab8cdee7218c92d41">ByteType</a> = 2</td></tr>
<tr class="separator:ad576ea35c765444ab8cdee7218c92d41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5521047d65f7c58effa1178b4a059d1c"><td class="memItemLeft" align="right" valign="top">const byte&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a5521047d65f7c58effa1178b4a059d1c">Int16Type</a> = 3</td></tr>
<tr class="separator:a5521047d65f7c58effa1178b4a059d1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1278bac9bc0575b952092f0990889086"><td class="memItemLeft" align="right" valign="top">const byte&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a1278bac9bc0575b952092f0990889086">Int32Type</a> = 4</td></tr>
<tr class="separator:a1278bac9bc0575b952092f0990889086"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa86663ec56778a90b05d8b1a79c9d81a"><td class="memItemLeft" align="right" valign="top">const byte&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aa86663ec56778a90b05d8b1a79c9d81a">Int64Type</a> = 5</td></tr>
<tr class="separator:aa86663ec56778a90b05d8b1a79c9d81a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43e4f7864798824360a8645e98ccf843"><td class="memItemLeft" align="right" valign="top">const byte&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a43e4f7864798824360a8645e98ccf843">SingleType</a> = 6</td></tr>
<tr class="separator:a43e4f7864798824360a8645e98ccf843"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73527d49577414735b9306f3a5ae157b"><td class="memItemLeft" align="right" valign="top">const byte&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a73527d49577414735b9306f3a5ae157b">DoubleType</a> = 7</td></tr>
<tr class="separator:a73527d49577414735b9306f3a5ae157b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8601d3ceb5498a56f0916049246ebe6b"><td class="memItemLeft" align="right" valign="top">const byte&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a8601d3ceb5498a56f0916049246ebe6b">StringType</a> = 8</td></tr>
<tr class="separator:a8601d3ceb5498a56f0916049246ebe6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29694f9aa10f561e8b71edf9f6b224a8"><td class="memItemLeft" align="right" valign="top">const byte&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a29694f9aa10f561e8b71edf9f6b224a8">ObjectType</a> = 15</td></tr>
<tr class="separator:a29694f9aa10f561e8b71edf9f6b224a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec97dd85e516ab54a829af8564cd4efd"><td class="memItemLeft" align="right" valign="top">const byte&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aec97dd85e516ab54a829af8564cd4efd">ArrayType</a> = 20</td></tr>
<tr class="separator:aec97dd85e516ab54a829af8564cd4efd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00025">25</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ad15573d07ef3eb6afb9d8e3839a2469f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Serialization.BinarySerializer.BinarySerializer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00026">26</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                                  {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a> = <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a>.Unicode;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_af6fe4270065e0524f5676d196119f154"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Deveel.Data.Serialization.BinarySerializer.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00030">BinarySerializer.cs:30</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="abededce28b8165099af672f0908bb7c8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">object Deveel.Data.Serialization.BinarySerializer.CustomDeserialize </td>
          <td>(</td>
          <td class="paramtype">BinaryReader&#160;</td>
          <td class="paramname"><em>reader</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>graphType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00106">106</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                                                                              {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            var ctor = <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#afe206cf110e8745c2d5c86dab10d657d">GetSpecialConstructor</a>(graphType);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordflow">if</span> (ctor == null)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;The type &#39;{0}&#39; has not the special serialization constructor&quot;</span>,</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                    graphType));</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            var values = <span class="keyword">new</span> Dictionary&lt;string, object&gt;();</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a81db27038bfeb8b2a3ec5f75c3233fa7">ReadValues</a>(reader, <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a>, values);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            var graph = <span class="keyword">new</span> ObjectData(graphType, values);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keywordflow">return</span> ctor.Invoke(<span class="keyword">new</span> <span class="keywordtype">object</span>[] {graph});</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a81db27038bfeb8b2a3ec5f75c3233fa7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a81db27038bfeb8b2a3ec5f75c3233fa7">Deveel.Data.Serialization.BinarySerializer.ReadValues</a></div><div class="ttdeci">static void ReadValues(BinaryReader reader, Encoding encoding, IDictionary&lt; string, object &gt; values)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00119">BinarySerializer.cs:119</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_afe206cf110e8745c2d5c86dab10d657d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#afe206cf110e8745c2d5c86dab10d657d">Deveel.Data.Serialization.BinarySerializer.GetSpecialConstructor</a></div><div class="ttdeci">ConstructorInfo GetSpecialConstructor(Type type)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00189">BinarySerializer.cs:189</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_af6fe4270065e0524f5676d196119f154"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Deveel.Data.Serialization.BinarySerializer.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00030">BinarySerializer.cs:30</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a185280513049bf8a972cd320b148f039"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">object Deveel.Data.Serialization.BinarySerializer.Deserialize </td>
          <td>(</td>
          <td class="paramtype">Stream&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>graphType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00032">32</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                                                                 {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            <span class="keywordflow">if</span> (stream == null)</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;stream&quot;</span>);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <span class="keywordflow">if</span> (!stream.CanRead)</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<span class="stringliteral">&quot;The input stream cannot be read.&quot;</span>, <span class="stringliteral">&quot;stream&quot;</span>);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            var reader = <span class="keyword">new</span> BinaryReader(stream, <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a>);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a185280513049bf8a972cd320b148f039">Deserialize</a>(reader, graphType);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a185280513049bf8a972cd320b148f039"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a185280513049bf8a972cd320b148f039">Deveel.Data.Serialization.BinarySerializer.Deserialize</a></div><div class="ttdeci">object Deserialize(Stream stream, Type graphType)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00032">BinarySerializer.cs:32</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_af6fe4270065e0524f5676d196119f154"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Deveel.Data.Serialization.BinarySerializer.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00030">BinarySerializer.cs:30</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af03f36942d6f2042526b6ae2c09b568c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">object Deveel.Data.Serialization.BinarySerializer.Deserialize </td>
          <td>(</td>
          <td class="paramtype">BinaryReader&#160;</td>
          <td class="paramname"><em>reader</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>graphType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00042">42</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                                                                       {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="keywordflow">if</span> (reader == null)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;reader&quot;</span>);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            <span class="keywordflow">if</span> (graphType == null)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;graphType&quot;</span>);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            <span class="keywordflow">if</span> (!Attribute.IsDefined(graphType, typeof (<a class="code" href="classSystem_1_1SerializableAttribute.htm">SerializableAttribute</a>)))</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;The type &#39;{0}&#39; is not marked as serializable.&quot;</span>, graphType));</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keywordflow">if</span> (typeof (ISerializable).IsAssignableFrom(graphType))</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#abededce28b8165099af672f0908bb7c8">CustomDeserialize</a>(reader, graphType);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a992cee1c08f62ffcd5d444351629d76a">DeserializeType</a>(reader, graphType);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_abededce28b8165099af672f0908bb7c8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#abededce28b8165099af672f0908bb7c8">Deveel.Data.Serialization.BinarySerializer.CustomDeserialize</a></div><div class="ttdeci">object CustomDeserialize(BinaryReader reader, Type graphType)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00106">BinarySerializer.cs:106</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a992cee1c08f62ffcd5d444351629d76a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a992cee1c08f62ffcd5d444351629d76a">Deveel.Data.Serialization.BinarySerializer.DeserializeType</a></div><div class="ttdeci">object DeserializeType(BinaryReader reader, Type graphType)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00057">BinarySerializer.cs:57</a></div></div>
<div class="ttc" id="classSystem_1_1SerializableAttribute_htm"><div class="ttname"><a href="classSystem_1_1SerializableAttribute.htm">System.SerializableAttribute</a></div><div class="ttdef"><b>Definition:</b> <a href="SerializableAttribute_8cs_source.htm#l00005">SerializableAttribute.cs:5</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a992cee1c08f62ffcd5d444351629d76a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">object Deveel.Data.Serialization.BinarySerializer.DeserializeType </td>
          <td>(</td>
          <td class="paramtype">BinaryReader&#160;</td>
          <td class="paramname"><em>reader</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>graphType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00057">57</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                                                            {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            var ctor = <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a6a3498d728349e27a4c55f407da18a33">GetDefaultConstructor</a>(graphType);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <span class="keywordflow">if</span> (ctor == null)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;The type &#39;{0}&#39; does not specify any default empty constructor.&quot;</span>, graphType));</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            var fields = graphType.GetFields(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                .Where(member =&gt; !member.IsDefined(typeof (<a class="code" href="classSystem_1_1NonSerializedAttribute.htm">NonSerializedAttribute</a>), <span class="keyword">false</span>));</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            var properties = graphType.GetProperties(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                .Where(member =&gt; member.CanWrite &amp;&amp; !member.IsDefined(typeof (<a class="code" href="classSystem_1_1NonSerializedAttribute.htm">NonSerializedAttribute</a>), <span class="keyword">false</span>));</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            var members = <span class="keyword">new</span> List&lt;MemberInfo&gt;();</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            members.AddRange(fields.Cast&lt;MemberInfo&gt;());</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            members.AddRange(properties.Cast&lt;MemberInfo&gt;());</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            var values = <span class="keyword">new</span> Dictionary&lt;string, object&gt;();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a81db27038bfeb8b2a3ec5f75c3233fa7">ReadValues</a>(reader, <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a>, values);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            var obj = ctor.Invoke(<span class="keyword">new</span> <span class="keywordtype">object</span>[0]);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <span class="keywordflow">foreach</span> (var member <span class="keywordflow">in</span> members) {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                var memberName = member.Name;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                <span class="keywordtype">object</span> value;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="keywordflow">if</span> (values.TryGetValue(memberName, out value)) {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                    <span class="comment">// TODO: convert the source value to the destination value...</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                    <span class="keywordflow">if</span> (member is PropertyInfo) {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                        var <span class="keyword">property</span> = (PropertyInfo) member;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                        <span class="keyword">property</span>.SetValue(obj, value, null);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (member is FieldInfo) {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                        var field = (FieldInfo) member;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                        field.SetValue(obj, value);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                    }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keywordflow">return</span> obj;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a81db27038bfeb8b2a3ec5f75c3233fa7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a81db27038bfeb8b2a3ec5f75c3233fa7">Deveel.Data.Serialization.BinarySerializer.ReadValues</a></div><div class="ttdeci">static void ReadValues(BinaryReader reader, Encoding encoding, IDictionary&lt; string, object &gt; values)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00119">BinarySerializer.cs:119</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a6a3498d728349e27a4c55f407da18a33"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a6a3498d728349e27a4c55f407da18a33">Deveel.Data.Serialization.BinarySerializer.GetDefaultConstructor</a></div><div class="ttdeci">ConstructorInfo GetDefaultConstructor(Type type)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00096">BinarySerializer.cs:96</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_af6fe4270065e0524f5676d196119f154"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Deveel.Data.Serialization.BinarySerializer.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00030">BinarySerializer.cs:30</a></div></div>
<div class="ttc" id="classSystem_1_1NonSerializedAttribute_htm"><div class="ttname"><a href="classSystem_1_1NonSerializedAttribute.htm">System.NonSerializedAttribute</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00005">NonSerializedAttribute.cs:5</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6a3498d728349e27a4c55f407da18a33"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ConstructorInfo Deveel.Data.Serialization.BinarySerializer.GetDefaultConstructor </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00096">96</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                                                                 {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            var ctors = type.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">foreach</span> (var ctor <span class="keywordflow">in</span> ctors) {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                <span class="keywordflow">if</span> (ctor.GetParameters().Length == 0)</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                    <span class="keywordflow">return</span> ctor;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab9946db73e2197a90c1142fe89df94f7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Serialization.BinarySerializer.GetObjectValues </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>objType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">object&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a>&#160;</td>
          <td class="paramname"><em>graph</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00233">233</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                                                                                           {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            var fields = objType.GetFields(BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public)</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                .Where(x =&gt; !x.IsDefined(typeof (<a class="code" href="classSystem_1_1NonSerializedAttribute.htm">NonSerializedAttribute</a>), <span class="keyword">false</span>) &amp;&amp; !x.Name.EndsWith(<span class="stringliteral">&quot;_BackingField&quot;</span>));</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            var properties = objType.GetProperties(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                .Where(x =&gt; !x.IsDefined(typeof (<a class="code" href="classSystem_1_1NonSerializedAttribute.htm">NonSerializedAttribute</a>), <span class="keyword">false</span>) &amp;&amp; x.CanRead);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            var members = <span class="keyword">new</span> List&lt;MemberInfo&gt;();</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            members.AddRange(fields.Cast&lt;MemberInfo&gt;());</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            members.AddRange(properties.Cast&lt;MemberInfo&gt;());</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            <span class="keywordflow">foreach</span> (var member <span class="keywordflow">in</span> members) {</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                var memberName = member.Name;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a> memberType;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                <span class="keywordtype">object</span> value;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                <span class="keywordflow">if</span> (member is FieldInfo) {</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                    value = ((FieldInfo) member).GetValue(obj);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                    memberType = ((FieldInfo) member).FieldType;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (member is PropertyInfo) {</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                    value = ((PropertyInfo) member).GetValue(obj, null);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                    memberType = ((PropertyInfo) member).PropertyType;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                }</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                graph.SetValue(memberName, memberType, value);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm_a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Deveel.Data.Sql.DbObjectType.Type</a></div><div class="ttdoc">A user-defined TYPE that holds complex objects in a database column. </div></div>
<div class="ttc" id="classSystem_1_1NonSerializedAttribute_htm"><div class="ttname"><a href="classSystem_1_1NonSerializedAttribute.htm">System.NonSerializedAttribute</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00005">NonSerializedAttribute.cs:5</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="afe206cf110e8745c2d5c86dab10d657d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ConstructorInfo Deveel.Data.Serialization.BinarySerializer.GetSpecialConstructor </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00189">189</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                                                                 {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            var ctors = type.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordflow">foreach</span> (var ctor <span class="keywordflow">in</span> ctors) {</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                var paramTypes = ctor.GetParameters().Select(x =&gt; x.ParameterType).ToArray();</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                <span class="keywordflow">if</span> (paramTypes.Length == 1 &amp;&amp; paramTypes[0] == typeof(ObjectData))</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                    <span class="keywordflow">return</span> ctor;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            }</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a26972a1f7378a72c3dbf46683a4d6c6d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static byte Deveel.Data.Serialization.BinarySerializer.GetTypeCode </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00290">290</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                                    {</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            <span class="keywordflow">if</span> (type.IsArray)</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aec97dd85e516ab54a829af8564cd4efd">ArrayType</a>;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            <span class="keywordflow">if</span> (type.IsPrimitive) {</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                <span class="keywordflow">if</span> (type == typeof(<span class="keywordtype">bool</span>))</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                    <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a258a08adf4ef8a3b7783d19aa37de0d7">BooleanType</a>;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                <span class="keywordflow">if</span> (type == typeof(byte))</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                    <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#ad576ea35c765444ab8cdee7218c92d41">ByteType</a>;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                <span class="keywordflow">if</span> (type == typeof(<span class="keywordtype">short</span>))</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                    <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a5521047d65f7c58effa1178b4a059d1c">Int16Type</a>;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                <span class="keywordflow">if</span> (type == typeof(<span class="keywordtype">int</span>))</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                    <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a1278bac9bc0575b952092f0990889086">Int32Type</a>;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                <span class="keywordflow">if</span> (type == typeof(<span class="keywordtype">long</span>))</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                    <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aa86663ec56778a90b05d8b1a79c9d81a">Int64Type</a>;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                <span class="keywordflow">if</span> (type == typeof(<span class="keywordtype">float</span>))</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                    <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a43e4f7864798824360a8645e98ccf843">SingleType</a>;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                <span class="keywordflow">if</span> (type == typeof(<span class="keywordtype">double</span>))</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                    <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a73527d49577414735b9306f3a5ae157b">DoubleType</a>;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            }</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            <span class="keywordflow">if</span> (type == typeof (<span class="keywordtype">string</span>))</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a8601d3ceb5498a56f0916049246ebe6b">StringType</a>;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            <span class="keywordflow">if</span> (Attribute.IsDefined(type, typeof(<a class="code" href="classSystem_1_1SerializableAttribute.htm">SerializableAttribute</a>)))</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a29694f9aa10f561e8b71edf9f6b224a8">ObjectType</a>;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_ad576ea35c765444ab8cdee7218c92d41"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#ad576ea35c765444ab8cdee7218c92d41">Deveel.Data.Serialization.BinarySerializer.ByteType</a></div><div class="ttdeci">const byte ByteType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00280">BinarySerializer.cs:280</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_aa86663ec56778a90b05d8b1a79c9d81a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aa86663ec56778a90b05d8b1a79c9d81a">Deveel.Data.Serialization.BinarySerializer.Int64Type</a></div><div class="ttdeci">const byte Int64Type</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00283">BinarySerializer.cs:283</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a8601d3ceb5498a56f0916049246ebe6b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a8601d3ceb5498a56f0916049246ebe6b">Deveel.Data.Serialization.BinarySerializer.StringType</a></div><div class="ttdeci">const byte StringType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00286">BinarySerializer.cs:286</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a29694f9aa10f561e8b71edf9f6b224a8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a29694f9aa10f561e8b71edf9f6b224a8">Deveel.Data.Serialization.BinarySerializer.ObjectType</a></div><div class="ttdeci">const byte ObjectType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00287">BinarySerializer.cs:287</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a5521047d65f7c58effa1178b4a059d1c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a5521047d65f7c58effa1178b4a059d1c">Deveel.Data.Serialization.BinarySerializer.Int16Type</a></div><div class="ttdeci">const byte Int16Type</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00281">BinarySerializer.cs:281</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a43e4f7864798824360a8645e98ccf843"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a43e4f7864798824360a8645e98ccf843">Deveel.Data.Serialization.BinarySerializer.SingleType</a></div><div class="ttdeci">const byte SingleType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00284">BinarySerializer.cs:284</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a258a08adf4ef8a3b7783d19aa37de0d7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a258a08adf4ef8a3b7783d19aa37de0d7">Deveel.Data.Serialization.BinarySerializer.BooleanType</a></div><div class="ttdeci">const byte BooleanType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00279">BinarySerializer.cs:279</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a73527d49577414735b9306f3a5ae157b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a73527d49577414735b9306f3a5ae157b">Deveel.Data.Serialization.BinarySerializer.DoubleType</a></div><div class="ttdeci">const byte DoubleType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00285">BinarySerializer.cs:285</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_aec97dd85e516ab54a829af8564cd4efd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aec97dd85e516ab54a829af8564cd4efd">Deveel.Data.Serialization.BinarySerializer.ArrayType</a></div><div class="ttdeci">const byte ArrayType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00288">BinarySerializer.cs:288</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a1278bac9bc0575b952092f0990889086"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a1278bac9bc0575b952092f0990889086">Deveel.Data.Serialization.BinarySerializer.Int32Type</a></div><div class="ttdeci">const byte Int32Type</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00282">BinarySerializer.cs:282</a></div></div>
<div class="ttc" id="classSystem_1_1SerializableAttribute_htm"><div class="ttname"><a href="classSystem_1_1SerializableAttribute.htm">System.SerializableAttribute</a></div><div class="ttdef"><b>Definition:</b> <a href="SerializableAttribute_8cs_source.htm#l00005">SerializableAttribute.cs:5</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a5f87151efb9c10dcb01560644eaf40bc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static Array Deveel.Data.Serialization.BinarySerializer.ReadArray </td>
          <td>(</td>
          <td class="paramtype">BinaryReader&#160;</td>
          <td class="paramname"><em>reader</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a>&#160;</td>
          <td class="paramname"><em>encoding</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00178">178</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                                                                               {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            var objType = <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a3822d08175284bdfc6272a3f5b19ffb9">ReadType</a>(reader);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            var arrayLength = reader.ReadInt32();</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            var array = <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Array</a>.CreateInstance(objType, arrayLength);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; arrayLength; i++) {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                array.SetValue(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a5cfb9364ac299d2d47c988337bada5b3">ReadValue</a>(reader, encoding), i);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            }</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <span class="keywordflow">return</span> array;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a3822d08175284bdfc6272a3f5b19ffb9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a3822d08175284bdfc6272a3f5b19ffb9">Deveel.Data.Serialization.BinarySerializer.ReadType</a></div><div class="ttdeci">static Type ReadType(BinaryReader reader)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00164">BinarySerializer.cs:164</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a5cfb9364ac299d2d47c988337bada5b3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a5cfb9364ac299d2d47c988337bada5b3">Deveel.Data.Serialization.BinarySerializer.ReadValue</a></div><div class="ttdeci">static object ReadValue(BinaryReader reader, Encoding encoding)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00133">BinarySerializer.cs:133</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Deveel.Data.Types.SqlTypeCode.Array</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aee43a4aee17842650ef352720cea5fff"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static object Deveel.Data.Serialization.BinarySerializer.ReadObject </td>
          <td>(</td>
          <td class="paramtype">BinaryReader&#160;</td>
          <td class="paramname"><em>reader</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a>&#160;</td>
          <td class="paramname"><em>encoding</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00169">169</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                                                                                 {</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            var objType = <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a3822d08175284bdfc6272a3f5b19ffb9">ReadType</a>(reader);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            var serializer = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#ad15573d07ef3eb6afb9d8e3839a2469f">BinarySerializer</a> {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a> = encoding</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            };</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordflow">return</span> serializer.Deserialize(reader, objType);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a3822d08175284bdfc6272a3f5b19ffb9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a3822d08175284bdfc6272a3f5b19ffb9">Deveel.Data.Serialization.BinarySerializer.ReadType</a></div><div class="ttdeci">static Type ReadType(BinaryReader reader)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00164">BinarySerializer.cs:164</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_af6fe4270065e0524f5676d196119f154"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Deveel.Data.Serialization.BinarySerializer.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00030">BinarySerializer.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_ad15573d07ef3eb6afb9d8e3839a2469f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#ad15573d07ef3eb6afb9d8e3839a2469f">Deveel.Data.Serialization.BinarySerializer.BinarySerializer</a></div><div class="ttdeci">BinarySerializer()</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00026">BinarySerializer.cs:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a3822d08175284bdfc6272a3f5b19ffb9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static Type Deveel.Data.Serialization.BinarySerializer.ReadType </td>
          <td>(</td>
          <td class="paramtype">BinaryReader&#160;</td>
          <td class="paramname"><em>reader</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00164">164</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                                          {</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            var typeString = reader.ReadString();</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>.GetType(typeString, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm_a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa1fa27779242b4902f7ae3bdd5c6d508">Deveel.Data.Sql.DbObjectType.Type</a></div><div class="ttdoc">A user-defined TYPE that holds complex objects in a database column. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a5cfb9364ac299d2d47c988337bada5b3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static object Deveel.Data.Serialization.BinarySerializer.ReadValue </td>
          <td>(</td>
          <td class="paramtype">BinaryReader&#160;</td>
          <td class="paramname"><em>reader</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a>&#160;</td>
          <td class="paramname"><em>encoding</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00133">133</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                                                                                {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            var typeCode = reader.ReadByte();</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            var nullCheck = reader.ReadBoolean();</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="keywordflow">if</span> (nullCheck)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a258a08adf4ef8a3b7783d19aa37de0d7">BooleanType</a>)</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <span class="keywordflow">return</span> reader.ReadBoolean();</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#ad576ea35c765444ab8cdee7218c92d41">ByteType</a>)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                <span class="keywordflow">return</span> reader.ReadByte();</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a5521047d65f7c58effa1178b4a059d1c">Int16Type</a>)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                <span class="keywordflow">return</span> reader.ReadInt16();</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a1278bac9bc0575b952092f0990889086">Int32Type</a>)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                <span class="keywordflow">return</span> reader.ReadInt32();</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aa86663ec56778a90b05d8b1a79c9d81a">Int64Type</a>)</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                <span class="keywordflow">return</span> reader.ReadInt64();</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a43e4f7864798824360a8645e98ccf843">SingleType</a>)</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <span class="keywordflow">return</span> reader.ReadSingle();</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a73527d49577414735b9306f3a5ae157b">DoubleType</a>)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                <span class="keywordflow">return</span> reader.ReadDouble();</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a8601d3ceb5498a56f0916049246ebe6b">StringType</a>)</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <span class="keywordflow">return</span> reader.ReadString();</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a29694f9aa10f561e8b71edf9f6b224a8">ObjectType</a>)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aee43a4aee17842650ef352720cea5fff">ReadObject</a>(reader, encoding);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aec97dd85e516ab54a829af8564cd4efd">ArrayType</a>)</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a5f87151efb9c10dcb01560644eaf40bc">ReadArray</a>(reader, encoding);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<span class="stringliteral">&quot;Invalid type code in serialization graph&quot;</span>);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a5f87151efb9c10dcb01560644eaf40bc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a5f87151efb9c10dcb01560644eaf40bc">Deveel.Data.Serialization.BinarySerializer.ReadArray</a></div><div class="ttdeci">static Array ReadArray(BinaryReader reader, Encoding encoding)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00178">BinarySerializer.cs:178</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_ad576ea35c765444ab8cdee7218c92d41"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#ad576ea35c765444ab8cdee7218c92d41">Deveel.Data.Serialization.BinarySerializer.ByteType</a></div><div class="ttdeci">const byte ByteType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00280">BinarySerializer.cs:280</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_aa86663ec56778a90b05d8b1a79c9d81a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aa86663ec56778a90b05d8b1a79c9d81a">Deveel.Data.Serialization.BinarySerializer.Int64Type</a></div><div class="ttdeci">const byte Int64Type</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00283">BinarySerializer.cs:283</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a8601d3ceb5498a56f0916049246ebe6b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a8601d3ceb5498a56f0916049246ebe6b">Deveel.Data.Serialization.BinarySerializer.StringType</a></div><div class="ttdeci">const byte StringType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00286">BinarySerializer.cs:286</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_aee43a4aee17842650ef352720cea5fff"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aee43a4aee17842650ef352720cea5fff">Deveel.Data.Serialization.BinarySerializer.ReadObject</a></div><div class="ttdeci">static object ReadObject(BinaryReader reader, Encoding encoding)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00169">BinarySerializer.cs:169</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a29694f9aa10f561e8b71edf9f6b224a8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a29694f9aa10f561e8b71edf9f6b224a8">Deveel.Data.Serialization.BinarySerializer.ObjectType</a></div><div class="ttdeci">const byte ObjectType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00287">BinarySerializer.cs:287</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a5521047d65f7c58effa1178b4a059d1c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a5521047d65f7c58effa1178b4a059d1c">Deveel.Data.Serialization.BinarySerializer.Int16Type</a></div><div class="ttdeci">const byte Int16Type</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00281">BinarySerializer.cs:281</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a43e4f7864798824360a8645e98ccf843"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a43e4f7864798824360a8645e98ccf843">Deveel.Data.Serialization.BinarySerializer.SingleType</a></div><div class="ttdeci">const byte SingleType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00284">BinarySerializer.cs:284</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a258a08adf4ef8a3b7783d19aa37de0d7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a258a08adf4ef8a3b7783d19aa37de0d7">Deveel.Data.Serialization.BinarySerializer.BooleanType</a></div><div class="ttdeci">const byte BooleanType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00279">BinarySerializer.cs:279</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a73527d49577414735b9306f3a5ae157b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a73527d49577414735b9306f3a5ae157b">Deveel.Data.Serialization.BinarySerializer.DoubleType</a></div><div class="ttdeci">const byte DoubleType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00285">BinarySerializer.cs:285</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_aec97dd85e516ab54a829af8564cd4efd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aec97dd85e516ab54a829af8564cd4efd">Deveel.Data.Serialization.BinarySerializer.ArrayType</a></div><div class="ttdeci">const byte ArrayType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00288">BinarySerializer.cs:288</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a1278bac9bc0575b952092f0990889086"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a1278bac9bc0575b952092f0990889086">Deveel.Data.Serialization.BinarySerializer.Int32Type</a></div><div class="ttdeci">const byte Int32Type</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00282">BinarySerializer.cs:282</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a81db27038bfeb8b2a3ec5f75c3233fa7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Serialization.BinarySerializer.ReadValues </td>
          <td>(</td>
          <td class="paramtype">BinaryReader&#160;</td>
          <td class="paramname"><em>reader</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a>&#160;</td>
          <td class="paramname"><em>encoding</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IDictionary&lt; string, object &gt;&#160;</td>
          <td class="paramname"><em>values</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00119">119</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                                                                                                                   {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="keywordtype">int</span> count = reader.ReadInt32();</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; count; i++) {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                var keyLen = reader.ReadInt32();</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                var keyChars = reader.ReadChars(keyLen);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                var key = <span class="keyword">new</span> string(keyChars);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                var value = <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a5cfb9364ac299d2d47c988337bada5b3">ReadValue</a>(reader, encoding);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                values[key] = value;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a5cfb9364ac299d2d47c988337bada5b3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a5cfb9364ac299d2d47c988337bada5b3">Deveel.Data.Serialization.BinarySerializer.ReadValue</a></div><div class="ttdeci">static object ReadValue(BinaryReader reader, Encoding encoding)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00133">BinarySerializer.cs:133</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a8cacf7edeff7417eb44cd8378e6a3a58"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Serialization.BinarySerializer.Serialize </td>
          <td>(</td>
          <td class="paramtype">Stream&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">object&#160;</td>
          <td class="paramname"><em>obj</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00200">200</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                                                         {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            <span class="keywordflow">if</span> (stream == null)</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;stream&quot;</span>);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="keywordflow">if</span> (!stream.CanWrite)</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<span class="stringliteral">&quot;The serialization stream is not writeable.&quot;</span>);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            var writer = <span class="keyword">new</span> BinaryWriter(stream, <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a>);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a8cacf7edeff7417eb44cd8378e6a3a58">Serialize</a>(writer, obj);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a8cacf7edeff7417eb44cd8378e6a3a58"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a8cacf7edeff7417eb44cd8378e6a3a58">Deveel.Data.Serialization.BinarySerializer.Serialize</a></div><div class="ttdeci">void Serialize(Stream stream, object obj)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00200">BinarySerializer.cs:200</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_af6fe4270065e0524f5676d196119f154"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Deveel.Data.Serialization.BinarySerializer.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00030">BinarySerializer.cs:30</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a7924736ce6dc3e9d7834862adfb7339b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Deveel.Data.Serialization.BinarySerializer.Serialize </td>
          <td>(</td>
          <td class="paramtype">BinaryWriter&#160;</td>
          <td class="paramname"><em>writer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">object&#160;</td>
          <td class="paramname"><em>obj</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00211">211</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                                                               {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            <span class="keywordflow">if</span> (writer == null)</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;writer&quot;</span>);</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <span class="keywordflow">if</span> (obj == null)</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;obj&quot;</span>);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            var objType = obj.GetType();</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="keywordflow">if</span> (!Attribute.IsDefined(objType, typeof(<a class="code" href="classSystem_1_1SerializableAttribute.htm">SerializableAttribute</a>)))</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;The type &#39;{0} is not serializable&quot;</span>, objType.FullName));</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            var graph = <span class="keyword">new</span> SerializeData(objType);</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <span class="keywordflow">if</span> (typeof (ISerializable).IsAssignableFrom(objType)) {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                ((ISerializable) obj).GetData(graph);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#ab9946db73e2197a90c1142fe89df94f7">GetObjectValues</a>(objType, obj, graph);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            }</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a0df53d799ce0e862ca8cf9f5588cd58e">SerializeGraph</a>(writer, <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a>, graph);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_af6fe4270065e0524f5676d196119f154"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Deveel.Data.Serialization.BinarySerializer.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00030">BinarySerializer.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_ab9946db73e2197a90c1142fe89df94f7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#ab9946db73e2197a90c1142fe89df94f7">Deveel.Data.Serialization.BinarySerializer.GetObjectValues</a></div><div class="ttdeci">static void GetObjectValues(Type objType, object obj, SerializeData graph)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00233">BinarySerializer.cs:233</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a0df53d799ce0e862ca8cf9f5588cd58e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a0df53d799ce0e862ca8cf9f5588cd58e">Deveel.Data.Serialization.BinarySerializer.SerializeGraph</a></div><div class="ttdeci">static void SerializeGraph(BinaryWriter writer, Encoding encoding, SerializeData graph)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00262">BinarySerializer.cs:262</a></div></div>
<div class="ttc" id="classSystem_1_1SerializableAttribute_htm"><div class="ttname"><a href="classSystem_1_1SerializableAttribute.htm">System.SerializableAttribute</a></div><div class="ttdef"><b>Definition:</b> <a href="SerializableAttribute_8cs_source.htm#l00005">SerializableAttribute.cs:5</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0df53d799ce0e862ca8cf9f5588cd58e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Serialization.BinarySerializer.SerializeGraph </td>
          <td>(</td>
          <td class="paramtype">BinaryWriter&#160;</td>
          <td class="paramname"><em>writer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a>&#160;</td>
          <td class="paramname"><em>encoding</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a>&#160;</td>
          <td class="paramname"><em>graph</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00262">262</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                                                                                                        {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;            var values = graph.Values.ToDictionary(x =&gt; x.Key, x =&gt; x.Value);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            var count = values.Count;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            writer.Write(count);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            <span class="keywordflow">foreach</span> (var pair <span class="keywordflow">in</span> values) {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                var key = pair.Key;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                var keyLength = key.Length;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                writer.Write(keyLength);</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                writer.Write(key.ToCharArray());</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a79cf28d5c92c060f91661a4f4c8661b8">SerializeValue</a>(writer, encoding, pair.Value.Key, pair.Value.Value);</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            }</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a79cf28d5c92c060f91661a4f4c8661b8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a79cf28d5c92c060f91661a4f4c8661b8">Deveel.Data.Serialization.BinarySerializer.SerializeValue</a></div><div class="ttdeci">static void SerializeValue(BinaryWriter writer, Encoding encoding, Type type, object value)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00320">BinarySerializer.cs:320</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a79cf28d5c92c060f91661a4f4c8661b8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Serialization.BinarySerializer.SerializeValue </td>
          <td>(</td>
          <td class="paramtype">BinaryWriter&#160;</td>
          <td class="paramname"><em>writer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a>&#160;</td>
          <td class="paramname"><em>encoding</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">object&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00320">320</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                                                                                                            {</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            var typeCode = <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a26972a1f7378a72c3dbf46683a4d6c6d">GetTypeCode</a>(type);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            <span class="keywordflow">if</span> (typeCode == null)</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;The type &#39;{0}&#39; is not supported.&quot;</span>, type));</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            var nullCheck = value == null;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            writer.Write(typeCode.Value);</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            writer.Write(nullCheck);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            <span class="keywordflow">if</span> (value == null)</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aec97dd85e516ab54a829af8564cd4efd">ArrayType</a>) {</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                var typeString = type.GetElementType().FullName;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                writer.Write(typeString);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                var array = (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Array</a>) value;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                var arrayLength = array.Length;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                var arrayType = type.GetElementType();</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                writer.Write(arrayLength);</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; arrayLength; i++) {</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                    var element = array.GetValue(i);</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a79cf28d5c92c060f91661a4f4c8661b8">SerializeValue</a>(writer, encoding, arrayType, element);</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                }</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a29694f9aa10f561e8b71edf9f6b224a8">ObjectType</a>) {</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                var realType = value.GetType();</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                writer.Write(realType.FullName);</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                var serializer = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#ad15573d07ef3eb6afb9d8e3839a2469f">BinarySerializer</a> {<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Encoding</a> = encoding};</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                serializer.Serialize(writer, value);</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a258a08adf4ef8a3b7783d19aa37de0d7">BooleanType</a>) {</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                writer.Write((<span class="keywordtype">bool</span>) value);</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#ad576ea35c765444ab8cdee7218c92d41">ByteType</a>) {</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                writer.Write((byte) value);</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a5521047d65f7c58effa1178b4a059d1c">Int16Type</a>) {</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                writer.Write((<span class="keywordtype">short</span>) value);</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a1278bac9bc0575b952092f0990889086">Int32Type</a>) {</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                writer.Write((<span class="keywordtype">int</span>) value);</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aa86663ec56778a90b05d8b1a79c9d81a">Int64Type</a>) {</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                writer.Write((<span class="keywordtype">long</span>) value);</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a43e4f7864798824360a8645e98ccf843">SingleType</a>) {</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                writer.Write((<span class="keywordtype">float</span>) value);</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a73527d49577414735b9306f3a5ae157b">DoubleType</a>) {</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                writer.Write((<span class="keywordtype">double</span>) value);</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (typeCode == <a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a8601d3ceb5498a56f0916049246ebe6b">StringType</a>) {</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                writer.Write((<span class="keywordtype">string</span>) value);</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            }</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_ad576ea35c765444ab8cdee7218c92d41"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#ad576ea35c765444ab8cdee7218c92d41">Deveel.Data.Serialization.BinarySerializer.ByteType</a></div><div class="ttdeci">const byte ByteType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00280">BinarySerializer.cs:280</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_aa86663ec56778a90b05d8b1a79c9d81a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aa86663ec56778a90b05d8b1a79c9d81a">Deveel.Data.Serialization.BinarySerializer.Int64Type</a></div><div class="ttdeci">const byte Int64Type</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00283">BinarySerializer.cs:283</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a8601d3ceb5498a56f0916049246ebe6b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a8601d3ceb5498a56f0916049246ebe6b">Deveel.Data.Serialization.BinarySerializer.StringType</a></div><div class="ttdeci">const byte StringType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00286">BinarySerializer.cs:286</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a79cf28d5c92c060f91661a4f4c8661b8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a79cf28d5c92c060f91661a4f4c8661b8">Deveel.Data.Serialization.BinarySerializer.SerializeValue</a></div><div class="ttdeci">static void SerializeValue(BinaryWriter writer, Encoding encoding, Type type, object value)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00320">BinarySerializer.cs:320</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_af6fe4270065e0524f5676d196119f154"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#af6fe4270065e0524f5676d196119f154">Deveel.Data.Serialization.BinarySerializer.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00030">BinarySerializer.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a29694f9aa10f561e8b71edf9f6b224a8"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a29694f9aa10f561e8b71edf9f6b224a8">Deveel.Data.Serialization.BinarySerializer.ObjectType</a></div><div class="ttdeci">const byte ObjectType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00287">BinarySerializer.cs:287</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a26972a1f7378a72c3dbf46683a4d6c6d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a26972a1f7378a72c3dbf46683a4d6c6d">Deveel.Data.Serialization.BinarySerializer.GetTypeCode</a></div><div class="ttdeci">static byte GetTypeCode(Type type)</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00290">BinarySerializer.cs:290</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a5521047d65f7c58effa1178b4a059d1c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a5521047d65f7c58effa1178b4a059d1c">Deveel.Data.Serialization.BinarySerializer.Int16Type</a></div><div class="ttdeci">const byte Int16Type</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00281">BinarySerializer.cs:281</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Deveel.Data.Types.SqlTypeCode.Array</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a43e4f7864798824360a8645e98ccf843"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a43e4f7864798824360a8645e98ccf843">Deveel.Data.Serialization.BinarySerializer.SingleType</a></div><div class="ttdeci">const byte SingleType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00284">BinarySerializer.cs:284</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a258a08adf4ef8a3b7783d19aa37de0d7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a258a08adf4ef8a3b7783d19aa37de0d7">Deveel.Data.Serialization.BinarySerializer.BooleanType</a></div><div class="ttdeci">const byte BooleanType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00279">BinarySerializer.cs:279</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a73527d49577414735b9306f3a5ae157b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a73527d49577414735b9306f3a5ae157b">Deveel.Data.Serialization.BinarySerializer.DoubleType</a></div><div class="ttdeci">const byte DoubleType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00285">BinarySerializer.cs:285</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_aec97dd85e516ab54a829af8564cd4efd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#aec97dd85e516ab54a829af8564cd4efd">Deveel.Data.Serialization.BinarySerializer.ArrayType</a></div><div class="ttdeci">const byte ArrayType</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00288">BinarySerializer.cs:288</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_ad15573d07ef3eb6afb9d8e3839a2469f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#ad15573d07ef3eb6afb9d8e3839a2469f">Deveel.Data.Serialization.BinarySerializer.BinarySerializer</a></div><div class="ttdeci">BinarySerializer()</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00026">BinarySerializer.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer_htm_a1278bac9bc0575b952092f0990889086"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1BinarySerializer.htm#a1278bac9bc0575b952092f0990889086">Deveel.Data.Serialization.BinarySerializer.Int32Type</a></div><div class="ttdeci">const byte Int32Type</div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00282">BinarySerializer.cs:282</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="aec97dd85e516ab54a829af8564cd4efd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const byte Deveel.Data.Serialization.BinarySerializer.ArrayType = 20</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00288">288</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a258a08adf4ef8a3b7783d19aa37de0d7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const byte Deveel.Data.Serialization.BinarySerializer.BooleanType = 1</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00279">279</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>

</div>
</div>
<a class="anchor" id="ad576ea35c765444ab8cdee7218c92d41"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const byte Deveel.Data.Serialization.BinarySerializer.ByteType = 2</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00280">280</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a73527d49577414735b9306f3a5ae157b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const byte Deveel.Data.Serialization.BinarySerializer.DoubleType = 7</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00285">285</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a5521047d65f7c58effa1178b4a059d1c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const byte Deveel.Data.Serialization.BinarySerializer.Int16Type = 3</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00281">281</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a1278bac9bc0575b952092f0990889086"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const byte Deveel.Data.Serialization.BinarySerializer.Int32Type = 4</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00282">282</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>

</div>
</div>
<a class="anchor" id="aa86663ec56778a90b05d8b1a79c9d81a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const byte Deveel.Data.Serialization.BinarySerializer.Int64Type = 5</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00283">283</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a29694f9aa10f561e8b71edf9f6b224a8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const byte Deveel.Data.Serialization.BinarySerializer.ObjectType = 15</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00287">287</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a43e4f7864798824360a8645e98ccf843"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const byte Deveel.Data.Serialization.BinarySerializer.SingleType = 6</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00284">284</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a8601d3ceb5498a56f0916049246ebe6b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const byte Deveel.Data.Serialization.BinarySerializer.StringType = 8</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00286">286</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>

</div>
</div>
<h2 class="groupheader">Property Documentation</h2>
<a class="anchor" id="af6fe4270065e0524f5676d196119f154"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Encoding Deveel.Data.Serialization.BinarySerializer.Encoding</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="BinarySerializer_8cs_source.htm#l00030">30</a> of file <a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Serialization/<a class="el" href="BinarySerializer_8cs_source.htm">BinarySerializer.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
