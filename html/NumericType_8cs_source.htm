<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Types/NumericType.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_19d3c7f6763b6fdf1f737cd3b1c149f6.htm">Deveel.Data.Types</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">NumericType.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="NumericType_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.IO;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Text;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Serialization.htm">Serialization</a>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm">Objects</a>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.Math;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Types {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    [<a class="code" href="namespaceDeveel_1_1Data_1_1Transactions.htm#a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b">Serializable</a>]</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm">   27</a></span>&#160;    <span class="keyword">public</span> sealed <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm">NumericType</a> : <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>, <a class="code" href="interfaceDeveel_1_1Data_1_1Types_1_1ISizeableType.htm">ISizeableType</a> {</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a97fdce9ecc1eb8d6b031b3d00e17759c">   28</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a97fdce9ecc1eb8d6b031b3d00e17759c">NumericType</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode, <span class="keywordtype">int</span> size, byte scale) </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            : base(<span class="stringliteral">&quot;NUMERIC&quot;</span>, typeCode) {</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            AssertIsNumeric(typeCode);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            Size = size;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            Scale = scale;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        }</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a986caa2c81a6cab0430a037e18890a72">   35</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a986caa2c81a6cab0430a037e18890a72">NumericType</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode)</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            : this(typeCode, -1) {</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        }</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#afca76beab2cc96ecff2d15ee90e07f52">   39</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#afca76beab2cc96ecff2d15ee90e07f52">NumericType</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode, <span class="keywordtype">int</span> size)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            : this(typeCode, size, 0) {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a460860c2c600503bd7ec40cda8c74596">   43</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a460860c2c600503bd7ec40cda8c74596">NumericType</a>(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">ObjectData</a> data)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            : base(data) {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            Size = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a1e267f2009bb7e9c0a35d707aa64e63a">GetInt32</a>(<span class="stringliteral">&quot;Size&quot;</span>);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            Scale = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a1c6522d2ec18af64478402734a00b986">GetByte</a>(<span class="stringliteral">&quot;Scale&quot;</span>);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a3c532fb9063f784553808e57ed0a2016">   49</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">int</span> Size { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a848a68768b5686d1cb561be75d664f1b">   51</a></span>&#160;        <span class="keyword">public</span> byte Scale { <span class="keyword">get</span>; <span class="keyword">private</span> set; }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#aa6746329e6ffe6768963d42500a56127">   53</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> IsStorable {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a21530bc5576627ceb9e8a6120ece6353">   57</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">override</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a21530bc5576627ceb9e8a6120ece6353">GetData</a>(<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a> data) {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;Size&quot;</span>, Size);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;Scale&quot;</span>, Scale);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a7c342187ac37f01ba0e562f6f30a1210">   62</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a7c342187ac37f01ba0e562f6f30a1210">Equals</a>(<span class="keywordtype">object</span> obj) {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            var other = obj as <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm">NumericType</a>;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordflow">if</span> (other == null)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="keywordflow">return</span> TypeCode == other.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> &amp;&amp;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                   Size == other.Size &amp;&amp;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                   Scale == other.Scale;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#afb868eb49269b2d80fc3b9c79cc364ab">   72</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> Type <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#afb868eb49269b2d80fc3b9c79cc364ab">GetObjectType</a>() {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="keywordflow">return</span> typeof(<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ae51d0736284c46385ec18aaf6f1ae8da">   76</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> Type <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ae51d0736284c46385ec18aaf6f1ae8da">GetRuntimeType</a>() {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            <span class="keywordflow">if</span> (TypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.TinyInt)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                <span class="keywordflow">return</span> typeof(byte);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            <span class="keywordflow">if</span> (TypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.SmallInt)</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="keywordflow">return</span> typeof(<span class="keywordtype">short</span>);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <span class="keywordflow">if</span> (TypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Integer)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                <span class="keywordflow">return</span> typeof(<span class="keywordtype">int</span>);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="keywordflow">if</span> (TypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.BigInt)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                <span class="keywordflow">return</span> typeof(<span class="keywordtype">long</span>);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">if</span> (TypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Float ||</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                TypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Real)</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                <span class="keywordflow">return</span> typeof(<span class="keywordtype">float</span>);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="keywordflow">if</span> (TypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Double)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                <span class="keywordflow">return</span> typeof(<span class="keywordtype">double</span>);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="keywordflow">if</span> (TypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Numeric ||</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                TypeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Decimal)</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                <span class="keywordflow">return</span> typeof(BigDecimal);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">return</span> base.GetRuntimeType();</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ac2ceb7d683e1491d1e1dc496672d49e2">   97</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ac2ceb7d683e1491d1e1dc496672d49e2">IsCacheable</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> value) {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">return</span> value is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> || value is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a305f45a0cede85702aec9d8e569419bd">  101</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a305f45a0cede85702aec9d8e569419bd">GetHashCode</a>() {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">return</span> (TypeCode.GetHashCode() * Scale) + Size.GetHashCode();</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#aff6b16207743803febd7575cc5874728">  105</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#aff6b16207743803febd7575cc5874728">AssertIsNumeric</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode) {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">if</span> (!IsNumericType(typeCode))</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;The type &#39;{0}&#39; is not a valid NUMERIC type.&quot;</span>, typeCode));</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a7d3dd45bbfef7546a2c6670b5f64bc46">  110</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a7d3dd45bbfef7546a2c6670b5f64bc46">GetIntSize</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> sqlType) {</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="keywordflow">switch</span> (sqlType) {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.TinyInt:</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                    <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.SmallInt:</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                    <span class="keywordflow">return</span> 2;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Integer:</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                    <span class="keywordflow">return</span> 4;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.BigInt:</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                    <span class="keywordflow">return</span> 8;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#afa92583cb897aaeda6228ac04c66f4c2">  126</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#afa92583cb897aaeda6228ac04c66f4c2">GetFloatSize</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> sqlType) {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">switch</span> (sqlType) {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Real:</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                    <span class="keywordflow">return</span> 4;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Float:</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Double:</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                    <span class="keywordflow">return</span> 8;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a96d18af2f636bd043c7bb42ec4380996">  138</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a96d18af2f636bd043c7bb42ec4380996">Wider</a>(<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> otherType) {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> t1SqlType = TypeCode;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> t2SqlType = otherType.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a>;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="keywordflow">if</span> (t1SqlType == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Decimal) {</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordflow">if</span> (t2SqlType == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Decimal) {</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                <span class="keywordflow">return</span> otherType;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            }</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="keywordflow">if</span> (t1SqlType == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Numeric) {</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordflow">if</span> (t2SqlType == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Numeric) {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <span class="keywordflow">return</span> otherType;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            <span class="keywordflow">if</span> (t1SqlType == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Bit) {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <span class="keywordflow">return</span> otherType; <span class="comment">// It can&#39;t be any smaller than a Bit</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            <span class="keywordflow">if</span> (t2SqlType == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Bit) {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keywordtype">int</span> t1IntSize = GetIntSize(t1SqlType);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="keywordtype">int</span> t2IntSize = GetIntSize(t2SqlType);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">if</span> (t1IntSize &gt; 0 &amp;&amp; t2IntSize &gt; 0) {</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <span class="comment">// Both are int types, use the largest size</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                <span class="keywordflow">return</span> (t1IntSize &gt; t2IntSize) ? <span class="keyword">this</span> : otherType;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keywordtype">int</span> t1FloatSize = GetFloatSize(t1SqlType);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keywordtype">int</span> t2FloatSize = GetFloatSize(t2SqlType);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <span class="keywordflow">if</span> (t1FloatSize &gt; 0 &amp;&amp; t2FloatSize &gt; 0) {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                <span class="comment">// Both are floating types, use the largest size</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <span class="keywordflow">return</span> (t1FloatSize &gt; t2FloatSize) ? <span class="keyword">this</span> : otherType;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordflow">if</span> (t1FloatSize &gt; t2IntSize) {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            }</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keywordflow">if</span> (t2FloatSize &gt; t1IntSize) {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                <span class="keywordflow">return</span> otherType;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            }</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keywordflow">if</span> (t1IntSize &gt;= t2FloatSize || t2IntSize &gt;= t1FloatSize) {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                <span class="comment">// Must be a long (8 bytes) and a real (4 bytes), widen to a double</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm">NumericType</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Double, 8, 0);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            }</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <span class="comment">// NOTREACHED - can&#39;t get here, the last three if statements cover</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="comment">// all possibilities.</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Widest type error.&quot;</span>);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ae22cb9f5d93c05b976fa8fa926225a0b">  191</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ae22cb9f5d93c05b976fa8fa926225a0b">IsComparable</a>(<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> type) {</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <span class="keywordflow">return</span> type is <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm">NumericType</a> || type is <a class="code" href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm">BooleanType</a>;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ada885ded2f6186f93433bba3219341b7">  195</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ada885ded2f6186f93433bba3219341b7">Compare</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> x, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> y) {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            var n1 = (<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>)x;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> n2;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">if</span> (y is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                n2 = (SqlNumber)y;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (y is <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>) {</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                n2 = (<a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>) y ? SqlNumber.One : SqlNumber.Zero;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            }</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <span class="keywordflow">return</span> n1.CompareTo(n2);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        }</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div>
<div class="line"><a name="l00210"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#abc1b87d3a35dd03decad4462222e6c6e">  210</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">static</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#abc1b87d3a35dd03decad4462222e6c6e">ToDate</a>(<span class="keywordtype">long</span> time) {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>(time);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a79c2fed0d247c37a9860160f85095891">  214</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a79c2fed0d247c37a9860160f85095891">CanCastTo</a>(<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> destType) {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keywordflow">return</span> destType.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> != <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Array &amp;&amp;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                   destType.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> != <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.ColumnType &amp;&amp;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                   destType.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> != <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.RowType &amp;&amp;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                   destType.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> != <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Object;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a82f6eaaf0d892343427f9fc7f27ade0a">  221</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a82f6eaaf0d892343427f9fc7f27ade0a">CastTo</a>(<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a> value, <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> destType) {</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            var n = (<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) value.<a class="code" href="classDeveel_1_1Data_1_1DataObject.htm#a4f960ccc928ed1ecd66d9b6c8de30a66">Value</a>;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            var sqlType = destType.<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a>;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> casted;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            switch (sqlType) {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Bit):</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Boolean):</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                    casted = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a>(n.ToBoolean());</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.TinyInt):</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.SmallInt):</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Integer):</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                    casted = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(n.ToInt32());</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.BigInt):</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                    casted = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(n.ToInt64());</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Float):</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Real):</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Double):</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                    <span class="keywordtype">double</span> d;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;                    <span class="keywordflow">if</span> (n.State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NotANumber) {</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;                        casted = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1ad909d38d705ce75386dd86e611a82f5b">Double</a>.NaN);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (n.State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.PositiveInfinity) {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                        casted = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1ad909d38d705ce75386dd86e611a82f5b">Double</a>.PositiveInfinity);</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (n.State == <a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">NumericState</a>.NegativeInfinity) {</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                        casted = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1ad909d38d705ce75386dd86e611a82f5b">Double</a>.NegativeInfinity);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                        casted = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(n.ToDouble());</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                    }</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Numeric):</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Decimal):</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                    casted = n;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Char):</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                    casted = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(n.ToString().PadRight(((<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm">StringType</a>) destType).MaxSize));</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.VarChar):</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarChar):</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.String):</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                    casted = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(n.ToString());</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Date):</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Time):</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.TimeStamp):</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                    casted = ToDate(n.ToInt64());</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Blob):</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Binary):</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.VarBinary):</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarBinary):</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                    casted = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBinary.htm">SqlBinary</a>(n.ToByteArray());</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Null):</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                    casted = <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Value</a>;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException();</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>(destType, casted);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        }</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div>
<div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a247e39e3b9a8d6f46cc0e70c7354c56f">  287</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">string</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a247e39e3b9a8d6f46cc0e70c7354c56f">ToString</a>() {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            var sb = <span class="keyword">new</span> StringBuilder(Name);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            <span class="keywordflow">if</span> (Size != -1) {</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                sb.Append(<span class="charliteral">&#39;(&#39;</span>);</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                sb.Append(Size);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                <span class="keywordflow">if</span> (Scale &gt; 0) {</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                    sb.Append(<span class="charliteral">&#39;,&#39;</span>);</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                    sb.Append(Scale);</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                }</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                sb.Append(<span class="charliteral">&#39;)&#39;</span>);</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;            }</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <span class="keywordflow">return</span> sb.ToString();</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        }</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div>
<div class="line"><a name="l00302"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ab733630c53de014a18b32c812465cc0f">  302</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">object</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ab733630c53de014a18b32c812465cc0f">ConvertTo</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> obj, Type destType) {</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <span class="keywordflow">if</span> (!(obj is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>))</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            var number = (SqlNumber)obj;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            <span class="keywordflow">if</span> (number.IsNull)</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;                <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            <span class="keywordflow">if</span> (destType == typeof(byte))</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                <span class="keywordflow">return</span> number.ToByte();</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            <span class="keywordflow">if</span> (destType == typeof(<span class="keywordtype">short</span>))</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                <span class="keywordflow">return</span> number.ToInt16();</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            <span class="keywordflow">if</span> (destType == typeof(<span class="keywordtype">int</span>))</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                <span class="keywordflow">return</span> number.ToInt32();</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <span class="keywordflow">if</span> (destType == typeof(<span class="keywordtype">long</span>))</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                <span class="keywordflow">return</span> number.ToInt64();</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <span class="keywordflow">if</span> (destType == typeof(<span class="keywordtype">float</span>))</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                <span class="keywordflow">return</span> number.ToSingle();</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            <span class="keywordflow">if</span> (destType == typeof(<span class="keywordtype">double</span>))</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                <span class="keywordflow">return</span> number.ToDouble();</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            <span class="keywordflow">if</span> (destType == typeof(<span class="keywordtype">bool</span>))</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                <span class="keywordflow">return</span> number.ToBoolean();</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            <span class="keywordflow">if</span> (destType == typeof(<span class="keywordtype">string</span>))</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                <span class="keywordflow">return</span> number.ToString();</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            <span class="keywordflow">return</span> base.ConvertTo(obj, destType);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        }</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div>
<div class="line"><a name="l00332"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a4cb35a41b2db3cc376431f4ada759077">  332</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a4cb35a41b2db3cc376431f4ada759077">Add</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b) {</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            <span class="keywordflow">if</span> (!(a is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>))</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            <span class="keywordflow">if</span> (b is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a> || b.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                <span class="keywordflow">return</span> SqlNumber.Null;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            var num1 = (SqlNumber) a;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            SqlNumber num2;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            <span class="keywordflow">if</span> (b is <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>) {</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                <span class="keywordflow">if</span> ((SqlBoolean) b) {</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                    num2 = SqlNumber.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ab2a04ae32fae52ab3bf7972e9003c35c">One</a>;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (!(SqlBoolean) b) {</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                    num2 = SqlNumber.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ac236f423532b37b3d012258d1246e320">Zero</a>;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                    num2 = SqlNumber.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aed053d462ea48c3ad8ff42a90d7f35e8">Null</a>;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                }</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (b is SqlNumber) {</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                num2 = (SqlNumber) b;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            }</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;            <span class="keywordflow">return</span> num1.Add(num2);</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        }</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div>
<div class="line"><a name="l00358"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a09305bc44b01717aabb57834e02bbea2">  358</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a09305bc44b01717aabb57834e02bbea2">Subtract</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b) {</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="keywordflow">if</span> (!(a is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>))</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            <span class="keywordflow">if</span> (b is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a> || b.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                <span class="keywordflow">return</span> SqlNumber.Null;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            var num1 = (SqlNumber) a;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            SqlNumber num2;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordflow">if</span> (b is <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>) {</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                <span class="keywordflow">if</span> ((SqlBoolean) b) {</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                    num2 = SqlNumber.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ab2a04ae32fae52ab3bf7972e9003c35c">One</a>;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (!(SqlBoolean) b) {</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                    num2 = SqlNumber.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ac236f423532b37b3d012258d1246e320">Zero</a>;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                    num2 = SqlNumber.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aed053d462ea48c3ad8ff42a90d7f35e8">Null</a>;</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                }</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (b is SqlNumber) {</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                num2 = (SqlNumber) b;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;            }</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            <span class="keywordflow">return</span> num1.Subtract(num2);</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;        }</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div>
<div class="line"><a name="l00384"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a9d0b471b8dc3ba1d766e201acd687579">  384</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a9d0b471b8dc3ba1d766e201acd687579">Multiply</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b) {</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            <span class="keywordflow">if</span> (!(a is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) ||</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                !(b is SqlNumber))</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            <span class="keywordflow">if</span> (b.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                <span class="keywordflow">return</span> SqlNumber.Null;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="keywordflow">if</span> (a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                <span class="keywordflow">return</span> a;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            var num1 = (SqlNumber) a;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            var num2 = (SqlNumber) b;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            <span class="keywordflow">return</span> num1.Multiply(num2);</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        }</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div>
<div class="line"><a name="l00400"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a8951c607e5ad3ec4b47c06650078007d">  400</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a8951c607e5ad3ec4b47c06650078007d">Divide</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b) {</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            <span class="keywordflow">if</span> (!(a is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) ||</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                !(b is SqlNumber))</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            <span class="keywordflow">if</span> (b.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                <span class="keywordflow">return</span> SqlNumber.Null;</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            <span class="keywordflow">if</span> (a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                <span class="keywordflow">return</span> a;</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            var num1 = (SqlNumber)a;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            var num2 = (SqlNumber)b;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;            <span class="keywordflow">return</span> num1.Divide(num2);</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        }</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div>
<div class="line"><a name="l00417"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a0cb5db2c58913bb7bb1fd14baaad85c4">  417</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a0cb5db2c58913bb7bb1fd14baaad85c4">Modulus</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b) {</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;            <span class="keywordflow">if</span> (!(a is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) ||</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                !(b is SqlNumber))</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            <span class="keywordflow">if</span> (b.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                <span class="keywordflow">return</span> SqlNumber.Null;</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            <span class="keywordflow">if</span> (a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                <span class="keywordflow">return</span> a;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            var num1 = (SqlNumber) a;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            var num2 = (SqlNumber) b;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;            <span class="keywordflow">return</span> num1.Modulo(num2);</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        }</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div>
<div class="line"><a name="l00434"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ae5b19d145983f06c46d72c94801b164b">  434</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ae5b19d145983f06c46d72c94801b164b">IsSmallerThan</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b) {</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            <span class="keywordflow">if</span> (!(a is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) ||</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                !(b is SqlNumber))</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            <span class="keywordflow">if</span> (b.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            <span class="keywordflow">if</span> (a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            var num1 = (SqlNumber) a;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            var num2 = (SqlNumber) b;</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;            <span class="keywordflow">return</span> num1 &lt; num2;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        }</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div>
<div class="line"><a name="l00451"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ad939ae97937fafda2601bf48bb151ba7">  451</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ad939ae97937fafda2601bf48bb151ba7">IsGreatherThan</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b) {</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            <span class="keywordflow">if</span> (!(a is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) ||</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                !(b is SqlNumber))</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;            <span class="keywordflow">if</span> (b.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;            <span class="keywordflow">if</span> (a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            var num1 = (SqlNumber) a;</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;            var num2 = (SqlNumber) b;</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;            <span class="keywordflow">return</span> num1 &gt; num2;</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        }</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div>
<div class="line"><a name="l00468"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ad30ad9538c1365aa0734d1d0dd9d2226">  468</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ad30ad9538c1365aa0734d1d0dd9d2226">IsSmallerOrEqualThan</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b) {</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;            <span class="keywordflow">if</span> (!(a is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) ||</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                !(b is SqlNumber))</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;            <span class="keywordflow">if</span> (b.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;            <span class="keywordflow">if</span> (a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;            var num1 = (SqlNumber) a;</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;            var num2 = (SqlNumber) b;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            <span class="keywordflow">return</span> num1 &lt;= num2;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        }</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div>
<div class="line"><a name="l00485"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a0396974cdc94afccad38ab178f54ad1a">  485</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a0396974cdc94afccad38ab178f54ad1a">IsGreaterOrEqualThan</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b) {</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;            <span class="keywordflow">if</span> (!(a is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) ||</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;                !(b is SqlNumber))</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            <span class="keywordflow">if</span> (b.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            <span class="keywordflow">if</span> (a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.Null;</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;            var num1 = (SqlNumber) a;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;            var num2 = (SqlNumber) b;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            <span class="keywordflow">return</span> num1 &gt;= num2;</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        }</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div>
<div class="line"><a name="l00502"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a0d304e02bd72f3acd09ccc16a57dca81">  502</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a0d304e02bd72f3acd09ccc16a57dca81">IsEqualTo</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b) {</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            <span class="keywordflow">if</span> (!(a is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) ||</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                !(b is SqlNumber))</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            <span class="keywordflow">if</span> (b.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                <span class="keywordflow">return</span> a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>;</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;            <span class="keywordflow">if</span> (a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                <span class="keywordflow">return</span> b.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            var num1 = (SqlNumber) a;</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            var num2 = (SqlNumber) b;</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;            <span class="keywordflow">return</span> num1.Equals(num2);</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        }</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div>
<div class="line"><a name="l00519"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a6b32bdcb8976e9bb92fda75d3f1bae52">  519</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a6b32bdcb8976e9bb92fda75d3f1bae52">IsNotEqualTo</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b) {</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            <span class="keywordflow">return</span> !IsEqualTo(a, b);</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        }</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;</div>
<div class="line"><a name="l00523"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a93e7c2018c75981a9a2a9903d65e4757">  523</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a93e7c2018c75981a9a2a9903d65e4757">Negate</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> value) {</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            <span class="keywordflow">if</span> (!(value is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>))</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            var num = (SqlNumber) value;</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;            <span class="keywordflow">if</span> (num.IsNull)</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                <span class="keywordflow">return</span> num;</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            <span class="keywordflow">return</span> num.Negate();</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;        }</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div>
<div class="line"><a name="l00535"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a3b91dd0632825c7ecafd7ea7fcfe002a">  535</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a3b91dd0632825c7ecafd7ea7fcfe002a">Reverse</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> value) {</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <span class="keywordflow">if</span> (!(value is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>))</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;            var num = (SqlNumber)value;</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;            <span class="keywordflow">if</span> (num.IsNull)</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                <span class="keywordflow">return</span> num;</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;            <span class="keywordflow">return</span> num.Not();</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;        }</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div>
<div class="line"><a name="l00547"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#aa16cfc1e0c7fab7629b2127a4278dd54">  547</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#aa16cfc1e0c7fab7629b2127a4278dd54">UnaryPlus</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> value) {</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;            <span class="keywordflow">if</span> (!(value is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>))</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;            var num = (SqlNumber)value;</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;            <span class="keywordflow">if</span> (num.IsNull)</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                <span class="keywordflow">return</span> num;</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;            <span class="keywordflow">return</span> num.Plus();</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        }</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div>
<div class="line"><a name="l00559"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ad53dac2a00bd2cfc07d5eaa86c9f3026">  559</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ad53dac2a00bd2cfc07d5eaa86c9f3026">XOr</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b) {</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            <span class="keywordflow">if</span> (!(a is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) ||</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                !(b is SqlNumber))</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;            <span class="keywordflow">if</span> (b.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                <span class="keywordflow">return</span> SqlNumber.Null;</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;            <span class="keywordflow">if</span> (a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                <span class="keywordflow">return</span> a;</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;            var num1 = (SqlNumber) a;</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;            var num2 = (SqlNumber) b;</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;            <span class="keywordflow">return</span> num1.XOr(num2);</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        }</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div>
<div class="line"><a name="l00576"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#acde8ef3129807655a6796dc0ef6e3bb0">  576</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#acde8ef3129807655a6796dc0ef6e3bb0">And</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b) {</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;            <span class="keywordflow">if</span> (!(a is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) ||</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                !(b is SqlNumber))</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;            <span class="keywordflow">if</span> (b.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                <span class="keywordflow">return</span> SqlNumber.Null;</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;            <span class="keywordflow">if</span> (a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                <span class="keywordflow">return</span> a;</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;            var num1 = (SqlNumber) a;</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;            var num2 = (SqlNumber) b;</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;            <span class="keywordflow">return</span> num1.And(num2);</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        }</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div>
<div class="line"><a name="l00593"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a11130b9c1dda86c1fdc063458f3dead2">  593</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a11130b9c1dda86c1fdc063458f3dead2">Or</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b) {</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;            <span class="keywordflow">if</span> (!(a is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) ||</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                !(b is SqlNumber))</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;            <span class="keywordflow">if</span> (b.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                <span class="keywordflow">return</span> SqlNumber.Null;</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;            <span class="keywordflow">if</span> (a.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                <span class="keywordflow">return</span> a;</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;            var num1 = (SqlNumber) a;</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;            var num2 = (SqlNumber) b;</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;            <span class="keywordflow">return</span> num1.Or(num2);</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;        }</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div>
<div class="line"><a name="l00610"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a9728f97c58d5522d0f85d2d6a5b7e63c">  610</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a9728f97c58d5522d0f85d2d6a5b7e63c">SerializeObject</a>(Stream stream, <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> obj) {</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;            var writer = <span class="keyword">new</span> BinaryWriter(stream);</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;            <span class="keywordflow">if</span> (obj is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>) {</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;                writer.Write((byte)0);</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;                var number = (<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>) obj;</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                <span class="keywordflow">if</span> (obj.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>) {</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;                    writer.Write((byte) 0);</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (number.CanBeInt32) {</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;                    writer.Write((byte) 1);</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;                    writer.Write(number.ToInt32());</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;                } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (number.CanBeInt64) {</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;                    writer.Write((byte) 2);</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;                    writer.Write(number.ToInt64());</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;                    var bytes = number.ToByteArray();</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;                    writer.Write((byte) 3);</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;                    writer.Write(number.Precision);</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                    writer.Write(number.Scale);</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;                    writer.Write(bytes.Length);</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;                    writer.Write(bytes);</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;                }</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;            }</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        }</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div>
<div class="line"><a name="l00636"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#abced560c4c94989c29a6533de3b74e9e">  636</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#abced560c4c94989c29a6533de3b74e9e">DeserializeObject</a>(Stream stream) {</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;            var reader = <span class="keyword">new</span> BinaryReader(stream);</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;            var type = reader.ReadByte();</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;            <span class="keywordflow">if</span> (type == 0)</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aed053d462ea48c3ad8ff42a90d7f35e8">Null</a>;</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;            <span class="keywordflow">if</span> (type == 1) {</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                var value = reader.ReadInt32();</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(value);</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;            }</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;            <span class="keywordflow">if</span> (type == 2) {</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                var value = reader.ReadInt64();</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(value);</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;            }</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;            <span class="keywordflow">if</span> (type == 3) {</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;                var precision = reader.ReadInt32();</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;                var scale = reader.ReadInt32();</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;                var length = reader.ReadInt32();</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;                var bytes = reader.ReadBytes(length);</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(bytes, scale, precision);</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;            }</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> FormatException();</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;        }</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div>
<div class="line"><a name="l00662"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a4cab5146aba43afd7c8b98e198a84529">  662</a></span>&#160;        <span class="keyword">internal</span> <span class="keyword">override</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a4cab5146aba43afd7c8b98e198a84529">ColumnSizeOf</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> obj) {</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;            <span class="keywordflow">if</span> (obj is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>)</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;                <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;            <span class="keywordflow">if</span> (!(obj is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>))</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;Cannot determine the size of an object of type &#39;{0}&#39;.&quot;</span>, obj.GetType()));</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;            var number = (SqlNumber) obj;</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;            <span class="keywordflow">if</span> (number.IsNull)</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;                <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;            <span class="keywordflow">if</span> (number.CanBeInt32)</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;                <span class="keywordflow">return</span> 1 + 4;</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;            <span class="keywordflow">if</span> (number.CanBeInt64)</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                <span class="keywordflow">return</span> 1+ 8;</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;            <span class="comment">// Type + Scale + Precision + Byte Count</span></div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;            var length = number.ToByteArray().Length;</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;            <span class="keywordflow">return</span> 1 + 4 + 4 + 4 + length;</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;        }</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div>
<div class="line"><a name="l00684"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#abdbe9fdf30f1b8905b987fbe63f2ee26">  684</a></span>&#160;        <span class="keyword">internal</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#abdbe9fdf30f1b8905b987fbe63f2ee26">IsNumericType</a>(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode) {</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;            <span class="keywordflow">return</span> typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.TinyInt ||</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;                   typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.SmallInt ||</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;                   typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Integer ||</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;                   typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.BigInt ||</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;                   typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Real ||</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;                   typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Float ||</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;                   typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Double ||</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;                   typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Decimal ||</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;                   typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Numeric;</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        }</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    }</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a247e39e3b9a8d6f46cc0e70c7354c56f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a247e39e3b9a8d6f46cc0e70c7354c56f">Deveel.Data.Types.NumericType.ToString</a></div><div class="ttdeci">override string ToString()</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00287">NumericType.cs:287</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_afca76beab2cc96ecff2d15ee90e07f52"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#afca76beab2cc96ecff2d15ee90e07f52">Deveel.Data.Types.NumericType.NumericType</a></div><div class="ttdeci">NumericType(SqlTypeCode typeCode, int size)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00039">NumericType.cs:39</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Serialization_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Serialization.htm">Deveel.Data.Serialization</a></div><div class="ttdef"><b>Definition:</b> <a href="BinarySerializer_8cs_source.htm#l00024">BinarySerializer.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_aff6b16207743803febd7575cc5874728"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#aff6b16207743803febd7575cc5874728">Deveel.Data.Types.NumericType.AssertIsNumeric</a></div><div class="ttdeci">static void AssertIsNumeric(SqlTypeCode typeCode)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00105">NumericType.cs:105</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Objects_htm_afe7dfc9aa4bf3283014653f9d5020327"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm#afe7dfc9aa4bf3283014653f9d5020327">Deveel.Data.Sql.Objects.NumericState</a></div><div class="ttdeci">NumericState</div><div class="ttdoc">Lists all the possible special states of a number. </div><div class="ttdef"><b>Definition:</b> <a href="NumericState_8cs_source.htm#l00021">NumericState.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_ac2ceb7d683e1491d1e1dc496672d49e2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ac2ceb7d683e1491d1e1dc496672d49e2">Deveel.Data.Types.NumericType.IsCacheable</a></div><div class="ttdeci">override bool IsCacheable(ISqlObject value)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00097">NumericType.cs:97</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_ada885ded2f6186f93433bba3219341b7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ada885ded2f6186f93433bba3219341b7">Deveel.Data.Types.NumericType.Compare</a></div><div class="ttdeci">override int Compare(ISqlObject x, ISqlObject y)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00195">NumericType.cs:195</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_abced560c4c94989c29a6533de3b74e9e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#abced560c4c94989c29a6533de3b74e9e">Deveel.Data.Types.NumericType.DeserializeObject</a></div><div class="ttdeci">override ISqlObject DeserializeObject(Stream stream)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00636">NumericType.cs:636</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm">Deveel.Data.Types.StringType</a></div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00029">StringType.cs:29</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a9728f97c58d5522d0f85d2d6a5b7e63c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a9728f97c58d5522d0f85d2d6a5b7e63c">Deveel.Data.Types.NumericType.SerializeObject</a></div><div class="ttdeci">override void SerializeObject(Stream stream, ISqlObject obj)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00610">NumericType.cs:610</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a305f45a0cede85702aec9d8e569419bd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a305f45a0cede85702aec9d8e569419bd">Deveel.Data.Types.NumericType.GetHashCode</a></div><div class="ttdeci">override int GetHashCode()</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00101">NumericType.cs:101</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a82f6eaaf0d892343427f9fc7f27ade0a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a82f6eaaf0d892343427f9fc7f27ade0a">Deveel.Data.Types.NumericType.CastTo</a></div><div class="ttdeci">override DataObject CastTo(DataObject value, SqlType destType)</div><div class="ttdoc">Converts the given object value to a SqlType specified. </div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00221">NumericType.cs:221</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBinary_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBinary.htm">Deveel.Data.Sql.Objects.SqlBinary</a></div><div class="ttdoc">Implements a BINARY object that handles a limited number of bytes, not exceding MaxLength. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBinary_8cs_source.htm#l00027">SqlBinary.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm">Deveel.Data.Types.NumericType</a></div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00027">NumericType.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_ae5b19d145983f06c46d72c94801b164b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ae5b19d145983f06c46d72c94801b164b">Deveel.Data.Types.NumericType.IsSmallerThan</a></div><div class="ttdeci">override SqlBoolean IsSmallerThan(ISqlObject a, ISqlObject b)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00434">NumericType.cs:434</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a1c6522d2ec18af64478402734a00b986"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a1c6522d2ec18af64478402734a00b986">Deveel.Data.Serialization.ObjectData.GetByte</a></div><div class="ttdeci">byte GetByte(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00077">ObjectData.cs:77</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_abdbe9fdf30f1b8905b987fbe63f2ee26"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#abdbe9fdf30f1b8905b987fbe63f2ee26">Deveel.Data.Types.NumericType.IsNumericType</a></div><div class="ttdeci">static bool IsNumericType(SqlTypeCode typeCode)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00684">NumericType.cs:684</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_ab733630c53de014a18b32c812465cc0f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ab733630c53de014a18b32c812465cc0f">Deveel.Data.Types.NumericType.ConvertTo</a></div><div class="ttdeci">override object ConvertTo(ISqlObject obj, Type destType)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00302">NumericType.cs:302</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Objects_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm">Deveel.Data.Sql.Objects</a></div><div class="ttdef"><b>Definition:</b> <a href="IObjectRef_8cs_source.htm#l00021">IObjectRef.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm_a2a09ed1c661f92b60b0b38398fb7ced1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">Deveel.Data.Serialization.SerializeData.SetValue</a></div><div class="ttdeci">void SetValue(string key, Type type, object value)</div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00035">SerializeData.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a97fdce9ecc1eb8d6b031b3d00e17759c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a97fdce9ecc1eb8d6b031b3d00e17759c">Deveel.Data.Types.NumericType.NumericType</a></div><div class="ttdeci">NumericType(SqlTypeCode typeCode, int size, byte scale)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00028">NumericType.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1DataObject_htm_a4f960ccc928ed1ecd66d9b6c8de30a66"><div class="ttname"><a href="classDeveel_1_1Data_1_1DataObject.htm#a4f960ccc928ed1ecd66d9b6c8de30a66">Deveel.Data.DataObject.Value</a></div><div class="ttdeci">ISqlObject Value</div><div class="ttdoc">Gets the underlined value that is handled. </div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00084">DataObject.cs:84</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Types_1_1ISizeableType_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Types_1_1ISizeableType.htm">Deveel.Data.Types.ISizeableType</a></div><div class="ttdef"><b>Definition:</b> <a href="ISizeableType_8cs_source.htm#l00020">ISizeableType.cs:20</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a03b166e54c20d0768317b7e559b01c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">Deveel.Data.Types.SqlType.TypeCode</a></div><div class="ttdeci">SqlTypeCode TypeCode</div><div class="ttdoc">Gets the kind of SQL type this data-type handles. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00091">SqlType.cs:91</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm_ab9810ddba011d9ffe76db3ceffa636c0"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">Deveel.Data.Sql.Objects.ISqlObject.IsNull</a></div><div class="ttdeci">bool IsNull</div><div class="ttdoc">Gets a boolean value indicating if the object is NULL. </div><div class="ttdef"><b>Definition:</b> <a href="ISqlObject_8cs_source.htm#l00028">ISqlObject.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a09305bc44b01717aabb57834e02bbea2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a09305bc44b01717aabb57834e02bbea2">Deveel.Data.Types.NumericType.Subtract</a></div><div class="ttdeci">override ISqlObject Subtract(ISqlObject a, ISqlObject b)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00358">NumericType.cs:358</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a96d18af2f636bd043c7bb42ec4380996"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a96d18af2f636bd043c7bb42ec4380996">Deveel.Data.Types.NumericType.Wider</a></div><div class="ttdeci">override SqlType Wider(SqlType otherType)</div><div class="ttdoc">Gets the one data-type between this and the other one given that handles the wider range of values...</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00138">NumericType.cs:138</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a6b32bdcb8976e9bb92fda75d3f1bae52"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a6b32bdcb8976e9bb92fda75d3f1bae52">Deveel.Data.Types.NumericType.IsNotEqualTo</a></div><div class="ttdeci">override SqlBoolean IsNotEqualTo(ISqlObject a, ISqlObject b)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00519">NumericType.cs:519</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">Deveel.Data.Serialization.SerializeData</a></div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00021">SerializeData.cs:21</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm_a34389e1b9a93987d32840d009a4e08b6"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Deveel.Data.Sql.Objects.SqlNull.Value</a></div><div class="ttdeci">static readonly SqlNull Value</div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00024">SqlNull.cs:24</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">Deveel.Data.Sql.Objects.ISqlObject</a></div><div class="ttdoc">Defines the contract for a valid SQL Object </div><div class="ttdef"><b>Definition:</b> <a href="ISqlObject_8cs_source.htm#l00023">ISqlObject.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_abc1b87d3a35dd03decad4462222e6c6e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#abc1b87d3a35dd03decad4462222e6c6e">Deveel.Data.Types.NumericType.ToDate</a></div><div class="ttdeci">static SqlDateTime ToDate(long time)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00210">NumericType.cs:210</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_ae22cb9f5d93c05b976fa8fa926225a0b"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ae22cb9f5d93c05b976fa8fa926225a0b">Deveel.Data.Types.NumericType.IsComparable</a></div><div class="ttdeci">override bool IsComparable(SqlType type)</div><div class="ttdoc">Verifies if a given SqlType is comparable to this data-type. </div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00191">NumericType.cs:191</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a8951c607e5ad3ec4b47c06650078007d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a8951c607e5ad3ec4b47c06650078007d">Deveel.Data.Types.NumericType.Divide</a></div><div class="ttdeci">override ISqlObject Divide(ISqlObject a, ISqlObject b)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00400">NumericType.cs:400</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">Deveel.Data.Serialization.ObjectData</a></div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00022">ObjectData.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a93e7c2018c75981a9a2a9903d65e4757"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a93e7c2018c75981a9a2a9903d65e4757">Deveel.Data.Types.NumericType.Negate</a></div><div class="ttdeci">override ISqlObject Negate(ISqlObject value)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00523">NumericType.cs:523</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a3b91dd0632825c7ecafd7ea7fcfe002a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a3b91dd0632825c7ecafd7ea7fcfe002a">Deveel.Data.Types.NumericType.Reverse</a></div><div class="ttdeci">override ISqlObject Reverse(ISqlObject value)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00535">NumericType.cs:535</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ac236f423532b37b3d012258d1246e320"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ac236f423532b37b3d012258d1246e320">Deveel.Data.Sql.Objects.SqlNumber.Zero</a></div><div class="ttdeci">static readonly SqlNumber Zero</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00029">SqlNumber.cs:29</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a1e267f2009bb7e9c0a35d707aa64e63a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a1e267f2009bb7e9c0a35d707aa64e63a">Deveel.Data.Serialization.ObjectData.GetInt32</a></div><div class="ttdeci">int GetInt32(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00085">ObjectData.cs:85</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a460860c2c600503bd7ec40cda8c74596"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a460860c2c600503bd7ec40cda8c74596">Deveel.Data.Types.NumericType.NumericType</a></div><div class="ttdeci">NumericType(ObjectData data)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00043">NumericType.cs:43</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_ad53dac2a00bd2cfc07d5eaa86c9f3026"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ad53dac2a00bd2cfc07d5eaa86c9f3026">Deveel.Data.Types.NumericType.XOr</a></div><div class="ttdeci">override ISqlObject XOr(ISqlObject a, ISqlObject b)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00559">NumericType.cs:559</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_ae51d0736284c46385ec18aaf6f1ae8da"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ae51d0736284c46385ec18aaf6f1ae8da">Deveel.Data.Types.NumericType.GetRuntimeType</a></div><div class="ttdeci">override Type GetRuntimeType()</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00076">NumericType.cs:76</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a0cb5db2c58913bb7bb1fd14baaad85c4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a0cb5db2c58913bb7bb1fd14baaad85c4">Deveel.Data.Types.NumericType.Modulus</a></div><div class="ttdeci">override ISqlObject Modulus(ISqlObject a, ISqlObject b)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00417">NumericType.cs:417</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1DataObject_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1DataObject.htm">Deveel.Data.DataObject</a></div><div class="ttdoc">Represents a dynamic object that encapsulates a defined SqlType and a compatible constant ISqlObject ...</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00035">DataObject.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a79c2fed0d247c37a9860160f85095891"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a79c2fed0d247c37a9860160f85095891">Deveel.Data.Types.NumericType.CanCastTo</a></div><div class="ttdeci">override bool CanCastTo(SqlType destType)</div><div class="ttdoc">Verifies if this type can cast any value to the given SqlType. </div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00214">NumericType.cs:214</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a4cab5146aba43afd7c8b98e198a84529"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a4cab5146aba43afd7c8b98e198a84529">Deveel.Data.Types.NumericType.ColumnSizeOf</a></div><div class="ttdeci">override int ColumnSizeOf(ISqlObject obj)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00662">NumericType.cs:662</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">Deveel.Data.Types.SqlType</a></div><div class="ttdoc">Defines the properties of a specific SQL Type and handles the values compatible. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00033">SqlType.cs:33</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1BooleanType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1BooleanType.htm">Deveel.Data.Types.BooleanType</a></div><div class="ttdef"><b>Definition:</b> <a href="BooleanType_8cs_source.htm#l00026">BooleanType.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_afb868eb49269b2d80fc3b9c79cc364ab"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#afb868eb49269b2d80fc3b9c79cc364ab">Deveel.Data.Types.NumericType.GetObjectType</a></div><div class="ttdeci">override Type GetObjectType()</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00072">NumericType.cs:72</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a0396974cdc94afccad38ab178f54ad1a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a0396974cdc94afccad38ab178f54ad1a">Deveel.Data.Types.NumericType.IsGreaterOrEqualThan</a></div><div class="ttdeci">override SqlBoolean IsGreaterOrEqualThan(ISqlObject a, ISqlObject b)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00485">NumericType.cs:485</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">Deveel.Data.Sql.Objects.SqlDateTime</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlDateTime_8cs_source.htm#l00021">SqlDateTime.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a7c342187ac37f01ba0e562f6f30a1210"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a7c342187ac37f01ba0e562f6f30a1210">Deveel.Data.Types.NumericType.Equals</a></div><div class="ttdeci">override bool Equals(object obj)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00062">NumericType.cs:62</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_aed053d462ea48c3ad8ff42a90d7f35e8"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aed053d462ea48c3ad8ff42a90d7f35e8">Deveel.Data.Sql.Objects.SqlNumber.Null</a></div><div class="ttdeci">static readonly SqlNumber Null</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00031">SqlNumber.cs:31</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_ab2a04ae32fae52ab3bf7972e9003c35c"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#ab2a04ae32fae52ab3bf7972e9003c35c">Deveel.Data.Sql.Objects.SqlNumber.One</a></div><div class="ttdeci">static readonly SqlNumber One</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00030">SqlNumber.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a7d3dd45bbfef7546a2c6670b5f64bc46"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a7d3dd45bbfef7546a2c6670b5f64bc46">Deveel.Data.Types.NumericType.GetIntSize</a></div><div class="ttdeci">static int GetIntSize(SqlTypeCode sqlType)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00110">NumericType.cs:110</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a21530bc5576627ceb9e8a6120ece6353"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a21530bc5576627ceb9e8a6120ece6353">Deveel.Data.Types.NumericType.GetData</a></div><div class="ttdeci">override void GetData(SerializeData data)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00057">NumericType.cs:57</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_acde8ef3129807655a6796dc0ef6e3bb0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#acde8ef3129807655a6796dc0ef6e3bb0">Deveel.Data.Types.NumericType.And</a></div><div class="ttdeci">override ISqlObject And(ISqlObject a, ISqlObject b)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00576">NumericType.cs:576</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a5611a45679d0938ba19c3f26d7385e67"><div class="ttname"><a href="DataObject_8cs.htm#a5611a45679d0938ba19c3f26d7385e67">SqlBoolean</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlBoolean SqlBoolean</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00026">DataObject.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a9d0b471b8dc3ba1d766e201acd687579"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a9d0b471b8dc3ba1d766e201acd687579">Deveel.Data.Types.NumericType.Multiply</a></div><div class="ttdeci">override ISqlObject Multiply(ISqlObject a, ISqlObject b)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00384">NumericType.cs:384</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_ad30ad9538c1365aa0734d1d0dd9d2226"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ad30ad9538c1365aa0734d1d0dd9d2226">Deveel.Data.Types.NumericType.IsSmallerOrEqualThan</a></div><div class="ttdeci">override SqlBoolean IsSmallerOrEqualThan(ISqlObject a, ISqlObject b)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00468">NumericType.cs:468</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a11130b9c1dda86c1fdc063458f3dead2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a11130b9c1dda86c1fdc063458f3dead2">Deveel.Data.Types.NumericType.Or</a></div><div class="ttdeci">override ISqlObject Or(ISqlObject a, ISqlObject b)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00593">NumericType.cs:593</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_ad939ae97937fafda2601bf48bb151ba7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#ad939ae97937fafda2601bf48bb151ba7">Deveel.Data.Types.NumericType.IsGreatherThan</a></div><div class="ttdeci">override SqlBoolean IsGreatherThan(ISqlObject a, ISqlObject b)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00451">NumericType.cs:451</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a986caa2c81a6cab0430a037e18890a72"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a986caa2c81a6cab0430a037e18890a72">Deveel.Data.Types.NumericType.NumericType</a></div><div class="ttdeci">NumericType(SqlTypeCode typeCode)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00035">NumericType.cs:35</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Transactions_htm_a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Transactions.htm#a480812ee8c332fe897566db9284f50a1a33909597338639745b2d76081beeb48b">Deveel.Data.Transactions.IsolationLevel.Serializable</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm">Deveel.Data.Sql</a></div><div class="ttdef"><b>Definition:</b> <a href="CellId_8cs_source.htm#l00022">CellId.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_afa92583cb897aaeda6228ac04c66f4c2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#afa92583cb897aaeda6228ac04c66f4c2">Deveel.Data.Types.NumericType.GetFloatSize</a></div><div class="ttdeci">static int GetFloatSize(SqlTypeCode sqlType)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00126">NumericType.cs:126</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a0d304e02bd72f3acd09ccc16a57dca81"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a0d304e02bd72f3acd09ccc16a57dca81">Deveel.Data.Types.NumericType.IsEqualTo</a></div><div class="ttdeci">override SqlBoolean IsEqualTo(ISqlObject a, ISqlObject b)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00502">NumericType.cs:502</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">Deveel.Data.Sql.Objects.SqlNumber</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00024">SqlNumber.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1ad909d38d705ce75386dd86e611a82f5b"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1ad909d38d705ce75386dd86e611a82f5b">Deveel.Data.Types.SqlTypeCode.Double</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_aa16cfc1e0c7fab7629b2127a4278dd54"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#aa16cfc1e0c7fab7629b2127a4278dd54">Deveel.Data.Types.NumericType.UnaryPlus</a></div><div class="ttdeci">override ISqlObject UnaryPlus(ISqlObject value)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00547">NumericType.cs:547</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1NumericType_htm_a4cb35a41b2db3cc376431f4ada759077"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1NumericType.htm#a4cb35a41b2db3cc376431f4ada759077">Deveel.Data.Types.NumericType.Add</a></div><div class="ttdeci">override ISqlObject Add(ISqlObject a, ISqlObject b)</div><div class="ttdef"><b>Definition:</b> <a href="NumericType_8cs_source.htm#l00332">NumericType.cs:332</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
