<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Sql.Tables.MutableTableExtensions Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Sql_1_1Tables.htm">Tables</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1MutableTableExtensions.htm">MutableTableExtensions</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1MutableTableExtensions-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Sql.Tables.MutableTableExtensions Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ad173e17b5b4a6e06a132042a08dddca4"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1MutableTableExtensions.htm#ad173e17b5b4a6e06a132042a08dddca4">RemoveRow</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm">IMutableTable</a> table, int rowIndex)</td></tr>
<tr class="separator:ad173e17b5b4a6e06a132042a08dddca4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d40cccbf892d1abbb67421b93483a27"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1MutableTableExtensions.htm#a4d40cccbf892d1abbb67421b93483a27">DeleteRows</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm">IMutableTable</a> table, IEnumerable&lt; int &gt; rows)</td></tr>
<tr class="separator:a4d40cccbf892d1abbb67421b93483a27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02548ae437f83a0020bb3c8376a71e04"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1Row.htm">Row</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1MutableTableExtensions.htm#a02548ae437f83a0020bb3c8376a71e04">NewRow</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm">IMutableTable</a> table)</td></tr>
<tr class="memdesc:a02548ae437f83a0020bb3c8376a71e04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new row that is compatible with the table context, ready to be populated and added.  <a href="#a02548ae437f83a0020bb3c8376a71e04">More...</a><br /></td></tr>
<tr class="separator:a02548ae437f83a0020bb3c8376a71e04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad719b24574eb6baca765263b77d90da2"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1MutableTableExtensions.htm#ad719b24574eb6baca765263b77d90da2">Delete</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm">IMutableTable</a> table, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1ITable.htm">ITable</a> t)</td></tr>
<tr class="separator:ad719b24574eb6baca765263b77d90da2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0424522912a88907486c4289055ac2a9"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1MutableTableExtensions.htm#a0424522912a88907486c4289055ac2a9">Delete</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm">IMutableTable</a> table, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1ITable.htm">ITable</a> other, int limit)</td></tr>
<tr class="separator:a0424522912a88907486c4289055ac2a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a2a161e5605c0884b60e849eedad3f5"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1MutableTableExtensions.htm#a6a2a161e5605c0884b60e849eedad3f5">Delete</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm">IMutableTable</a> table, int columnOffset, <a class="el" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a> value)</td></tr>
<tr class="separator:a6a2a161e5605c0884b60e849eedad3f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a1e102dc9ba7c19f95dbd618384c8f6"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1MutableTableExtensions.htm#a5a1e102dc9ba7c19f95dbd618384c8f6">Update</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm">IMutableTable</a> mutableTable, <a class="el" href="interfaceDeveel_1_1Data_1_1IQuery.htm">IQuery</a> context, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1ITable.htm">ITable</a> table, IEnumerable&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlAssignExpression.htm">SqlAssignExpression</a> &gt; assignList, int limit)</td></tr>
<tr class="separator:a5a1e102dc9ba7c19f95dbd618384c8f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="MutableTableExtensions_8cs_source.htm#l00025">25</a> of file <a class="el" href="MutableTableExtensions_8cs_source.htm">MutableTableExtensions.cs</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ad719b24574eb6baca765263b77d90da2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int Deveel.Data.Sql.Tables.MutableTableExtensions.Delete </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm">IMutableTable</a>&#160;</td>
          <td class="paramname"><em>table</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1ITable.htm">ITable</a>&#160;</td>
          <td class="paramname"><em>t</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="MutableTableExtensions_8cs_source.htm#l00059">59</a> of file <a class="el" href="MutableTableExtensions_8cs_source.htm">MutableTableExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                                                     {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1MutableTableExtensions.htm#ad719b24574eb6baca765263b77d90da2">Delete</a>(table, t, -1);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1MutableTableExtensions_htm_ad719b24574eb6baca765263b77d90da2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1MutableTableExtensions.htm#ad719b24574eb6baca765263b77d90da2">Deveel.Data.Sql.Tables.MutableTableExtensions.Delete</a></div><div class="ttdeci">static int Delete(this IMutableTable table, ITable t)</div><div class="ttdef"><b>Definition:</b> <a href="MutableTableExtensions_8cs_source.htm#l00059">MutableTableExtensions.cs:59</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0424522912a88907486c4289055ac2a9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int Deveel.Data.Sql.Tables.MutableTableExtensions.Delete </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm">IMutableTable</a>&#160;</td>
          <td class="paramname"><em>table</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1ITable.htm">ITable</a>&#160;</td>
          <td class="paramname"><em>other</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>limit</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="MutableTableExtensions_8cs_source.htm#l00063">63</a> of file <a class="el" href="MutableTableExtensions_8cs_source.htm">MutableTableExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                                                                    {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            List&lt;int&gt; rowSet = <span class="keyword">new</span> List&lt;int&gt;(other.RowCount);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            var e = other.GetEnumerator();</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <span class="keywordflow">while</span> (e.MoveNext()) {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                rowSet.Add(e.Current.RowId.RowNumber);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            <span class="comment">// HACKY: Find the first column of this table in the search table.  This</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            <span class="comment">//   will allow us to generate a row set of only the rows in the search</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="comment">//   table.</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="keywordtype">int</span> firstColumn = other.IndexOfColumn(table.GetResolvedColumnName(0));</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">if</span> (firstColumn == -1)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> DatabaseSystemException(<span class="stringliteral">&quot;Search table does not contain any reference to table being deleted from&quot;</span>);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="comment">// Generate a row set that is in this tables domain.</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            var rowsToDelete = other.ResolveRows(firstColumn, rowSet, table).ToList();</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <span class="comment">// row_set may contain duplicate row indices, therefore we must sort so</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="comment">// any duplicates are grouped and therefore easier to find.</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            rowSet.Sort();</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="comment">// If limit less than zero then limit is whole set.</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="keywordflow">if</span> (limit &lt; 0)</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                limit = Int32.MaxValue;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="comment">// Remove each row in row set in turn.  Make sure we don&#39;t remove the</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="comment">// same row index twice.</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordtype">int</span> len = <a class="code" href="namespaceSystem.htm">System</a>.Math.Min(rowsToDelete.Count, limit);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keywordtype">int</span> lastRemoved = -1;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keywordtype">int</span> removeCount = 0;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; len; ++i) {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                <span class="keywordtype">int</span> toRemove = rowsToDelete[i];</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                <span class="keywordflow">if</span> (toRemove &lt; lastRemoved)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> DatabaseSystemException(<span class="stringliteral">&quot;Internal error: row sorting error or row set not in the range &gt; 0&quot;</span>);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                <span class="keywordflow">if</span> (toRemove != lastRemoved) {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                    table.RemoveRow(toRemove);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                    lastRemoved = toRemove;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                    ++removeCount;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">if</span> (removeCount &gt; 0)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                <span class="comment">// Perform a referential integrity check on any changes to the table.</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                table.AssertConstraints();</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordflow">return</span> removeCount;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        }</div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6a2a161e5605c0884b60e849eedad3f5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Deveel.Data.Sql.Tables.MutableTableExtensions.Delete </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm">IMutableTable</a>&#160;</td>
          <td class="paramname"><em>table</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>columnOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="MutableTableExtensions_8cs_source.htm#l00113">113</a> of file <a class="el" href="MutableTableExtensions_8cs_source.htm">MutableTableExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                                                                                {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            var list = table.SelectRowsEqual(columnOffset, value).ToArray();</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keywordflow">if</span> (list.Length == 0)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">return</span> table.RemoveRow(list[0]);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4d40cccbf892d1abbb67421b93483a27"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Sql.Tables.MutableTableExtensions.DeleteRows </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm">IMutableTable</a>&#160;</td>
          <td class="paramname"><em>table</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IEnumerable&lt; int &gt;&#160;</td>
          <td class="paramname"><em>rows</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="MutableTableExtensions_8cs_source.htm#l00030">30</a> of file <a class="el" href="MutableTableExtensions_8cs_source.htm">MutableTableExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                                                                                       {</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            <span class="keywordflow">foreach</span> (var row <span class="keywordflow">in</span> rows) {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                table.RemoveRow(row);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            }</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a02548ae437f83a0020bb3c8376a71e04"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1Row.htm">Row</a> Deveel.Data.Sql.Tables.MutableTableExtensions.NewRow </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm">IMutableTable</a>&#160;</td>
          <td class="paramname"><em>table</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new row that is compatible with the table context, ready to be populated and added. </p>
<p>When this method is called, a new <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Tables_1_1RowId.htm" title="Defines the value of a ROWID object, that is a unique reference within a database system to a single ...">RowId</a> is generated and persisted: when a subsequent call to this method will be issued, another new row identifier will be generated, even if the row was not persisted into the table. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns an instance of <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Tables_1_1Row.htm" title="A single row in a table of a database. ">Row</a> that belongs to this table and can be added or updated through <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm#a69a1a54ff3b5689dd1b96e214e1c1747" title="Persists a new row to the table. ">IMutableTable.AddRow</a> or <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm#aa7a629d085917cde04ca046b46d03d40" title="Updates the values of a row into the table. ">IMutableTable.UpdateRow</a> method calls. </dd></dl>

<p>Definition at line <a class="el" href="MutableTableExtensions_8cs_source.htm#l00055">55</a> of file <a class="el" href="MutableTableExtensions_8cs_source.htm">MutableTableExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                                                           {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa70367aa7cb74e510f4f9413ccf059d3">Row</a>(table);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm_a782e8984e5e4a6718cff0c8da0777d02aa70367aa7cb74e510f4f9413ccf059d3"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm#a782e8984e5e4a6718cff0c8da0777d02aa70367aa7cb74e510f4f9413ccf059d3">Deveel.Data.Sql.DbObjectType.Row</a></div><div class="ttdoc">A single ROW in a database table, that holds tabular data as configured by the table specifications...</div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ad173e17b5b4a6e06a132042a08dddca4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Deveel.Data.Sql.Tables.MutableTableExtensions.RemoveRow </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm">IMutableTable</a>&#160;</td>
          <td class="paramname"><em>table</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>rowIndex</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="MutableTableExtensions_8cs_source.htm#l00026">26</a> of file <a class="el" href="MutableTableExtensions_8cs_source.htm">MutableTableExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                                                                             {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            <span class="keywordflow">return</span> table.RemoveRow(<span class="keyword">new</span> RowId(table.TableInfo.Id, rowIndex));</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a5a1e102dc9ba7c19f95dbd618384c8f6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int Deveel.Data.Sql.Tables.MutableTableExtensions.Update </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1IMutableTable.htm">IMutableTable</a>&#160;</td>
          <td class="paramname"><em>mutableTable</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1IQuery.htm">IQuery</a>&#160;</td>
          <td class="paramname"><em>context</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Tables_1_1ITable.htm">ITable</a>&#160;</td>
          <td class="paramname"><em>table</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IEnumerable&lt; <a class="el" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlAssignExpression.htm">SqlAssignExpression</a> &gt;&#160;</td>
          <td class="paramname"><em>assignList</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>limit</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="MutableTableExtensions_8cs_source.htm#l00121">121</a> of file <a class="el" href="MutableTableExtensions_8cs_source.htm">MutableTableExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                                                                    {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="comment">// Get the rows from the input table.</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            var rowSet = <span class="keyword">new</span> List&lt;int&gt;();</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            var e = table.GetEnumerator();</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">while</span> (e.MoveNext()) {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                rowSet.Add(e.Current.RowId.RowNumber);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            }</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="comment">// HACKY: Find the first column of this table in the search table.  This</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="comment">//   will allow us to generate a row set of only the rows in the search</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="comment">//   table.</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="keywordtype">int</span> firstColumn = table.FindColumn(mutableTable.GetResolvedColumnName(0));</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keywordflow">if</span> (firstColumn == -1)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Search table does not contain any &quot;</span> +</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                                            <span class="stringliteral">&quot;reference to table being updated from&quot;</span>);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="comment">// Convert the row_set to this table&#39;s domain.</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            rowSet = table.ResolveRows(firstColumn, rowSet, mutableTable).ToList();</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <span class="comment">// NOTE: Assume there&#39;s no duplicate rows.</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="comment">// If limit less than zero then limit is whole set.</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            <span class="keywordflow">if</span> (limit &lt; 0)</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                limit = Int32.MaxValue;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="comment">// Update each row in row set in turn up to the limit.</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keywordtype">int</span> len = <a class="code" href="namespaceSystem.htm">System</a>.Math.Min(rowSet.Count, limit);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="keywordtype">int</span> updateCount = 0;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; len; ++i) {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                <span class="keywordtype">int</span> toUpdate = rowSet[i];</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <span class="comment">// Make a row object from this row (plus keep the original intact</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                <span class="comment">// in case we need to roll back to it).</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                var row = mutableTable.GetRow(toUpdate);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                row.SetFromTable();</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                <span class="comment">// Run each assignment on the row.</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                <span class="keywordflow">foreach</span> (var assignment <span class="keywordflow">in</span> assignList) {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                    row.EvaluateAssignment(assignment, context);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                <span class="comment">// Update the row</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                mutableTable.UpdateRow(row);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                ++updateCount;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            }</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keywordflow">if</span> (updateCount &gt; 0)</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <span class="comment">// Perform a referential integrity check on any changes to the table.</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                mutableTable.AssertConstraints();</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordflow">return</span> updateCount;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        }</div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Sql.Tables/<a class="el" href="MutableTableExtensions_8cs_source.htm">MutableTableExtensions.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
