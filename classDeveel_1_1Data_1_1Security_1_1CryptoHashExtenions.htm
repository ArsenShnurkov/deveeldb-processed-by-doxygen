<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Security.CryptoHashExtenions Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Security.htm">Security</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm">CryptoHashExtenions</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Security.CryptoHashExtenions Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aa9cc750984f797915f813a12a44073fd"><td class="memItemLeft" align="right" valign="top">static string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#aa9cc750984f797915f813a12a44073fd">MakePbkdf2String</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a> hash, string input, string salt, int length)</td></tr>
<tr class="separator:aa9cc750984f797915f813a12a44073fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e0b170bbcb112f9e52b77ee03199354"><td class="memItemLeft" align="right" valign="top">static string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a4e0b170bbcb112f9e52b77ee03199354">MakePbkdf2String</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a> hash, string input, string salt, int length, int iterationCount)</td></tr>
<tr class="separator:a4e0b170bbcb112f9e52b77ee03199354"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00d9bc4546d2c336c81911faeffb4ae5"><td class="memItemLeft" align="right" valign="top">static string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a00d9bc4546d2c336c81911faeffb4ae5">MakePbkdf2String</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a> hash, string input, byte[] salt, int length)</td></tr>
<tr class="separator:a00d9bc4546d2c336c81911faeffb4ae5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac51f54f5719cd65f94750ff5280a285d"><td class="memItemLeft" align="right" valign="top">static string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#ac51f54f5719cd65f94750ff5280a285d">MakePbkdf2String</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a> hash, string input, byte[] salt, int length, int iterationCount)</td></tr>
<tr class="separator:ac51f54f5719cd65f94750ff5280a285d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b6d682a6b3a8e1abd6262df6774f2c0"><td class="memItemLeft" align="right" valign="top">static byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a0b6d682a6b3a8e1abd6262df6774f2c0">MakePbkdf2</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a> hash, byte[] salt, int length, int iterationCount)</td></tr>
<tr class="separator:a0b6d682a6b3a8e1abd6262df6774f2c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b47a48dc30cf6bb7ceb1949db18377b"><td class="memItemLeft" align="right" valign="top">static byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a7b47a48dc30cf6bb7ceb1949db18377b">MakePbkdf2</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a> hash, byte[] data, byte[] salt, int length)</td></tr>
<tr class="separator:a7b47a48dc30cf6bb7ceb1949db18377b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4928a4a092f6595932f74c748e300c6f"><td class="memItemLeft" align="right" valign="top">static byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a4928a4a092f6595932f74c748e300c6f">MakePbkdf2</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a> hash, byte[] data, byte[] salt, int length, int iterationCount)</td></tr>
<tr class="separator:a4928a4a092f6595932f74c748e300c6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a074329b1cf7115d5f1507e1c6397f53a"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a074329b1cf7115d5f1507e1c6397f53a">VerifyPbkdf2</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a> hash, byte[] hashed, byte[] otherData, byte[] salt)</td></tr>
<tr class="separator:a074329b1cf7115d5f1507e1c6397f53a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a953e19a6f5c1fe84d42fcf6ddabe3d1f"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a953e19a6f5c1fe84d42fcf6ddabe3d1f">VerifyPbkdf2</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a> hash, byte[] hashed, byte[] otherData, byte[] salt, int iterationCount)</td></tr>
<tr class="separator:a953e19a6f5c1fe84d42fcf6ddabe3d1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7df347d81d1582f089523fba60c2e31"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#aa7df347d81d1582f089523fba60c2e31">VerifyPbkdf2String</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a> hash, string hashedString, string otherString, byte[] salt)</td></tr>
<tr class="separator:aa7df347d81d1582f089523fba60c2e31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87620e6321e6e714e64c1ecd31ba3f0c"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a87620e6321e6e714e64c1ecd31ba3f0c">VerifyPbkdf2String</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a> hash, string hashedString, string otherString, byte[] salt, int iterationCount)</td></tr>
<tr class="separator:a87620e6321e6e714e64c1ecd31ba3f0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8165460bc7fcf7420401e9dd6dc3be0"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#aa8165460bc7fcf7420401e9dd6dc3be0">VerifyPbkdf2String</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a> hash, string hashedString, string otherString, string saltString)</td></tr>
<tr class="separator:aa8165460bc7fcf7420401e9dd6dc3be0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1fb384226d5247de63715f1b07f4029"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#ae1fb384226d5247de63715f1b07f4029">VerifyPbkdf2String</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a> hash, string hashedString, string otherString, string saltString, int iterationCount)</td></tr>
<tr class="separator:ae1fb384226d5247de63715f1b07f4029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bcc1cdea7c96cb3685df909d2bc154a"><td class="memItemLeft" align="right" valign="top">static string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a6bcc1cdea7c96cb3685df909d2bc154a">ComputeString</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IHashFunction.htm">IHashFunction</a> hash, string s)</td></tr>
<tr class="separator:a6bcc1cdea7c96cb3685df909d2bc154a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cbc98183111d08ff420bf8dc81ee31f"><td class="memItemLeft" align="right" valign="top">static byte[]&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a5cbc98183111d08ff420bf8dc81ee31f">GenerateSalt</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IHashFunction.htm">IHashFunction</a> hash)</td></tr>
<tr class="separator:a5cbc98183111d08ff420bf8dc81ee31f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99b6cdf1f0574af31b756c3ebd6974fd"><td class="memItemLeft" align="right" valign="top">static string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a99b6cdf1f0574af31b756c3ebd6974fd">GenerateSaltString</a> (this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IHashFunction.htm">IHashFunction</a> hash)</td></tr>
<tr class="separator:a99b6cdf1f0574af31b756c3ebd6974fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:a842919c9bb41140b518e3421f6b6e3d2"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a842919c9bb41140b518e3421f6b6e3d2">ByteArraysEqual</a> (byte[] a, byte[] b)</td></tr>
<tr class="separator:a842919c9bb41140b518e3421f6b6e3d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8729e01f9f8e2ef8d2cd950a4b6bbaf2"><td class="memItemLeft" align="right" valign="top">static string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a8729e01f9f8e2ef8d2cd950a4b6bbaf2">BinaryToHex</a> (byte[] data)</td></tr>
<tr class="separator:a8729e01f9f8e2ef8d2cd950a4b6bbaf2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a13a23daf713f02e17e85512180b403d4"><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a13a23daf713f02e17e85512180b403d4">DefaultIterationCount</a> = 10000</td></tr>
<tr class="separator:a13a23daf713f02e17e85512180b403d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00023">23</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a8729e01f9f8e2ef8d2cd950a4b6bbaf2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static string Deveel.Data.Security.CryptoHashExtenions.BinaryToHex </td>
          <td>(</td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00182">182</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                                                       {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keywordtype">char</span>[] hex = <span class="keyword">new</span> <span class="keywordtype">char</span>[data.Length * 2];</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> iter = 0; iter &lt; data.Length; iter++) {</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                byte hexChar = ((byte)(data[iter] &gt;&gt; 4));</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                hex[iter * 2] = (char)(hexChar &gt; 9 ? hexChar + 0x37 : hexChar + 0x30);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                hexChar = ((byte)(data[iter] &amp; 0xF));</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                hex[(iter * 2) + 1] = (<span class="keywordtype">char</span>)(hexChar &gt; 9 ? hexChar + 0x37 : hexChar + 0x30);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> string(hex);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a842919c9bb41140b518e3421f6b6e3d2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Deveel.Data.Security.CryptoHashExtenions.ByteArraysEqual </td>
          <td>(</td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00147">147</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                                                {</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keywordflow">if</span> (ReferenceEquals(a, b)) {</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keywordflow">if</span> (a == null || b == null || a.Length != b.Length) {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            <span class="keywordtype">bool</span> areSame = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; a.Length; i++) {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                areSame &amp;= (a[i] == b[i]);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keywordflow">return</span> areSame;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6bcc1cdea7c96cb3685df909d2bc154a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static string Deveel.Data.Security.CryptoHashExtenions.ComputeString </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IHashFunction.htm">IHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00165">165</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                                                                              {</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            var data = Encoding.UTF8.GetBytes(s);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a8729e01f9f8e2ef8d2cd950a4b6bbaf2">BinaryToHex</a>(hash.Compute(data));</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions_htm_a8729e01f9f8e2ef8d2cd950a4b6bbaf2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a8729e01f9f8e2ef8d2cd950a4b6bbaf2">Deveel.Data.Security.CryptoHashExtenions.BinaryToHex</a></div><div class="ttdeci">static string BinaryToHex(byte[] data)</div><div class="ttdef"><b>Definition:</b> <a href="CryptoHashExtensions_8cs_source.htm#l00182">CryptoHashExtensions.cs:182</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a5cbc98183111d08ff420bf8dc81ee31f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static byte [] Deveel.Data.Security.CryptoHashExtenions.GenerateSalt </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IHashFunction.htm">IHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00170">170</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                                                                   {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keywordtype">int</span> byteLength = (hash.HashSize / 2) / 8;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            byte[] buf = <span class="keyword">new</span> byte[byteLength];</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            var rng = <span class="keyword">new</span> RNGCryptoServiceProvider();</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            rng.GetBytes(buf);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordflow">return</span> buf;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a99b6cdf1f0574af31b756c3ebd6974fd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static string Deveel.Data.Security.CryptoHashExtenions.GenerateSaltString </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IHashFunction.htm">IHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00178">178</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                                                                         {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="keywordflow">return</span> Convert.ToBase64String(hash.GenerateSalt());</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0b6d682a6b3a8e1abd6262df6774f2c0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static byte [] Deveel.Data.Security.CryptoHashExtenions.MakePbkdf2 </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>salt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iterationCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00046">46</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                                                                                                   {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            var hashKey = hash.Key;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            <span class="keywordflow">if</span> (hashKey == null || hashKey.Length == 0)</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="stringliteral">&quot;Key was not specified for the hash.&quot;</span>);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a0b6d682a6b3a8e1abd6262df6774f2c0">MakePbkdf2</a>(hash, hashKey, salt, length, iterationCount);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions_htm_a0b6d682a6b3a8e1abd6262df6774f2c0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a0b6d682a6b3a8e1abd6262df6774f2c0">Deveel.Data.Security.CryptoHashExtenions.MakePbkdf2</a></div><div class="ttdeci">static byte[] MakePbkdf2(this IKeyedHashFunction hash, byte[] salt, int length, int iterationCount)</div><div class="ttdef"><b>Definition:</b> <a href="CryptoHashExtensions_8cs_source.htm#l00046">CryptoHashExtensions.cs:46</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a7b47a48dc30cf6bb7ceb1949db18377b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static byte [] Deveel.Data.Security.CryptoHashExtenions.MakePbkdf2 </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>salt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00054">54</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                                                                                                            {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a0b6d682a6b3a8e1abd6262df6774f2c0">MakePbkdf2</a>(hash, data, salt, length, <a class="code" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a13a23daf713f02e17e85512180b403d4">DefaultIterationCount</a>);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions_htm_a0b6d682a6b3a8e1abd6262df6774f2c0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a0b6d682a6b3a8e1abd6262df6774f2c0">Deveel.Data.Security.CryptoHashExtenions.MakePbkdf2</a></div><div class="ttdeci">static byte[] MakePbkdf2(this IKeyedHashFunction hash, byte[] salt, int length, int iterationCount)</div><div class="ttdef"><b>Definition:</b> <a href="CryptoHashExtensions_8cs_source.htm#l00046">CryptoHashExtensions.cs:46</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions_htm_a13a23daf713f02e17e85512180b403d4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a13a23daf713f02e17e85512180b403d4">Deveel.Data.Security.CryptoHashExtenions.DefaultIterationCount</a></div><div class="ttdeci">const int DefaultIterationCount</div><div class="ttdef"><b>Definition:</b> <a href="CryptoHashExtensions_8cs_source.htm#l00026">CryptoHashExtensions.cs:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4928a4a092f6595932f74c748e300c6f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static byte [] Deveel.Data.Security.CryptoHashExtenions.MakePbkdf2 </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>salt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iterationCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00058">58</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                                                                                                                {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            hash.Key = data;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keywordtype">int</span> hashLength = hash.HashSize/8;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keywordflow">if</span> ((hash.HashSize &amp; 7) != 0)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                hashLength++;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keywordtype">int</span> keyLength = length/hashLength;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <span class="keywordflow">if</span> (length &gt; (0xFFFFFFFFL*hashLength) || length &lt; 0)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentOutOfRangeException(<span class="stringliteral">&quot;length&quot;</span>);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            <span class="keywordflow">if</span> (length%hashLength != 0)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                keyLength++;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            byte[] extendedkey = <span class="keyword">new</span> byte[salt.Length + 4];</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            Buffer.BlockCopy(salt, 0, extendedkey, 0, salt.Length);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keyword">using</span> (var ms = <span class="keyword">new</span> MemoryStream()) {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; keyLength; i++) {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                    extendedkey[salt.Length] = (byte) (((i + 1) &gt;&gt; 24) &amp; 0xFF);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                    extendedkey[salt.Length + 1] = (byte) (((i + 1) &gt;&gt; 16) &amp; 0xFF);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                    extendedkey[salt.Length + 2] = (byte) (((i + 1) &gt;&gt; 8) &amp; 0xFF);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                    extendedkey[salt.Length + 3] = (byte) (((i + 1)) &amp; 0xFF);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    byte[] u = hash.Compute(extendedkey);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                    <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Array</a>.Clear(extendedkey, salt.Length, 4);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                    byte[] f = u;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 1; j &lt; iterationCount; j++) {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                        u = hash.Compute(u);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> k = 0; k &lt; f.Length; k++) {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                            f[k] ^= u[k];</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                        }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                    }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                    ms.Write(f, 0, f.Length);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                    <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Array</a>.Clear(u, 0, u.Length);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                    <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Array</a>.Clear(f, 0, f.Length);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                byte[] dk = <span class="keyword">new</span> byte[length];</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                ms.Position = 0;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                ms.Read(dk, 0, length);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                ms.Position = 0;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">long</span> i = 0; i &lt; ms.Length; i++) {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                    ms.WriteByte(0);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Array</a>.Clear(extendedkey, 0, extendedkey.Length);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                <span class="keywordflow">return</span> dk;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a4410ec34d9e6c1a68100ca0ce033fb17">Deveel.Data.Types.SqlTypeCode.Array</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa9cc750984f797915f813a12a44073fd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static string Deveel.Data.Security.CryptoHashExtenions.MakePbkdf2String </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>salt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00028">28</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                                                                                                                   {</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#aa9cc750984f797915f813a12a44073fd">MakePbkdf2String</a>(hash, input, salt, length, <a class="code" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a13a23daf713f02e17e85512180b403d4">DefaultIterationCount</a>);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions_htm_aa9cc750984f797915f813a12a44073fd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#aa9cc750984f797915f813a12a44073fd">Deveel.Data.Security.CryptoHashExtenions.MakePbkdf2String</a></div><div class="ttdeci">static string MakePbkdf2String(this IKeyedHashFunction hash, string input, string salt, int length)</div><div class="ttdef"><b>Definition:</b> <a href="CryptoHashExtensions_8cs_source.htm#l00028">CryptoHashExtensions.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions_htm_a13a23daf713f02e17e85512180b403d4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a13a23daf713f02e17e85512180b403d4">Deveel.Data.Security.CryptoHashExtenions.DefaultIterationCount</a></div><div class="ttdeci">const int DefaultIterationCount</div><div class="ttdef"><b>Definition:</b> <a href="CryptoHashExtensions_8cs_source.htm#l00026">CryptoHashExtensions.cs:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4e0b170bbcb112f9e52b77ee03199354"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static string Deveel.Data.Security.CryptoHashExtenions.MakePbkdf2String </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>salt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iterationCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00032">32</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                                                                                                                                       {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            <span class="keywordflow">return</span> hash.MakePbkdf2String(input, Convert.FromBase64String(salt), length, iterationCount);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a00d9bc4546d2c336c81911faeffb4ae5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static string Deveel.Data.Security.CryptoHashExtenions.MakePbkdf2String </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>salt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00036">36</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                                                                                                                   {</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#aa9cc750984f797915f813a12a44073fd">MakePbkdf2String</a>(hash, input, salt, length, <a class="code" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a13a23daf713f02e17e85512180b403d4">DefaultIterationCount</a>);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions_htm_aa9cc750984f797915f813a12a44073fd"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#aa9cc750984f797915f813a12a44073fd">Deveel.Data.Security.CryptoHashExtenions.MakePbkdf2String</a></div><div class="ttdeci">static string MakePbkdf2String(this IKeyedHashFunction hash, string input, string salt, int length)</div><div class="ttdef"><b>Definition:</b> <a href="CryptoHashExtensions_8cs_source.htm#l00028">CryptoHashExtensions.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions_htm_a13a23daf713f02e17e85512180b403d4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a13a23daf713f02e17e85512180b403d4">Deveel.Data.Security.CryptoHashExtenions.DefaultIterationCount</a></div><div class="ttdeci">const int DefaultIterationCount</div><div class="ttdef"><b>Definition:</b> <a href="CryptoHashExtensions_8cs_source.htm#l00026">CryptoHashExtensions.cs:26</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac51f54f5719cd65f94750ff5280a285d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static string Deveel.Data.Security.CryptoHashExtenions.MakePbkdf2String </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>salt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iterationCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00040">40</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                                                                                                                                       {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            var data = Encoding.UTF8.GetBytes(input);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            var result = hash.MakePbkdf2(data, salt, length, iterationCount);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="keywordflow">return</span> Convert.ToBase64String(result);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a074329b1cf7115d5f1507e1c6397f53a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Deveel.Data.Security.CryptoHashExtenions.VerifyPbkdf2 </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>hashed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>otherData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>salt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00112">112</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                                                                                                    {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a074329b1cf7115d5f1507e1c6397f53a">VerifyPbkdf2</a>(hash, hashed, otherData, salt, <a class="code" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a13a23daf713f02e17e85512180b403d4">DefaultIterationCount</a>);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions_htm_a13a23daf713f02e17e85512180b403d4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a13a23daf713f02e17e85512180b403d4">Deveel.Data.Security.CryptoHashExtenions.DefaultIterationCount</a></div><div class="ttdeci">const int DefaultIterationCount</div><div class="ttdef"><b>Definition:</b> <a href="CryptoHashExtensions_8cs_source.htm#l00026">CryptoHashExtensions.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions_htm_a074329b1cf7115d5f1507e1c6397f53a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a074329b1cf7115d5f1507e1c6397f53a">Deveel.Data.Security.CryptoHashExtenions.VerifyPbkdf2</a></div><div class="ttdeci">static bool VerifyPbkdf2(this IKeyedHashFunction hash, byte[] hashed, byte[] otherData, byte[] salt)</div><div class="ttdef"><b>Definition:</b> <a href="CryptoHashExtensions_8cs_source.htm#l00112">CryptoHashExtensions.cs:112</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a953e19a6f5c1fe84d42fcf6ddabe3d1f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Deveel.Data.Security.CryptoHashExtenions.VerifyPbkdf2 </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>hashed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>otherData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>salt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iterationCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00116">116</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                                                                                                                        {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="keywordtype">int</span> length = hashed.Length;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            var otherHashed = hash.MakePbkdf2(otherData, salt, length, iterationCount);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordflow">if</span> (otherHashed.Length != hashed.Length)</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a842919c9bb41140b518e3421f6b6e3d2">ByteArraysEqual</a>(hashed, otherHashed);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions_htm_a842919c9bb41140b518e3421f6b6e3d2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a842919c9bb41140b518e3421f6b6e3d2">Deveel.Data.Security.CryptoHashExtenions.ByteArraysEqual</a></div><div class="ttdeci">static bool ByteArraysEqual(byte[] a, byte[] b)</div><div class="ttdef"><b>Definition:</b> <a href="CryptoHashExtensions_8cs_source.htm#l00147">CryptoHashExtensions.cs:147</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa7df347d81d1582f089523fba60c2e31"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Deveel.Data.Security.CryptoHashExtenions.VerifyPbkdf2String </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>hashedString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>otherString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>salt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00127">127</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                                                                                                                  {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#aa7df347d81d1582f089523fba60c2e31">VerifyPbkdf2String</a>(hash, hashedString, otherString, salt, <a class="code" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a13a23daf713f02e17e85512180b403d4">DefaultIterationCount</a>);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions_htm_a13a23daf713f02e17e85512180b403d4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a13a23daf713f02e17e85512180b403d4">Deveel.Data.Security.CryptoHashExtenions.DefaultIterationCount</a></div><div class="ttdeci">const int DefaultIterationCount</div><div class="ttdef"><b>Definition:</b> <a href="CryptoHashExtensions_8cs_source.htm#l00026">CryptoHashExtensions.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions_htm_aa7df347d81d1582f089523fba60c2e31"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#aa7df347d81d1582f089523fba60c2e31">Deveel.Data.Security.CryptoHashExtenions.VerifyPbkdf2String</a></div><div class="ttdeci">static bool VerifyPbkdf2String(this IKeyedHashFunction hash, string hashedString, string otherString, byte[] salt)</div><div class="ttdef"><b>Definition:</b> <a href="CryptoHashExtensions_8cs_source.htm#l00127">CryptoHashExtensions.cs:127</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a87620e6321e6e714e64c1ecd31ba3f0c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Deveel.Data.Security.CryptoHashExtenions.VerifyPbkdf2String </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>hashedString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>otherString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">byte[]&#160;</td>
          <td class="paramname"><em>salt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iterationCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00131">131</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                                                                                                                                                      {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="keywordflow">return</span> hash.VerifyPbkdf2String(hashedString, otherString, Convert.ToBase64String(salt), iterationCount);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa8165460bc7fcf7420401e9dd6dc3be0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Deveel.Data.Security.CryptoHashExtenions.VerifyPbkdf2String </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>hashedString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>otherString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>saltString</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00135">135</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                                                                                                                                        {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#aa7df347d81d1582f089523fba60c2e31">VerifyPbkdf2String</a>(hash, hashedString, otherString, saltString, <a class="code" href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a13a23daf713f02e17e85512180b403d4">DefaultIterationCount</a>);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions_htm_a13a23daf713f02e17e85512180b403d4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#a13a23daf713f02e17e85512180b403d4">Deveel.Data.Security.CryptoHashExtenions.DefaultIterationCount</a></div><div class="ttdeci">const int DefaultIterationCount</div><div class="ttdef"><b>Definition:</b> <a href="CryptoHashExtensions_8cs_source.htm#l00026">CryptoHashExtensions.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions_htm_aa7df347d81d1582f089523fba60c2e31"><div class="ttname"><a href="classDeveel_1_1Data_1_1Security_1_1CryptoHashExtenions.htm#aa7df347d81d1582f089523fba60c2e31">Deveel.Data.Security.CryptoHashExtenions.VerifyPbkdf2String</a></div><div class="ttdeci">static bool VerifyPbkdf2String(this IKeyedHashFunction hash, string hashedString, string otherString, byte[] salt)</div><div class="ttdef"><b>Definition:</b> <a href="CryptoHashExtensions_8cs_source.htm#l00127">CryptoHashExtensions.cs:127</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae1fb384226d5247de63715f1b07f4029"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Deveel.Data.Security.CryptoHashExtenions.VerifyPbkdf2String </td>
          <td>(</td>
          <td class="paramtype">this <a class="el" href="interfaceDeveel_1_1Data_1_1Security_1_1IKeyedHashFunction.htm">IKeyedHashFunction</a>&#160;</td>
          <td class="paramname"><em>hash</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>hashedString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>otherString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>saltString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>iterationCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00139">139</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                                                                                                                                                            {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            var hashed = Convert.FromBase64String(hashedString);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            var otherData = Encoding.UTF8.GetBytes(otherString);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            var salt = Convert.FromBase64String(saltString);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordflow">return</span> hash.VerifyPbkdf2(hashed, otherData, salt, iterationCount);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        }</div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a13a23daf713f02e17e85512180b403d4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const int Deveel.Data.Security.CryptoHashExtenions.DefaultIterationCount = 10000</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="CryptoHashExtensions_8cs_source.htm#l00026">26</a> of file <a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Security/<a class="el" href="CryptoHashExtensions_8cs_source.htm">CryptoHashExtensions.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
