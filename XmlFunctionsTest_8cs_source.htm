<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb.xml.nunit/Deveel.Data.Xml/XmlFunctionsTest.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_9fd3463840232e030f388ed9d24c9a3b.htm">deveeldb.xml.nunit</a></li><li class="navelem"><a class="el" href="dir_74d46c6db05ecb7206c491e41e48b2c7.htm">Deveel.Data.Xml</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">XmlFunctionsTest.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="XmlFunctionsTest_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.Text;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Routines.htm">Routines</a>;</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Services.htm">Services</a>;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm">Expressions</a>;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql.htm">Sql</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm">Objects</a>;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceDeveel.htm">Deveel</a>.<a class="code" href="namespaceDeveel_1_1Data.htm">Data</a>.<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm">Types</a>;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceNUnit.htm">NUnit</a>.Framework;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Xml {</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    [TestFixture]</div>
<div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm">   14</a></span>&#160;    <span class="keyword">public</span> <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm">XmlFunctionsTest</a> : <a class="code" href="classDeveel_1_1Data_1_1ContextBasedTest.htm">ContextBasedTest</a> {</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#a7a6077e78a7db3caa677e7fe7bd5796d">   15</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">override</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#a7a6077e78a7db3caa677e7fe7bd5796d">RegisterServices</a>(<a class="code" href="classDeveel_1_1Data_1_1Services_1_1ServiceContainer.htm">ServiceContainer</a> container) {</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;            container.UseXml();</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;        }</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#abec33138c00f4b6cd43c6d929fe3f6f4">   19</a></span>&#160;        <span class="keyword">private</span> <a class="code" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a> <a class="code" href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#abec33138c00f4b6cd43c6d929fe3f6f4">ParseAndInvoke</a>(<span class="keywordtype">string</span> text) {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;            var exp = <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">SqlExpression</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a6feb50dc1acae16dfeacf4ebda4f15fe">Parse</a>(text);</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlFunctionCallExpression.htm">SqlFunctionCallExpression</a>&gt;(exp);</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;            var functionName = ((<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlFunctionCallExpression.htm">SqlFunctionCallExpression</a>)exp).<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlFunctionCallExpression.htm#ab210700ffc7acf93c21f469e86740d95">FunctioName</a>;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;            var args = ((<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlFunctionCallExpression.htm">SqlFunctionCallExpression</a>)exp).Arguments;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;            var invoke = <span class="keyword">new</span> <a class="code" href="classDeveel_1_1Data_1_1Routines_1_1Invoke.htm">Invoke</a>(functionName, args);</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Query.htm">Query</a>.InvokeFunction(invoke);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        }</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        [Test]</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#ab16e1974340d1629c51d286d2f8a235f">   31</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#ab16e1974340d1629c51d286d2f8a235f">ToXmlType</a>() {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> text = <span class="stringliteral">&quot;TO_XML(&#39;&lt;root&gt;value&lt;/root&gt;&#39;)&quot;</span>;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            var result = ParseAndInvoke(text);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Xml_1_1XmlNodeType.htm">XmlNodeType</a>&gt;(result.Type);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            Assert.IsFalse(result.IsNull);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        }</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        [Test]</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#ab41238b74e86c88359b11ec1c54afa7e">   42</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#ab41238b74e86c88359b11ec1c54afa7e">ExtractXml</a>() {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> text = <span class="stringliteral">&quot;EXTRACT(TO_XML(&#39;&lt;root&gt;&lt;child&gt;value&lt;/child&gt;&lt;/root&gt;&#39;), &#39;/root/child&#39;)&quot;</span>;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            var result = ParseAndInvoke(text);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Xml_1_1XmlNodeType.htm">XmlNodeType</a>&gt;(result.Type);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            Assert.IsFalse(result.IsNull);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        [Test]</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#a678a537d880862ae7c2ada214b560d51">   53</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#a678a537d880862ae7c2ada214b560d51">ExtractValue</a>() {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> text = <span class="stringliteral">&quot;EXTRACTVALUE(TO_XML(&#39;&lt;root&gt;&lt;child&gt;value&lt;/child&gt;&lt;/root&gt;&#39;), &#39;/root/child/text()&#39;)&quot;</span>;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            var result = ParseAndInvoke(text);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm">StringType</a>&gt;(result.Type);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            Assert.IsFalse(result.IsNull);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        }</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        [Test]</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#aec2b262dd7d053b6230a6ecf47bf6d0c">   64</a></span>&#160;        <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#aec2b262dd7d053b6230a6ecf47bf6d0c">UpdateText</a>() {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">string</span> text = <span class="stringliteral">&quot;UPDATEXML(TO_XML(&#39;&lt;root&gt;&lt;child&gt;value&lt;/child&gt;&lt;/root&gt;&#39;), &#39;/root/child/text()&#39;, &#39;value2&#39;)&quot;</span>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            var result = ParseAndInvoke(text);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            Assert.IsNotNull(result);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            Assert.IsInstanceOf&lt;<a class="code" href="classDeveel_1_1Data_1_1Xml_1_1XmlNodeType.htm">XmlNodeType</a>&gt;(result.Type);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            Assert.IsFalse(result.IsNull);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="comment">/*</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">            TODO: must inspect why the text fails to compare...</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">            var xmlNode = (SqlXmlNode) result.Value;</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">            var updated = xmlNode.ToSqlString().Value;</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">            var expected = &quot;&lt;root&gt;&lt;child&gt;value2&lt;/child&gt;&lt;/root&gt;&quot;;</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">            Assert.AreEqual(expected, updated);</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">            */</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest_htm_ab41238b74e86c88359b11ec1c54afa7e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#ab41238b74e86c88359b11ec1c54afa7e">Deveel.Data.Xml.XmlFunctionsTest.ExtractXml</a></div><div class="ttdeci">void ExtractXml()</div><div class="ttdef"><b>Definition:</b> <a href="XmlFunctionsTest_8cs_source.htm#l00042">XmlFunctionsTest.cs:42</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm_a6feb50dc1acae16dfeacf4ebda4f15fe"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm#a6feb50dc1acae16dfeacf4ebda4f15fe">Deveel.Data.Sql.Expressions.SqlExpression.Parse</a></div><div class="ttdeci">static SqlExpression Parse(string s)</div><div class="ttdoc">Parses the given SQL string to an expression that can be evaluated. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00219">SqlExpression.cs:219</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Query_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Query.htm">Deveel.Data.Query</a></div><div class="ttdef"><b>Definition:</b> <a href="Query_8cs_source.htm#l00026">Query.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm">Deveel.Data.Types.StringType</a></div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00029">StringType.cs:29</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm">Deveel.Data.Xml.XmlFunctionsTest</a></div><div class="ttdef"><b>Definition:</b> <a href="XmlFunctionsTest_8cs_source.htm#l00014">XmlFunctionsTest.cs:14</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Xml_1_1XmlNodeType_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Xml_1_1XmlNodeType.htm">Deveel.Data.Xml.XmlNodeType</a></div><div class="ttdef"><b>Definition:</b> <a href="XmlNodeType_8cs_source.htm#l00009">XmlNodeType.cs:9</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest_htm_aec2b262dd7d053b6230a6ecf47bf6d0c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#aec2b262dd7d053b6230a6ecf47bf6d0c">Deveel.Data.Xml.XmlFunctionsTest.UpdateText</a></div><div class="ttdeci">void UpdateText()</div><div class="ttdef"><b>Definition:</b> <a href="XmlFunctionsTest_8cs_source.htm#l00064">XmlFunctionsTest.cs:64</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Objects_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Objects.htm">Deveel.Data.Sql.Objects</a></div><div class="ttdef"><b>Definition:</b> <a href="IObjectRef_8cs_source.htm#l00021">IObjectRef.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest_htm_a678a537d880862ae7c2ada214b560d51"><div class="ttname"><a href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#a678a537d880862ae7c2ada214b560d51">Deveel.Data.Xml.XmlFunctionsTest.ExtractValue</a></div><div class="ttdeci">void ExtractValue()</div><div class="ttdef"><b>Definition:</b> <a href="XmlFunctionsTest_8cs_source.htm#l00053">XmlFunctionsTest.cs:53</a></div></div>
<div class="ttc" id="namespaceNUnit_htm"><div class="ttname"><a href="namespaceNUnit.htm">NUnit</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest_htm_a7a6077e78a7db3caa677e7fe7bd5796d"><div class="ttname"><a href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#a7a6077e78a7db3caa677e7fe7bd5796d">Deveel.Data.Xml.XmlFunctionsTest.RegisterServices</a></div><div class="ttdeci">override void RegisterServices(ServiceContainer container)</div><div class="ttdef"><b>Definition:</b> <a href="XmlFunctionsTest_8cs_source.htm#l00015">XmlFunctionsTest.cs:15</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1ContextBasedTest_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1ContextBasedTest.htm">Deveel.Data.ContextBasedTest</a></div><div class="ttdef"><b>Definition:</b> <a href="ContextBasedTest_8cs_source.htm#l00025">ContextBasedTest.cs:25</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Services_1_1ServiceContainer_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Services_1_1ServiceContainer.htm">Deveel.Data.Services.ServiceContainer</a></div><div class="ttdef"><b>Definition:</b> <a href="ServiceContainer_8cs_source.htm#l00024">ServiceContainer.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1DataObject_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1DataObject.htm">Deveel.Data.DataObject</a></div><div class="ttdoc">Represents a dynamic object that encapsulates a defined SqlType and a compatible constant ISqlObject ...</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00035">DataObject.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Routines_1_1Invoke_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Routines_1_1Invoke.htm">Deveel.Data.Routines.Invoke</a></div><div class="ttdoc">The information about the invocation of a routine, including the full name and arguments (as SqlExpre...</div><div class="ttdef"><b>Definition:</b> <a href="Invoke_8cs_source.htm#l00030">Invoke.cs:30</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest_htm_abec33138c00f4b6cd43c6d929fe3f6f4"><div class="ttname"><a href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#abec33138c00f4b6cd43c6d929fe3f6f4">Deveel.Data.Xml.XmlFunctionsTest.ParseAndInvoke</a></div><div class="ttdeci">DataObject ParseAndInvoke(string text)</div><div class="ttdef"><b>Definition:</b> <a href="XmlFunctionsTest_8cs_source.htm#l00019">XmlFunctionsTest.cs:19</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Services_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Services.htm">Deveel.Data.Services</a></div><div class="ttdef"><b>Definition:</b> <a href="IRegistrationConfiguration_8cs_source.htm#l00019">IRegistrationConfiguration.cs:19</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Routines_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Routines.htm">Deveel.Data.Routines</a></div><div class="ttdef"><b>Definition:</b> <a href="AggregateFunction_8cs_source.htm#l00024">AggregateFunction.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlFunctionCallExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlFunctionCallExpression.htm">Deveel.Data.Sql.Expressions.SqlFunctionCallExpression</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlFunctionCallExpression_8cs_source.htm#l00023">SqlFunctionCallExpression.cs:23</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm">Deveel.Data.Types</a></div><div class="ttdef"><b>Definition:</b> <a href="ArrayType_8cs_source.htm#l00021">ArrayType.cs:21</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data.htm">Deveel.Data</a></div><div class="ttdef"><b>Definition:</b> <a href="ActiveSessionList_8cs_source.htm#l00022">ActiveSessionList.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlExpression.htm">Deveel.Data.Sql.Expressions.SqlExpression</a></div><div class="ttdoc">Defines the base class for instances that represent SQL expression tree nodes. </div><div class="ttdef"><b>Definition:</b> <a href="SqlExpression_8cs_source.htm#l00035">SqlExpression.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlFunctionCallExpression_htm_ab210700ffc7acf93c21f469e86740d95"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Expressions_1_1SqlFunctionCallExpression.htm#ab210700ffc7acf93c21f469e86740d95">Deveel.Data.Sql.Expressions.SqlFunctionCallExpression.FunctioName</a></div><div class="ttdeci">ObjectName FunctioName</div><div class="ttdef"><b>Definition:</b> <a href="SqlFunctionCallExpression_8cs_source.htm#l00035">SqlFunctionCallExpression.cs:35</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql.htm">Deveel.Data.Sql</a></div><div class="ttdef"><b>Definition:</b> <a href="CellId_8cs_source.htm#l00022">CellId.cs:22</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions_htm"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Sql_1_1Expressions.htm">Deveel.Data.Sql.Expressions</a></div><div class="ttdef"><b>Definition:</b> <a href="AggregateChecker_8cs_source.htm#l00022">AggregateChecker.cs:22</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest_htm_ab16e1974340d1629c51d286d2f8a235f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Xml_1_1XmlFunctionsTest.htm#ab16e1974340d1629c51d286d2f8a235f">Deveel.Data.Xml.XmlFunctionsTest.ToXmlType</a></div><div class="ttdeci">void ToXmlType()</div><div class="ttdef"><b>Definition:</b> <a href="XmlFunctionsTest_8cs_source.htm#l00031">XmlFunctionsTest.cs:31</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
