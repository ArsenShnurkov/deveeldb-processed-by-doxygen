<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: /var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Store/ObjectStream.cs Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_4864ba48851acdac1f58aca03434e433.htm">deveeldb.git</a></li><li class="navelem"><a class="el" href="dir_16ba1103c766f180fec75258526d70ac.htm">src</a></li><li class="navelem"><a class="el" href="dir_bfbf8ac8e8a34c8957f32a767b16c329.htm">deveeldb</a></li><li class="navelem"><a class="el" href="dir_0766e9ed020ad325b7865972be4cac40.htm">Deveel.Data.Store</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ObjectStream.cs</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ObjectStream_8cs.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//  Copyright 2010-2015 Deveel</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">//    Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//    you may not use this file except in compliance with the License.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">//    You may obtain a copy of the License at</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//        http://www.apache.org/licenses/LICENSE-2.0</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// </span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//    Unless required by applicable law or agreed to in writing, software</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">//    distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">//    See the License for the specific language governing permissions and</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    limitations under the License.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceSystem.htm">System</a>.IO;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceDeveel.htm">Deveel</a>.Data.Store {</div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm">   21</a></span>&#160;    <span class="keyword">public</span> sealed <span class="keyword">class </span><a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm">ObjectStream</a> : Stream {</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#ab8bb34f9db4286c9d33eb5b03e8b98aa">   22</a></span>&#160;        <span class="keyword">private</span> readonly <a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1ILargeObject.htm">ILargeObject</a> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#ab8bb34f9db4286c9d33eb5b03e8b98aa">largeObject</a>;</div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a73cc508c03229ec769a1b936aec2ddb0">   23</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a73cc508c03229ec769a1b936aec2ddb0">position</a>;</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a347502703e2958cf14172d3830fbc3e5">   24</a></span>&#160;        <span class="keyword">private</span> Stream <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a347502703e2958cf14172d3830fbc3e5">outTempStream</a>;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a7577a4d293d512080179c5beb3a9f1c5">   26</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a7577a4d293d512080179c5beb3a9f1c5">readBufferPos</a>;</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#ae39fa72f37fe2d6a6950d60e326a7fe3">   27</a></span>&#160;        <span class="keyword">private</span> readonly byte[] <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#ae39fa72f37fe2d6a6950d60e326a7fe3">readBuf</a>;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#ac19ae798a4c795804170d0a3dd4a9041">   29</a></span>&#160;        <span class="keyword">private</span> <span class="keyword">const</span> <span class="keywordtype">int</span> BufferSize = 64*1024;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#acb145c1abdfe6a01d1454ae8bd2347a2">   31</a></span>&#160;        <span class="keyword">public</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#acb145c1abdfe6a01d1454ae8bd2347a2">ObjectStream</a>(<a class="code" href="interfaceDeveel_1_1Data_1_1Store_1_1ILargeObject.htm">ILargeObject</a> largeObject) {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <span class="keywordflow">if</span> (largeObject == null)</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;largeObject&quot;</span>);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            this.largeObject = largeObject;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            outTempStream = <span class="keyword">new</span> MemoryStream(64*1024);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            readBuf = <span class="keyword">new</span> byte[BufferSize];</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            readBufferPos = -1;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        }</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#afecaa056090c9e74109694cc3b4721aa">   42</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#afecaa056090c9e74109694cc3b4721aa">ReadPageContent</a>(byte[] buffer, <span class="keywordtype">long</span> pos, <span class="keywordtype">int</span> length) {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            largeObject.Read(pos, buffer, length);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        }</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#acf5e8d0632344dd90e69a48f7b99b1fe">   46</a></span>&#160;        <span class="keyword">private</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#acf5e8d0632344dd90e69a48f7b99b1fe">FillBuffer</a>(<span class="keywordtype">long</span> pos) {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <span class="keywordtype">long</span> readPos = (pos/BufferSize)*BufferSize;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            <span class="keywordtype">int</span> toRead = (int) <a class="code" href="namespaceSystem.htm">System</a>.Math.Min(BufferSize, (largeObject.RawSize - readPos));</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            <span class="keywordflow">if</span> (toRead &gt; 0) {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                ReadPageContent(readBuf, readPos, toRead);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                readBufferPos = readPos;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#abe2be813cc9a4dedfe945b2d105b59c6">   55</a></span>&#160;        <span class="keyword">protected</span> <span class="keyword">override</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#abe2be813cc9a4dedfe945b2d105b59c6">Dispose</a>(<span class="keywordtype">bool</span> disposing) {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <span class="keywordflow">if</span> (disposing) {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                <span class="keywordflow">if</span> (outTempStream != null)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                    outTempStream.Dispose();</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            outTempStream = null;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            base.Dispose(disposing);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#aac21881a45c30341e2a0293b81299495">   65</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#aac21881a45c30341e2a0293b81299495">Flush</a>() {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <span class="keywordflow">if</span> (outTempStream == null ||</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                outTempStream.Length == 0)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                <span class="keywordtype">long</span> offset = 0;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                var buffer = <span class="keyword">new</span> byte[BufferSize];</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                var totalLength = outTempStream.Length;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                outTempStream.Seek(0, SeekOrigin.Begin);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                <span class="keywordflow">while</span> (offset &lt; totalLength) {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                    <span class="comment">// Fill the buffer</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                    <span class="keywordtype">int</span> index = 0;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                    <span class="keywordtype">int</span> blockRead = (int) <a class="code" href="namespaceSystem.htm">System</a>.Math.Min((<span class="keywordtype">long</span>) BufferSize, (totalLength - offset));</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                    <span class="keywordtype">int</span> toRead = blockRead;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    <span class="keywordflow">while</span> (toRead &gt; 0) {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                        <span class="keywordtype">int</span> count = outTempStream.Read(buffer, index, toRead);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                        <span class="keywordflow">if</span> (count == 0)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                        index += count;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                        toRead -= count;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                    }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                    <span class="comment">// Send the part of the streamable object to the database.</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                    largeObject.Write(offset, buffer, blockRead);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                    <span class="comment">// Increment the offset and upload the next part of the object.</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                    offset += blockRead;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            } <span class="keywordflow">finally</span> {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                outTempStream.SetLength(0);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a93a3c8bab705b45e8fd9481a8cdf31b9">  101</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">long</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a93a3c8bab705b45e8fd9481a8cdf31b9">Seek</a>(<span class="keywordtype">long</span> offset, SeekOrigin origin) {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a19b606423ce8c3d0af248fb6a0b22edc">  105</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a19b606423ce8c3d0af248fb6a0b22edc">SetLength</a>(<span class="keywordtype">long</span> value) {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException(<span class="stringliteral">&quot;The lenght of the underlying object cannot be changed.&quot;</span>);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        }</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a357f803ce4b2eb3ff09deded0d261f3e">  109</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">int</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a357f803ce4b2eb3ff09deded0d261f3e">Read</a>(byte[] buffer, <span class="keywordtype">int</span> offset, <span class="keywordtype">int</span> count) {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordflow">if</span> (!largeObject.IsComplete)</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;The underlying object is not complete.&quot;</span>);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keywordflow">if</span> (count &lt;= 0) {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="keywordflow">if</span> (readBufferPos == -1) {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                FillBuffer(position);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordtype">int</span> p = (int) (position - readBufferPos);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keywordtype">long</span> bufferEnd = <a class="code" href="namespaceSystem.htm">System</a>.Math.Min(readBufferPos + BufferSize, largeObject.RawSize);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordtype">int</span> toRead = (int) <a class="code" href="namespaceSystem.htm">System</a>.Math.Min((<span class="keywordtype">long</span>) count, bufferEnd - position);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="keywordflow">if</span> (toRead &lt;= 0) {</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordtype">int</span> hasRead = 0;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keywordflow">while</span> (toRead &gt; 0) {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                Array.Copy(readBuf, p, buffer, offset, toRead);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                hasRead += toRead;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                p += toRead;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                offset += toRead;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                count -= toRead;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                position += toRead;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <span class="keywordflow">if</span> (p &gt;= BufferSize) {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                    FillBuffer(readBufferPos + BufferSize);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                    p -= BufferSize;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                bufferEnd = <a class="code" href="namespaceSystem.htm">System</a>.Math.Min(readBufferPos + BufferSize, largeObject.RawSize);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                toRead = (int) <a class="code" href="namespaceSystem.htm">System</a>.Math.Min((<span class="keywordtype">long</span>)count, bufferEnd - position);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <span class="keywordflow">return</span> hasRead;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#ab3e4b58288f928ab2e4eab1f91d6e144">  146</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">void</span> <a class="code" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#ab3e4b58288f928ab2e4eab1f91d6e144">Write</a>(byte[] buffer, <span class="keywordtype">int</span> offset, <span class="keywordtype">int</span> count) {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="keywordflow">if</span> (largeObject.IsComplete)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> IOException(<span class="stringliteral">&quot;The underlying object is complete.&quot;</span>);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            outTempStream.Write(buffer, offset, count);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            position += count;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#afe43561034ff1399c6e81e6d0dd71817">  154</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> CanRead {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> largeObject.IsComplete; }</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#aacb767e4978599e15546136e1a1564b0">  158</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> CanSeek {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#ae0c3dddf607f4d6a3267faf671548aef">  162</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">bool</span> CanWrite {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> !largeObject.IsComplete; }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a268a3fe076acee009e3c80fbb7593b1d">  166</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">long</span> Length {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> largeObject.RawSize; }</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        }</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a39f6a672a152d44b4339d229dba1f95c">  170</a></span>&#160;        <span class="keyword">public</span> <span class="keyword">override</span> <span class="keywordtype">long</span> Position {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <span class="keyword">get</span> { <span class="keywordflow">return</span> position; }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            set { position = Seek(value, SeekOrigin.Begin); }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;}</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStream_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm">Deveel.Data.Store.ObjectStream</a></div><div class="ttdef"><b>Definition:</b> <a href="ObjectStream_8cs_source.htm#l00021">ObjectStream.cs:21</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStream_htm_a19b606423ce8c3d0af248fb6a0b22edc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a19b606423ce8c3d0af248fb6a0b22edc">Deveel.Data.Store.ObjectStream.SetLength</a></div><div class="ttdeci">override void SetLength(long value)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStream_8cs_source.htm#l00105">ObjectStream.cs:105</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStream_htm_ab8bb34f9db4286c9d33eb5b03e8b98aa"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#ab8bb34f9db4286c9d33eb5b03e8b98aa">Deveel.Data.Store.ObjectStream.largeObject</a></div><div class="ttdeci">readonly ILargeObject largeObject</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStream_8cs_source.htm#l00022">ObjectStream.cs:22</a></div></div>
<div class="ttc" id="namespaceDeveel_htm"><div class="ttname"><a href="namespaceDeveel.htm">Deveel</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStream_htm_a93a3c8bab705b45e8fd9481a8cdf31b9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a93a3c8bab705b45e8fd9481a8cdf31b9">Deveel.Data.Store.ObjectStream.Seek</a></div><div class="ttdeci">override long Seek(long offset, SeekOrigin origin)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStream_8cs_source.htm#l00101">ObjectStream.cs:101</a></div></div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Store_1_1ILargeObject_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Store_1_1ILargeObject.htm">Deveel.Data.Store.ILargeObject</a></div><div class="ttdoc">Defines a referenced object that can be accessed on a multi-phase level. </div><div class="ttdef"><b>Definition:</b> <a href="ILargeObject_8cs_source.htm#l00035">ILargeObject.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStream_htm_afecaa056090c9e74109694cc3b4721aa"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#afecaa056090c9e74109694cc3b4721aa">Deveel.Data.Store.ObjectStream.ReadPageContent</a></div><div class="ttdeci">void ReadPageContent(byte[] buffer, long pos, int length)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStream_8cs_source.htm#l00042">ObjectStream.cs:42</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStream_htm_ae39fa72f37fe2d6a6950d60e326a7fe3"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#ae39fa72f37fe2d6a6950d60e326a7fe3">Deveel.Data.Store.ObjectStream.readBuf</a></div><div class="ttdeci">readonly byte[] readBuf</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStream_8cs_source.htm#l00027">ObjectStream.cs:27</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStream_htm_acf5e8d0632344dd90e69a48f7b99b1fe"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#acf5e8d0632344dd90e69a48f7b99b1fe">Deveel.Data.Store.ObjectStream.FillBuffer</a></div><div class="ttdeci">void FillBuffer(long pos)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStream_8cs_source.htm#l00046">ObjectStream.cs:46</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStream_htm_ab3e4b58288f928ab2e4eab1f91d6e144"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#ab3e4b58288f928ab2e4eab1f91d6e144">Deveel.Data.Store.ObjectStream.Write</a></div><div class="ttdeci">override void Write(byte[] buffer, int offset, int count)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStream_8cs_source.htm#l00146">ObjectStream.cs:146</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStream_htm_a357f803ce4b2eb3ff09deded0d261f3e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a357f803ce4b2eb3ff09deded0d261f3e">Deveel.Data.Store.ObjectStream.Read</a></div><div class="ttdeci">override int Read(byte[] buffer, int offset, int count)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStream_8cs_source.htm#l00109">ObjectStream.cs:109</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStream_htm_a347502703e2958cf14172d3830fbc3e5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a347502703e2958cf14172d3830fbc3e5">Deveel.Data.Store.ObjectStream.outTempStream</a></div><div class="ttdeci">Stream outTempStream</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStream_8cs_source.htm#l00024">ObjectStream.cs:24</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStream_htm_aac21881a45c30341e2a0293b81299495"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#aac21881a45c30341e2a0293b81299495">Deveel.Data.Store.ObjectStream.Flush</a></div><div class="ttdeci">override void Flush()</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStream_8cs_source.htm#l00065">ObjectStream.cs:65</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStream_htm_abe2be813cc9a4dedfe945b2d105b59c6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#abe2be813cc9a4dedfe945b2d105b59c6">Deveel.Data.Store.ObjectStream.Dispose</a></div><div class="ttdeci">override void Dispose(bool disposing)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStream_8cs_source.htm#l00055">ObjectStream.cs:55</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStream_htm_acb145c1abdfe6a01d1454ae8bd2347a2"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#acb145c1abdfe6a01d1454ae8bd2347a2">Deveel.Data.Store.ObjectStream.ObjectStream</a></div><div class="ttdeci">ObjectStream(ILargeObject largeObject)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStream_8cs_source.htm#l00031">ObjectStream.cs:31</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStream_htm_a73cc508c03229ec769a1b936aec2ddb0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a73cc508c03229ec769a1b936aec2ddb0">Deveel.Data.Store.ObjectStream.position</a></div><div class="ttdeci">long position</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStream_8cs_source.htm#l00023">ObjectStream.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Store_1_1ObjectStream_htm_a7577a4d293d512080179c5beb3a9f1c5"><div class="ttname"><a href="classDeveel_1_1Data_1_1Store_1_1ObjectStream.htm#a7577a4d293d512080179c5beb3a9f1c5">Deveel.Data.Store.ObjectStream.readBufferPos</a></div><div class="ttdeci">long readBufferPos</div><div class="ttdef"><b>Definition:</b> <a href="ObjectStream_8cs_source.htm#l00026">ObjectStream.cs:26</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
