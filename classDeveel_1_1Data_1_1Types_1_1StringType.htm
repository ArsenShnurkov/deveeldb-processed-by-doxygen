<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>DeveelDB: Deveel.Data.Types.StringType Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="deveeldb_logo2.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">DeveelDB
   &#160;<span id="projectnumber">20151217</span>
   </div>
   <div id="projectbrief">complete SQL database system, primarly developed for .NET/Mono frameworks</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceDeveel.htm">Deveel</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data.htm">Data</a></li><li class="navelem"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm">Types</a></li><li class="navelem"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm">StringType</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pac-methods">Package Functions</a> &#124;
<a href="#pac-static-methods">Static Package Functions</a> &#124;
<a href="#properties">Properties</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classDeveel_1_1Data_1_1Types_1_1StringType-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Deveel.Data.Types.StringType Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for Deveel.Data.Types.StringType:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classDeveel_1_1Data_1_1Types_1_1StringType.png" usemap="#Deveel.Data.Types.StringType_map" alt=""/>
  <map id="Deveel.Data.Types.StringType_map" name="Deveel.Data.Types.StringType_map">
<area href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. " alt="Deveel.Data.Types.SqlType" shape="rect" coords="238,56,466,80"/>
<area href="interfaceDeveel_1_1Data_1_1Types_1_1ISizeableType.htm" alt="Deveel.Data.Types.ISizeableType" shape="rect" coords="476,56,704,80"/>
<area href="interfaceDeveel_1_1Data_1_1Serialization_1_1ISerializable.htm" alt="Deveel.Data.Serialization.ISerializable" shape="rect" coords="476,0,704,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a14470135b253795bb8d6041737d8b62c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a14470135b253795bb8d6041737d8b62c">StringType</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode, int maxSize, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Encoding</a> encoding, CultureInfo locale)</td></tr>
<tr class="separator:a14470135b253795bb8d6041737d8b62c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2d4841f7fc51e35863630639af754e3"><td class="memItemLeft" align="right" valign="top">override bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#af2d4841f7fc51e35863630639af754e3">IsCacheable</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> value)</td></tr>
<tr class="separator:af2d4841f7fc51e35863630639af754e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12c00ac7ec187670ce2e58b9d341a9c1"><td class="memItemLeft" align="right" valign="top">override string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a12c00ac7ec187670ce2e58b9d341a9c1">ToString</a> ()</td></tr>
<tr class="separator:a12c00ac7ec187670ce2e58b9d341a9c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7020e5fdb20baa9bd8f298677e18db5"><td class="memItemLeft" align="right" valign="top">override <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#af7020e5fdb20baa9bd8f298677e18db5">GetObjectType</a> ()</td></tr>
<tr class="separator:af7020e5fdb20baa9bd8f298677e18db5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafbbb13577989b79a8de6280a72c1db5"><td class="memItemLeft" align="right" valign="top">override <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#aafbbb13577989b79a8de6280a72c1db5">GetRuntimeType</a> ()</td></tr>
<tr class="separator:aafbbb13577989b79a8de6280a72c1db5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6df49f4e5e9465254af0d764754f82f"><td class="memItemLeft" align="right" valign="top">override bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ab6df49f4e5e9465254af0d764754f82f">Equals</a> (<a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> other)</td></tr>
<tr class="separator:ab6df49f4e5e9465254af0d764754f82f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ac17cbd78ed0c62a7ce903d9ea87591"><td class="memItemLeft" align="right" valign="top">override int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a4ac17cbd78ed0c62a7ce903d9ea87591">GetHashCode</a> ()</td></tr>
<tr class="separator:a4ac17cbd78ed0c62a7ce903d9ea87591"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a790584e7ab6ce7f58480585ce0b8f240"><td class="memItemLeft" align="right" valign="top">override bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a790584e7ab6ce7f58480585ce0b8f240">IsComparable</a> (<a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> type)</td></tr>
<tr class="memdesc:a790584e7ab6ce7f58480585ce0b8f240"><td class="mdescLeft">&#160;</td><td class="mdescRight">Verifies if a given <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> is comparable to this data-type.   <a href="#a790584e7ab6ce7f58480585ce0b8f240">More...</a><br /></td></tr>
<tr class="separator:a790584e7ab6ce7f58480585ce0b8f240"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03cc5d7b24f3033563cf7749a07d31e7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a03cc5d7b24f3033563cf7749a07d31e7">IsLike</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a> value, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a> pattern)</td></tr>
<tr class="separator:a03cc5d7b24f3033563cf7749a07d31e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fd0b7872f8d9ff35680a245d61074dc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a9fd0b7872f8d9ff35680a245d61074dc">IsNotLike</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a> value, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a> pattern)</td></tr>
<tr class="separator:a9fd0b7872f8d9ff35680a245d61074dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20e1b2d4eb7bc1138270da0dbfdd9433"><td class="memItemLeft" align="right" valign="top">override object&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a20e1b2d4eb7bc1138270da0dbfdd9433">ConvertTo</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> obj, <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1aa1fa27779242b4902f7ae3bdd5c6d508">Type</a> destType)</td></tr>
<tr class="separator:a20e1b2d4eb7bc1138270da0dbfdd9433"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe6a12f14589d632b82aebe7eb1c377d"><td class="memItemLeft" align="right" valign="top">override <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#afe6a12f14589d632b82aebe7eb1c377d">Add</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:afe6a12f14589d632b82aebe7eb1c377d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d61523e94e5ffa0393cfac04a5bfe3a"><td class="memItemLeft" align="right" valign="top">override bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d61523e94e5ffa0393cfac04a5bfe3a">CanCastTo</a> (<a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> destType)</td></tr>
<tr class="memdesc:a7d61523e94e5ffa0393cfac04a5bfe3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Verifies if this type can cast any value to the given <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a>.   <a href="#a7d61523e94e5ffa0393cfac04a5bfe3a">More...</a><br /></td></tr>
<tr class="separator:a7d61523e94e5ffa0393cfac04a5bfe3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f7f3b52b9c92edc601e275e1dbc6174"><td class="memItemLeft" align="right" valign="top">override <a class="el" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a4f7f3b52b9c92edc601e275e1dbc6174">CastTo</a> (<a class="el" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a> value, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> destType)</td></tr>
<tr class="memdesc:a4f7f3b52b9c92edc601e275e1dbc6174"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts the given <a class="el" href="classDeveel_1_1Data_1_1DataObject.htm">object value</a> to a <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> specified.   <a href="#a4f7f3b52b9c92edc601e275e1dbc6174">More...</a><br /></td></tr>
<tr class="separator:a4f7f3b52b9c92edc601e275e1dbc6174"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcccd74d13b230140b9d5cc2fb76c476"><td class="memItemLeft" align="right" valign="top">override int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#adcccd74d13b230140b9d5cc2fb76c476">Compare</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> x, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> y)</td></tr>
<tr class="separator:adcccd74d13b230140b9d5cc2fb76c476"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3656f8422205538e2a26eb4851dae72"><td class="memItemLeft" align="right" valign="top">override void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#af3656f8422205538e2a26eb4851dae72">SerializeObject</a> (Stream stream, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> obj)</td></tr>
<tr class="separator:af3656f8422205538e2a26eb4851dae72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad19294f11fd7780e43008024a326c056"><td class="memItemLeft" align="right" valign="top">override <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ad19294f11fd7780e43008024a326c056">DeserializeObject</a> (Stream stream)</td></tr>
<tr class="separator:ad19294f11fd7780e43008024a326c056"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">Deveel.Data.Types.SqlType</a></td></tr>
<tr class="memitem:a936fac5afcd8e1b71d12b53210d5e5f9 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a936fac5afcd8e1b71d12b53210d5e5f9">Subtract</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a936fac5afcd8e1b71d12b53210d5e5f9 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af636f5786914f278952d9a99a1532052 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#af636f5786914f278952d9a99a1532052">Multiply</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:af636f5786914f278952d9a99a1532052 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16ca6453b322e62e44c4d4521d6d926e inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a16ca6453b322e62e44c4d4521d6d926e">Divide</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a16ca6453b322e62e44c4d4521d6d926e inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ed9b77a57ddfdf718442981945a73d7 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1ed9b77a57ddfdf718442981945a73d7">Modulus</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a1ed9b77a57ddfdf718442981945a73d7 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03999c37a89bd47aca1337dd1b707e97 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03999c37a89bd47aca1337dd1b707e97">Negate</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> value)</td></tr>
<tr class="separator:a03999c37a89bd47aca1337dd1b707e97 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f464758b1485c0765c7eee865eb6fd2 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a5f464758b1485c0765c7eee865eb6fd2">IsEqualTo</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a5f464758b1485c0765c7eee865eb6fd2 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24203f7351690085e27603bc54dbfb69 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a24203f7351690085e27603bc54dbfb69">IsNotEqualTo</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a24203f7351690085e27603bc54dbfb69 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2591352a38bef294d1363a8eb8045629 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a2591352a38bef294d1363a8eb8045629">IsGreatherThan</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a2591352a38bef294d1363a8eb8045629 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfecab3646582d715764f76915bc6ee5 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#adfecab3646582d715764f76915bc6ee5">IsSmallerThan</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:adfecab3646582d715764f76915bc6ee5 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2628d0f11304f2fc225f6207f4c34b5f inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a2628d0f11304f2fc225f6207f4c34b5f">IsGreaterOrEqualThan</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a2628d0f11304f2fc225f6207f4c34b5f inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9620abd6b2364c55f9bd3b4db7273478 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a9620abd6b2364c55f9bd3b4db7273478">IsSmallerOrEqualThan</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a9620abd6b2364c55f9bd3b4db7273478 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5451e92685e6da9b78e304733d71312b inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a5451e92685e6da9b78e304733d71312b">And</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:a5451e92685e6da9b78e304733d71312b inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea8a41ad7f53cb2138dbdfa0f474b75d inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#aea8a41ad7f53cb2138dbdfa0f474b75d">Or</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> a, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> b)</td></tr>
<tr class="separator:aea8a41ad7f53cb2138dbdfa0f474b75d inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9e541b32fc88f7dfbb1607ffc210014 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ab9e541b32fc88f7dfbb1607ffc210014">XOr</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> x, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> y)</td></tr>
<tr class="separator:ab9e541b32fc88f7dfbb1607ffc210014 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af35b8a4ae57950fb754e4bed48692cb5 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#af35b8a4ae57950fb754e4bed48692cb5">UnaryPlus</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> value)</td></tr>
<tr class="separator:af35b8a4ae57950fb754e4bed48692cb5 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68bec9e416bb576061b966a97edf8e1a inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a68bec9e416bb576061b966a97edf8e1a">Reverse</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> value)</td></tr>
<tr class="separator:a68bec9e416bb576061b966a97edf8e1a inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48aaedeebc2f12a17728b1fedccdff17 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a48aaedeebc2f12a17728b1fedccdff17">Wider</a> (<a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a> otherType)</td></tr>
<tr class="memdesc:a48aaedeebc2f12a17728b1fedccdff17 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the one data-type between this and the other one given that handles the wider range of values.  <a href="#a48aaedeebc2f12a17728b1fedccdff17">More...</a><br /></td></tr>
<tr class="separator:a48aaedeebc2f12a17728b1fedccdff17 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e3aecfbc63957ce0d815a6705d99421 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">override bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a4e3aecfbc63957ce0d815a6705d99421">Equals</a> (object obj)</td></tr>
<tr class="separator:a4e3aecfbc63957ce0d815a6705d99421 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa78ee6d1f5a82d940c1aaef36fb4d8c6 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">override int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#aa78ee6d1f5a82d940c1aaef36fb4d8c6">GetHashCode</a> ()</td></tr>
<tr class="separator:aa78ee6d1f5a82d940c1aaef36fb4d8c6 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c4d526af40b7f26506073ab52f3d186 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">override string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a9c4d526af40b7f26506073ab52f3d186">ToString</a> ()</td></tr>
<tr class="separator:a9c4d526af40b7f26506073ab52f3d186 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade1fc3592eec17179eda8a9d5d17cc9d inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ade1fc3592eec17179eda8a9d5d17cc9d">CreateFromLargeObject</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Store_1_1ILargeObject.htm">ILargeObject</a> objRef)</td></tr>
<tr class="separator:ade1fc3592eec17179eda8a9d5d17cc9d inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b50b470439c9cee9c58ef543d172cc8 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a4b50b470439c9cee9c58ef543d172cc8">CreateFrom</a> (object value)</td></tr>
<tr class="separator:a4b50b470439c9cee9c58ef543d172cc8 inherit pub_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a7cab54a843f355416f7ae217720a6dcb"><td class="memItemLeft" align="right" valign="top">const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7cab54a843f355416f7ae217720a6dcb">DefaultMaxSize</a> = Int16.MaxValue</td></tr>
<tr class="separator:a7cab54a843f355416f7ae217720a6dcb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a0196d64908182b941d77dce3f8424fc2"><td class="memItemLeft" align="right" valign="top">override void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a0196d64908182b941d77dce3f8424fc2">GetData</a> (<a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a> data)</td></tr>
<tr class="separator:a0196d64908182b941d77dce3f8424fc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classDeveel_1_1Data_1_1Types_1_1SqlType')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">Deveel.Data.Types.SqlType</a></td></tr>
<tr class="memitem:a148c6293c9ede30a69b4b3d1046a50ab inherit pro_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a148c6293c9ede30a69b4b3d1046a50ab">SqlType</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> sqlType)</td></tr>
<tr class="memdesc:a148c6293c9ede30a69b4b3d1046a50ab inherit pro_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs the <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> for the given specific <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SQL TYPE</a>.  <a href="#a148c6293c9ede30a69b4b3d1046a50ab">More...</a><br /></td></tr>
<tr class="separator:a148c6293c9ede30a69b4b3d1046a50ab inherit pro_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad744512a2294690756d5aee3610b4039 inherit pro_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ad744512a2294690756d5aee3610b4039">SqlType</a> (string name, <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode)</td></tr>
<tr class="memdesc:ad744512a2294690756d5aee3610b4039 inherit pro_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs the <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> for the given specific <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SQL TYPE</a> and a given name.  <a href="#ad744512a2294690756d5aee3610b4039">More...</a><br /></td></tr>
<tr class="separator:ad744512a2294690756d5aee3610b4039 inherit pro_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22612048f648f76328be8909113407b2 inherit pro_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a22612048f648f76328be8909113407b2">SqlType</a> (<a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">ObjectData</a> data)</td></tr>
<tr class="separator:a22612048f648f76328be8909113407b2 inherit pro_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pac-methods"></a>
Package Functions</h2></td></tr>
<tr class="memitem:ae672fed8e712d45b041cb0f64ab00c74"><td class="memItemLeft" align="right" valign="top">override int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ae672fed8e712d45b041cb0f64ab00c74">ColumnSizeOf</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> obj)</td></tr>
<tr class="separator:ae672fed8e712d45b041cb0f64ab00c74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pac_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td colspan="2" onclick="javascript:toggleInherit('pac_methods_classDeveel_1_1Data_1_1Types_1_1SqlType')"><img src="closed.png" alt="-"/>&#160;Package Functions inherited from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">Deveel.Data.Types.SqlType</a></td></tr>
<tr class="memitem:af8f9aac4d5354c8e11161d11b9c11ad0 inherit pac_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#af8f9aac4d5354c8e11161d11b9c11ad0">GetCacheUsage</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> value)</td></tr>
<tr class="separator:af8f9aac4d5354c8e11161d11b9c11ad0 inherit pac_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pac-static-methods"></a>
Static Package Functions</h2></td></tr>
<tr class="memitem:a7c8bfed62acfa974fbd9dc0d274b0e6f"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7c8bfed62acfa974fbd9dc0d274b0e6f">IsStringType</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode)</td></tr>
<tr class="separator:a7c8bfed62acfa974fbd9dc0d274b0e6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="properties"></a>
Properties</h2></td></tr>
<tr class="memitem:a78e6e5442bd09fce446b966861a127df"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a78e6e5442bd09fce446b966861a127df">MaxSize</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a78e6e5442bd09fce446b966861a127df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the maximum number of characters that strings handled by this type can handle.  <a href="#a78e6e5442bd09fce446b966861a127df">More...</a><br /></td></tr>
<tr class="separator:a78e6e5442bd09fce446b966861a127df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e4a59ac3a23df8c8a58d7c38f76899d"><td class="memItemLeft" align="right" valign="top">int ISizeableType.&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a2e4a59ac3a23df8c8a58d7c38f76899d">Size</a><code> [get]</code></td></tr>
<tr class="separator:a2e4a59ac3a23df8c8a58d7c38f76899d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a204e18322e11ba6872a01dfbe9efff94"><td class="memItemLeft" align="right" valign="top">override bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a204e18322e11ba6872a01dfbe9efff94">IsStorable</a><code> [get]</code></td></tr>
<tr class="separator:a204e18322e11ba6872a01dfbe9efff94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49130d70fe09c32ade000792394b6625"><td class="memItemLeft" align="right" valign="top">CultureInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Locale</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a49130d70fe09c32ade000792394b6625"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the locale used to compare string values.  <a href="#a49130d70fe09c32ade000792394b6625">More...</a><br /></td></tr>
<tr class="separator:a49130d70fe09c32ade000792394b6625"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac10416773bdc3dba6a2cd0c915c01641"><td class="memItemLeft" align="right" valign="top">CompareInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ac10416773bdc3dba6a2cd0c915c01641">Collator</a><code> [get]</code></td></tr>
<tr class="separator:ac10416773bdc3dba6a2cd0c915c01641"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d7ef8bbb60d0ac703173b3643e1aaa0"><td class="memItemLeft" align="right" valign="top">Encoding&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Encoding</a><code> [get, private set]</code></td></tr>
<tr class="separator:a7d7ef8bbb60d0ac703173b3643e1aaa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td colspan="2" onclick="javascript:toggleInherit('properties_classDeveel_1_1Data_1_1Types_1_1SqlType')"><img src="closed.png" alt="-"/>&#160;Properties inherited from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">Deveel.Data.Types.SqlType</a></td></tr>
<tr class="memitem:a1d7aa1701178a6e9ffe48c112c563e0e inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1d7aa1701178a6e9ffe48c112c563e0e">Name</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a1d7aa1701178a6e9ffe48c112c563e0e inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of the data-type that is used to resolve it within the context.  <a href="#a1d7aa1701178a6e9ffe48c112c563e0e">More...</a><br /></td></tr>
<tr class="separator:a1d7aa1701178a6e9ffe48c112c563e0e inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03b166e54c20d0768317b7e559b01c70 inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a><code> [get, private set]</code></td></tr>
<tr class="memdesc:a03b166e54c20d0768317b7e559b01c70 inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the kind of SQL type this data-type handles.  <a href="#a03b166e54c20d0768317b7e559b01c70">More...</a><br /></td></tr>
<tr class="separator:a03b166e54c20d0768317b7e559b01c70 inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9df5ffc6e329a53b5cea148fc367295 inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ad9df5ffc6e329a53b5cea148fc367295">IsIndexable</a><code> [get]</code></td></tr>
<tr class="memdesc:ad9df5ffc6e329a53b5cea148fc367295 inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates if the values handled by the type can be part of an index.  <a href="#ad9df5ffc6e329a53b5cea148fc367295">More...</a><br /></td></tr>
<tr class="separator:ad9df5ffc6e329a53b5cea148fc367295 inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a731ce7172c7f30e9e494ce68db96fa7b inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a731ce7172c7f30e9e494ce68db96fa7b">IsPrimitive</a><code> [get]</code></td></tr>
<tr class="memdesc:a731ce7172c7f30e9e494ce68db96fa7b inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a value indicating if this data-type is primitive.  <a href="#a731ce7172c7f30e9e494ce68db96fa7b">More...</a><br /></td></tr>
<tr class="separator:a731ce7172c7f30e9e494ce68db96fa7b inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60b7ba0e65d9303fc9af858c5ae199af inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a60b7ba0e65d9303fc9af858c5ae199af">IsNull</a><code> [get]</code></td></tr>
<tr class="separator:a60b7ba0e65d9303fc9af858c5ae199af inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff639e283ee8916b105488d3286c7314 inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#aff639e283ee8916b105488d3286c7314">IsStorable</a><code> [get]</code></td></tr>
<tr class="separator:aff639e283ee8916b105488d3286c7314 inherit properties_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header properties_interfaceDeveel_1_1Data_1_1Types_1_1ISizeableType"><td colspan="2" onclick="javascript:toggleInherit('properties_interfaceDeveel_1_1Data_1_1Types_1_1ISizeableType')"><img src="closed.png" alt="-"/>&#160;Properties inherited from <a class="el" href="interfaceDeveel_1_1Data_1_1Types_1_1ISizeableType.htm">Deveel.Data.Types.ISizeableType</a></td></tr>
<tr class="memitem:ac31f960af261e4d41d1b9c0635cc4647 inherit properties_interfaceDeveel_1_1Data_1_1Types_1_1ISizeableType"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="interfaceDeveel_1_1Data_1_1Types_1_1ISizeableType.htm#ac31f960af261e4d41d1b9c0635cc4647">Size</a><code> [get]</code></td></tr>
<tr class="separator:ac31f960af261e4d41d1b9c0635cc4647 inherit properties_interfaceDeveel_1_1Data_1_1Types_1_1ISizeableType"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a67d568dc08dc14e0ebc9dd86f737b57d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a67d568dc08dc14e0ebc9dd86f737b57d">StringType</a> (<a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">ObjectData</a> data)</td></tr>
<tr class="separator:a67d568dc08dc14e0ebc9dd86f737b57d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af09cbd923eef62aa2e150e7cff2a39d6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#af09cbd923eef62aa2e150e7cff2a39d6">ToDate</a> (string str)</td></tr>
<tr class="separator:af09cbd923eef62aa2e150e7cff2a39d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66928c5893a836312725577db3225830"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a66928c5893a836312725577db3225830">ToTime</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a> str)</td></tr>
<tr class="separator:a66928c5893a836312725577db3225830"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a392e4cfc2e41203561670fa4d24a074a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a392e4cfc2e41203561670fa4d24a074a">ToTimeStamp</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a> str)</td></tr>
<tr class="separator:a392e4cfc2e41203561670fa4d24a074a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad730d1f090cd8e7e211d45314c38fa09"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ad730d1f090cd8e7e211d45314c38fa09">ToDateTime</a> (string str)</td></tr>
<tr class="separator:ad730d1f090cd8e7e211d45314c38fa09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cdd2ed1436c2825745157cf46911243"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a1cdd2ed1436c2825745157cf46911243">DateErrorMessage</a> (string str, <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> sqlType, string[] formats)</td></tr>
<tr class="separator:a1cdd2ed1436c2825745157cf46911243"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac01109a95da74a204afc2e787a1acecc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ac01109a95da74a204afc2e787a1acecc">ToBoolean</a> (string s)</td></tr>
<tr class="separator:ac01109a95da74a204afc2e787a1acecc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:a843115cf1f853f9e3ca321854cbfe12f"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a843115cf1f853f9e3ca321854cbfe12f">AssertIsString</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> sqlType)</td></tr>
<tr class="separator:a843115cf1f853f9e3ca321854cbfe12f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3487d973e8ae7d113724e3154a03397"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ac3487d973e8ae7d113724e3154a03397">ToNumber</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a> str)</td></tr>
<tr class="separator:ac3487d973e8ae7d113724e3154a03397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdcf9c14dbe42f23430db740fb2dc0cf"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#afdcf9c14dbe42f23430db740fb2dc0cf">LexicographicalOrder</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a> str1, <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a> str2)</td></tr>
<tr class="separator:afdcf9c14dbe42f23430db740fb2dc0cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:ac7de50aacf0a96a8d150a4c9ada36302"><td class="memItemLeft" align="right" valign="top">CompareInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ac7de50aacf0a96a8d150a4c9ada36302">collator</a></td></tr>
<tr class="separator:ac7de50aacf0a96a8d150a4c9ada36302"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">Deveel.Data.Types.SqlType</a></td></tr>
<tr class="memitem:a1a00ee783f2da7b0f16b588963f432a6 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1a00ee783f2da7b0f16b588963f432a6">Parse</a> (string s)</td></tr>
<tr class="memdesc:a1a00ee783f2da7b0f16b588963f432a6 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a SQL formatted string that defines a data-type into a constructed <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> object equivalent.  <a href="#a1a00ee783f2da7b0f16b588963f432a6">More...</a><br /></td></tr>
<tr class="separator:a1a00ee783f2da7b0f16b588963f432a6 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6486e0afa11155105567c77c51f7ab51 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a6486e0afa11155105567c77c51f7ab51">Parse</a> (<a class="el" href="interfaceDeveel_1_1Data_1_1IContext.htm">IContext</a> context, string s)</td></tr>
<tr class="memdesc:a6486e0afa11155105567c77c51f7ab51 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a SQL formatted string that defines a data-type into a constructed <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> object equivalent.  <a href="#a6486e0afa11155105567c77c51f7ab51">More...</a><br /></td></tr>
<tr class="separator:a6486e0afa11155105567c77c51f7ab51 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a185e15f2ca4611de266911ab10711b9d inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a185e15f2ca4611de266911ab10711b9d">IsPrimitiveType</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode)</td></tr>
<tr class="separator:a185e15f2ca4611de266911ab10711b9d inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1001e0bdf89c8e04c9925d1bb4ac18e inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#ac1001e0bdf89c8e04c9925d1bb4ac18e">Resolve</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode)</td></tr>
<tr class="separator:ac1001e0bdf89c8e04c9925d1bb4ac18e inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84a3daf0cce0fd93fbb8b82f92318595 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a84a3daf0cce0fd93fbb8b82f92318595">Resolve</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[] meta)</td></tr>
<tr class="separator:a84a3daf0cce0fd93fbb8b82f92318595 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a777257e9dea6e2f74e7fb93645b4b24b inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a777257e9dea6e2f74e7fb93645b4b24b">Resolve</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[] meta, <a class="el" href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">ITypeResolver</a> resolver)</td></tr>
<tr class="separator:a777257e9dea6e2f74e7fb93645b4b24b inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76b02406ac93348f14e4f096b5082e26 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a76b02406ac93348f14e4f096b5082e26">Resolve</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode, string name)</td></tr>
<tr class="separator:a76b02406ac93348f14e4f096b5082e26 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3effe95a3754b37eeb56bccc876e81d6 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a3effe95a3754b37eeb56bccc876e81d6">Resolve</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode, string name, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[] meta)</td></tr>
<tr class="separator:a3effe95a3754b37eeb56bccc876e81d6 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2844f58398f4688e3bd150cf9bed03b inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#aa2844f58398f4688e3bd150cf9bed03b">Resolve</a> (string name)</td></tr>
<tr class="separator:aa2844f58398f4688e3bd150cf9bed03b inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39a8e34dfc3053c57da82486fb62f4d8 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a39a8e34dfc3053c57da82486fb62f4d8">Resolve</a> (string name, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[] meta)</td></tr>
<tr class="separator:a39a8e34dfc3053c57da82486fb62f4d8 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a366c1540dead07314208b880863328c3 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a366c1540dead07314208b880863328c3">Resolve</a> (string name, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[] meta, <a class="el" href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">ITypeResolver</a> resolver)</td></tr>
<tr class="separator:a366c1540dead07314208b880863328c3 inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ae79b6779d682fbcbfed20dff9fcd5a inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a6ae79b6779d682fbcbfed20dff9fcd5a">Resolve</a> (<a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a> typeCode, string name, <a class="el" href="classDeveel_1_1Data_1_1Types_1_1DataTypeMeta.htm">DataTypeMeta</a>[] meta, <a class="el" href="interfaceDeveel_1_1Data_1_1Types_1_1ITypeResolver.htm">ITypeResolver</a> resolver)</td></tr>
<tr class="separator:a6ae79b6779d682fbcbfed20dff9fcd5a inherit pub_static_methods_classDeveel_1_1Data_1_1Types_1_1SqlType"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00029">29</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a14470135b253795bb8d6041737d8b62c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Types.StringType.StringType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td>
          <td class="paramname"><em>typeCode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>maxSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Encoding</a>&#160;</td>
          <td class="paramname"><em>encoding</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">CultureInfo&#160;</td>
          <td class="paramname"><em>locale</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00034">34</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            : base(<span class="stringliteral">&quot;STRING&quot;</span>, typeCode) {</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <span class="keywordflow">if</span> (encoding == null)</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;encoding&quot;</span>);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a843115cf1f853f9e3ca321854cbfe12f">AssertIsString</a>(typeCode);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a78e6e5442bd09fce446b966861a127df">MaxSize</a> = maxSize;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Locale</a> = locale;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Encoding</a> = encoding;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a7d7ef8bbb60d0ac703173b3643e1aaa0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Deveel.Data.Types.StringType.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00102">StringType.cs:102</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a78e6e5442bd09fce446b966861a127df"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a78e6e5442bd09fce446b966861a127df">Deveel.Data.Types.StringType.MaxSize</a></div><div class="ttdeci">int MaxSize</div><div class="ttdoc">Gets the maximum number of characters that strings handled by this type can handle. </div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00069">StringType.cs:69</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a843115cf1f853f9e3ca321854cbfe12f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a843115cf1f853f9e3ca321854cbfe12f">Deveel.Data.Types.StringType.AssertIsString</a></div><div class="ttdeci">static void AssertIsString(SqlTypeCode sqlType)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00060">StringType.cs:60</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a49130d70fe09c32ade000792394b6625"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Deveel.Data.Types.StringType.Locale</a></div><div class="ttdeci">CultureInfo Locale</div><div class="ttdoc">Gets the locale used to compare string values. </div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00086">StringType.cs:86</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a67d568dc08dc14e0ebc9dd86f737b57d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Deveel.Data.Types.StringType.StringType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm">ObjectData</a>&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00045">45</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            : base(data) {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a78e6e5442bd09fce446b966861a127df">MaxSize</a> = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a1e267f2009bb7e9c0a35d707aa64e63a">GetInt32</a>(<span class="stringliteral">&quot;MaxSize&quot;</span>);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            <span class="keywordflow">if</span> (data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a6cd0166825e1ce7fa9baa77c540fe0e9">HasValue</a>(<span class="stringliteral">&quot;Locale&quot;</span>)) {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                var locale = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a828a888ad7250283e9f596f6da5fe97f">GetString</a>(<span class="stringliteral">&quot;Locale&quot;</span>);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Locale</a> = <span class="keyword">new</span> CultureInfo(locale);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keywordflow">if</span> (data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a6cd0166825e1ce7fa9baa77c540fe0e9">HasValue</a>(<span class="stringliteral">&quot;Encoding&quot;</span>)) {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                var encoding = data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a828a888ad7250283e9f596f6da5fe97f">GetString</a>(<span class="stringliteral">&quot;Encoding&quot;</span>);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Encoding</a> = <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Encoding</a>.GetEncoding(encoding);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a7d7ef8bbb60d0ac703173b3643e1aaa0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Deveel.Data.Types.StringType.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00102">StringType.cs:102</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a78e6e5442bd09fce446b966861a127df"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a78e6e5442bd09fce446b966861a127df">Deveel.Data.Types.StringType.MaxSize</a></div><div class="ttdeci">int MaxSize</div><div class="ttdoc">Gets the maximum number of characters that strings handled by this type can handle. </div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00069">StringType.cs:69</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a1e267f2009bb7e9c0a35d707aa64e63a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a1e267f2009bb7e9c0a35d707aa64e63a">Deveel.Data.Serialization.ObjectData.GetInt32</a></div><div class="ttdeci">int GetInt32(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00085">ObjectData.cs:85</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a49130d70fe09c32ade000792394b6625"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Deveel.Data.Types.StringType.Locale</a></div><div class="ttdeci">CultureInfo Locale</div><div class="ttdoc">Gets the locale used to compare string values. </div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00086">StringType.cs:86</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a6cd0166825e1ce7fa9baa77c540fe0e9"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a6cd0166825e1ce7fa9baa77c540fe0e9">Deveel.Data.Serialization.ObjectData.HasValue</a></div><div class="ttdeci">bool HasValue(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00041">ObjectData.cs:41</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1ObjectData_htm_a828a888ad7250283e9f596f6da5fe97f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1ObjectData.htm#a828a888ad7250283e9f596f6da5fe97f">Deveel.Data.Serialization.ObjectData.GetString</a></div><div class="ttdeci">string GetString(string key)</div><div class="ttdef"><b>Definition:</b> <a href="ObjectData_8cs_source.htm#l00101">ObjectData.cs:101</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="afe6a12f14589d632b82aebe7eb1c377d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.StringType.Add </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#aaa536ec75c1159785bb0fa2810fea62a">Deveel.Data.Types.SqlType</a>.</p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00236">236</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                                                                   {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            <span class="keywordflow">if</span> (!(a is <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a>))</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            <span class="keywordflow">if</span> (!(b is ISqlString)) {</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;                <span class="comment">//TODO: convert to a ISqlString</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotSupportedException();</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            }</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            <span class="keywordflow">if</span> (a is <a class="code" href="namespaceSqlString.htm">SqlString</a>) {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                var x = (<a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>) a;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                var y = (ISqlString) b;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                <span class="keywordflow">return</span> x.Concat(y);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            }</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            <span class="keywordflow">return</span> base.Add(a, b);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        }</div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">Deveel.Data.Sql.Objects.ISqlString</a></div><div class="ttdef"><b>Definition:</b> <a href="ISqlString_8cs_source.htm#l00023">ISqlString.cs:23</a></div></div>
<div class="ttc" id="namespaceSqlString_htm"><div class="ttname"><a href="namespaceSqlString.htm">SqlString</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a843115cf1f853f9e3ca321854cbfe12f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void Deveel.Data.Types.StringType.AssertIsString </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td>
          <td class="paramname"><em>sqlType</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00060">60</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                                                {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7c8bfed62acfa974fbd9dc0d274b0e6f">IsStringType</a>(sqlType))</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;The type {0} is not a valid STRING type.&quot;</span>, sqlType), <span class="stringliteral">&quot;sqlType&quot;</span>);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a7c8bfed62acfa974fbd9dc0d274b0e6f"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7c8bfed62acfa974fbd9dc0d274b0e6f">Deveel.Data.Types.StringType.IsStringType</a></div><div class="ttdeci">static bool IsStringType(SqlTypeCode typeCode)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00566">StringType.cs:566</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a7d61523e94e5ffa0393cfac04a5bfe3a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override bool Deveel.Data.Types.StringType.CanCastTo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td>
          <td class="paramname"><em>destType</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Verifies if this type can cast any value to the given <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a>.  </p>

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a9c3340d086048594d25c50f02f268eb5">Deveel.Data.Types.SqlType</a>.</p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00320">320</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                                                         {</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            <span class="keywordflow">return</span> destType.TypeCode != <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Array &amp;&amp;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                   destType.TypeCode != <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.ColumnType &amp;&amp;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                   destType.TypeCode != <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.RowType &amp;&amp;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                   destType.TypeCode != <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Object;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4f7f3b52b9c92edc601e275e1dbc6174"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override <a class="el" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a> Deveel.Data.Types.StringType.CastTo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1DataObject.htm">DataObject</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td>
          <td class="paramname"><em>destType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Converts the given <a class="el" href="classDeveel_1_1Data_1_1DataObject.htm">object value</a> to a <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> specified.  </p>

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a66c1d0c1cdc3e01f4ae4959f740a8696">Deveel.Data.Types.SqlType</a>.</p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00328">328</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                                                                              {</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            <span class="keywordtype">string</span> str = value.Value.ToString();</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            var sqlType = destType.TypeCode;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;            <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> castedValue;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            <span class="keywordflow">if</span> (value.IsNull)</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                <span class="keywordflow">return</span> DataObject.Null(destType);</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            <span class="keywordflow">switch</span> (sqlType) {</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Bit):</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Boolean):</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                    castedValue = <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ac01109a95da74a204afc2e787a1acecc">ToBoolean</a>(str);</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.TinyInt):</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.SmallInt):</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Integer): {</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                    var num = <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ac3487d973e8ae7d113724e3154a03397">ToNumber</a>(str);</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;                    <span class="keywordflow">if</span> (num.IsNull) {</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                        castedValue = num;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                        castedValue = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(num.ToInt32());</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                    }</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                }</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.BigInt): {</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                    var num = <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ac3487d973e8ae7d113724e3154a03397">ToNumber</a>(str);</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                    <span class="keywordflow">if</span> (num.IsNull) {</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                        castedValue = num;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                        castedValue = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(num.ToInt64());</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                    }</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                }</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Float):</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Double): {</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                    var num = <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ac3487d973e8ae7d113724e3154a03397">ToNumber</a>(str);</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                    <span class="keywordflow">if</span> (num.IsNull) {</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                        castedValue = num;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                    } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                        castedValue = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>(num.ToDouble());</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                    }</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                }</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Real):</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Numeric):</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Decimal):</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                    castedValue = <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ac3487d973e8ae7d113724e3154a03397">ToNumber</a>(str);</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Char):</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                    castedValue = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(str.PadRight(((<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a14470135b253795bb8d6041737d8b62c">StringType</a>)destType).MaxSize));</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.VarChar):</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarChar):</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.String):</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                    castedValue = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(str);</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Date):</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;                    castedValue = <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#af09cbd923eef62aa2e150e7cff2a39d6">ToDate</a>(str);</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Time):</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                    castedValue = <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a66928c5893a836312725577db3225830">ToTime</a>(str);</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.TimeStamp):</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;                    castedValue = <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a392e4cfc2e41203561670fa4d24a074a">ToTimeStamp</a>(str);</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.DateTime):</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                    castedValue = <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ad730d1f090cd8e7e211d45314c38fa09">ToDateTime</a>(str);</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Blob):</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Binary):</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.VarBinary):</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarBinary):</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                    castedValue = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBinary.htm">SqlBinary</a>(<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Encoding</a>.Unicode.GetBytes(str));</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Null):</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                    castedValue = <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Value</a>;</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                <span class="keywordflow">case</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Clob):</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                    <span class="comment">// TODO: have a context where to get a new CLOB</span></div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;                    castedValue = <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(str);</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;                <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                    <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException();</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;            }</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> DataObject(destType, castedValue);</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_ac3487d973e8ae7d113724e3154a03397"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ac3487d973e8ae7d113724e3154a03397">Deveel.Data.Types.StringType.ToNumber</a></div><div class="ttdeci">static SqlNumber ToNumber(String str)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00256">StringType.cs:256</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a7d7ef8bbb60d0ac703173b3643e1aaa0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Deveel.Data.Types.StringType.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00102">StringType.cs:102</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a66928c5893a836312725577db3225830"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a66928c5893a836312725577db3225830">Deveel.Data.Types.StringType.ToTime</a></div><div class="ttdeci">SqlDateTime ToTime(String str)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00273">StringType.cs:273</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBinary_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBinary.htm">Deveel.Data.Sql.Objects.SqlBinary</a></div><div class="ttdoc">Implements a BINARY object that handles a limited number of bytes, not exceding MaxLength. </div><div class="ttdef"><b>Definition:</b> <a href="SqlBinary_8cs_source.htm#l00027">SqlBinary.cs:27</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm_a34389e1b9a93987d32840d009a4e08b6"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm#a34389e1b9a93987d32840d009a4e08b6">Deveel.Data.Sql.Objects.SqlNull.Value</a></div><div class="ttdeci">static readonly SqlNull Value</div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00024">SqlNull.cs:24</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">Deveel.Data.Sql.Objects.ISqlObject</a></div><div class="ttdoc">Defines the contract for a valid SQL Object </div><div class="ttdef"><b>Definition:</b> <a href="ISqlObject_8cs_source.htm#l00023">ISqlObject.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_af09cbd923eef62aa2e150e7cff2a39d6"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#af09cbd923eef62aa2e150e7cff2a39d6">Deveel.Data.Types.StringType.ToDate</a></div><div class="ttdeci">SqlDateTime ToDate(string str)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00265">StringType.cs:265</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_ac01109a95da74a204afc2e787a1acecc"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ac01109a95da74a204afc2e787a1acecc">Deveel.Data.Types.StringType.ToBoolean</a></div><div class="ttdeci">SqlBoolean ToBoolean(string s)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00306">StringType.cs:306</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_ad730d1f090cd8e7e211d45314c38fa09"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ad730d1f090cd8e7e211d45314c38fa09">Deveel.Data.Types.StringType.ToDateTime</a></div><div class="ttdeci">SqlDateTime ToDateTime(string str)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00290">StringType.cs:290</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a392e4cfc2e41203561670fa4d24a074a"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a392e4cfc2e41203561670fa4d24a074a">Deveel.Data.Types.StringType.ToTimeStamp</a></div><div class="ttdeci">SqlDateTime ToTimeStamp(String str)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00282">StringType.cs:282</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">Deveel.Data.Sql.Objects.SqlNumber</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00024">SqlNumber.cs:24</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a14470135b253795bb8d6041737d8b62c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a14470135b253795bb8d6041737d8b62c">Deveel.Data.Types.StringType.StringType</a></div><div class="ttdeci">StringType(SqlTypeCode typeCode, int maxSize, Encoding encoding, CultureInfo locale)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00034">StringType.cs:34</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ae672fed8e712d45b041cb0f64ab00c74"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override int Deveel.Data.Types.StringType.ColumnSizeOf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>obj</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">package</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#afb46e959df9aaba53976101e070c7551">Deveel.Data.Types.SqlType</a>.</p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00548">548</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                                                           {</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;            <span class="keywordflow">if</span> (obj.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;            <span class="keywordflow">if</span> (obj is <a class="code" href="namespaceSqlString.htm">SqlString</a>) {</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                var s = (<a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>) obj;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                var length = s.GetByteCount(<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Encoding</a>);</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                <span class="comment">// Type + Byte Length + Bytes</span></div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                <span class="keywordflow">return</span> 1 + 4 + length;</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;            } </div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;            <span class="keywordflow">if</span> (obj is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlLongString.htm">SqlLongString</a>) {</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                <span class="comment">// Type + Store ID + Object ID</span></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                <span class="keywordflow">return</span> 1 + 4 + 8;</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;            }</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlLongString_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlLongString.htm">Deveel.Data.Sql.Objects.SqlLongString</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlLongString_8cs_source.htm#l00026">SqlLongString.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a7d7ef8bbb60d0ac703173b3643e1aaa0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Deveel.Data.Types.StringType.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00102">StringType.cs:102</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm_ab9810ddba011d9ffe76db3ceffa636c0"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">Deveel.Data.Sql.Objects.ISqlObject.IsNull</a></div><div class="ttdeci">bool IsNull</div><div class="ttdoc">Gets a boolean value indicating if the object is NULL. </div><div class="ttdef"><b>Definition:</b> <a href="ISqlObject_8cs_source.htm#l00028">ISqlObject.cs:28</a></div></div>
<div class="ttc" id="namespaceSqlString_htm"><div class="ttname"><a href="namespaceSqlString.htm">SqlString</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="adcccd74d13b230140b9d5cc2fb76c476"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override int Deveel.Data.Types.StringType.Compare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a37dc84024cf0ea2df3622c3865773167">Deveel.Data.Types.SqlType</a>.</p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00419">419</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                                                                {</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;            <span class="keywordflow">if</span> (x == null)</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="stringliteral">&quot;x&quot;</span>);</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;            <span class="keywordflow">if</span> (!(x is <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a>) ||</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                !(y is ISqlString))</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException(<span class="stringliteral">&quot;Cannot compare objects that are not strings.&quot;</span>);</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            <span class="keywordflow">if</span> (x.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a> &amp;&amp; y.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;            <span class="keywordflow">if</span> (x.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a> &amp;&amp; !y.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;            <span class="keywordflow">if</span> (!x.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a> &amp;&amp; y.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>)</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            <span class="comment">// If lexicographical ordering,</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Locale</a> == null)</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#afdcf9c14dbe42f23430db740fb2dc0cf">LexicographicalOrder</a>((ISqlString)x, (ISqlString)y);</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ac10416773bdc3dba6a2cd0c915c01641">Collator</a>.Compare(x.ToString(), y.ToString());</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        }</div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">Deveel.Data.Sql.Objects.ISqlString</a></div><div class="ttdef"><b>Definition:</b> <a href="ISqlString_8cs_source.htm#l00023">ISqlString.cs:23</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm_ab9810ddba011d9ffe76db3ceffa636c0"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">Deveel.Data.Sql.Objects.ISqlObject.IsNull</a></div><div class="ttdeci">bool IsNull</div><div class="ttdoc">Gets a boolean value indicating if the object is NULL. </div><div class="ttdef"><b>Definition:</b> <a href="ISqlObject_8cs_source.htm#l00028">ISqlObject.cs:28</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a49130d70fe09c32ade000792394b6625"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Deveel.Data.Types.StringType.Locale</a></div><div class="ttdeci">CultureInfo Locale</div><div class="ttdoc">Gets the locale used to compare string values. </div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00086">StringType.cs:86</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_afdcf9c14dbe42f23430db740fb2dc0cf"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#afdcf9c14dbe42f23430db740fb2dc0cf">Deveel.Data.Types.StringType.LexicographicalOrder</a></div><div class="ttdeci">static int LexicographicalOrder(ISqlString str1, ISqlString str2)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00441">StringType.cs:441</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_ac10416773bdc3dba6a2cd0c915c01641"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#ac10416773bdc3dba6a2cd0c915c01641">Deveel.Data.Types.StringType.Collator</a></div><div class="ttdeci">CompareInfo Collator</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00088">StringType.cs:88</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a20e1b2d4eb7bc1138270da0dbfdd9433"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override object Deveel.Data.Types.StringType.ConvertTo </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1aa1fa27779242b4902f7ae3bdd5c6d508">Type</a>&#160;</td>
          <td class="paramname"><em>destType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a98c0dae1490894c747848e647282734c">Deveel.Data.Types.SqlType</a>.</p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00219">219</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                                                                        {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keywordflow">if</span> (!(obj is <a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a>))</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> ArgumentException();</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            var s = (ISqlString) obj;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <span class="keywordflow">if</span> (s.IsNull)</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                <span class="keywordflow">return</span> null;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <span class="keywordflow">if</span> (destType == typeof (<span class="keywordtype">string</span>))</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                <span class="keywordflow">return</span> s.ToString();</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException();</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        }</div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">Deveel.Data.Sql.Objects.ISqlString</a></div><div class="ttdef"><b>Definition:</b> <a href="ISqlString_8cs_source.htm#l00023">ISqlString.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a1cdd2ed1436c2825745157cf46911243"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string Deveel.Data.Types.StringType.DateErrorMessage </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td>
          <td class="paramname"><em>sqlType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">string[]&#160;</td>
          <td class="paramname"><em>formats</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00298">298</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                                                                                           {</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;The input string {0} of type {1} is not compatible with any of the formats for SQL Type {2} ( {3} )&quot;</span>,</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;                str,</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a>.ToString().ToUpperInvariant(),</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;                sqlType.ToString().ToUpperInvariant(),</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Join(<span class="stringliteral">&quot;, &quot;</span>, formats));</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a03b166e54c20d0768317b7e559b01c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">Deveel.Data.Types.SqlType.TypeCode</a></div><div class="ttdeci">SqlTypeCode TypeCode</div><div class="ttdoc">Gets the kind of SQL type this data-type handles. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00091">SqlType.cs:91</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ad19294f11fd7780e43008024a326c056"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override <a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a> Deveel.Data.Types.StringType.DeserializeObject </td>
          <td>(</td>
          <td class="paramtype">Stream&#160;</td>
          <td class="paramname"><em>stream</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#aa60ee2eb43f5c6ee7086441322023029">Deveel.Data.Types.SqlType</a>.</p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00518">518</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;                                                                    {</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;            var reader = <span class="keyword">new</span> BinaryReader(stream);</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            var type = reader.ReadByte();</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;            <span class="keywordflow">if</span> (type == 1)</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlString.htm">SqlString</a>.Null;</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            <span class="keywordflow">if</span> (type == 3)</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlLongString.htm">SqlLongString</a>.<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlLongString.htm#ad508f56af0de16c151ea77a0c49e6324">Null</a>;</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            <span class="keywordflow">if</span> (type == 2) {</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                var length = reader.ReadInt32();</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                var bytes = reader.ReadBytes(length);</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                var chars = <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Encoding</a>.GetChars(bytes);</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>(chars);</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            }</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <span class="keywordflow">if</span> (type == 4) {</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                var storeId = reader.ReadInt32();</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                var objId = reader.ReadInt64();</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                var refObjId = <span class="keyword">new</span> <a class="code" href="structDeveel_1_1Data_1_1Store_1_1ObjectId.htm">ObjectId</a>(storeId, objId);</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                <span class="comment">// TODO: find the store and get the object</span></div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> NotImplementedException();</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;            }</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> FormatException(<span class="stringliteral">&quot;Invalid type code in deserialization.&quot;</span>);</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlLongString_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlLongString.htm">Deveel.Data.Sql.Objects.SqlLongString</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlLongString_8cs_source.htm#l00026">SqlLongString.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a7d7ef8bbb60d0ac703173b3643e1aaa0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Deveel.Data.Types.StringType.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00102">StringType.cs:102</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlLongString_htm_ad508f56af0de16c151ea77a0c49e6324"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlLongString.htm#ad508f56af0de16c151ea77a0c49e6324">Deveel.Data.Sql.Objects.SqlLongString.Null</a></div><div class="ttdeci">static readonly SqlLongString Null</div><div class="ttdef"><b>Definition:</b> <a href="SqlLongString_8cs_source.htm#l00029">SqlLongString.cs:29</a></div></div>
<div class="ttc" id="namespaceSqlString_htm"><div class="ttname"><a href="namespaceSqlString.htm">SqlString</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Store_1_1ObjectId_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Store_1_1ObjectId.htm">Deveel.Data.Store.ObjectId</a></div><div class="ttdoc">A unique identifier of an object within a database system, that is composed by a reference to the sto...</div><div class="ttdef"><b>Definition:</b> <a href="ObjectId_8cs_source.htm#l00031">ObjectId.cs:31</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab6df49f4e5e9465254af0d764754f82f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override bool Deveel.Data.Types.StringType.Equals </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a904cd9a71067e94e10711f755af0b3a3">Deveel.Data.Types.SqlType</a>.</p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00152">152</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                                   {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keywordflow">if</span> (!base.Equals(other))</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            var stringType = (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a14470135b253795bb8d6041737d8b62c">StringType</a>) other;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            <span class="keywordflow">if</span> (stringType.MaxSize != <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a78e6e5442bd09fce446b966861a127df">MaxSize</a>)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Locale</a> == null &amp;&amp; stringType.Locale == null)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Locale</a> == null &amp;&amp; stringType.Locale != null)</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Locale</a> != null &amp;&amp; stringType.Locale == null)</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Locale</a> != null &amp;&amp; stringType.Locale != null)</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Locale</a>.NativeName.Equals(stringType.Locale.NativeName);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a78e6e5442bd09fce446b966861a127df"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a78e6e5442bd09fce446b966861a127df">Deveel.Data.Types.StringType.MaxSize</a></div><div class="ttdeci">int MaxSize</div><div class="ttdoc">Gets the maximum number of characters that strings handled by this type can handle. </div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00069">StringType.cs:69</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a49130d70fe09c32ade000792394b6625"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Deveel.Data.Types.StringType.Locale</a></div><div class="ttdeci">CultureInfo Locale</div><div class="ttdoc">Gets the locale used to compare string values. </div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00086">StringType.cs:86</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a14470135b253795bb8d6041737d8b62c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a14470135b253795bb8d6041737d8b62c">Deveel.Data.Types.StringType.StringType</a></div><div class="ttdeci">StringType(SqlTypeCode typeCode, int maxSize, Encoding encoding, CultureInfo locale)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00034">StringType.cs:34</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a0196d64908182b941d77dce3f8424fc2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override void Deveel.Data.Types.StringType.GetData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm">SerializeData</a>&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a33783e5ebad6fa86d3e2d49e92b8d68b">Deveel.Data.Types.SqlType</a>.</p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00104">104</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                                            {</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;MaxSize&quot;</span>, <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a78e6e5442bd09fce446b966861a127df">MaxSize</a>);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Locale</a> != null)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;Locale&quot;</span>, <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Locale</a>.Name);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Encoding</a> != null)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                data.<a class="code" href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">SetValue</a>(<span class="stringliteral">&quot;Encoding&quot;</span>, <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Encoding</a>.WebName);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a7d7ef8bbb60d0ac703173b3643e1aaa0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Deveel.Data.Types.StringType.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00102">StringType.cs:102</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a78e6e5442bd09fce446b966861a127df"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a78e6e5442bd09fce446b966861a127df">Deveel.Data.Types.StringType.MaxSize</a></div><div class="ttdeci">int MaxSize</div><div class="ttdoc">Gets the maximum number of characters that strings handled by this type can handle. </div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00069">StringType.cs:69</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Serialization_1_1SerializeData_htm_a2a09ed1c661f92b60b0b38398fb7ced1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Serialization_1_1SerializeData.htm#a2a09ed1c661f92b60b0b38398fb7ced1">Deveel.Data.Serialization.SerializeData.SetValue</a></div><div class="ttdeci">void SetValue(string key, Type type, object value)</div><div class="ttdef"><b>Definition:</b> <a href="SerializeData_8cs_source.htm#l00035">SerializeData.cs:35</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a49130d70fe09c32ade000792394b6625"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Deveel.Data.Types.StringType.Locale</a></div><div class="ttdeci">CultureInfo Locale</div><div class="ttdoc">Gets the locale used to compare string values. </div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00086">StringType.cs:86</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4ac17cbd78ed0c62a7ce903d9ea87591"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override int Deveel.Data.Types.StringType.GetHashCode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00174">174</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                          {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a>.GetHashCode() ^ <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a78e6e5442bd09fce446b966861a127df">MaxSize</a>.GetHashCode();</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a78e6e5442bd09fce446b966861a127df"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a78e6e5442bd09fce446b966861a127df">Deveel.Data.Types.StringType.MaxSize</a></div><div class="ttdeci">int MaxSize</div><div class="ttdoc">Gets the maximum number of characters that strings handled by this type can handle. </div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00069">StringType.cs:69</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a03b166e54c20d0768317b7e559b01c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">Deveel.Data.Types.SqlType.TypeCode</a></div><div class="ttdeci">SqlTypeCode TypeCode</div><div class="ttdoc">Gets the kind of SQL type this data-type handles. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00091">SqlType.cs:91</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af7020e5fdb20baa9bd8f298677e18db5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1aa1fa27779242b4902f7ae3bdd5c6d508">Type</a> Deveel.Data.Types.StringType.GetObjectType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a0daf05165a2a8cf385c7c59e7f0330b0">Deveel.Data.Types.SqlType</a>.</p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00125">125</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                                             {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Char ||</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.VarChar ||</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.String)</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <span class="keywordflow">return</span> typeof (<a class="code" href="namespaceSqlString.htm">SqlString</a>);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarChar ||</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Clob)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                <span class="keywordflow">return</span> typeof (<a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlLongString.htm">SqlLongString</a>);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keywordflow">return</span> base.GetObjectType();</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlLongString_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlLongString.htm">Deveel.Data.Sql.Objects.SqlLongString</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlLongString_8cs_source.htm#l00026">SqlLongString.cs:26</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a03b166e54c20d0768317b7e559b01c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">Deveel.Data.Types.SqlType.TypeCode</a></div><div class="ttdeci">SqlTypeCode TypeCode</div><div class="ttdoc">Gets the kind of SQL type this data-type handles. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00091">SqlType.cs:91</a></div></div>
<div class="ttc" id="namespaceSqlString_htm"><div class="ttname"><a href="namespaceSqlString.htm">SqlString</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aafbbb13577989b79a8de6280a72c1db5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override <a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1aa1fa27779242b4902f7ae3bdd5c6d508">Type</a> Deveel.Data.Types.StringType.GetRuntimeType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a2367f0851cae70a4782bb9baf999ed22">Deveel.Data.Types.SqlType</a>.</p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00138">138</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                                              {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Char ||</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.VarChar ||</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.String)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                <span class="keywordflow">return</span> typeof (<span class="keywordtype">string</span>);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarChar ||</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Clob)</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                <span class="keywordflow">return</span> typeof (Stream);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keywordflow">return</span> base.GetRuntimeType();</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a03b166e54c20d0768317b7e559b01c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">Deveel.Data.Types.SqlType.TypeCode</a></div><div class="ttdeci">SqlTypeCode TypeCode</div><div class="ttdoc">Gets the kind of SQL type this data-type handles. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00091">SqlType.cs:91</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af2d4841f7fc51e35863630639af754e3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override bool Deveel.Data.Types.StringType.IsCacheable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#aa9ac35afaf7ef13d2e5fbb335ad69903">Deveel.Data.Types.SqlType</a>.</p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00112">112</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                                                           {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keywordflow">return</span> value is <a class="code" href="namespaceSqlString.htm">SqlString</a> || value is <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">SqlNull</a> || value == null;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlString_htm"><div class="ttname"><a href="namespaceSqlString.htm">SqlString</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNull.htm">Deveel.Data.Sql.Objects.SqlNull</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNull_8cs_source.htm#l00023">SqlNull.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a790584e7ab6ce7f58480585ce0b8f240"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override bool Deveel.Data.Types.StringType.IsComparable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm">SqlType</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Verifies if a given <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm" title="Defines the properties of a specific SQL Type and handles the values compatible. ">SqlType</a> is comparable to this data-type.  </p>

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a2ff8f5717569d0651fd5dd19f18cc32e">Deveel.Data.Types.SqlType</a>.</p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00179">179</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                                                        {</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            <span class="comment">// Are we comparing with another string type?</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            <span class="keywordflow">if</span> (type is <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a14470135b253795bb8d6041737d8b62c">StringType</a>) {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                var stringType = (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a14470135b253795bb8d6041737d8b62c">StringType</a>) type;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                <span class="comment">// If either locale is null return true</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Locale</a> == null || stringType.Locale == null)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                <span class="comment">//TODO: Check batter on the locale comparison: we could compare</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                <span class="comment">//      neutral cultures</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                <span class="comment">// If the locales are the same return true</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Locale</a>.Equals(stringType.Locale);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <span class="comment">// Only string types can be comparable</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a49130d70fe09c32ade000792394b6625"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a49130d70fe09c32ade000792394b6625">Deveel.Data.Types.StringType.Locale</a></div><div class="ttdeci">CultureInfo Locale</div><div class="ttdoc">Gets the locale used to compare string values. </div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00086">StringType.cs:86</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a14470135b253795bb8d6041737d8b62c"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a14470135b253795bb8d6041737d8b62c">Deveel.Data.Types.StringType.StringType</a></div><div class="ttdeci">StringType(SqlTypeCode typeCode, int maxSize, Encoding encoding, CultureInfo locale)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00034">StringType.cs:34</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a03cc5d7b24f3033563cf7749a07d31e7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a> Deveel.Data.Types.StringType.IsLike </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a>&#160;</td>
          <td class="paramname"><em>pattern</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00198">198</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                                                                       {</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">if</span> (value == null &amp;&amp; <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a60b7ba0e65d9303fc9af858c5ae199af">IsNull</a>)</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a60b7ba0e65d9303fc9af858c5ae199af">IsNull</a> &amp;&amp; value == null)</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keywordflow">if</span> (value == null)</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            var s1 = value.ToString();</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            var s2 = pattern.ToString();</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classDeveel_1_1Data_1_1Text_1_1PatternSearch.htm">PatternSearch</a>.<a class="code" href="classDeveel_1_1Data_1_1Text_1_1PatternSearch.htm#a868442691a1169a294f7fbcd67f0feee">FullPatternMatch</a>(s1, s2, <span class="charliteral">&#39;\\&#39;</span>);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a60b7ba0e65d9303fc9af858c5ae199af"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a60b7ba0e65d9303fc9af858c5ae199af">Deveel.Data.Types.SqlType.IsNull</a></div><div class="ttdeci">bool IsNull</div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00111">SqlType.cs:111</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Text_1_1PatternSearch_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Text_1_1PatternSearch.htm">Deveel.Data.Text.PatternSearch</a></div><div class="ttdoc">This is a static class that performs the operations to do a pattern search on a given column of a tab...</div><div class="ttdef"><b>Definition:</b> <a href="PatternSearch_8cs_source.htm#l00045">PatternSearch.cs:45</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Text_1_1PatternSearch_htm_a868442691a1169a294f7fbcd67f0feee"><div class="ttname"><a href="classDeveel_1_1Data_1_1Text_1_1PatternSearch.htm#a868442691a1169a294f7fbcd67f0feee">Deveel.Data.Text.PatternSearch.FullPatternMatch</a></div><div class="ttdeci">static bool FullPatternMatch(string pattern, string str, char escapeChar)</div><div class="ttdoc">Matches a pattern against a string and returns true if it matches or false otherwise. </div><div class="ttdef"><b>Definition:</b> <a href="PatternSearch_8cs_source.htm#l00067">PatternSearch.cs:67</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a9fd0b7872f8d9ff35680a245d61074dc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a> Deveel.Data.Types.StringType.IsNotLike </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a>&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a>&#160;</td>
          <td class="paramname"><em>pattern</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00211">211</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                                                                          {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            var likeResult = <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a03cc5d7b24f3033563cf7749a07d31e7">IsLike</a>(value, pattern);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <span class="keywordflow">if</span> (likeResult.IsNull)</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                <span class="keywordflow">return</span> likeResult;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keywordflow">return</span> likeResult.Not();</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a03cc5d7b24f3033563cf7749a07d31e7"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a03cc5d7b24f3033563cf7749a07d31e7">Deveel.Data.Types.StringType.IsLike</a></div><div class="ttdeci">SqlBoolean IsLike(ISqlString value, ISqlString pattern)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00198">StringType.cs:198</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a7c8bfed62acfa974fbd9dc0d274b0e6f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool Deveel.Data.Types.StringType.IsStringType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>&#160;</td>
          <td class="paramname"><em>typeCode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">package</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00566">566</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                                                                {</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;            <span class="keywordflow">return</span> typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.String ||</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;            typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.VarChar ||</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;            typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Char ||</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;            typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarChar ||</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;            typeCode == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Clob;</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        }</div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="afdcf9c14dbe42f23430db740fb2dc0cf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int Deveel.Data.Types.StringType.LexicographicalOrder </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a>&#160;</td>
          <td class="paramname"><em>str1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a>&#160;</td>
          <td class="paramname"><em>str2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00441">441</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                                                                                  {</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            <span class="comment">// If both strings are small use the &#39;toString&#39; method to compare the</span></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            <span class="comment">// strings.  This saves the overhead of having to store very large string</span></div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;            <span class="comment">// objects in memory for all comparisons.</span></div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            <span class="keywordtype">long</span> str1Size = str1.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm#adab240dca2a80097e3395d5261e78b2d">Length</a>;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            <span class="keywordtype">long</span> str2Size = str2.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm#adab240dca2a80097e3395d5261e78b2d">Length</a>;</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;            <span class="keywordflow">if</span> (str1Size &lt; 32 * 1024 &amp;&amp;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                str2Size &lt; 32 * 1024) {</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Compare(str1.ToString(), str2.ToString(), StringComparison.Ordinal);</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            }</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            <span class="comment">// TODO: pick one of the two encodings?</span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            <span class="comment">// The minimum size</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;            <span class="keywordtype">long</span> size = <a class="code" href="namespaceSystem.htm">System</a>.Math.Min(str1Size, str2Size);</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;            TextReader r1 = str1.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm#ac58e4cac07dcc13b6b2dc083b0ded145">GetInput</a>(str1.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm#a47179b9dc9bf8111af34cf6c6b0edd30">Encoding</a>);</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            TextReader r2 = str2.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm#ac58e4cac07dcc13b6b2dc083b0ded145">GetInput</a>(str2.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm#a47179b9dc9bf8111af34cf6c6b0edd30">Encoding</a>);</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;            <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                <span class="keywordflow">try</span> {</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                    <span class="keywordflow">while</span> (size &gt; 0) {</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                        <span class="keywordtype">int</span> c1 = r1.Read();</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                        <span class="keywordtype">int</span> c2 = r2.Read();</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                        <span class="keywordflow">if</span> (c1 != c2) {</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                            <span class="keywordflow">return</span> c1 - c2;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                        }</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                        --size;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                    }</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                    <span class="comment">// They compare equally up to the limit, so now compare sizes,</span></div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                    <span class="keywordflow">if</span> (str1Size &gt; str2Size) {</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;                        <span class="comment">// If str1 is larger</span></div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                        <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (str1Size &lt; str2Size) {</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                        <span class="comment">// If str1 is smaller</span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                        <span class="keywordflow">return</span> -1;</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                    }</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                    <span class="comment">// Must be equal</span></div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                } <span class="keywordflow">finally</span> {</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                    r1.Dispose();</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                    r2.Dispose();</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                }</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            } <span class="keywordflow">catch</span> (IOException e) {</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> Exception(<span class="stringliteral">&quot;IO Error: &quot;</span> + e.Message);</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            }</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        }</div>
<div class="ttc" id="namespaceSystem_htm"><div class="ttname"><a href="namespaceSystem.htm">System</a></div><div class="ttdef"><b>Definition:</b> <a href="NonSerializedAttribute_8cs_source.htm#l00003">NonSerializedAttribute.cs:3</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString_htm_adab240dca2a80097e3395d5261e78b2d"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm#adab240dca2a80097e3395d5261e78b2d">Deveel.Data.Sql.Objects.ISqlString.Length</a></div><div class="ttdeci">long Length</div><div class="ttdef"><b>Definition:</b> <a href="ISqlString_8cs_source.htm#l00026">ISqlString.cs:26</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString_htm_a47179b9dc9bf8111af34cf6c6b0edd30"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm#a47179b9dc9bf8111af34cf6c6b0edd30">Deveel.Data.Sql.Objects.ISqlString.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="ISqlString_8cs_source.htm#l00024">ISqlString.cs:24</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString_htm_ac58e4cac07dcc13b6b2dc083b0ded145"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm#ac58e4cac07dcc13b6b2dc083b0ded145">Deveel.Data.Sql.Objects.ISqlString.GetInput</a></div><div class="ttdeci">TextReader GetInput(Encoding encoding)</div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af3656f8422205538e2a26eb4851dae72"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override void Deveel.Data.Types.StringType.SerializeObject </td>
          <td>(</td>
          <td class="paramtype">Stream&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm">ISqlObject</a>&#160;</td>
          <td class="paramname"><em>obj</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a28835cedd45f35449e3bb4388ebe5e53">Deveel.Data.Types.SqlType</a>.</p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00487">487</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;                                                                            {</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            var writer = <span class="keyword">new</span> BinaryWriter(stream);</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            <span class="keywordflow">if</span> (obj.<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">IsNull</a>) {</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Clob ||</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                    <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a> == <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.LongVarChar) {</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                    writer.Write((byte)3);</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;                } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                    writer.Write((byte)1);</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                }</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            }</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;            var sqlString = (<a class="code" href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">ISqlString</a>)obj;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            <span class="keywordflow">if</span> (obj is <a class="code" href="namespaceSqlString.htm">SqlString</a>) {</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                var bytes = ((<a class="code" href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a>) sqlString).ToByteArray(<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Encoding</a>);</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                writer.Write((byte) 2);</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                writer.Write(bytes.Length);</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                writer.Write(bytes);</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (obj is <a class="code" href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlLongString.htm">SqlLongString</a>) {</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                var longString = (SqlLongString) sqlString;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                writer.Write((byte) 4);</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                writer.Write(longString.ObjectId.StoreId);</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                writer.Write(longString.ObjectId.Id);</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            } <span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> FormatException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;The object of type &#39;{0}&#39; is not handled by {1}&quot;</span>, obj.GetType(), <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a12c00ac7ec187670ce2e58b9d341a9c1">ToString</a>()));</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            }</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlLongString_htm"><div class="ttname"><a href="classDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlLongString.htm">Deveel.Data.Sql.Objects.SqlLongString</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlLongString_8cs_source.htm#l00026">SqlLongString.cs:26</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString_htm"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlString.htm">Deveel.Data.Sql.Objects.ISqlString</a></div><div class="ttdef"><b>Definition:</b> <a href="ISqlString_8cs_source.htm#l00023">ISqlString.cs:23</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a7d7ef8bbb60d0ac703173b3643e1aaa0"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a7d7ef8bbb60d0ac703173b3643e1aaa0">Deveel.Data.Types.StringType.Encoding</a></div><div class="ttdeci">Encoding Encoding</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00102">StringType.cs:102</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a03b166e54c20d0768317b7e559b01c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">Deveel.Data.Types.SqlType.TypeCode</a></div><div class="ttdeci">SqlTypeCode TypeCode</div><div class="ttdoc">Gets the kind of SQL type this data-type handles. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00091">SqlType.cs:91</a></div></div>
<div class="ttc" id="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject_htm_ab9810ddba011d9ffe76db3ceffa636c0"><div class="ttname"><a href="interfaceDeveel_1_1Data_1_1Sql_1_1Objects_1_1ISqlObject.htm#ab9810ddba011d9ffe76db3ceffa636c0">Deveel.Data.Sql.Objects.ISqlObject.IsNull</a></div><div class="ttdeci">bool IsNull</div><div class="ttdoc">Gets a boolean value indicating if the object is NULL. </div><div class="ttdef"><b>Definition:</b> <a href="ISqlObject_8cs_source.htm#l00028">ISqlObject.cs:28</a></div></div>
<div class="ttc" id="namespaceSqlString_htm"><div class="ttname"><a href="namespaceSqlString.htm">SqlString</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a12c00ac7ec187670ce2e58b9d341a9c1"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a12c00ac7ec187670ce2e58b9d341a9c1">Deveel.Data.Types.StringType.ToString</a></div><div class="ttdeci">override string ToString()</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00117">StringType.cs:117</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
<div class="ttc" id="DataObject_8cs_htm_a21ed9a08a27604b86732487a5a2afcb6"><div class="ttname"><a href="DataObject_8cs.htm#a21ed9a08a27604b86732487a5a2afcb6">SqlString</a></div><div class="ttdeci">Deveel.Data.Sql.Objects.SqlString SqlString</div><div class="ttdef"><b>Definition:</b> <a href="DataObject_8cs_source.htm#l00027">DataObject.cs:27</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac01109a95da74a204afc2e787a1acecc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlBoolean.htm">SqlBoolean</a> Deveel.Data.Types.StringType.ToBoolean </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00306">306</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                                               {</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;            <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a> value;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.TryParse(s, out value))</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(s, <span class="stringliteral">&quot;1&quot;</span>))</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.True;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            if (<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Equals(s, <span class="stringliteral">&quot;2&quot;</span>))</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="namespaceSqlBoolean.htm">SqlBoolean</a>.False;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>.Format(<span class="stringliteral">&quot;Could not convert string &#39;{0}&#39; of type &#39;{1}&#39; to BOOLEAN&quot;</span>, s, <a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">TypeCode</a>.ToString().ToUpperInvariant()));</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        }</div>
<div class="ttc" id="namespaceSqlBoolean_htm"><div class="ttname"><a href="namespaceSqlBoolean.htm">SqlBoolean</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">Deveel.Data.Types.SqlTypeCode.String</a></div><div class="ttdoc">A long string in the system. </div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a03b166e54c20d0768317b7e559b01c70"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a03b166e54c20d0768317b7e559b01c70">Deveel.Data.Types.SqlType.TypeCode</a></div><div class="ttdeci">SqlTypeCode TypeCode</div><div class="ttdoc">Gets the kind of SQL type this data-type handles. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00091">SqlType.cs:91</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af09cbd923eef62aa2e150e7cff2a39d6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a> Deveel.Data.Types.StringType.ToDate </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00265">265</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                                               {</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a> result;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm#a23a1f6965724286891be65d0d292c320">TryParseDate</a>(str, out result))</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a1cdd2ed1436c2825745157cf46911243">DateErrorMessage</a>(str, <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Date, DateType.DateFormatSql));</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        }</div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime_htm_a23a1f6965724286891be65d0d292c320"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm#a23a1f6965724286891be65d0d292c320">Deveel.Data.Sql.Objects.SqlDateTime.TryParseDate</a></div><div class="ttdeci">static bool TryParseDate(string s, out SqlDateTime value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlDateTime_8cs_source.htm#l00510">SqlDateTime.cs:510</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a1cdd2ed1436c2825745157cf46911243"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a1cdd2ed1436c2825745157cf46911243">Deveel.Data.Types.StringType.DateErrorMessage</a></div><div class="ttdeci">string DateErrorMessage(string str, SqlTypeCode sqlType, string[] formats)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00298">StringType.cs:298</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">Deveel.Data.Sql.Objects.SqlDateTime</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlDateTime_8cs_source.htm#l00021">SqlDateTime.cs:21</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ad730d1f090cd8e7e211d45314c38fa09"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a> Deveel.Data.Types.StringType.ToDateTime </td>
          <td>(</td>
          <td class="paramtype">string&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00290">290</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                                                   {</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a> result;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm#a7d16149292898cfaa5a09ef2ad666e16">TryParse</a>(str, out result))</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a1cdd2ed1436c2825745157cf46911243">DateErrorMessage</a>(str, <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.TimeStamp, DateType.TsFormatSql));</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a1cdd2ed1436c2825745157cf46911243"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a1cdd2ed1436c2825745157cf46911243">Deveel.Data.Types.StringType.DateErrorMessage</a></div><div class="ttdeci">string DateErrorMessage(string str, SqlTypeCode sqlType, string[] formats)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00298">StringType.cs:298</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">Deveel.Data.Sql.Objects.SqlDateTime</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlDateTime_8cs_source.htm#l00021">SqlDateTime.cs:21</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime_htm_a7d16149292898cfaa5a09ef2ad666e16"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm#a7d16149292898cfaa5a09ef2ad666e16">Deveel.Data.Sql.Objects.SqlDateTime.TryParse</a></div><div class="ttdeci">static bool TryParse(string s, out SqlDateTime value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlDateTime_8cs_source.htm#l00495">SqlDateTime.cs:495</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac3487d973e8ae7d113724e3154a03397"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> Deveel.Data.Types.StringType.ToNumber </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00256">256</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                                                      {</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a> value;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a47be2f65063ecc47a093f2cb8bcef30c">TryParse</a>(str, out value))</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                value = <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">SqlNumber</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aed053d462ea48c3ad8ff42a90d7f35e8">Null</a>;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        }</div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_a47be2f65063ecc47a093f2cb8bcef30c"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#a47be2f65063ecc47a093f2cb8bcef30c">Deveel.Data.Sql.Objects.SqlNumber.TryParse</a></div><div class="ttdeci">static bool TryParse(string s, out SqlNumber value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00702">SqlNumber.cs:702</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm_aed053d462ea48c3ad8ff42a90d7f35e8"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm#aed053d462ea48c3ad8ff42a90d7f35e8">Deveel.Data.Sql.Objects.SqlNumber.Null</a></div><div class="ttdeci">static readonly SqlNumber Null</div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00031">SqlNumber.cs:31</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlNumber.htm">Deveel.Data.Sql.Objects.SqlNumber</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlNumber_8cs_source.htm#l00024">SqlNumber.cs:24</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a12c00ac7ec187670ce2e58b9d341a9c1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override string Deveel.Data.Types.StringType.ToString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00117">117</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                          {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            var sb = <span class="keyword">new</span> StringBuilder(<a class="code" href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1d7aa1701178a6e9ffe48c112c563e0e">Name</a>);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a78e6e5442bd09fce446b966861a127df">MaxSize</a> &gt;= 0)</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                sb.AppendFormat(<span class="stringliteral">&quot;({0})&quot;</span>, <a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a78e6e5442bd09fce446b966861a127df">MaxSize</a>);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keywordflow">return</span> sb.ToString();</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        }</div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a78e6e5442bd09fce446b966861a127df"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a78e6e5442bd09fce446b966861a127df">Deveel.Data.Types.StringType.MaxSize</a></div><div class="ttdeci">int MaxSize</div><div class="ttdoc">Gets the maximum number of characters that strings handled by this type can handle. </div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00069">StringType.cs:69</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1SqlType_htm_a1d7aa1701178a6e9ffe48c112c563e0e"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1SqlType.htm#a1d7aa1701178a6e9ffe48c112c563e0e">Deveel.Data.Types.SqlType.Name</a></div><div class="ttdeci">string Name</div><div class="ttdoc">Gets the name of the data-type that is used to resolve it within the context. </div><div class="ttdef"><b>Definition:</b> <a href="SqlType_8cs_source.htm#l00075">SqlType.cs:75</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a66928c5893a836312725577db3225830"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a> Deveel.Data.Types.StringType.ToTime </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00273">273</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                                               {</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a> result;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm#a4fe325288d7d2092cecb2197677af36a">TryParseTime</a>(str, out result))</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a1cdd2ed1436c2825745157cf46911243">DateErrorMessage</a>(str, <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.Time, DateType.TimeFormatSql));</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        }</div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime_htm_a4fe325288d7d2092cecb2197677af36a"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm#a4fe325288d7d2092cecb2197677af36a">Deveel.Data.Sql.Objects.SqlDateTime.TryParseTime</a></div><div class="ttdeci">static bool TryParseTime(string s, out SqlDateTime value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlDateTime_8cs_source.htm#l00523">SqlDateTime.cs:523</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a1cdd2ed1436c2825745157cf46911243"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a1cdd2ed1436c2825745157cf46911243">Deveel.Data.Types.StringType.DateErrorMessage</a></div><div class="ttdeci">string DateErrorMessage(string str, SqlTypeCode sqlType, string[] formats)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00298">StringType.cs:298</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">Deveel.Data.Sql.Objects.SqlDateTime</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlDateTime_8cs_source.htm#l00021">SqlDateTime.cs:21</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a392e4cfc2e41203561670fa4d24a074a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a> Deveel.Data.Types.StringType.ToTimeStamp </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1a27118326006d3829667a400ad23d5d98">String</a>&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00282">282</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>
<div class="fragment"><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                                                    {</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;            <a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a> result;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            <span class="keywordflow">if</span> (!<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">SqlDateTime</a>.<a class="code" href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm#adb46caef1063f150a44f6aff68194561">TryParseTimeStamp</a>(str, out result))</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                <span class="keywordflow">throw</span> <span class="keyword">new</span> InvalidCastException(<a class="code" href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a1cdd2ed1436c2825745157cf46911243">DateErrorMessage</a>(str, <a class="code" href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">SqlTypeCode</a>.TimeStamp, DateType.TsFormatSql));</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        }</div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime_htm_adb46caef1063f150a44f6aff68194561"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm#adb46caef1063f150a44f6aff68194561">Deveel.Data.Sql.Objects.SqlDateTime.TryParseTimeStamp</a></div><div class="ttdeci">static bool TryParseTimeStamp(string s, out SqlDateTime value)</div><div class="ttdef"><b>Definition:</b> <a href="SqlDateTime_8cs_source.htm#l00537">SqlDateTime.cs:537</a></div></div>
<div class="ttc" id="classDeveel_1_1Data_1_1Types_1_1StringType_htm_a1cdd2ed1436c2825745157cf46911243"><div class="ttname"><a href="classDeveel_1_1Data_1_1Types_1_1StringType.htm#a1cdd2ed1436c2825745157cf46911243">Deveel.Data.Types.StringType.DateErrorMessage</a></div><div class="ttdeci">string DateErrorMessage(string str, SqlTypeCode sqlType, string[] formats)</div><div class="ttdef"><b>Definition:</b> <a href="StringType_8cs_source.htm#l00298">StringType.cs:298</a></div></div>
<div class="ttc" id="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime_htm"><div class="ttname"><a href="structDeveel_1_1Data_1_1Sql_1_1Objects_1_1SqlDateTime.htm">Deveel.Data.Sql.Objects.SqlDateTime</a></div><div class="ttdef"><b>Definition:</b> <a href="SqlDateTime_8cs_source.htm#l00021">SqlDateTime.cs:21</a></div></div>
<div class="ttc" id="namespaceDeveel_1_1Data_1_1Types_htm_a530b117fabbb831a5ebbc66579e154b1"><div class="ttname"><a href="namespaceDeveel_1_1Data_1_1Types.htm#a530b117fabbb831a5ebbc66579e154b1">Deveel.Data.Types.SqlTypeCode</a></div><div class="ttdeci">SqlTypeCode</div><div class="ttdoc">Enumerates the codes of all SQL types handled by the system. </div><div class="ttdef"><b>Definition:</b> <a href="SqlTypeCode_8cs_source.htm#l00023">SqlTypeCode.cs:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="ac7de50aacf0a96a8d150a4c9ada36302"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CompareInfo Deveel.Data.Types.StringType.collator</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00030">30</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a7cab54a843f355416f7ae217720a6dcb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const int Deveel.Data.Types.StringType.DefaultMaxSize = Int16.MaxValue</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00032">32</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>

</div>
</div>
<h2 class="groupheader">Property Documentation</h2>
<a class="anchor" id="ac10416773bdc3dba6a2cd0c915c01641"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CompareInfo Deveel.Data.Types.StringType.Collator</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00088">88</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a7d7ef8bbb60d0ac703173b3643e1aaa0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Encoding Deveel.Data.Types.StringType.Encoding</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00102">102</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a204e18322e11ba6872a01dfbe9efff94"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">override bool Deveel.Data.Types.StringType.IsStorable</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00075">75</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a49130d70fe09c32ade000792394b6625"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">CultureInfo Deveel.Data.Types.StringType.Locale</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the locale used to compare string values. </p>
<p>When this value is not specified, the schema or database locale is used to compare string values. </p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00086">86</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a78e6e5442bd09fce446b966861a127df"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Deveel.Data.Types.StringType.MaxSize</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private set</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the maximum number of characters that strings handled by this type can handle. </p>

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00069">69</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>

</div>
</div>
<a class="anchor" id="a2e4a59ac3a23df8c8a58d7c38f76899d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int ISizeableType. Deveel.Data.Types.StringType.Size</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">get</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="StringType_8cs_source.htm#l00071">71</a> of file <a class="el" href="StringType_8cs_source.htm">StringType.cs</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/var/calculate/remote/distfiles/egit-src/deveeldb.git/src/deveeldb/Deveel.Data.Types/<a class="el" href="StringType_8cs_source.htm">StringType.cs</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.10
</small></address>
</body>
</html>
